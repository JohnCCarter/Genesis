# ============================
# TradingBot Backend Environment Variables (.env.example)
# ============================
# Detta är en mall. Kopiera till .env och fyll i egna värden.
# Rader som börjar med # är kommentarer och ignoreras av programmet.
# Booleska värden ska vara True/False (versaler).

# --- Server & Frontend ---
HOST=127.0.0.1                     # IP/värd där API-servern lyssnar
PORT=8000                          # Port för API-servern
DEBUG=true                         # True = utvecklingsläge (mer logg/trace)
LOG_LEVEL=INFO                     # DEBUG, INFO, WARNING, ERROR
LOG_FILE=tradingbot.log            # Filnamn för logg (roteras externt om behövs)
VITE_API_BASE=http://127.0.0.1:8000 # Frontendens bas-URL till API:et

# --- CORS ---
ALLOWED_ORIGINS=["http://localhost:3000","http://localhost:8080","http://localhost:5173","http://localhost:5174","http://127.0.0.1:5173","http://127.0.0.1:5174"] # Tillåtna frontend-origins (JSON-array format)

# --- Auth (dev: avstängt) ---
AUTH_REQUIRED=True                 # True = API kräver JWT för skyddade endpoints
ACCESS_TOKEN_EXPIRE_MINUTES=30     # JWT-livslängd (minuter)
SOCKETIO_JWT_SECRET=dev-jwt-secret # Hemlighet för WS/Socket.IO‑token (bör matcha JWT_SECRET_KEY när AUTH_REQUIRED=True)

# --- Bitfinex REST/WS ---
BITFINEX_API_KEY=                  # API-nyckel för autentiserade REST-anrop
BITFINEX_API_SECRET=               # Hemlighet tillhörande API-nyckeln
BITFINEX_API_URL=https://api.bitfinex.com/v2    # Autentiserad REST-bas
BITFINEX_AUTH_API_URL=             # Autentiserad REST-bas (kan vara tom för att använda BITFINEX_API_URL)
BITFINEX_PUBLIC_API_URL=https://api-pub.bitfinex.com/v2  # Publik REST-bas (market data)

BITFINEX_WS_API_KEY=               # WS-nyckel (för auth-kanaler)
BITFINEX_WS_API_SECRET=            # WS-hemlighet
BITFINEX_WS_PUBLIC_URI=wss://api-pub.bitfinex.com/ws/2 # Publik WS-URL (tickers/kapacitet)
BITFINEX_WS_AUTH_URI=wss://api.bitfinex.com/ws/2      # Autentiserad WS-URL
BITFINEX_WS_URI=wss://api.bitfinex.com/ws/2           # Generell WS-URL (fallback)

# --- WS-first: symboler & timeframes ---
WS_SUBSCRIBE_SYMBOLS=tBTCUSD,tETHUSD,tADAUSD,tDOTUSD  # Symboler att prenumerera på via WebSocket
WS_CANDLE_TIMEFRAMES=1m,5m         # Timeframes att prenumerera på via WS‑candles

# --- Concurrency caps ---
PUBLIC_REST_CONCURRENCY=4          # Global cap för publika REST (candles, tickers)
PRIVATE_REST_CONCURRENCY=2         # Global cap för privata REST (wallets, positions, history)

# --- WS pool & cache ---
WS_CONNECT_ON_START=True           # Autokonnekta WS vid start
WS_USE_POOL=True                   # Poola flera WS-klienter för att skala subs
WS_PUBLIC_SOCKETS_MAX=1            # Max parallella publika WS-klienter (Bitfinex konto‑limit)
WS_MAX_SUBS_PER_SOCKET=25          # Max subs per socket (Bitfinex: 25 kanaler/anslutning)
WS_TICKER_WARMUP_MS=400            # Vänta innan REST fallback (ms) så WS hinner starta
WS_TICKER_STALE_SECS=10            # Hur länge WS-data anses färsk (sek)
TICKER_CACHE_TTL_SECS=30           # Cache-ttl för tickers (sek)
CANDLE_CACHE_RETENTION_DAYS=7      # Hur länge candle-data sparas i cache
CANDLE_CACHE_MAX_ROWS_PER_PAIR=10000  # Max antal rader per symbol i cache
BACKFILL_BATCH_SLEEP_MS=300        # Paus mellan batch-hämtningar vid backfill

# --- Backoff/Retry & timeouts ---
DATA_HTTP_TIMEOUT=10.0             # Timeout för HTTP-anrop (sek)
DATA_MAX_RETRIES=1                 # Max antal omförsök för datahämtning
DATA_BACKOFF_BASE_MS=1000          # Backoff-början (ms) vid fel
DATA_BACKOFF_MAX_MS=5000           # Backoff-tak (ms)
ORDER_HTTP_TIMEOUT=15.0            # Timeout för order-anrop (sek)
ORDER_MAX_RETRIES=1                # Omförsök vid orderfel (0/1/2 … försiktigt)
ORDER_BACKOFF_BASE_MS=2000         # Backoff-början för order-anrop (ms)
ORDER_BACKOFF_MAX_MS=10000         # Backoff-tak för order-anrop (ms)

# --- Rate limit (vänlig mot Bitfinex) ---
BITFINEX_RATE_LIMIT_ENABLED=True   # True = lokalt rate-limit-skydd
BITFINEX_RATE_LIMIT_REQUESTS_PER_MINUTE=10  # Konservativ rpm lokalt (offentliga endpoints)
BITFINEX_RATE_LIMIT_BURST_SIZE=1   # Undvik bursts för att minska 429/503
BITFINEX_RATE_LIMIT_WINDOW_SECONDS=60  # Fönsterstorlek (sek)
BITFINEX_SERVER_BUSY_BACKOFF_MIN_SECONDS=15.0  # Backoff-min vid "server busy"/429/503
BITFINEX_SERVER_BUSY_BACKOFF_MAX_SECONDS=60.0  # Backoff-max (respekterar Retry-After om satt)

# --- Acceptance (dashboard-badge) ---
ACCEPT_CANDLES_P95_MS_MAX=500      # Max tillåten p95-latens (ms) för candle-anrop
ACCEPT_CANDLES_P99_MS_MAX=1200     # Max tillåten p99-latens (ms)
ACCEPT_MAX_429_PER_HOUR=1          # Max 429/h under normal drift
ACCEPT_MAX_503_PER_HOUR=1          # Max 503/h under normal drift

# --- DB & övrigt ---
DATABASE_URL=sqlite:///./tradingbot.db  # SQLAlchemy URL (SQLite som default)
DEFAULT_TRADING_PAIR=BTCUSD        # Standard-symbol/par
MAX_POSITION_SIZE=0.01             # Max positionsstorlek (enhet beror på par)
RISK_PERCENTAGE=2.0                # Risk per trade i procent av konto/quote
TIMEZONE=UTC                       # Systemets tidszon (för scheman/logik)
TRADING_RULES_FILE=config/trading_rules.json  # Regelfil (filters, blocklist, etc.)
MAX_TRADES_PER_DAY=200             # Hårda tak för antal trades per dag
MAX_TRADES_PER_SYMBOL_PER_DAY=0    # Per symbol per dag (0 = obegränsat)
TRADE_COOLDOWN_SECONDS=60          # Cooldown mellan trades (sekunder)
TRADING_PAUSED=False               # True = global paus (ingen exekvering)
DRY_RUN_ENABLED=True               # True = simulera (ingen riktig order läggs)
TRADE_COUNTER_FILE=config/trade_counter.json  # Fil för att spåra trade-räknare
BRACKET_STATE_FILE=config/bracket_state.json  # Fil för bracket trading state
BRACKET_PARTIAL_ADJUST=False       # True = tillåt partiell justering av bracket orders

METRICS_ACCESS_TOKEN=              # Bearer-token för att skydda metrics-endpoint
METRICS_BASIC_AUTH_USER=metrics    # Användare för Basic Auth (om du väljer det)
METRICS_BASIC_AUTH_PASS=           # Lösenord för Basic Auth
# (valfritt) Tillåt endast localhost:
# METRICS_IP_ALLOWLIST=127.0.0.1

# --- Circuit Breaker (övergripande) ---
CB_ENABLED=True                    # True = aktivera circuit breaker för API-anrop
CB_ERROR_WINDOW_SECONDS=60         # Tidsfönster för felräkning (sekunder)
CB_MAX_ERRORS_PER_WINDOW=5         # Max antal fel innan circuit breaker aktiveras
CB_NOTIFY=True                     # True = skicka notifieringar vid circuit breaker-aktivering

# --- Scheduler (STÄNGT AV) ---
SCHEDULER_ENABLED=True             # True = aktivera scheduler för schemalagda jobb

# --- Prob-modul (håll av i dev om du inte använder den) ---
PROB_MODEL_ENABLED=True            # True = använd AI-sannolikhetsmodell (prob-only branch)
PROB_MODEL_FILE=config/models/BTCUSD_1m.json  # Modellfil (exempel)
PROB_MODEL_CONFIDENCE_MIN=0.15     # Min confidence (0..1) för att godkänna signal
PROB_MODEL_EV_THRESHOLD=0.0005     # Min förväntad avkastning (EV), decimal ROI eller %
PROB_MODEL_TIME_HORIZON=20         # Antal candles framåt beslutet gäller
PROB_HYBRID_WEIGHT=1.0             # 1.0 = prob-only (ingen heuristisk mix)

PROB_VALIDATE_ENABLED=True         # True = kör schemalagd validering (Brier/LogLoss)
PROB_VALIDATE_INTERVAL_MINUTES=60  # Intervall mellan valideringar (minuter)
PROB_VALIDATE_SYMBOLS=tBTCUSD,tETHUSD,tADAUSD,tDOTUSD  # Symboler att validera
PROB_VALIDATE_TIMEFRAME=1m,5m      # Timeframes som testas (komma-separerade)
PROB_VALIDATE_LIMIT=1200           # Historiska candles att hämta per körning
PROB_VALIDATE_MAX_SAMPLES=500      # Max samples att beräkna per körning
PROB_VALIDATE_WINDOWS_MINUTES=     # Ex: 60,360,1440 för flera fönster
PROB_VALIDATE_HISTORY_MAX_POINTS=1000  # Max datapunkter per fönster i minnet
PROB_VALIDATE_HISTORY_RETENTION_MINUTES=2880  # Hur länge historik sparas (minuter)

PROB_RETRAIN_ENABLED=True          # True = träna om och exportera modeller schemalagt
PROB_RETRAIN_INTERVAL_HOURS=24     # Intervall mellan retraining-körningar (timmar)
PROB_RETRAIN_SYMBOLS=tBTCUSD,tETHUSD,tADAUSD,tDOTUSD  # Symboler att träna på
PROB_RETRAIN_TIMEFRAME=1m,5m      # Timeframes att träna på (komma-separerade)
PROB_RETRAIN_LIMIT=5000            # Antal candles att hämta för träning
PROB_RETRAIN_OUTPUT_DIR=config/models  # Sökväg för exporterade modellfiler

PROB_AUTOTRADE_ENABLED=True       # True = låt modellen trigga auto-order
PROB_SIZE_MAX_RISK_PCT=1.0         # Max risk per trade (%) vid sizing
PROB_SIZE_KELLY_CAP=0.5            # Kelly-fraktionens tak (0..1) för att dämpa risk
PROB_SIZE_CONF_WEIGHT=0.5          # Hur mycket confidence påverkar storleksberäkning (0..1)

POSITION_SIZE_FALLBACK_QUOTE=0.0   # Reserv-belopp (quote) om sizing ej kan beräknas
PROB_FEATURE_LOG_ENABLED=True      # True = logga feature-data för analys
PROB_FEATURE_LOG_MAX_POINTS=500    # Max antal datapunkter att logga
PROB_FEATURE_LOG_INCLUDE_PRICE=True # True = inkludera prisdata i feature-log

# --- Notifieringar / integrationer (valfritt) ---
GITHUB_TOKEN=                      # GitHub App/Token för CI/CD
GITHUB_PAT=                        # Personal Access Token (om du använder det)

TELEGRAM_BOT_TOKEN=                 # Bot-token om du vill få larm/notiser
TELEGRAM_CHAT_ID=                  # Chat ID att skicka till

SMTP_PORT=                         # SMTP-port för e-postnotifieringar
SMTP_USER=                          # SMTP-användare
SMTP_PASSWORD=                      # SMTP-lösenord
EXCHANGE_ID=                        # Exchange ID för notifieringar

MCP_ENABLED=False                  # True = aktivera MCP-server integration
SUPABASE_URL=                      # Din Supabase-projekt URL
SUPABASE_ANON_KEY=                 # Anonym nyckel (för publika anrop)
SUPABASE_SERVICE_ROLE_KEY=         # Service Role nyckel (för server-side skrivning)
MCP_SERVER_URL=                    # MCP Edge Function URL
SUPABASE_DB_URL=                   # Supabase databas-URL
JWT_SECRET=                        # JWT-hemlighet från Supabase Dashboard (Settings > API > JWT Settings)
