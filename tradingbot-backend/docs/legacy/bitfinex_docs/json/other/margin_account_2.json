{
  "sidebars": {},
  "apiBaseUrl": "/",
  "baseUrl": "/v1",
  "search": {
    "appId": "T28YKFATPY",
    "searchApiKey": "MzAzYTY2NzA4NzJjZGUyNzhmNzcwZjJkNWNhMDFmNGU3YjJjY2RhNTA0MmRmM2FlYjY3YjQ3YWRiZTNhZjc5NXRhZ0ZpbHRlcnM9KHByb2plY3Q6NTdkYTYzNzY1NzQwMDMwZTAwZjIxMjliKSwodmVyc2lvbjpub25lLHZlcnNpb246NTdkYTYzNzY1NzQwMDMwZTAwZjIxMjllKSwoaGlkZGVuOm5vbmUsaGlkZGVuOmZhbHNlKSwoaW5kZXg6Q3VzdG9tUGFnZSxpbmRleDpQYWdlLGluZGV4OlR1dG9yaWFsKQ==",
    "indexName": "readme_search_v2",
    "projectsMeta": [
      {
        "modules": {
          "landing": false,
          "reference": true,
          "suggested_edits": false,
          "discuss": false,
          "docs": true,
          "examples": true,
          "changelog": false,
          "logs": false,
          "custompages": false,
          "tutorials": true,
          "graphql": false
        },
        "id": "57da63765740030e00f2129b",
        "name": "Bitfinex",
        "subdomain": "bitfinex",
        "subpath": "",
        "nav_names": {
          "discuss": "",
          "docs": "Overview",
          "reference": "Documentation",
          "changelog": "",
          "tutorials": "",
          "recipes": ""
        }
      }
    ],
    "UrlManager": {
      "options": {
        "child": false,
        "parent": null,
        "hasOneChild": false,
        "project": null,
        "version": null,
        "lang": "en"
      },
      "defaults": {
        "lang": "en"
      }
    },
    "urlManagerOpts": {
      "lang": "en",
      "parent": {
        "childrenProjects": []
      },
      "project": {
        "subdomain": "bitfinex"
      },
      "version": "1"
    }
  },
  "apiDefinitions": [
    {
      "created_at": "2025-06-10T21:55:49.735Z",
      "filename": "api-settings.json",
      "legacy_id": "58b53bda1065f9c438aa1e01",
      "source": {
        "current": "apidesigner",
        "original": "apidesigner"
      },
      "type": "unknown",
      "updated_at": "2025-06-10T21:55:49.735Z",
      "upload": {
        "status": "done",
        "reason": null,
        "warnings": null
      },
      "uri": "/branches/1/apis/api-settings.json"
    }
  ],
  "customBlocks": [],
  "document": {
    "allow_crawlers": "disabled",
    "appearance": {
      "icon": {
        "name": null,
        "type": null
      }
    },
    "category": {
      "uri": "/branches/1/categories/reference/REST Authenticated Endpoints"
    },
    "content": {
      "body": "**Response Details**\n\n| Key                  | Type       | Description                                                                                                                  |\n| -------------------- | ---------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| margin\\_balance      | \\[decimal] | The USD value of all your trading assets (based on last prices)                                                              |\n| unrealized\\_pl       | \\[decimal] | The unrealized profit/loss of all your open positions                                                                        |\n| unrealized\\_swap     | \\[decimal] | The margin funding used by all your open positions                                                                           |\n| net\\_value           | \\[decimal] | Your net value (the USD value of your trading wallet, including your margin balance, your unrealized P/L and margin funding) |\n| required\\_margin     | \\[decimal] | The minimum net value to maintain in your trading wallet, under which all of your positions are fully liquidated             |\n| margin\\_limits       | \\[array]   | The list of margin limits for each pair. The array gives you the following information, for each pair                        |\n| on\\_pair             | \\[string]  | The pair for which these limits are valid                                                                                    |\n| initial\\_margin      | \\[decimal] | The minimum margin (in %) to maintain to open or increase a position                                                         |\n| tradable\\_balance    | \\[decimal] | Your tradable balance in USD (the maximum size you can open on leverage for this pair)                                       |\n| margin\\_requirements | \\[decimal] | The maintenance margin (% of the USD value of all of your open positions in the current pair to maintain)                    |\n\n> 📘 Limited to Margin Trading\n>\n> The v1/margin\\_infos endpoint is limited to margin trading and does not provide information related to derivatives trading.\n\n**Ratelimit**: 30 req/min",
      "excerpt": "See your trading wallet information for margin trading.",
      "link": {
        "url": null,
        "new_tab": false
      },
      "next": {
        "description": null,
        "pages": []
      }
    },
    "metadata": {
      "description": null,
      "image": {
        "uri": null,
        "url": null
      },
      "keywords": null,
      "title": null
    },
    "parent": {
      "uri": null
    },
    "privacy": {
      "view": "public"
    },
    "slug": "rest-auth-margin-information",
    "state": "current",
    "title": "Margin Information",
    "type": "endpoint",
    "api_config": null,
    "api": {
      "method": "post",
      "path": "/margin_infos",
      "schema": {
        "openapi": "3.1.0",
        "info": {
          "title": "api-settings",
          "version": "1"
        },
        "servers": [
          {
            "url": "https://api.bitfinex.com/v1"
          }
        ],
        "components": {
          "securitySchemes": {}
        },
        "security": [
          {}
        ],
        "paths": {
          "/pubticker/{symbol}": {
            "get": {
              "summary": "Ticker",
              "description": "The ticker is a high level overview of the state of the market. It shows you the current best bid and ask, as well as the last trade price. It also includes information such as daily volume and how much the price has moved over the last day.",
              "operationId": "rest-public-ticker",
              "parameters": [
                {
                  "name": "symbol",
                  "in": "path",
                  "description": "The symbol you want information about. You can find the list of valid symbols by calling the [rest-public-symbols](https://docs.bitfinex.com/v1/reference#rest-public-symbols) endpoint.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "BTCUSD"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"mid\":\"244.755\",\n  \"bid\":\"244.75\",\n  \"ask\":\"244.76\",\n  \"last_price\":\"244.82\",\n  \"low\":\"244.2\",\n  \"high\":\"248.19\",\n  \"volume\":\"7842.11542563\",\n  \"timestamp\":\"1444253422.348340958\"\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "mid": {
                            "type": "string",
                            "example": "244.755"
                          },
                          "bid": {
                            "type": "string",
                            "example": "244.75"
                          },
                          "ask": {
                            "type": "string",
                            "example": "244.76"
                          },
                          "last_price": {
                            "type": "string",
                            "example": "244.82"
                          },
                          "low": {
                            "type": "string",
                            "example": "244.2"
                          },
                          "high": {
                            "type": "string",
                            "example": "248.19"
                          },
                          "volume": {
                            "type": "string",
                            "example": "7842.11542563"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "1444253422.348340958"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"message\": \"Unknown symbol\"\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Unknown symbol"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "const request = require('request')\nrequest.get(url + '/pubticker/btcusd',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.ticker('BTCUSD', (err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})"
                  },
                  {
                    "language": "ruby",
                    "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.bitfinex.com/v1/pubticker/btcusd\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body"
                  },
                  {
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://api.bitfinex.com/v1/pubticker/btcusd\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)",
                    "name": "Python"
                  },
                  {
                    "language": "curl",
                    "code": "curl --request GET \\\n  --url https://api.bitfinex.com/v1/pubticker/btcusd"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby",
                  "python",
                  "curl"
                ]
              }
            }
          },
          "/stats/{symbol}": {
            "get": {
              "summary": "Stats",
              "description": "Various statistics about the requested pair.",
              "operationId": "rest-public-stats",
              "parameters": [
                {
                  "name": "symbol",
                  "in": "path",
                  "description": "The symbol you want information about. You can find the list of valid symbols by calling the [/symbols](#symbols) endpoint.",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"period\":1,\n  \"volume\":\"7967.96766158\"\n},{\n  \"period\":7,\n  \"volume\":\"55938.67260266\"\n},{\n  \"period\":30,\n  \"volume\":\"275148.09653645\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "period": {
                              "type": "integer",
                              "example": 1,
                              "default": 0
                            },
                            "volume": {
                              "type": "string",
                              "example": "7967.96766158"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{ message: 'Unknown symbol' }"
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "const request = require('request')\nrequest.get(url + '/stats/btcusd',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.stats('BTCUSD', (err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.bitfinex.com/v1/stats/btcusd\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_body",
                    "name": "Ruby"
                  },
                  {
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://api.bitfinex.com/v1/stats/btcusd\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)",
                    "name": "Python"
                  },
                  {
                    "language": "text",
                    "code": "curl --request GET \\\n  --url https://api.bitfinex.com/v1/stats/btcusd",
                    "name": "cURL"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby",
                  "python",
                  "text"
                ]
              }
            }
          },
          "/lendbook/{currency}": {
            "get": {
              "summary": "Fundingbook",
              "description": "Get the full margin funding book",
              "operationId": "rest-public-fundingbook",
              "parameters": [
                {
                  "name": "currency",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "USD"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"bids\":[{\n    \"rate\":\"9.1287\",\n    \"amount\":\"5000.0\",\n    \"period\":30,\n    \"timestamp\":\"1444257541.0\",\n    \"frr\":\"No\"\n  }],\n  \"asks\":[{\n    \"rate\":\"8.3695\",\n    \"amount\":\"407.5\",\n    \"period\":2,\n    \"timestamp\":\"1444260343.0\",\n    \"frr\":\"No\"\n  }]\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "bids": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rate": {
                                  "type": "string",
                                  "example": "9.1287"
                                },
                                "amount": {
                                  "type": "string",
                                  "example": "5000.0"
                                },
                                "period": {
                                  "type": "integer",
                                  "example": 30,
                                  "default": 0
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "1444257541.0"
                                },
                                "frr": {
                                  "type": "string",
                                  "example": "No"
                                }
                              }
                            }
                          },
                          "asks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rate": {
                                  "type": "string",
                                  "example": "8.3695"
                                },
                                "amount": {
                                  "type": "string",
                                  "example": "407.5"
                                },
                                "period": {
                                  "type": "integer",
                                  "example": 2,
                                  "default": 0
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "1444260343.0"
                                },
                                "frr": {
                                  "type": "string",
                                  "example": "No"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{ message: 'Unknown currency' }"
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "const request = require('request')\nrequest.get(url + '/lendbook/usd',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// optionally to limit bids and asks to length of 30:\n\nrequest.get(url + '/lendbook/usd?limit_bids=30&limit_asks=30',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.fundingbook('USD', (err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})\n\n// or use bitfinex-api-node w/ limits\n\nconst options = {'limit_asks': 2, 'limit_bids': 2}\nbfxRest.fundingbook('USD', options, (err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.bitfinex.com/v1/lendbook/usd\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_bod",
                    "name": "Ruby"
                  },
                  {
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://api.bitfinex.com/v1/lendbook/usd\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)",
                    "name": "Python"
                  },
                  {
                    "language": "text",
                    "code": "curl --request GET \\\n  --url https://api.bitfinex.com/v1/lendbook/usd",
                    "name": "cURL"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby",
                  "python",
                  "text"
                ]
              }
            }
          },
          "/book/{symbol}": {
            "get": {
              "summary": "Orderbook",
              "description": "Get the full order book.",
              "operationId": "rest-public-orderbook",
              "parameters": [
                {
                  "name": "symbol",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "BTCUSD"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"bids\":[{\n    \"price\":\"574.61\",\n    \"amount\":\"0.1439327\",\n    \"timestamp\":\"1472506127.0\"\n  }],\n  \"asks\":[{\n    \"price\":\"574.62\",\n    \"amount\":\"19.1334\",\n    \"timestamp\":\"1472506126.0\"\n  }]\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "bids": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "price": {
                                  "type": "string",
                                  "example": "574.61"
                                },
                                "amount": {
                                  "type": "string",
                                  "example": "0.1439327"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "1472506127.0"
                                }
                              }
                            }
                          },
                          "asks": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "price": {
                                  "type": "string",
                                  "example": "574.62"
                                },
                                "amount": {
                                  "type": "string",
                                  "example": "19.1334"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "example": "1472506126.0"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{ message: 'Unknown symbol' }"
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "const request = require('request')\nrequest.get(url + '/book/btcusd',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.orderbook('BTCUSD', (err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.bitfinex.com/v1/book/btcusd\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_bod",
                    "name": "Ruby"
                  },
                  {
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://api.bitfinex.com/v1/book/btcusd\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)",
                    "name": "Python"
                  },
                  {
                    "language": "text",
                    "code": "curl --request GET \\\n  --url https://api.bitfinex.com/v1/book/btcusd",
                    "name": "cURL"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby",
                  "python",
                  "text"
                ]
              }
            }
          },
          "/trades/{symbol}": {
            "get": {
              "summary": "Trades",
              "description": "Get a list of the most recent trades for the given symbol.",
              "operationId": "rest-public-trades",
              "parameters": [
                {
                  "name": "symbol",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "BTCUSD"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"timestamp\":1444266681,\n  \"tid\":11988919,\n  \"price\":\"244.8\",\n  \"amount\":\"0.03297384\",\n  \"exchange\":\"bitfinex\",\n  \"type\":\"sell\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "integer",
                              "example": 1444266681,
                              "default": 0
                            },
                            "tid": {
                              "type": "integer",
                              "example": 11988919,
                              "default": 0
                            },
                            "price": {
                              "type": "string",
                              "example": "244.8"
                            },
                            "amount": {
                              "type": "string",
                              "example": "0.03297384"
                            },
                            "exchange": {
                              "type": "string",
                              "example": "bitfinex"
                            },
                            "type": {
                              "type": "string",
                              "example": "sell"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{ message: 'Unknown symbol' }"
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "const request = require('request')\nrequest.get(url + '/trades/btcusd',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.trades('BTCUSD', (err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.bitfinex.com/v1/trades/btcusd\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_bod",
                    "name": "Ruby"
                  },
                  {
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://api.bitfinex.com/v1/trades/btcusd\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)",
                    "name": "Python"
                  },
                  {
                    "language": "text",
                    "code": "curl --request GET \\\n  --url https://api.bitfinex.com/v1/trades/BTCUSD",
                    "name": "cURL"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby",
                  "python",
                  "text"
                ]
              }
            }
          },
          "/lends/{currency}": {
            "get": {
              "summary": "Lends",
              "description": "Get a list of the most recent funding data for the given currency: total amount provided and Flash Return Rate (in % by 365 days) over time.",
              "operationId": "rest-public-lends",
              "parameters": [
                {
                  "name": "currency",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "USD"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"rate\":\"9.8998\",\n  \"amount_lent\":\"22528933.77950878\",\n  \"amount_used\":\"0.0\",\n  \"timestamp\":1444264307\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rate": {
                              "type": "string",
                              "example": "9.8998"
                            },
                            "amount_lent": {
                              "type": "string",
                              "example": "22528933.77950878"
                            },
                            "amount_used": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "timestamp": {
                              "type": "integer",
                              "example": 1444264307,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "const request = require('request')\nrequest.get(url + '/lends/usd',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.ticker('BTCUSD', (err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.bitfinex.com/v1/lends/usd\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_bod",
                    "name": "Ruby"
                  },
                  {
                    "language": "text",
                    "code": "import requests\n\nurl = \"https://api.bitfinex.com/v1/lends/usd\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)",
                    "name": "Python"
                  },
                  {
                    "language": "text",
                    "code": "curl --request GET \\\n  --url https://api.bitfinex.com/v1/lends/usd",
                    "name": "cURL"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby",
                  "text"
                ]
              }
            }
          },
          "/symbols": {
            "get": {
              "summary": "Symbols",
              "description": "A list of symbol names.",
              "operationId": "rest-public-symbols",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[\n  \"btcusd\",\n  \"ltcusd\",\n  \"ltcbtc\",\n  ...\n]"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "const request = require('request')\nrequest.get(url + '/symbols',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.get_symbols((err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.bitfinex.com/v1/symbols\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_bod",
                    "name": "Ruby"
                  },
                  {
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://api.bitfinex.com/v1/symbols\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)",
                    "name": "Python"
                  },
                  {
                    "language": "text",
                    "code": "curl --request GET \\\n  --url https://api.bitfinex.com/v1/symbols",
                    "name": "cURL"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby",
                  "python",
                  "text"
                ]
              }
            }
          },
          "/symbols_details": {
            "get": {
              "summary": "Symbol Details",
              "description": "Get a list of valid symbol IDs and the pair details.",
              "operationId": "rest-public-symbol-details",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"pair\":\"btcusd\",\n  \"price_precision\":5,\n  \"initial_margin\":\"30.0\",\n  \"minimum_margin\":\"15.0\",\n  \"maximum_order_size\":\"2000.0\",\n  \"minimum_order_size\":\"0.01\",\n  \"expiration\":\"NA\"\n},{\n  \"pair\":\"ltcusd\",\n  \"price_precision\":5,\n  \"initial_margin\":\"30.0\",\n  \"minimum_margin\":\"15.0\",\n  \"maximum_order_size\":\"5000.0\",\n  \"minimum_order_size\":\"0.1\",\n  \"expiration\":\"NA\"\n},{\n  \"pair\":\"ltcbtc\",\n  \"price_precision\":5,\n  \"initial_margin\":\"30.0\",\n  \"minimum_margin\":\"15.0\",\n  \"maximum_order_size\":\"5000.0\",\n  \"minimum_order_size\":\"0.1\",\n  \"expiration\":\"NA\"\n},\n...\n]"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "const request = require('request')\nrequest.get(url + '/symbols_details',\n  function(error, response, body) {\n    console.log(body);\n})\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.symbols_details((err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://api.bitfinex.com/v1/symbols_details\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\n\nrequest = Net::HTTP::Get.new(url)\n\nresponse = http.request(request)\nputs response.read_bod",
                    "name": "Ruby"
                  },
                  {
                    "language": "python",
                    "code": "import requests\n\nurl = \"https://api.bitfinex.com/v1/symbols_details\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)",
                    "name": "Python"
                  },
                  {
                    "language": "text",
                    "code": "curl --request GET \\\n  --url https://api.bitfinex.com/v1/symbols_details",
                    "name": "cURL"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby",
                  "python",
                  "text"
                ]
              }
            }
          },
          "/account_infos": {
            "post": {
              "summary": "Account Info",
              "description": "Return information about your account (trading fees)",
              "operationId": "rest-auth-account-info",
              "parameters": [
                {
                  "name": "X-BFX-APIKEY",
                  "in": "header",
                  "description": "Your API Key",
                  "schema": {
                    "type": "string",
                    "default": "API_KEY"
                  }
                },
                {
                  "name": "X-BFX-PAYLOAD",
                  "in": "header",
                  "description": "JSON String of Payload in base64",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "X-BFX-SIGNATURE",
                  "in": "header",
                  "description": "SHA-384 HMAC of the Payload using your API Secret as the key",
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"leo_fee_disc_c2c\":\"0.0\",\n  \"leo_fee_disc_c2s\":\"0.0\",\n  \"leo_fee_disc_c2f\":\"0.0\",\n  \"leo_fee_disc_c2d\":\"0.0\",\n  \"leo_fee_disc_abs_c2c\":\"0.0\",\n  \"leo_fee_disc_abs_c2s\":\"0.0\",\n  \"leo_fee_disc_abs_c2f\":\"0.0\",\n  \"leo_fee_disc_abs_c2d\":\"0.0\",\n  \"maker_fees\":\"0.1\",\n  \"taker_fees\":\"0.2\",\n  \"fees\":[{\n    \"pairs\":\"BTC\",\n    \"maker_fees\":\"0.1\",\n    \"taker_fees\":\"0.2\"\n   },{\n    \"pairs\":\"LTC\",\n    \"maker_fees\":\"0.1\",\n    \"taker_fees\":\"0.2\"\n   },\n   {\n    \"pairs\":\"ETH\",\n    \"maker_fees\":\"0.1\",\n    \"taker_fees\":\"0.2\"\n  }]\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "leo_fee_disc_c2c": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "leo_fee_disc_c2s": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "leo_fee_disc_c2f": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "leo_fee_disc_c2d": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "leo_fee_disc_abs_c2c": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "leo_fee_disc_abs_c2s": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "leo_fee_disc_abs_c2f": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "leo_fee_disc_abs_c2d": {
                              "type": "string",
                              "example": "0.0"
                            },
                            "maker_fees": {
                              "type": "string",
                              "example": "0.1"
                            },
                            "taker_fees": {
                              "type": "string",
                              "example": "0.2"
                            },
                            "fees": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "pairs": {
                                    "type": "string",
                                    "example": "BTC"
                                  },
                                  "maker_fees": {
                                    "type": "string",
                                    "example": "0.1"
                                  },
                                  "taker_fees": {
                                    "type": "string",
                                    "example": "0.2"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{ message: 'X-BFX-APIKEY header was not sent.' }"
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/account_infos\",\n  \"nonce\": Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.account_infos((err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/account_fees": {
            "post": {
              "summary": "Account Fees",
              "description": "See the fees applied to your withdrawals",
              "operationId": "rest-auth-fees",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"withdraw\":{\n    \"BTC\": \"0.0005\",\n    \"LTC\": 0,\n    \"ETH\": 0,\n    ...\n  }\n}"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "// a message containing your error, for example:\n{ message: 'X-BFX-APIKEY header was not sent.' }"
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/account_fees\",\n  \"nonce\": Date.now().toString()\n}\n\n// not available via bitfinex-api-node",
                    "name": "JavaScript"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/summary": {
            "post": {
              "summary": "Summary",
              "description": "Returns a 30-day summary of your trading volume and return on margin funding.",
              "operationId": "rest-auth-summary",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "//response\n{\n  \"trade_vol_30d\":[\n    {\"curr\":\"BTC\",\"vol\":11.88696022},\n    {\"curr\":\"LTC\",\"vol\":0.0},\n    {\"curr\":\"ETH\",\"vol\":0.1},\n    {\"curr\":\"Total (USD)\",\"vol\":5027.63}\n  ],\n  \"funding_profit_30d\":[\n    {\"curr\":\"USD\",\"amount\":0.0},\n    {\"curr\":\"BTC\",\"amount\":0.0},\n    {\"curr\":\"LTC\",\"amount\":0.0},\n    {\"curr\":\"ETH\",\"amount\":0.0}\n  ],\n  \"maker_fee\":0.001,\n  \"taker_fee\":0.002\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "trade_vol_30d": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "curr": {
                                  "type": "string",
                                  "example": "BTC"
                                },
                                "vol": {
                                  "type": "number",
                                  "example": 11.88696022,
                                  "default": 0
                                }
                              }
                            }
                          },
                          "funding_profit_30d": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "curr": {
                                  "type": "string",
                                  "example": "USD"
                                },
                                "amount": {
                                  "type": "integer",
                                  "example": 0,
                                  "default": 0
                                }
                              }
                            }
                          },
                          "maker_fee": {
                            "type": "number",
                            "example": 0.001,
                            "default": 0
                          },
                          "taker_fee": {
                            "type": "number",
                            "example": 0.002,
                            "default": 0
                          }
                        }
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/summary\",\n  \"nonce\": Date.now().toString()\n}\n\n// not available with bitfinex-api-node",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "client.summary",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/deposit/new": {
            "post": {
              "summary": "Deposit",
              "description": "Return your deposit address to make a new deposit.",
              "operationId": "rest-auth-deposit",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "request",
                        "nonce",
                        "method",
                        "wallet_name"
                      ],
                      "properties": {
                        "request": {
                          "type": "string",
                          "default": "\"/v1/deposit/new\""
                        },
                        "nonce": {
                          "type": "string",
                          "default": "Date.now().toString()"
                        },
                        "method": {
                          "type": "string",
                          "description": "Method of deposit (methods accepted: “bitcoin”, “litecoin”, “ethereum”, “tetheruso\", “tetherusl\", “tetherusx\", “tetheruss\", \"ethereumc\", \"zcash\", \"monero\", \"iota\"). For an up-to-date listing of supported currencies see: https://api.bitfinex.com/v2/conf/pub:map:currency:label",
                          "default": "bitcoin"
                        },
                        "wallet_name": {
                          "type": "string",
                          "description": "Wallet to deposit in (accepted: “trading”, “exchange”, “deposit”). Your wallet needs to already exist",
                          "default": "exchange"
                        },
                        "renew": {
                          "type": "integer",
                          "description": "Default is 0. If set to 1, will return a new unused deposit address. Previous addresses are still valid",
                          "default": 0,
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "//response\n{\n  \"result\":\"success\",\n  \"method\":\"bitcoin\",\n  \"currency\":\"BTC\",\n  \"address\":\"1A2wyHKJ4KWEoahDHVxwQy3kdd6g1qiSYV\"\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "result": {
                            "type": "string",
                            "example": "success"
                          },
                          "method": {
                            "type": "string",
                            "example": "bitcoin"
                          },
                          "currency": {
                            "type": "string",
                            "example": "BTC"
                          },
                          "address": {
                            "type": "string",
                            "example": "1A2wyHKJ4KWEoahDHVxwQy3kdd6g1qiSYV"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/deposit/new\",\n  \"nonce\": Date.now().toString(),\n  \"method\": \"bitcoin\",\n  \"wallet_name\": \"exchange\",\n  \"renew\": 1\n}\n\n",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "new_address = client.deposit(\"bitcoin\", \"exchange\")",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/key_info": {
            "post": {
              "summary": "Key Permissions",
              "description": "Check the permissions of the key being used to generate this request.",
              "operationId": "auth-key-permissions",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"account\":{\n    \"read\":true,\n    \"write\":false\n  },\n  \"history\":{\n    \"read\":true,\n    \"write\":false\n  },\n  \"orders\":{\n    \"read\":true,\n    \"write\":true\n  },\n  \"positions\":{\n    \"read\":true,\n    \"write\":true\n  },\n  \"funding\":{\n    \"read\":true,\n    \"write\":true\n  },\n  \"wallets\":{\n    \"read\":true,\n    \"write\":true\n  },\n  \"withdraw\":{\n    \"read\":null,\n    \"write\":null\n  }\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "account": {
                            "type": "object",
                            "properties": {
                              "read": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "write": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              }
                            }
                          },
                          "history": {
                            "type": "object",
                            "properties": {
                              "read": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "write": {
                                "type": "boolean",
                                "example": false,
                                "default": true
                              }
                            }
                          },
                          "orders": {
                            "type": "object",
                            "properties": {
                              "read": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "write": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              }
                            }
                          },
                          "positions": {
                            "type": "object",
                            "properties": {
                              "read": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "write": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              }
                            }
                          },
                          "funding": {
                            "type": "object",
                            "properties": {
                              "read": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "write": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              }
                            }
                          },
                          "wallets": {
                            "type": "object",
                            "properties": {
                              "read": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "write": {
                                "type": "boolean",
                                "example": true,
                                "default": true
                              }
                            }
                          },
                          "withdraw": {
                            "type": "object",
                            "properties": {
                              "read": {},
                              "write": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/key_info\",\n  \"nonce\": Date.now().toString()\n}\n\n// not currently available with bitfinex-api-node",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.key_info",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/margin_infos": {
            "post": {
              "summary": "Margin Information",
              "description": "See your trading wallet information for margin trading.",
              "operationId": "rest-auth-margin-information",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"margin_balance\":\"14.80039951\",\n  \"tradable_balance\":\"-12.50620089\",\n  \"unrealized_pl\":\"-0.18392\",\n  \"unrealized_swap\":\"-0.00038653\",\n  \"net_value\":\"14.61609298\",\n  \"required_margin\":\"7.3569\",\n  \"leverage\":\"2.5\",\n  \"margin_requirement\":\"13.0\",\n  \"margin_limits\":[{\n    \"on_pair\":\"BTCUSD\",\n    \"initial_margin\":\"30.0\",\n    \"margin_requirement\":\"15.0\",\n    \"tradable_balance\":\"-0.329243259666666667\"\n  }],\n  \"message\": \"Margin requirement, leverage and tradable balance are now per pair. You will find them under margin_limits, for each pair. Please update your code as soon as possible.\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "margin_balance": {
                              "type": "string",
                              "example": "14.80039951"
                            },
                            "tradable_balance": {
                              "type": "string",
                              "example": "-12.50620089"
                            },
                            "unrealized_pl": {
                              "type": "string",
                              "example": "-0.18392"
                            },
                            "unrealized_swap": {
                              "type": "string",
                              "example": "-0.00038653"
                            },
                            "net_value": {
                              "type": "string",
                              "example": "14.61609298"
                            },
                            "required_margin": {
                              "type": "string",
                              "example": "7.3569"
                            },
                            "leverage": {
                              "type": "string",
                              "example": "2.5"
                            },
                            "margin_requirement": {
                              "type": "string",
                              "example": "13.0"
                            },
                            "margin_limits": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "on_pair": {
                                    "type": "string",
                                    "example": "BTCUSD"
                                  },
                                  "initial_margin": {
                                    "type": "string",
                                    "example": "30.0"
                                  },
                                  "margin_requirement": {
                                    "type": "string",
                                    "example": "15.0"
                                  },
                                  "tradable_balance": {
                                    "type": "string",
                                    "example": "-0.329243259666666667"
                                  }
                                }
                              }
                            },
                            "message": {
                              "type": "string",
                              "example": "Margin requirement, leverage and tradable balance are now per pair. You will find them under margin_limits, for each pair. Please update your code as soon as possible."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/margin_infos\",\n  \"nonce\": Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.margin_infos((err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.margin_infos",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/balances": {
            "post": {
              "summary": "Wallet Balances",
              "description": "See your balances",
              "operationId": "rest-auth-wallet-balances",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"type\":\"deposit\",\n  \"currency\":\"btc\",\n  \"amount\":\"0.0\",\n  \"available\":\"0.0\"\n},{\n  \"type\":\"deposit\",\n  \"currency\":\"usd\",\n  \"amount\":\"1.0\",\n  \"available\":\"1.0\"\n},{\n  \"type\":\"exchange\",\n  \"currency\":\"btc\",\n  \"amount\":\"1\",\n  \"available\":\"1\"\n},{\n  \"type\":\"exchange\",\n  \"currency\":\"usd\",\n  \"amount\":\"1\",\n  \"available\":\"1\"\n},{\n  \"type\":\"trading\",\n  \"currency\":\"btc\",\n  \"amount\":\"1\",\n  \"available\":\"1\"\n},{\n  \"type\":\"trading\",\n  \"currency\":\"usd\",\n  \"amount\":\"1\",\n  \"available\":\"1\"\n},\n...]"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/balances\",\n  \"nonce\": Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.wallet_balances((err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.balances",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/transfer": {
            "post": {
              "summary": "Transfer Between Wallets",
              "description": "Allow you to move available balances between your wallets.",
              "operationId": "rest-auth-transfer-between-wallets",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "amount",
                        "currency",
                        "walletfrom",
                        "walletto"
                      ],
                      "properties": {
                        "amount": {
                          "type": "string",
                          "description": "Amount to transfer"
                        },
                        "currency": {
                          "type": "string",
                          "description": "Currency of funds to transfer. For an up-to-date listing of supported currencies see: https://api.bitfinex.com/v2/conf/pub:map:currency:label"
                        },
                        "walletfrom": {
                          "type": "string",
                          "description": "Wallet to transfer from. Can be “trading”, “deposit” or “exchange”"
                        },
                        "walletto": {
                          "type": "string",
                          "description": "Wallet to transfer to. Can be “trading”, “deposit” or “exchange”"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"status\":\"success\",\n  \"message\":\"1.0 USD transfered from Exchange to Deposit\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "success"
                            },
                            "message": {
                              "type": "string",
                              "example": "1.0 USD transfered from Exchange to Deposit"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/transfer\",\n  \"amount\": \"1.0\",\n  \"currency\": \"BTC\",\n  \"walletfrom\": \"trading\",\n  \"walletto\": \"exchange\",\n  \"nonce\": Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.transfer((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.transfer(10, 'btc', \"exchange\", \"deposit\")",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/withdraw": {
            "post": {
              "summary": "Withdrawal",
              "description": "Allow you to request a withdrawal from one of your wallet.",
              "operationId": "rest-auth-withdrawal",
              "parameters": [
                {
                  "name": "withdraw_type",
                  "in": "query",
                  "description": "defines the currency your are trying to withdraw, see the \"Withdrawal Types\" section below for accepted values",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "walletselected",
                  "in": "query",
                  "description": "The wallet to withdraw from, can be “trading”, “exchange”, or “deposit”.",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "amount",
                  "in": "query",
                  "description": "Amount to withdraw.",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "address",
                  "in": "query",
                  "description": "(1) Destination address for withdrawal. (Not used when withdraw_type=wire)",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "currency",
                  "in": "query",
                  "description": "Desired currency for wire requests (USD|EUR|JPY|GPB)",
                  "schema": {
                    "type": "string",
                    "default": "\"USD\""
                  }
                },
                {
                  "name": "payment_id",
                  "in": "query",
                  "description": "Optional hex string for currencies that require a memo, tag, or ID..",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "account_name",
                  "in": "query",
                  "description": "Account name",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "account_number",
                  "in": "query",
                  "description": "Account number",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "account_address",
                  "in": "query",
                  "description": "Account address",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "swift",
                  "in": "query",
                  "description": "The SWIFT code for your bank.",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "bank_name",
                  "in": "query",
                  "description": "Bank name",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "bank_address",
                  "in": "query",
                  "description": "Bank address",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "bank_city",
                  "in": "query",
                  "description": "Bank city",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "bank_country",
                  "in": "query",
                  "description": "Bank country",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "detail_payment",
                  "in": "query",
                  "description": "Message to beneficiary",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "expressWire",
                  "in": "query",
                  "description": "“1” to submit an express wire withdrawal, “0” or omit for a normal withdrawal",
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                {
                  "name": "intermediary_bank_name",
                  "in": "query",
                  "description": "Intermediary bank name",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "intermediary_bank_address",
                  "in": "query",
                  "description": "Intermediary bank address",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "intermediary_bank_city",
                  "in": "query",
                  "description": "Intermediary bank city",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "intermediary_bank_country",
                  "in": "query",
                  "description": "Intermediary bank country",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "intermediary_bank_account",
                  "in": "query",
                  "description": "Intermediary bank account",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "intermediary_bank_swift",
                  "in": "query",
                  "description": "Intermediary bank SWIFT",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "travel_rule_tos",
                  "in": "query",
                  "description": "Flag to voluntarily send travel rule details for crypto withdrawal",
                  "schema": {
                    "type": "boolean"
                  }
                },
                {
                  "name": "vasp_did",
                  "in": "query",
                  "description": "Virtual asset provider identifier, optional info for travel rule purpose. DID values can be found on https://api-pub.bitfinex.com/v2/ext/vasps endpoint.",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "vasp_name",
                  "in": "query",
                  "description": "Virtual asset provider name, optional info for travel rule purpose, if self custody ignore the field",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "beneficiary_self",
                  "in": "query",
                  "description": "Set to 'true' to extract destination data from your KYC data. (If 'true', dest_firstname, dest_lastname, or dest_corp_name do not need to be supplied)",
                  "schema": {
                    "type": "boolean"
                  }
                },
                {
                  "name": "dest_firstname",
                  "in": "query",
                  "description": "Destination entity first name for travel rule purpose (mandatory if dest_lastname is supplied, not required if beneficiary_self = true)",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "dest_lastname",
                  "in": "query",
                  "description": "Destination entity last name for travel rule purpose (mandatory if dest_firstname is supplied, not required if beneficiary_self = true)",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "dest_corp_name",
                  "in": "query",
                  "description": "Destination entity corporate name for travel rule purpose. (use either dest_firstname + dest_lastname or dest_corp_name, not required if beneficiary_self = true)",
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"status\":\"success\",\n  \"message\":\"Your withdrawal request has been successfully submitted.\",\n  \"withdrawal_id\":586829\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "example": "success"
                            },
                            "message": {
                              "type": "string",
                              "example": "Your withdrawal request has been successfully submitted."
                            },
                            "withdrawal_id": {
                              "type": "integer",
                              "example": 586829,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n  \"request\": \"/v1/withdraw\",\n  \"withdraw_type\": \"bitcoin\",\n  \"walletselected\": \"exchange\",\n  \"amount\": \"1.0\",\n  \"address\": \"1DKwqRhDmVyHJDL4FUYpDmQMYA3Rsxtvur\"\n  \"nonce\": Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.withdraw('bitcoin', 'exchange', '1.0', '1DKwqRhDmVyHJDL4FUYpDmQMYA3Rsxtvur' ,(err, res) => {\n\tif (err) console.log(err)\n\tconsole.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.withdraw(\"bitcoin\",\"deposit\",1000, address: \"1DKwqRhDmVyHJDL4FUYpDmQMYA3Rsxtvur\")"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/order/new": {
            "post": {
              "summary": "New Order",
              "description": "Submit a new Order, can be used to create margin, exchange, and derivative orders.",
              "operationId": "rest-auth-new-order",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "symbol",
                        "amount",
                        "price",
                        "side",
                        "type",
                        "ocoorder",
                        "buy_price_oco",
                        "sell_price_oco"
                      ],
                      "properties": {
                        "symbol": {
                          "type": "string",
                          "description": "The name of the symbol (see `/symbols`)."
                        },
                        "amount": {
                          "type": "string",
                          "description": "Order size: how much you want to buy or sell"
                        },
                        "price": {
                          "type": "string",
                          "description": "Price to buy or sell at. Must be positive. Use random number for market orders. Note: For 'trailing-stop' orders, the price represents the desired 'distance'"
                        },
                        "side": {
                          "type": "string",
                          "description": "Either “buy” or “sell”."
                        },
                        "type": {
                          "type": "string",
                          "description": "Either “market” / “limit” / “stop” / \"stop limit\" / “trailing-stop” / “fill-or-kill” / \"immediate-or-cancel\" / “exchange market” / “exchange limit” / “exchange stop” / \"exchange stop limit\" / “exchange trailing-stop” / “exchange fill-or-kill” / \"exchange immediate-or-cancel\" . (type starting by “exchange ” are exchange orders, others are margin trading orders)"
                        },
                        "exchange": {
                          "type": "string",
                          "default": "\"bitfinex\""
                        },
                        "buy_stoplimit_price": {
                          "type": "number",
                          "description": "Specify the limit price on a stop limit buy or exchange stop limit buy order",
                          "format": "float"
                        },
                        "sell_stoplimit_price": {
                          "type": "string",
                          "description": "Specify the limit price on a stop limit sell or exchange stop limit sell order"
                        },
                        "is_hidden": {
                          "type": "boolean",
                          "description": "true if the order should be hidden.",
                          "default": false
                        },
                        "is_postonly": {
                          "type": "boolean",
                          "description": "true if the order should be post only. Only relevant for limit orders.",
                          "default": false
                        },
                        "use_all_available": {
                          "type": "integer",
                          "description": "1 will post an order that will use all of your available balance.",
                          "default": 0,
                          "format": "int32"
                        },
                        "ocoorder": {
                          "type": "boolean",
                          "description": "Set an additional STOP OCO order that will be linked with the current order."
                        },
                        "buy_price_oco": {
                          "type": "number",
                          "description": "If ocoorder is true, this field represent the price of the OCO stop order to place",
                          "format": "float"
                        },
                        "sell_price_oco": {
                          "type": "number",
                          "description": "If ocoorder is true, this field represent the price of the OCO stop order to place",
                          "format": "float"
                        },
                        "lev": {
                          "type": "integer",
                          "description": "Set the leverage for a derivative order, supported by derivative symbol orders only. The value should be between 1 and 100 inclusive. The field is optional, if omitted the default leverage value of 10 will be used.",
                          "default": 10,
                          "format": "int32"
                        },
                        "aff_code": {
                          "type": "string",
                          "description": "Allows you to pass along an affiliate code with your API orders"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "// response\n{\n  \"id\":448364249,\n  \"cid\":38409723434,\n  \"cid_date\":'2021-05-18',\n  \"gid\": null,  \n  \"symbol\":\"btcusd\",\n  \"exchange\":\"bitfinex\",\n  \"price\":\"0.01\",\n  \"avg_execution_price\":\"0.0\",\n  \"side\":\"buy\",\n  \"type\":\"exchange limit\",\n  \"timestamp\":\"1444272165.252370982\",\n  \"is_live\":true,\n  \"is_cancelled\":false,\n  \"is_hidden\":false,\n  \"was_forced\":false,\n  \"original_amount\":\"0.01\",\n  \"remaining_amount\":\"0.01\",\n  \"executed_amount\":\"0.0\",\n  \"order_id\":448364249,\n  \"src\":'api',\n  \"meta\":null,\n  \"order_id\":448364249\n}"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/order/new',\n   nonce: Date.now().toString(),\n   symbol: 'BTCUSD',\n   amount: '0.3',\n   price: '1000',\n   exchange: 'bitfinex',\n   side: 'sell',\n   type: 'exchange market',\n   aff_code: \"AFF_CODE_HERE\" // optional param to pass an affiliate code \n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.new_order('BTCUSD', '1.269', '1000', 'bitfinex', 'sell', 'exchange market', (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "javascript",
                    "code": "client.new_order(\"BTCUSD\", 100, \"market\", \"sell\", 0)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/order/new/multi": {
            "post": {
              "summary": "Multiple New Orders",
              "description": "Submit several new orders at once, can be used to create margin, exchange, and derivative orders.",
              "operationId": "rest-auth-multiple-new-orders",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "symbol",
                        "amount",
                        "price",
                        "side",
                        "type"
                      ],
                      "properties": {
                        "symbol": {
                          "type": "string",
                          "description": "The name of the symbol (see `/symbols`)."
                        },
                        "amount": {
                          "type": "string",
                          "description": "Order size: how much you want to buy or sell"
                        },
                        "price": {
                          "type": "string",
                          "description": "Price to buy or sell at. Must be positive. Use random number for market orders."
                        },
                        "side": {
                          "type": "string",
                          "description": "Either “buy” or “sell”."
                        },
                        "type": {
                          "type": "string",
                          "description": "Either “market” / “limit” / “stop” / \"stop limit\" / “trailing-stop” / “fill-or-kill” / \"immediate-or-cancel\" / “exchange market” / “exchange limit” / “exchange stop” / \"exchange stop limit\" / “exchange trailing-stop” / “exchange fill-or-kill” / \"exchange immediate-or-cancel\" . (type starting by “exchange ” are exchange orders, others are margin trading orders)"
                        },
                        "exchange": {
                          "type": "string",
                          "description": "\"bitfinex\""
                        },
                        "lev": {
                          "type": "integer",
                          "description": "Set the leverage for a derivative order, supported by derivative symbol orders only. The value should be between 1 and 100 inclusive. The field is optional, if omitted the default leverage value of 10 will be used.",
                          "default": 10,
                          "format": "int32"
                        },
                        "buy_stoplimit_price": {
                          "type": "string",
                          "description": "Specify the limit price on a stop limit buy or exchange stop limit buy order"
                        },
                        "sell_stoplimit_price": {
                          "type": "string",
                          "description": "Specify the limit price on a stop limit sell or exchange stop limit sell order"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "// response\n{\n  \"order_ids\":[{\n    \"id\":448364249,\n    \"cid\":38409723434,\n    \"cid_date\":'2021-05-18',\n    \"gid\": null,  \n    \"symbol\":\"btcusd\",\n    \"exchange\":\"bitfinex\",\n    \"price\":\"0.01\",\n    \"avg_execution_price\":\"0.0\",\n    \"side\":\"buy\",\n    \"type\":\"exchange limit\",\n    \"timestamp\":\"1444272165.252370982\",\n    \"is_live\":true,\n    \"is_cancelled\":false,\n    \"is_hidden\":false,\n    \"was_forced\":false,\n    \"original_amount\":\"0.01\",\n    \"remaining_amount\":\"0.01\",\n    \"executed_amount\":\"0.0\",\n    \"order_id\":448364249,\n    \"src\":'api',\n    \"meta\":null,\n    \"order_id\":448364249\n  },{\n    \"id\":448364248,\n    \"cid\":38409723434,\n    \"cid_date\":'2021-05-18',\n    \"gid\": null,  \n    \"symbol\":\"btcusd\",\n    \"exchange\":\"bitfinex\",\n    \"price\":\"0.01\",\n    \"avg_execution_price\":\"0.0\",\n    \"side\":\"buy\",\n    \"type\":\"exchange limit\",\n    \"timestamp\":\"1444272165.252370982\",\n    \"is_live\":true,\n    \"is_cancelled\":false,\n    \"is_hidden\":false,\n    \"was_forced\":false,\n    \"original_amount\":\"0.01\",\n    \"remaining_amount\":\"0.01\",\n    \"executed_amount\":\"0.0\",\n    \"order_id\":448364249,\n    \"src\":'api',\n    \"meta\":null,\n    \"order_id\":448364248\n  }],\n  \"status\":\"success\"\n}"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nconst orderOne = {\n  symbol: 'BTCUSD',\n  amount: '0.011',\n  price: '1000',\n  exchange: 'bitfinex',\n  side: 'buy',\n  type: 'exchange market'\n}\nconst orderTwo = {\n  symbol: 'BTCUSD',\n  amount: '0.022',\n  price: '1000',\n  exchange: 'bitfinex',\n  side: 'buy',\n  type: 'exchange market'\n}\nconst orderThree = {\n  symbol: 'BTCUSD',\n  amount: '0.033',\n  price: '1000',\n  exchange: 'bitfinex',\n  side: 'buy',\n  type: 'exchange market'\n}\n\nconst orders = [orderOne, orderTwo, orderThree]\n\nvar payload = {\n   request: '/v1/order/new/multi',\n   nonce: Date.now().toString(),\n   orders: orders\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.multiple_new_orders(orders, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})\n",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.multiple_orders([{symbol: \"btcusd\", amount: 10, price: 0, exchange: \"bitfinex\", side: \"buy\", type: \"market\"}])",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/order/cancel": {
            "post": {
              "summary": "Cancel Order",
              "description": "Cancel an order.",
              "operationId": "rest-auth-cancel-order",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "order_id"
                      ],
                      "properties": {
                        "order_id": {
                          "type": "integer",
                          "description": "The order ID given by `/order/new`",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  id: 1231809471,\n  cid: 39344613069,\n  cid_date: '2021-05-18',\n  gid: null,\n  symbol: 'ethusd',\n  exchange: 'bitfinex',\n  price: '300.0',\n  avg_execution_price: '0.0',\n  side: 'buy',\n  type: 'limit',\n  timestamp: '1621335345.0',\n  is_live: true,\n  is_cancelled: false,\n  is_hidden: false,\n  oco_order: null,\n  was_forced: false,\n  original_amount: '0.321',\n  remaining_amount: '0.321',\n  executed_amount: '0.0',\n  src: 'api',\n  meta: null\n}"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/order/cancel',\n   nonce: Date.now().toString(),\n   order_id: 446915287\n}\n\n// or use bitfinex-api-node\n\nbfxRest.cancel_order(446915287, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.cancel_orders(448364249)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/order/cancel/multi": {
            "post": {
              "summary": "Cancel Multiple Orders",
              "description": "Cancel multiples orders at once.",
              "operationId": "rest-auth-cancel-multiple-orders",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "order_ids"
                      ],
                      "properties": {
                        "order_ids": {
                          "type": "array",
                          "description": "An array of the order IDs given by `/order/new` or `/order/new/multi`.",
                          "items": {
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  result: 'All (3) submitted for cancellation; waiting for confirmation.'\n}"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nconst ordersIds = [111231111, 222232222, 333233333]\n\nvar payload = {\n   request: '/v1/order/cancel/multi',\n   nonce: Date.now().toString(),\n   order_ids: ordersIds\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.cancel_multiple_orders(ordersIds, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})\n",
                    "name": "JavaScript"
                  },
                  {
                    "language": "text",
                    "code": "response = client.cancel_orders([448402101, 448402099])",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "text"
                ]
              }
            }
          },
          "/order/cancel/all": {
            "post": {
              "summary": "Cancel All Orders",
              "description": "Cancel all active orders at once.",
              "operationId": "rest-auth-cancel-all-orders",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\"result\":\"All orders cancelled\"}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "result": {
                            "type": "string",
                            "example": "All orders cancelled"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/order/cancel/all',\n   nonce: Date.now().toString(),\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.cancel_all_orders((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})"
                  },
                  {
                    "language": "text",
                    "code": "response = client.cancel_orders",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "text"
                ]
              }
            }
          },
          "/order/cancel/replace": {
            "post": {
              "summary": "Replace Order",
              "description": "Replace an order with a new one. Can be used to replace an order with a new margin, exchange, or derivative order.",
              "operationId": "rest-auth-replace-order",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "order_id"
                      ],
                      "properties": {
                        "order_id": {
                          "type": "integer",
                          "description": "The order ID given by `/order/new`.",
                          "format": "int64"
                        },
                        "symbol": {
                          "type": "string",
                          "description": "The name of the symbol (see `/symbols`)."
                        },
                        "amount": {
                          "type": "string",
                          "description": "Order size: how much to buy or sell."
                        },
                        "price": {
                          "type": "string",
                          "description": "Price to buy or sell at. May omit if a market order."
                        },
                        "exchange": {
                          "type": "string",
                          "description": "“bitfinex”"
                        },
                        "side": {
                          "type": "string",
                          "description": "Either “buy” or “sell”."
                        },
                        "type": {
                          "type": "string",
                          "description": "Either “market” / “limit” / “stop” / “trailing-stop” / “fill-or-kill” / “exchange market” / “exchange limit” / “exchange stop” / “exchange trailing-stop” / “exchange fill-or-kill”. (type starting by “exchange ” are exchange orders, others are margin trading orders)"
                        },
                        "is_hidden": {
                          "type": "boolean",
                          "description": "true if the order should be hidden.",
                          "default": false
                        },
                        "is_postonly": {
                          "type": "boolean",
                          "description": "true if the order should be post only. Only relevant for limit orders.",
                          "default": false
                        },
                        "use_remaining": {
                          "type": "boolean",
                          "description": "True if the new order should use the remaining amount of the original order.",
                          "default": false
                        },
                        "lev": {
                          "type": "integer",
                          "description": "Set the leverage for a derivative order, supported by derivative symbol orders only. The value should be between 1 and 100 inclusive. The field is optional, if omitted the default leverage value of 10 will be used.",
                          "default": 10,
                          "format": "int32"
                        },
                        "aff_code": {
                          "type": "string",
                          "description": "Allows you to pass along an affiliate code with your API orders"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  id: 1231813572,\n  cid: 43529705395,\n  cid_date: '2021-05-18',\n  gid: null,\n  symbol: 'ethusd',\n  exchange: 'bitfinex',\n  price: '400.0',\n  avg_execution_price: '0.0',\n  side: 'buy',\n  type: 'limit',\n  timestamp: '1621339529.737032398',\n  is_live: true,\n  is_cancelled: false,\n  is_hidden: false,\n  oco_order: null,\n  was_forced: false,\n  original_amount: '0.1',\n  remaining_amount: '0.1',\n  executed_amount: '0.0',\n  src: 'api',\n  meta: null,\n  order_id: 1231813572\n}"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nconst data = {\n  order_id: 448411365,\n  symbol: 'USDBTC',\n  amount: '10',\n  price: '100',\n  exchange: 'bitfinex',\n  side: 'buy',\n  type: 'market'\n}\n\nvar payload = {\n  request: '/v1/order/cancel/replace',\n  nonce: Date.now().toString(),\n  order_id: data.id,\n  symbol: data.symbol,\n  amount: data.amount,\n  price: data.price,\n  exchange: data.exchange,\n  side: data.side,\n  type: data.type\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.cancel_all_orders(data.id, data.symbol, data.amount, data.exchange, data.side, data.type, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.replace_order(100,\"usdbtc\", 10, \"market\", \"buy\", 0)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/order/status": {
            "post": {
              "summary": "Order Status",
              "description": "Get the status of an order. Is it active? Was it cancelled? To what extent has it been executed? etc.",
              "operationId": "rest-auth-order-status",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "order_id"
                      ],
                      "properties": {
                        "order_id": {
                          "type": "integer",
                          "description": "The order ID given by `/order/new`.",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  id: 1231813572,\n  cid: 43529705395,\n  cid_date: '2021-05-18',\n  gid: null,\n  symbol: 'ethusd',\n  exchange: 'bitfinex',\n  price: '400.0',\n  avg_execution_price: '0.0',\n  side: 'buy',\n  type: 'limit',\n  timestamp: '1621339530.0',\n  is_live: true,\n  is_cancelled: false,\n  is_hidden: false,\n  oco_order: null,\n  was_forced: false,\n  original_amount: '0.1',\n  remaining_amount: '0.1',\n  executed_amount: '0.0',\n  src: 'api',\n  meta: null\n}"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/order/status',\n   nonce: Date.now().toString(),\n\t order_id: 1231813572\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\nbfxRest.order_status(448411153, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})"
                  },
                  {
                    "language": "javascript",
                    "code": "response = client.order_status(448411153)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/orders": {
            "post": {
              "summary": "Active Orders",
              "description": "View your active orders.",
              "operationId": "rest-auth-active-orders",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[\n  {\n    id: 1231799033,\n    cid: 1621339435570,\n    cid_date: '2021-05-18',\n    gid: null,\n    symbol: 'btcusd',\n    exchange: 'bitfinex',\n    price: '100.0',\n    avg_execution_price: '0.0',\n    side: 'buy',\n    type: 'limit',\n    timestamp: '1621339436.0',\n    is_live: true,\n    is_cancelled: false,\n    is_hidden: false,\n    oco_order: null,\n    was_forced: false,\n    original_amount: '0.01',\n    remaining_amount: '0.01',\n    executed_amount: '0.0',\n    src: 'web',\n    meta: null\n  },\n  {\n\t...\n  }\n  ...\n]"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/orders',\n   nonce: Date.now().toString(),\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.active_orders((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "javascript",
                    "code": "response = client.orders",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/orders/hist": {
            "post": {
              "summary": "Orders History",
              "description": "View your latest inactive orders.\nLimited to last 3 days and 1 request per minute.",
              "operationId": "rest-auth-orders-history",
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "description": "Limit number of results",
                  "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 100
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[\n  {\n    id: 1231799032,\n    cid: 1621339435355,\n    cid_date: null,\n    gid: null,\n    symbol: 'btcusd',\n    exchange: null,\n    price: '100.0',\n    avg_execution_price: '0.0',\n    side: 'buy',\n    type: 'limit',\n    timestamp: '1621339435.0',\n    is_live: false,\n    is_cancelled: true,\n    is_hidden: 0,\n    oco_order: 0,\n    was_forced: false,\n    original_amount: '0.01',\n    remaining_amount: '0.01',\n    executed_amount: '0.0',\n    src: 'web'\n  },\n  ...\n]\n"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/orders/hist',\n   nonce: Date.now().toString(),\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.orders_history((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/positions": {
            "post": {
              "summary": "Active Positions",
              "description": "View your active positions.",
              "operationId": "rest-auth-active-positions",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"id\":943715,\n  \"symbol\":\"btcusd\",\n  \"status\":\"ACTIVE\",\n  \"base\":\"246.94\",\n  \"amount\":\"1.0\",\n  \"timestamp\":\"1444141857.0\",\n  \"swap\":\"0.0\",\n  \"pl\":\"-2.22042\"\n},\n...\n]"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/positions',\n   nonce: Date.now().toString(),\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.active_positions((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.positions",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/position/claim": {
            "post": {
              "summary": "Claim Position",
              "description": "A position can be claimed if:\n\nIt is a long position: The amount in the last unit of the position pair that you have in your trading wallet AND/OR the realized profit of the position is greater or equal to the purchase amount of the position (base price * position amount) and the funds which need to be returned. For example, for a long BTCUSD position, you can claim the position if the amount of USD you have in the trading wallet is greater than the base price * the position amount and the funds used.\n\nIt is a short position: The amount in the first unit of the position pair that you have in your trading wallet is greater or equal to the amount of the position and the margin funding used.",
              "operationId": "rest-auth-claim-position",
              "parameters": [
                {
                  "name": "position_id",
                  "in": "query",
                  "description": "The position ID given by `/positions`.",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                {
                  "name": "amount",
                  "in": "query",
                  "description": "The partial amount you wish to claim.",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"id\":943715,\n  \"symbol\":\"btcusd\",\n  \"status\":\"ACTIVE\",\n  \"base\":\"246.94\",\n  \"amount\":\"1.0\",\n  \"timestamp\":\"1444141857.0\",\n  \"swap\":\"0.0\",\n  \"pl\":\"-2.2304\"\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 943715,
                            "default": 0
                          },
                          "symbol": {
                            "type": "string",
                            "example": "btcusd"
                          },
                          "status": {
                            "type": "string",
                            "example": "ACTIVE"
                          },
                          "base": {
                            "type": "string",
                            "example": "246.94"
                          },
                          "amount": {
                            "type": "string",
                            "example": "1.0"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "1444141857.0"
                          },
                          "swap": {
                            "type": "string",
                            "example": "0.0"
                          },
                          "pl": {
                            "type": "string",
                            "example": "-2.2304"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/position/claim',\n   nonce: Date.now().toString(),\n   position_id: 943715,\n   amount: '1.0',\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.claim_position(943715, '1.0', (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "client.claim_position(100,10)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/position/close": {
            "post": {
              "summary": "Close Position",
              "description": "Closes the selected position with a market order.",
              "operationId": "close-position",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "position_id"
                      ],
                      "properties": {
                        "position_id": {
                          "type": "integer",
                          "description": "The position ID given by `/positions`.",
                          "default": 0,
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"message\": 'Submitting a market order to liquidate this position.',\n\t\"order\": {<Order Details>},\n  \"position\": {<Position Details>}\n}"
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/position/close',\n   nonce: Date.now().toString(),\n   position_id: 943715\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.close_position(943715, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "client.close_position(943715)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/history": {
            "post": {
              "summary": "Balance History",
              "description": "View all of your balance ledger entries.",
              "operationId": "rest-auth-balance-history",
              "parameters": [
                {
                  "name": "currency",
                  "in": "query",
                  "description": "The currency to look for. For an up-to-date listing of supported currencies see: https://api.bitfinex.com/v2/conf/pub:map:currency:label",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "since",
                  "in": "query",
                  "description": "Return only the history after this timestamp. (Max 3 months before until)",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                {
                  "name": "until",
                  "in": "query",
                  "description": "Return only the history before this timestamp. (Default now)",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "description": "Limit the number of entries to return.",
                  "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 500
                  }
                },
                {
                  "name": "wallet",
                  "in": "query",
                  "description": "Return only entries that took place in this wallet. Accepted inputs are: “trading”, “exchange”, “deposit”.",
                  "schema": {
                    "type": "string"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"currency\":\"USD\",\n  \"amount\":\"-246.94\",\n  \"balance\":\"515.4476526\",\n  \"description\":\"Position claimed @ 245.2 on wallet trading\",\n  \"timestamp\":\"1444277602.0\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string",
                              "example": "USD"
                            },
                            "amount": {
                              "type": "string",
                              "example": "-246.94"
                            },
                            "balance": {
                              "type": "string",
                              "example": "515.4476526"
                            },
                            "description": {
                              "type": "string",
                              "example": "Position claimed @ 245.2 on wallet trading"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1444277602.0"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/history',\n   nonce: Date.now().toString(),\n   currency: 'USD'\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.balance_history('USD', {} , (err, res) => {\n  if (err) console.log(err)\n  console.log(result)\n})\n\n// or to add options:\n\nbfxRest.balance_history('USD', {since: '1444277602.0'} , (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.history",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/history/movements": {
            "post": {
              "summary": "Deposit-Withdrawal History",
              "description": "View your past deposits/withdrawals.",
              "operationId": "rest-auth-deposit-withdrawal-history",
              "parameters": [
                {
                  "name": "currency",
                  "in": "query",
                  "description": "The currency to look for. For an up-to-date listing of supported currencies see: https://api.bitfinex.com/v2/conf/pub:map:currency:label",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "method",
                  "in": "query",
                  "description": "The method of the deposit/withdrawal (can be “bitcoin”, “litecoin”, “darkcoin”, “wire”).",
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "since",
                  "in": "query",
                  "description": "Return only the history after this timestamp.",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                {
                  "name": "until",
                  "in": "query",
                  "description": "Return only the history before this timestamp.",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                {
                  "name": "limit",
                  "in": "query",
                  "description": "Limit the number of entries to return.",
                  "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 500
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"id\":581183,\n  \"txid\": 123456,\n  \"currency\":\"BTC\",\n  \"method\":\"BITCOIN\",\n  \"type\":\"WITHDRAWAL\",\n  \"amount\":\".01\",\n  \"description\":\"3QXYWgRGX2BPYBpUDBssGbeWEa5zq6snBZ, offchain transfer \",\n  \"address\":\"3QXYWgRGX2BPYBpUDBssGbeWEa5zq6snBZ\",\n  \"status\":\"COMPLETED\",\n  \"timestamp\":\"1443833327.0\",\n  \"timestamp_created\": \"1443833327.1\",\n  \"fee\": 0.1\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 581183,
                              "default": 0
                            },
                            "txid": {
                              "type": "integer",
                              "example": 123456,
                              "default": 0
                            },
                            "currency": {
                              "type": "string",
                              "example": "BTC"
                            },
                            "method": {
                              "type": "string",
                              "example": "BITCOIN"
                            },
                            "type": {
                              "type": "string",
                              "example": "WITHDRAWAL"
                            },
                            "amount": {
                              "type": "string",
                              "example": ".01"
                            },
                            "description": {
                              "type": "string",
                              "example": "3QXYWgRGX2BPYBpUDBssGbeWEa5zq6snBZ, offchain transfer "
                            },
                            "address": {
                              "type": "string",
                              "example": "3QXYWgRGX2BPYBpUDBssGbeWEa5zq6snBZ"
                            },
                            "status": {
                              "type": "string",
                              "example": "COMPLETED"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1443833327.0"
                            },
                            "timestamp_created": {
                              "type": "string",
                              "example": "1443833327.1"
                            },
                            "fee": {
                              "type": "number",
                              "example": 0.1,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/history/movements',\n   nonce: Date.now().toString(),\n   currency: 'USD'\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.balance_history('USD', {} , (err, res) => {\n  if (err) console.log(err)\n  console.log(result)\n})\n\n// or to add options:\n\nbfxRest.balance_history('USD', {since: '1444277602.0'} , (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "text",
                    "code": "response = client.movements",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "text"
                ]
              }
            }
          },
          "/mytrades": {
            "post": {
              "summary": "Past Trades",
              "description": "View your past trades.",
              "operationId": "rest-auth-past-trades",
              "parameters": [
                {
                  "name": "symbol",
                  "in": "query",
                  "description": "The pair traded (BTCUSD, …).",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "timestamp",
                  "in": "query",
                  "description": "Trades made before this timestamp won’t be returned.",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                {
                  "name": "until",
                  "in": "query",
                  "description": "Trades made after this timestamp won’t be returned.",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                {
                  "name": "limit_trades",
                  "in": "query",
                  "description": "Limit the number of trades returned.",
                  "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 50
                  }
                },
                {
                  "name": "reverse",
                  "in": "query",
                  "description": "Return trades in reverse order (the oldest comes first). Default is returning newest trades first.",
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"price\":\"246.94\",\n  \"amount\":\"1.0\",\n  \"timestamp\":\"1444141857.0\",\n  \"exchange\":\"\",\n  \"type\":\"Buy\",\n  \"fee_currency\":\"USD\",\n  \"fee_amount\":\"-0.49388\",\n  \"tid\":11970839,\n  \"order_id\":446913929\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "string",
                              "example": "246.94"
                            },
                            "amount": {
                              "type": "string",
                              "example": "1.0"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1444141857.0"
                            },
                            "exchange": {
                              "type": "string",
                              "example": ""
                            },
                            "type": {
                              "type": "string",
                              "example": "Buy"
                            },
                            "fee_currency": {
                              "type": "string",
                              "example": "USD"
                            },
                            "fee_amount": {
                              "type": "string",
                              "example": "-0.49388"
                            },
                            "tid": {
                              "type": "integer",
                              "example": 11970839,
                              "default": 0
                            },
                            "order_id": {
                              "type": "integer",
                              "example": 446913929,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/mytrades',\n   nonce: Date.now().toString(),\n   symbol: 'BTCUSD'\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.past_trades('USD', {} , (err, res) => {\n  if (err) console.log(err)\n  console.log(result)\n})\n\n// or to add options:\n\nbfxRest.past_trades('USD', {since: '1444241857.0'} , (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.mytrades",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/offer/new": {
            "post": {
              "summary": "New Offer",
              "description": "Submit a new Offer",
              "operationId": "rest-auth-new-offer",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "currency",
                        "amount",
                        "rate",
                        "period",
                        "direction"
                      ],
                      "properties": {
                        "currency": {
                          "type": "string",
                          "description": "The name of the currency."
                        },
                        "amount": {
                          "type": "number",
                          "description": "Order size: how much to lend or borrow.",
                          "format": "float"
                        },
                        "rate": {
                          "type": "number",
                          "description": "Rate to lend or borrow at. In percentage per 365 days. (Set to 0 for FRR).",
                          "format": "float"
                        },
                        "period": {
                          "type": "integer",
                          "description": "Number of days of the funding contract (in days)",
                          "format": "int32"
                        },
                        "direction": {
                          "type": "string",
                          "description": "Either “lend” or “loan”."
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"id\":13800585,\n  \"currency\":\"USD\",\n  \"rate\":\"20.0\",\n  \"period\":2,\n  \"direction\":\"lend\",\n  \"timestamp\":\"1444279698.21175971\",\n  \"is_live\":true,\n  \"is_cancelled\":false,\n  \"original_amount\":\"50.0\",\n  \"remaining_amount\":\"50.0\",\n  \"executed_amount\":\"0.0\",\n  \"offer_id\":13800585\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 13800585,
                            "default": 0
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "rate": {
                            "type": "string",
                            "example": "20.0"
                          },
                          "period": {
                            "type": "integer",
                            "example": 2,
                            "default": 0
                          },
                          "direction": {
                            "type": "string",
                            "example": "lend"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "1444279698.21175971"
                          },
                          "is_live": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "is_cancelled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "original_amount": {
                            "type": "string",
                            "example": "50.0"
                          },
                          "remaining_amount": {
                            "type": "string",
                            "example": "50.0"
                          },
                          "executed_amount": {
                            "type": "string",
                            "example": "0.0"
                          },
                          "offer_id": {
                            "type": "integer",
                            "example": 13800585,
                            "default": 0
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nconst data = {\n  currency: 'USD',\n  amount: '50.0',\n  rate: '20.0',\n  period: 2,\n  direction: 'lend'\n}\n\nvar payload = {\n   request: '/v1/offer/new',\n   nonce: Date.now().toString(),\n   currency: data.currency,\n   amount: data.amount,\n   rate: data.rate,\n   period: data.period,\n   direction: data.direction\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.new_offer(data.currency, data.amount, data.rate, data.period, data.direction, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "text",
                    "code": "response = client.new_offer(\"btc\", 10.0, 20, 365, \"lend\")",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "text"
                ]
              }
            }
          },
          "/offer/cancel": {
            "post": {
              "summary": "Cancel Offer",
              "description": "Cancel an offer.",
              "operationId": "rest-auth-cancel-offer",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "offer_id"
                      ],
                      "properties": {
                        "offer_id": {
                          "type": "integer",
                          "description": "The offer ID given by `/offer/new`.",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"id\":13800585,\n  \"currency\":\"USD\",\n  \"rate\":\"20.0\",\n  \"period\":2,\n  \"direction\":\"lend\",\n  \"timestamp\":\"1444279698.0\",\n  \"is_live\":true,\n  \"is_cancelled\":false,\n  \"original_amount\":\"50.0\",\n  \"remaining_amount\":\"50.0\",\n  \"executed_amount\":\"0.0\"\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 13800585,
                            "default": 0
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "rate": {
                            "type": "string",
                            "example": "20.0"
                          },
                          "period": {
                            "type": "integer",
                            "example": 2,
                            "default": 0
                          },
                          "direction": {
                            "type": "string",
                            "example": "lend"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "1444279698.0"
                          },
                          "is_live": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "is_cancelled": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "original_amount": {
                            "type": "string",
                            "example": "50.0"
                          },
                          "remaining_amount": {
                            "type": "string",
                            "example": "50.0"
                          },
                          "executed_amount": {
                            "type": "string",
                            "example": "0.0"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/offer/cancel,\n   nonce: Date.now().toString(),\n   offer_id: 13800585\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.cancel_offer(13800585 , (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.cancel_offer(1000)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/offer/status": {
            "post": {
              "summary": "Offer Status",
              "description": "Get the status of an offer. Is it active? Was it cancelled? To what extent has it been executed? etc.",
              "operationId": "rest-auth-offer-status",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "offer_id"
                      ],
                      "properties": {
                        "offer_id": {
                          "type": "integer",
                          "description": "The offer ID given by `/offer/new`.",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"id\":13800585,\n  \"currency\":\"USD\",\n  \"rate\":\"20.0\",\n  \"period\":2,\n  \"direction\":\"lend\",\n  \"timestamp\":\"1444279698.0\",\n  \"is_live\":false,\n  \"is_cancelled\":true,\n  \"original_amount\":\"50.0\",\n  \"remaining_amount\":\"50.0\",\n  \"executed_amount\":\"0.0\"\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 13800585,
                            "default": 0
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "rate": {
                            "type": "string",
                            "example": "20.0"
                          },
                          "period": {
                            "type": "integer",
                            "example": 2,
                            "default": 0
                          },
                          "direction": {
                            "type": "string",
                            "example": "lend"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "1444279698.0"
                          },
                          "is_live": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          },
                          "is_cancelled": {
                            "type": "boolean",
                            "example": true,
                            "default": true
                          },
                          "original_amount": {
                            "type": "string",
                            "example": "50.0"
                          },
                          "remaining_amount": {
                            "type": "string",
                            "example": "50.0"
                          },
                          "executed_amount": {
                            "type": "string",
                            "example": "0.0"
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/offer/status,\n   nonce: Date.now().toString(),\n   offer_id: 13800585\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.offer_status(13800585, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.offer_status(1000)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/credits": {
            "post": {
              "summary": "Active Credits",
              "description": "View your funds currently taken (active credits).",
              "operationId": "rest-auth-active-credits",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"id\":13800719,\n  \"currency\":\"USD\",\n  \"rate\":\"31.39\",\n  \"period\":2,\n  \"direction\":\"lend\",\n  \"timestamp\":\"1444280237.0\",\n  \"is_live\":true,\n  \"is_cancelled\":false,\n  \"original_amount\":\"50.0\",\n  \"remaining_amount\":\"50.0\",\n  \"executed_amount\":\"0.0\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 13800719,
                              "default": 0
                            },
                            "currency": {
                              "type": "string",
                              "example": "USD"
                            },
                            "rate": {
                              "type": "string",
                              "example": "31.39"
                            },
                            "period": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "direction": {
                              "type": "string",
                              "example": "lend"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1444280237.0"
                            },
                            "is_live": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "is_cancelled": {
                              "type": "boolean",
                              "example": false,
                              "default": true
                            },
                            "original_amount": {
                              "type": "string",
                              "example": "50.0"
                            },
                            "remaining_amount": {
                              "type": "string",
                              "example": "50.0"
                            },
                            "executed_amount": {
                              "type": "string",
                              "example": "0.0"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/credits,\n   nonce: Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.active_credits((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "text",
                    "code": "response = client.credits",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "text"
                ]
              }
            }
          },
          "/offers": {
            "post": {
              "summary": "Offers",
              "description": "View your active offers.",
              "operationId": "rest-auth-offers",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"id\":13800719,\n  \"currency\":\"USD\",\n  \"rate\":\"31.39\",\n  \"period\":2,\n  \"direction\":\"lend\",\n  \"timestamp\":\"1444280237.0\",\n  \"is_live\":true,\n  \"is_cancelled\":false,\n  \"original_amount\":\"50.0\",\n  \"remaining_amount\":\"50.0\",\n  \"executed_amount\":\"0.0\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 13800719,
                              "default": 0
                            },
                            "currency": {
                              "type": "string",
                              "example": "USD"
                            },
                            "rate": {
                              "type": "string",
                              "example": "31.39"
                            },
                            "period": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "direction": {
                              "type": "string",
                              "example": "lend"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1444280237.0"
                            },
                            "is_live": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "is_cancelled": {
                              "type": "boolean",
                              "example": false,
                              "default": true
                            },
                            "original_amount": {
                              "type": "string",
                              "example": "50.0"
                            },
                            "remaining_amount": {
                              "type": "string",
                              "example": "50.0"
                            },
                            "executed_amount": {
                              "type": "string",
                              "example": "0.0"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/offers,\n   nonce: Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.active_offers((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.offers",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/offers/hist": {
            "post": {
              "summary": "Offers History",
              "description": "View your latest inactive offers.\nLimited to last 3 days and 1 request per minute.",
              "operationId": "rest-auth-offers-hist",
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "description": "Limit number of results",
                  "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 100
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"id\":13800719,\n  \"currency\":\"USD\",\n  \"rate\":\"31.39\",\n  \"period\":2,\n  \"direction\":\"lend\",\n  \"timestamp\":\"1444280237.0\",\n  \"is_live\":false,\n  \"is_cancelled\":true,\n  \"original_amount\":\"50.0\",\n  \"remaining_amount\":\"50.0\",\n  \"executed_amount\":\"0.0\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 13800719,
                              "default": 0
                            },
                            "currency": {
                              "type": "string",
                              "example": "USD"
                            },
                            "rate": {
                              "type": "string",
                              "example": "31.39"
                            },
                            "period": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "direction": {
                              "type": "string",
                              "example": "lend"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1444280237.0"
                            },
                            "is_live": {
                              "type": "boolean",
                              "example": false,
                              "default": true
                            },
                            "is_cancelled": {
                              "type": "boolean",
                              "example": true,
                              "default": true
                            },
                            "original_amount": {
                              "type": "string",
                              "example": "50.0"
                            },
                            "remaining_amount": {
                              "type": "string",
                              "example": "50.0"
                            },
                            "executed_amount": {
                              "type": "string",
                              "example": "0.0"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/offer/hist,\n   nonce: Date.now().toString(),\n}\n\n// Not available via bitfinex-api-node",
                    "name": "JavaScript"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/mytrades_funding": {
            "post": {
              "summary": "Past Funding Trades",
              "description": "View your past trades.",
              "operationId": "rest-auth-mytrades-funding",
              "parameters": [
                {
                  "name": "symbol",
                  "in": "query",
                  "description": "The pair traded (USD, …).",
                  "required": true,
                  "schema": {
                    "type": "string"
                  }
                },
                {
                  "name": "until",
                  "in": "query",
                  "description": "Trades made after this timestamp won’t be returned.",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                {
                  "name": "limit_trades",
                  "in": "query",
                  "description": "Limit the number of trades returned.",
                  "schema": {
                    "type": "integer",
                    "format": "int32",
                    "default": 50
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"rate\":\"0.01\",\n  \"period\":30,\n  \"amount\":\"1.0\",\n  \"timestamp\":\"1444141857.0\",\n  \"type\":\"Buy\",\n  \"tid\":11970839,\n  \"offer_id\":446913929\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rate": {
                              "type": "string",
                              "example": "0.01"
                            },
                            "period": {
                              "type": "integer",
                              "example": 30,
                              "default": 0
                            },
                            "amount": {
                              "type": "string",
                              "example": "1.0"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1444141857.0"
                            },
                            "type": {
                              "type": "string",
                              "example": "Buy"
                            },
                            "tid": {
                              "type": "integer",
                              "example": 11970839,
                              "default": 0
                            },
                            "offer_id": {
                              "type": "integer",
                              "example": 446913929,
                              "default": 0
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/mytrades_funding,\n   nonce: Date.now().toString(),\n   symbol: 'BTCUSD'\n}\n\n// Not available via bitfinex-api-node",
                    "name": "JavaScript"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/taken_funds": {
            "post": {
              "summary": "Active Funding Used in a margin position",
              "description": "",
              "operationId": "rest-auth-active-funding-used-in-a-margin-position",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"id\":11576737,\n  \"position_id\":944309,\n  \"currency\":\"USD\",\n  \"rate\":\"9.8874\",\n  \"period\":2,\n  \"amount\":\"34.24603414\",\n  \"timestamp\":\"1444280948.0\",\n  \"auto_close\":false\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 11576737,
                              "default": 0
                            },
                            "position_id": {
                              "type": "integer",
                              "example": 944309,
                              "default": 0
                            },
                            "currency": {
                              "type": "string",
                              "example": "USD"
                            },
                            "rate": {
                              "type": "string",
                              "example": "9.8874"
                            },
                            "period": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "amount": {
                              "type": "string",
                              "example": "34.24603414"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1444280948.0"
                            },
                            "auto_close": {
                              "type": "boolean",
                              "example": false,
                              "default": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/taken_funds,\n   nonce: Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.taken_swaps((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "javascript",
                    "code": "response = client.taken_funds",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          },
          "/unused_taken_funds": {
            "post": {
              "summary": "Active Funding Not Used in a margin position",
              "description": "View your funding currently borrowed and not used (available for a new margin position).",
              "operationId": "rest-auth-active-funding-not-used-in-a-margin-position",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"id\":11576737,\n  \"position_id\":944309,\n  \"currency\":\"USD\",\n  \"rate\":\"9.8874\",\n  \"period\":2,\n  \"amount\":\"34.24603414\",\n  \"timestamp\":\"1444280948.0\",\n  \"auto_close\":false\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 11576737,
                              "default": 0
                            },
                            "position_id": {
                              "type": "integer",
                              "example": 944309,
                              "default": 0
                            },
                            "currency": {
                              "type": "string",
                              "example": "USD"
                            },
                            "rate": {
                              "type": "string",
                              "example": "9.8874"
                            },
                            "period": {
                              "type": "integer",
                              "example": 2,
                              "default": 0
                            },
                            "amount": {
                              "type": "string",
                              "example": "34.24603414"
                            },
                            "timestamp": {
                              "type": "string",
                              "example": "1444280948.0"
                            },
                            "auto_close": {
                              "type": "boolean",
                              "example": false,
                              "default": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/unused_taken_funds,\n   nonce: Date.now().toString()\n}\n\n// Not available via bitfinex-api-node",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.unused_taken_funds",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/total_taken_funds": {
            "post": {
              "summary": "Total Taken Funds",
              "description": "View the total of your active funding used in your position(s).",
              "operationId": "rest-auth-total-taken-funds",
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\n  \"position_pair\":\"BTCUSD\",\n  \"total_swaps\":\"34.24603414\"\n}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "position_pair": {
                              "type": "string",
                              "example": "BTCUSD"
                            },
                            "total_swaps": {
                              "type": "string",
                              "example": "34.24603414"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/total_taken_funds,\n   nonce: Date.now().toString()\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.total_taken_swaps((err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.total_taken_funds",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/funding/close": {
            "post": {
              "summary": "Close Margin Funding",
              "description": "Allow you to close an unused or used taken fund",
              "operationId": "rest-auth-close-margin-funding",
              "parameters": [
                {
                  "name": "swap_id",
                  "in": "query",
                  "description": "The ID given by '/taken_funds' or '/unused_taken_funds'",
                  "required": true,
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{\n  \"id\":11576737,\n  \"position_id\":944309,\n  \"currency\":\"USD\",\n  \"rate\":\"9.8874\",\n  \"period\":2,\n  \"amount\":\"34.24603414\",\n  \"timestamp\":\"1444280948.0\",\n  \"auto_close\":false\n}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 11576737,
                            "default": 0
                          },
                          "position_id": {
                            "type": "integer",
                            "example": 944309,
                            "default": 0
                          },
                          "currency": {
                            "type": "string",
                            "example": "USD"
                          },
                          "rate": {
                            "type": "string",
                            "example": "9.8874"
                          },
                          "period": {
                            "type": "integer",
                            "example": 2,
                            "default": 0
                          },
                          "amount": {
                            "type": "string",
                            "example": "34.24603414"
                          },
                          "timestamp": {
                            "type": "string",
                            "example": "1444280948.0"
                          },
                          "auto_close": {
                            "type": "boolean",
                            "example": false,
                            "default": true
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/funding/close,\n   nonce: Date.now().toString(),\n   swap_id: 11576737\n}\n\n// or use bitfinex-api-node\n\nconst BFX = require('bitfinex-api-node')\nconst bfxRest = new BFX(apiKey, apiSecretKey, {version: 1}).rest\n\nbfxRest.close_swap(11576737, (err, res) => {\n  if (err) console.log(err)\n  console.log(res)\n})",
                    "name": "JavaScript"
                  },
                  {
                    "language": "ruby",
                    "code": "response = client.close_funding(1000)",
                    "name": "Ruby"
                  }
                ],
                "samples-languages": [
                  "javascript",
                  "ruby"
                ]
              }
            }
          },
          "/basket_manage": {
            "post": {
              "summary": "Basket Manage",
              "description": "This endpoint is used to manage the creation or destruction of tokens via splitting or merging. For the moment, this is only useful for the bcc and bcu tokens.",
              "operationId": "basket-manage",
              "requestBody": {
                "content": {
                  "application/x-www-form-urlencoded": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string",
                          "description": "The amount you wish to split or merge",
                          "default": "1"
                        },
                        "dir": {
                          "type": "integer",
                          "description": "1 to split, -1 to merge",
                          "default": 1,
                          "format": "int32"
                        },
                        "name": {
                          "type": "string",
                          "description": "the symbol of the token pair you wish to create or destroy",
                          "default": "btc_btu"
                        }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "200",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "[{\"error\":false,\"message\":\"Basket btc_btu success\"}]"
                        }
                      },
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "error": {
                              "type": "boolean",
                              "example": false,
                              "default": true
                            },
                            "message": {
                              "type": "string",
                              "example": "Basket btc_btu success"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "400": {
                  "description": "400",
                  "content": {
                    "application/json": {
                      "examples": {
                        "Result": {
                          "value": "{}"
                        }
                      },
                      "schema": {
                        "type": "object",
                        "properties": {}
                      }
                    }
                  }
                }
              },
              "deprecated": false,
              "x-readme": {
                "code-samples": [
                  {
                    "language": "javascript",
                    "code": "// view how to authenticate here:\n// https://docs.bitfinex.com/v1/docs/rest-auth\n\nvar payload = {\n   request: '/v1/basket_manage,\n   nonce: Date.now().toString(),\n   amount: '1.0',\n   dir: 1,\n   name: 'btc_btu'\n}\n\n// or use bitfinex-api-node",
                    "name": "JavaScript"
                  }
                ],
                "samples-languages": [
                  "javascript"
                ]
              }
            }
          }
        },
        "x-readme": {
          "headers": [],
          "explorer-enabled": true,
          "proxy-enabled": true
        },
        "x-readme-fauxas": true
      },
      "stats": {
        "additional_properties": false,
        "callbacks": false,
        "circular_references": false,
        "common_parameters": false,
        "discriminators": false,
        "links": false,
        "polymorphism": false,
        "references": false,
        "server_variables": false,
        "style": false,
        "webhooks": false,
        "xml_requests": false,
        "xml_responses": false,
        "xml_schemas": false
      },
      "source": "apidesigner",
      "uri": "/branches/1/apis/api-settings.json"
    },
    "connections": {
      "recipes": []
    },
    "href": {
      "dash": "https://dash.readme.com/project/bitfinex/v1/refs/rest-auth-margin-information",
      "hub": "https://docs.bitfinex.com/reference/rest-auth-margin-information"
    },
    "links": {
      "project": "/projects/me"
    },
    "project": {
      "name": "Bitfinex",
      "subdomain": "bitfinex",
      "uri": "/projects/me"
    },
    "renderable": {
      "status": true
    },
    "updated_at": "2025-06-10T21:56:15.675Z",
    "uri": "/branches/1/reference/rest-auth-margin-information"
  },
  "meta": {
    "baseUrl": "/v1",
    "description": "See your trading wallet information for margin trading.",
    "hidden": false,
    "image": [],
    "metaTitle": "Margin Information",
    "robots": "noindex",
    "slug": "rest-auth-margin-information",
    "title": "Margin Information",
    "type": "reference"
  },
  "oauth": false,
  "rdmd": {
    "baseUrl": "/v1",
    "body": "**Response Details**\n\n| Key                  | Type       | Description                                                                                                                  |\n| -------------------- | ---------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| margin\\_balance      | \\[decimal] | The USD value of all your trading assets (based on last prices)                                                              |\n| unrealized\\_pl       | \\[decimal] | The unrealized profit/loss of all your open positions                                                                        |\n| unrealized\\_swap     | \\[decimal] | The margin funding used by all your open positions                                                                           |\n| net\\_value           | \\[decimal] | Your net value (the USD value of your trading wallet, including your margin balance, your unrealized P/L and margin funding) |\n| required\\_margin     | \\[decimal] | The minimum net value to maintain in your trading wallet, under which all of your positions are fully liquidated             |\n| margin\\_limits       | \\[array]   | The list of margin limits for each pair. The array gives you the following information, for each pair                        |\n| on\\_pair             | \\[string]  | The pair for which these limits are valid                                                                                    |\n| initial\\_margin      | \\[decimal] | The minimum margin (in %) to maintain to open or increase a position                                                         |\n| tradable\\_balance    | \\[decimal] | Your tradable balance in USD (the maximum size you can open on leverage for this pair)                                       |\n| margin\\_requirements | \\[decimal] | The maintenance margin (% of the USD value of all of your open positions in the current pair to maintain)                    |\n\n> 📘 Limited to Margin Trading\n>\n> The v1/margin\\_infos endpoint is limited to margin trading and does not provide information related to derivatives trading.\n\n**Ratelimit**: 30 req/min",
    "dehydrated": {
      "toc": "",
      "body": "<style>/*! tailwindcss v4.1.6 | MIT License | https://tailwindcss.com */\n@layer theme, base, components, utilities;\n@layer utilities;\n</style><p><strong>Response Details</strong></p>\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Key</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>margin_balance</td><td>[decimal]</td><td>The USD value of all your trading assets (based on last prices)</td></tr><tr><td>unrealized_pl</td><td>[decimal]</td><td>The unrealized profit/loss of all your open positions</td></tr><tr><td>unrealized_swap</td><td>[decimal]</td><td>The margin funding used by all your open positions</td></tr><tr><td>net_value</td><td>[decimal]</td><td>Your net value (the USD value of your trading wallet, including your margin balance, your unrealized P/L and margin funding)</td></tr><tr><td>required_margin</td><td>[decimal]</td><td>The minimum net value to maintain in your trading wallet, under which all of your positions are fully liquidated</td></tr><tr><td>margin_limits</td><td>[array]</td><td>The list of margin limits for each pair. The array gives you the following information, for each pair</td></tr><tr><td>on_pair</td><td>[string]</td><td>The pair for which these limits are valid</td></tr><tr><td>initial_margin</td><td>[decimal]</td><td>The minimum margin (in %) to maintain to open or increase a position</td></tr><tr><td>tradable_balance</td><td>[decimal]</td><td>Your tradable balance in USD (the maximum size you can open on leverage for this pair)</td></tr><tr><td>margin_requirements</td><td>[decimal]</td><td>The maintenance margin (% of the USD value of all of your open positions in the current pair to maintain)</td></tr></tbody></table></div></div>\n<blockquote class=\"callout callout_info\" theme=\"📘\"><span class=\"callout-icon\">📘</span><h3 class=\"heading heading-3 header-scroll\"><div class=\"heading-anchor anchor waypoint\" id=\"limited-to-margin-trading\"></div><div class=\"heading-text\">Limited to Margin Trading</div><a aria-label=\"Skip link to Limited to Margin Trading\" class=\"heading-anchor-icon fa fa-regular fa-anchor\" href=\"#limited-to-margin-trading\"></a></h3><p>The v1/margin_infos endpoint is limited to margin trading and does not provide information related to derivatives trading.</p></blockquote>\n<p><strong>Ratelimit</strong>: 30 req/min</p>",
      "css": "/*! tailwindcss v4.1.6 | MIT License | https://tailwindcss.com */\n@layer theme, base, components, utilities;\n@layer utilities;\n"
    },
    "mdx": true,
    "opts": {
      "alwaysThrow": false,
      "compatibilityMode": false,
      "copyButtons": true,
      "correctnewlines": false,
      "markdownOptions": {
        "fences": true,
        "commonmark": true,
        "gfm": true,
        "ruleSpaces": false,
        "listItemIndent": "1",
        "spacedTable": true,
        "paddedTable": true
      },
      "lazyImages": true,
      "normalize": true,
      "safeMode": false,
      "settings": {
        "position": false
      },
      "theme": "light",
      "customBlocks": {},
      "resourceID": "/branches/1/reference/rest-auth-margin-information",
      "resourceType": "page",
      "components": {},
      "baseUrl": "/v1",
      "terms": [],
      "variables": {
        "user": {},
        "defaults": [
          {
            "source": "security",
            "_id": "64126772e3ef43001e861546",
            "name": "bfx-nonce",
            "type": "apiKey",
            "apiSetting": "5dcb57646c82c4005201a44f"
          },
          {
            "source": "security",
            "_id": "64126772e3ef43001e861545",
            "name": "bfx-apikey",
            "type": "apiKey",
            "apiSetting": "5dcb57646c82c4005201a44f"
          },
          {
            "source": "security",
            "_id": "64126772e3ef43001e861544",
            "name": "bfx-signature",
            "type": "apiKey",
            "apiSetting": "5dcb57646c82c4005201a44f"
          }
        ]
      }
    },
    "terms": [],
    "variables": {
      "user": {},
      "defaults": [
        {
          "source": "security",
          "_id": "64126772e3ef43001e861546",
          "name": "bfx-nonce",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        },
        {
          "source": "security",
          "_id": "64126772e3ef43001e861545",
          "name": "bfx-apikey",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        },
        {
          "source": "security",
          "_id": "64126772e3ef43001e861544",
          "name": "bfx-signature",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        }
      ]
    }
  },
  "sidebar": [
    {
      "pages": [
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-public-ticker",
          "title": "Ticker",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "get",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-public-ticker",
          "category": "/branches/1/categories/reference/REST Public Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-public-stats",
          "title": "Stats",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "get",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-public-stats",
          "category": "/branches/1/categories/reference/REST Public Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-public-fundingbook",
          "title": "Fundingbook",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "get",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-public-fundingbook",
          "category": "/branches/1/categories/reference/REST Public Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-public-orderbook",
          "title": "Orderbook",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "get",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-public-orderbook",
          "category": "/branches/1/categories/reference/REST Public Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-public-trades",
          "title": "Trades",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "get",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-public-trades",
          "category": "/branches/1/categories/reference/REST Public Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-public-lends",
          "title": "Lends",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "get",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-public-lends",
          "category": "/branches/1/categories/reference/REST Public Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-public-symbols",
          "title": "Symbols",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "get",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-public-symbols",
          "category": "/branches/1/categories/reference/REST Public Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-public-symbol-details",
          "title": "Symbol Details",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "get",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-public-symbol-details",
          "category": "/branches/1/categories/reference/REST Public Endpoints",
          "parent": null
        }
      ],
      "title": "REST Public Endpoints",
      "uri": "/branches/1/categories/reference/REST Public Endpoints"
    },
    {
      "pages": [
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-account-info",
          "title": "Account Info",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-account-info",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-fees",
          "title": "Account Fees",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-fees",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-summary",
          "title": "Summary",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-summary",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-deposit",
          "title": "Deposit",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-deposit",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "auth-key-permissions",
          "title": "Key Permissions",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/auth-key-permissions",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-margin-information",
          "title": "Margin Information",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-margin-information",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-wallet-balances",
          "title": "Wallet Balances",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-wallet-balances",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-transfer-between-wallets",
          "title": "Transfer Between Wallets",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-transfer-between-wallets",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-withdrawal",
          "title": "Withdrawal",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-withdrawal",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": true,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-orders",
          "title": "Orders",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-orders",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-new-order",
          "title": "New Order",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-new-order",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-multiple-new-orders",
          "title": "Multiple New Orders",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-multiple-new-orders",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-cancel-order",
          "title": "Cancel Order",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-cancel-order",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-cancel-multiple-orders",
          "title": "Cancel Multiple Orders",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-cancel-multiple-orders",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-cancel-all-orders",
          "title": "Cancel All Orders",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-cancel-all-orders",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-replace-order",
          "title": "Replace Order",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-replace-order",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-order-status",
          "title": "Order Status",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-order-status",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-active-orders",
          "title": "Active Orders",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-active-orders",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-orders-history",
          "title": "Orders History",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-orders-history",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": true,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-positions",
          "title": "Positions",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-positions",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-active-positions",
          "title": "Active Positions",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-active-positions",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-claim-position",
          "title": "Claim Position",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-claim-position",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "close-position",
          "title": "Close Position",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/close-position",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": true,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-historical-data",
          "title": "Historical Data",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-historical-data",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-balance-history",
          "title": "Balance History",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-balance-history",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-deposit-withdrawal-history",
          "title": "Deposit-Withdrawal History",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-deposit-withdrawal-history",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-past-trades",
          "title": "Past Trades",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-past-trades",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": true,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-margin-funding",
          "title": "Margin Funding",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-margin-funding",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-new-offer",
          "title": "New Offer",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-new-offer",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-cancel-offer",
          "title": "Cancel Offer",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-cancel-offer",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-offer-status",
          "title": "Offer Status",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-offer-status",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-active-credits",
          "title": "Active Credits",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-active-credits",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-offers",
          "title": "Offers",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-offers",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-offers-hist",
          "title": "Offers History",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-offers-hist",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-mytrades-funding",
          "title": "Past Funding Trades",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-mytrades-funding",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-active-funding-used-in-a-margin-position",
          "title": "Active Funding Used in a margin position",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-active-funding-used-in-a-margin-position",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-active-funding-not-used-in-a-margin-position",
          "title": "Active Funding Not Used in a margin position",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-active-funding-not-used-in-a-margin-position",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-total-taken-funds",
          "title": "Total Taken Funds",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-total-taken-funds",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "rest-auth-close-margin-funding",
          "title": "Close Margin Funding",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/rest-auth-close-margin-funding",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "basket-manage",
          "title": "Basket Manage",
          "type": "endpoint",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "api_method": "post",
          "api_webhook": false,
          "pages": [],
          "uri": "/branches/1/reference/basket-manage",
          "category": "/branches/1/categories/reference/REST Authenticated Endpoints",
          "parent": null
        }
      ],
      "title": "REST Authenticated Endpoints",
      "uri": "/branches/1/categories/reference/REST Authenticated Endpoints"
    },
    {
      "pages": [
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-public-order-books",
          "title": "Order Books",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-public-order-books",
          "category": "/branches/1/categories/reference/Websocket Public Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-public-raw-order-books",
          "title": "Raw Order Books",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-public-raw-order-books",
          "category": "/branches/1/categories/reference/Websocket Public Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-public-trades",
          "title": "Trades",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-public-trades",
          "category": "/branches/1/categories/reference/Websocket Public Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-public-ticker",
          "title": "Ticker",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-public-ticker",
          "category": "/branches/1/categories/reference/Websocket Public Channels",
          "parent": null
        }
      ],
      "title": "Websocket Public Channels",
      "uri": "/branches/1/categories/reference/Websocket Public Channels"
    },
    {
      "pages": [
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-auth-position-snapshot",
          "title": "Position Snapshot",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-auth-position-snapshot",
          "category": "/branches/1/categories/reference/Websocket Authenticated Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-auth-wallet-snapshot",
          "title": "Wallet Snapshot",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-auth-wallet-snapshot",
          "category": "/branches/1/categories/reference/Websocket Authenticated Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-auth-order-snapshots",
          "title": "Order Snapshots",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-auth-order-snapshots",
          "category": "/branches/1/categories/reference/Websocket Authenticated Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-auth-order-updates",
          "title": "Order Updates",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-auth-order-updates",
          "category": "/branches/1/categories/reference/Websocket Authenticated Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-auth-position-updates",
          "title": "Position Updates",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-auth-position-updates",
          "category": "/branches/1/categories/reference/Websocket Authenticated Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-auth-wallet-updates",
          "title": "Wallet Updates",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-auth-wallet-updates",
          "category": "/branches/1/categories/reference/Websocket Authenticated Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-auth-executed-trades",
          "title": "Executed Trades",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-auth-executed-trades",
          "category": "/branches/1/categories/reference/Websocket Authenticated Channels",
          "parent": null
        },
        {
          "deprecated": false,
          "hidden": false,
          "isBodyEmpty": false,
          "renderable": {
            "status": true
          },
          "slug": "ws-auth-unauthentication",
          "title": "Unauthentication",
          "type": "basic",
          "updatedAt": "2025-06-12T07:40:29.000Z",
          "pages": [],
          "uri": "/branches/1/reference/ws-auth-unauthentication",
          "category": "/branches/1/categories/reference/Websocket Authenticated Channels",
          "parent": null
        }
      ],
      "title": "Websocket Authenticated Channels",
      "uri": "/branches/1/categories/reference/Websocket Authenticated Channels"
    }
  ],
  "oasPublicUrl": "@bitfinex/v1#apcjrq2im5rahb2m",
  "branches": {
    "total": 0,
    "page": 1,
    "per_page": 100,
    "paging": {
      "next": null,
      "previous": null,
      "first": "/bitfinex/api-next/v2/branches?prefix=v1&page=1&per_page=100",
      "last": null
    },
    "data": [],
    "type": "branch"
  },
  "config": {
    "algoliaIndex": "readme_search_v2",
    "amplitude": {
      "apiKey": "dc8065a65ef83d6ad23e37aaf014fc84",
      "enabled": true
    },
    "asset_url": "https://cdn.readme.io",
    "domain": "readme.io",
    "domainFull": "https://dash.readme.com",
    "encryptedLocalStorageKey": "ekfls-2025-03-27",
    "fullstory": {
      "enabled": true,
      "orgId": "FSV9A"
    },
    "metrics": {
      "billingCronEnabled": "true",
      "dashUrl": "https://m.readme.io",
      "defaultUrl": "https://m.readme.io",
      "exportMaxRetries": 12,
      "wsUrl": "wss://m.readme.io"
    },
    "micro": {
      "baseUrl": "https://micro-beta.readme.com"
    },
    "proxyUrl": "https://try.readme.io",
    "readmeRecaptchaSiteKey": "6LesVBYpAAAAAESOCHOyo2kF9SZXPVb54Nwf3i2x",
    "releaseVersion": "5.434.0",
    "sentry": {
      "dsn": "https://3bbe57a973254129bcb93e47dc0cc46f@o343074.ingest.sentry.io/2052166",
      "enabled": true
    },
    "shMigration": {
      "promoVideo": "",
      "forceWaitlist": false,
      "migrationPreview": false
    },
    "sslBaseDomain": "readmessl.com",
    "sslGenerationService": "ssl.readmessl.com",
    "stripePk": "pk_live_5103PML2qXbDukVh7GDAkQoR4NSuLqy8idd5xtdm9407XdPR6o3bo663C1ruEGhXJjpnb2YCpj8EU1UvQYanuCjtr00t1DRCf2a",
    "superHub": {
      "newProjectsEnabled": true
    },
    "wootric": {
      "accountToken": "NPS-122b75a4",
      "enabled": true
    }
  },
  "context": {
    "labs": {},
    "user": {},
    "terms": [],
    "variables": {
      "user": {},
      "defaults": [
        {
          "source": "security",
          "_id": "64126772e3ef43001e861546",
          "name": "bfx-nonce",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        },
        {
          "source": "security",
          "_id": "64126772e3ef43001e861545",
          "name": "bfx-apikey",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        },
        {
          "source": "security",
          "_id": "64126772e3ef43001e861544",
          "name": "bfx-signature",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        }
      ]
    },
    "project": {
      "_id": "57da63765740030e00f2129b",
      "appearance": {
        "stylesheet": "",
        "link_logo_to_url": false,
        "html_body": "",
        "html_footer": "",
        "logo_white_use": false,
        "header": {
          "img_pos": "tl",
          "img_size": "auto",
          "img": [],
          "style": "solid",
          "linkStyle": "buttons"
        },
        "notheme": false,
        "showVersion": true,
        "typography": {
          "tk_body": "",
          "tk_headline": "",
          "tk_key": "",
          "typekit": false,
          "body": "Open+Sans:400:sans-serif",
          "headline": "Open+Sans:400:sans-serif"
        },
        "favicon": [
          "https://files.readme.io/9c1ed02-small-32x32_icon.png",
          "32x32 icon.png",
          32,
          32,
          "#03ca9b",
          "https://files.readme.io/30bbe4b-32x32_icon.png"
        ],
        "html_head": "<meta property=\"twitter:image\" content=\"https://files.readme.io/03be6ef-image8.png\"></meta>\n<meta property=\"og:image\" content=\"https://files.readme.io/6311d83-image4.png\"></meta>",
        "sticky": false,
        "hideTableOfContents": false,
        "html_footer_meta": "<div id=\"app\"> </div>",
        "javascript_hub2": "",
        "overlay": "triangles",
        "hide_logo": true,
        "javascript": "",
        "promos": [
          {
            "extras": {
              "type": "buttons",
              "buttonPrimary": "get-started",
              "buttonSecondary": "none"
            },
            "title": "Introduction",
            "text": "The Bitfinex API’s are designed to allow access to all of the features of the Bitfinex platform. The end goal is to allow people to potentially recreate the entire platform on their own.\n\nIf you would like to suggest changes to the documentation, please see the github at https://github.com/bitfinexcom/api_docs\n\n# Open Source Libraries\nThe following open source projects are works in progress. We will be continually improving them, but we want to release them early so that the community can take a look, make use of them, and offer pull requests. Nothing in the Bitcoin world exists in isolation.",
            "_id": "57da63765740030e00f2129c"
          }
        ],
        "stylesheet_hub2": "/* loader position */\n.hub-loading-indicator {\n\tmargin-top: 6rem;\n}\n\n\n/* search header */\n#hub-search-results {\n\tmargin-top: 11px;\n  -webkit-box-shadow: 0 3px 3px 1px rgba(0,0,0,0.3);\n  box-shadow: 0 3px 3px 1px rgba(0,0,0,0.3);\n}\n\n/* GET endpoint label */\n.APIMethod_get {\n  background: #03CA9B !important;\n  text-shadow: 1px 1px 0 #03CA9B, 0 1px 0 #03CA9B, 1px 0 0 #03CA9B  !important;\n}\n\n/* sidebar dropdown */\nli:has(ul.subpages) {\n  font-weight: var(--font-weight-bold);\n}\n\nli:has(ul.subpages) ul {\n  font-weight: 400;\n}\nli:has(ul.subpages) > a [data-testid=\"http-method\"] {\n  display: none;\n}\n\n/* link hower */\na:hover { \n  color: #01A781;\n}",
        "html_hidelinks": false,
        "html_promo": "",
        "landing": true,
        "logo": [
          "https://files.readme.io/1a88ce8-small-336x80_logo.png",
          "336x80_logo.png",
          336,
          80,
          "#13494f",
          "https://files.readme.io/3822f4f-336x80_logo.png"
        ],
        "logo_white": [
          "https://files.readme.io/9ac0c82-small-336x80_logo.png",
          "336x80_logo.png",
          336,
          80,
          "#13494f",
          "https://files.readme.io/88c187f-336x80_logo.png"
        ],
        "theme": "solid",
        "body": {
          "style": "none"
        },
        "main_body": {
          "type": "links"
        },
        "colors": {
          "header_text": "",
          "highlight": "",
          "main": "#ffffff",
          "main_alt": "",
          "body_highlight": "#03CA9B",
          "custom_login_link_color": ""
        },
        "categoriesAsDropdown": false,
        "global_landing_page": {
          "html": "",
          "redirect": ""
        },
        "nextStepsLabel": "",
        "referenceLayout": "row",
        "childrenAsPills": false,
        "splitReferenceDocs": false,
        "rdmd": {
          "callouts": {
            "useIconFont": false
          },
          "theme": {
            "background": "",
            "border": "",
            "markdownEdge": "",
            "markdownFont": "",
            "markdownFontSize": "",
            "markdownLineHeight": null,
            "markdownRadius": "",
            "markdownText": "",
            "markdownTitle": "",
            "markdownTitleFont": "",
            "mdCodeBackground": "",
            "mdCodeFont": "",
            "mdCodeRadius": "",
            "mdCodeTabs": "",
            "mdCodeText": "",
            "tableEdges": "",
            "tableHead": "",
            "tableHeadText": "",
            "tableRow": "",
            "tableStripe": "",
            "tableText": "",
            "text": "",
            "title": ""
          }
        },
        "subheaderStyle": "dropdown",
        "showMetricsInReference": false,
        "referenceSimpleMode": true,
        "stylesheet_hub3": "/* May no longer be needed? Commenting out 9/29/2022 TOMMY \nRedesign Updates - 2/23/2022 (ERDMAN) \n .useReactApp .rm-Header {\n     position:fixed;\n     width:100%;\n}\n .useReactApp .rm-Sidebar-section {\n     margin-top: 100px;\n}\n @media(max-width: 769px) {\n     .useReactApp .rm-Header{\n         position:relative;\n         width:100%;\n    }\n     .useReactApp header#content-head {\n        padding-top:0;\n    }\n}\n\n*/",
        "loginLogo": [],
        "logo_large": false,
        "colorScheme": "light",
        "changelog": {
          "layoutExpanded": false,
          "showAuthor": true,
          "showExactDate": false
        },
        "allowApiExplorerJsonEditor": false,
        "ai_dropdown": "disabled",
        "ai_options": {
          "chatgpt": "enabled",
          "claude": "enabled",
          "clipboard": "enabled",
          "copilot": "enabled",
          "view_as_markdown": "enabled"
        },
        "showPageIcons": true,
        "layout": {
          "full_width": false,
          "style": "classic"
        }
      },
      "custom_domain": "docs.bitfinex.com",
      "childrenProjects": [],
      "derivedPlan": "business",
      "description": "The Official Documentation for the Bitfinex API Reference.",
      "isExternalSnippetActive": false,
      "error404": "",
      "experiments": [],
      "first_page": "docs",
      "flags": {
        "correctnewlines": false,
        "hub2": true,
        "jwt": false,
        "migrationRun": false,
        "migrationSwaggerRun": true,
        "oauth": false,
        "speedyRender": false,
        "allowXFrame": false,
        "allow_hub2": false,
        "autoSslGeneration": true,
        "swagger": false,
        "cacheEnabled": true,
        "newApiExplorer": true,
        "apilogs": false,
        "cookieAuthentication": false,
        "directGoogleToStableVersion": false,
        "disableAnonForum": false,
        "enterprise": false,
        "hideGoogleAnalytics": false,
        "stripe": false,
        "translation": false,
        "alwaysShowDocPublishStatus": false,
        "newEditor": true,
        "newMarkdown": false,
        "newMarkdownBetaProgram": true,
        "oldMarkdown": false,
        "newSearch": true,
        "rdmdCompatibilityMode": false,
        "staging": false,
        "tutorials": true,
        "allowApiExplorerJsonEditor": false,
        "useReactApp": true,
        "newHeader": false,
        "referenceRedesign": false,
        "auth0Oauth": false,
        "graphql": false,
        "singleProjectEnterprise": false,
        "dashReact": false,
        "allowReferenceUpgrade": true,
        "metricsV2": true,
        "newEditorDash": true,
        "enableRealtimeExperiences": false,
        "reviewWorkflow": true,
        "star": false,
        "allowDarkMode": false,
        "forceDarkMode": false,
        "useReactGLP": false,
        "disablePasswordlessLogin": false,
        "personalizedDocs": false,
        "myDevelopers": false,
        "superHub": true,
        "developerDashboard": false,
        "allowReusableOTPs": false,
        "dashHomeRefresh": false,
        "owlbotAi": false,
        "apiV2": false,
        "git": {
          "read": false,
          "write": false
        },
        "superHubBeta": false,
        "dashQuickstart": false,
        "disableAutoTranslate": false,
        "customBlocks": false,
        "devDashHub": false,
        "disableSAMLScoping": false,
        "allowUnsafeCustomHtmlSuggestionsFromNonAdmins": false,
        "apiAccessRevoked": false,
        "passwordlessLogin": "default",
        "disableSignups": false,
        "billingRedesignEnabled": true,
        "developerPortal": false,
        "mdx": true,
        "superHubDevelopment": false,
        "annualBillingEnabled": true,
        "devDashBillingRedesignEnabled": false,
        "enableOidc": false,
        "customComponents": false,
        "disableDiscussionSpamRecaptchaBypass": false,
        "developerViewUsersData": false,
        "changelogRssAlwaysPublic": false,
        "bidiSync": true,
        "superHubMigrationSelfServeFlow": true,
        "apiDesigner": false,
        "hideEnforceSSO": false,
        "localLLM": false,
        "superHubManageVersions": false,
        "gitSidebar": false,
        "superHubGlobalCustomBlocks": false,
        "childManagedBidi": false,
        "superHubBranches": false,
        "externalSdkSnippets": false,
        "requiresJQuery": false,
        "migrationPreview": false,
        "superHubPreview": false,
        "superHubBranchReviews": false,
        "superHubMergePermissions": false,
        "aiDocsAudit": false,
        "aiPageLinting": false
      },
      "fullBaseUrl": "https://docs.bitfinex.com/",
      "git": {
        "migration": {
          "createRepository": {
            "start": "2025-06-10T21:55:25.497Z",
            "end": "2025-06-10T21:55:26.002Z",
            "status": "successful"
          },
          "transformation": {
            "end": "2025-06-10T21:55:26.897Z",
            "start": "2025-06-10T21:55:26.220Z",
            "status": "successful"
          },
          "migratingPages": {
            "end": "2025-06-10T21:55:27.935Z",
            "start": "2025-06-10T21:55:27.107Z",
            "status": "successful"
          },
          "enableSuperhub": {
            "start": "2025-06-10T22:06:35.737Z",
            "status": "successful",
            "end": "2025-06-10T22:06:35.738Z"
          }
        },
        "sync": {
          "linked_repository": {},
          "installationRequest": {},
          "connections": [],
          "providers": []
        }
      },
      "glossaryTerms": [],
      "graphqlSchema": "",
      "gracePeriod": {
        "enabled": false,
        "endsAt": null
      },
      "shouldGateDash": false,
      "healthCheck": {
        "provider": "",
        "settings": {}
      },
      "intercom_secure_emailonly": false,
      "intercom": "",
      "is_active": true,
      "integrations": {
        "login": {}
      },
      "internal": "",
      "jwtExpirationTime": 0,
      "landing_bottom": [
        {
          "type": "links"
        }
      ],
      "mdxMigrationStatus": "rdmd",
      "metrics": {
        "enabled": false,
        "thumbsEnabled": false,
        "monthlyLimit": 0,
        "planLimit": 1000000,
        "realtime": {
          "dashEnabled": false,
          "hubEnabled": false
        },
        "monthlyPurchaseLimit": 0,
        "meteredBilling": {}
      },
      "modules": {
        "landing": false,
        "reference": true,
        "suggested_edits": false,
        "discuss": false,
        "docs": true,
        "examples": true,
        "changelog": false,
        "logs": false,
        "custompages": false,
        "tutorials": true,
        "graphql": false
      },
      "name": "Bitfinex",
      "nav_names": {
        "discuss": "",
        "docs": "Overview",
        "reference": "Documentation",
        "changelog": "",
        "tutorials": "",
        "recipes": ""
      },
      "oauth_url": "",
      "onboardingCompleted": {
        "documentation": true,
        "appearance": true,
        "jwt": true,
        "api": true,
        "logs": true,
        "domain": true,
        "metricsSDK": false
      },
      "owlbot": {
        "enabled": false,
        "isPaying": false,
        "customization": {
          "answerLength": "long",
          "customTone": "",
          "defaultAnswer": "",
          "forbiddenWords": "",
          "tone": "neutral"
        },
        "copilot": {
          "enabled": false,
          "hasBeenUsed": false,
          "installedCustomPage": ""
        }
      },
      "owner": {
        "id": null,
        "email": null,
        "name": null
      },
      "plan": "business",
      "planOverride": "business",
      "planSchedule": {
        "stripeScheduleId": null,
        "changeDate": null,
        "nextPlan": null
      },
      "planStatus": "active",
      "planTrial": "business",
      "readmeScore": {
        "components": {
          "newDesign": {
            "enabled": true,
            "points": 25
          },
          "reference": {
            "enabled": true,
            "points": 50
          },
          "tryItNow": {
            "enabled": true,
            "points": 35
          },
          "syncingOAS": {
            "enabled": false,
            "points": 10
          },
          "customLogin": {
            "enabled": true,
            "points": 25
          },
          "metrics": {
            "enabled": false,
            "points": 40
          },
          "recipes": {
            "enabled": true,
            "points": 15
          },
          "pageVoting": {
            "enabled": false,
            "points": 1
          },
          "suggestedEdits": {
            "enabled": false,
            "points": 10
          },
          "support": {
            "enabled": false,
            "points": 5
          },
          "htmlLanding": {
            "enabled": false,
            "points": 5
          },
          "guides": {
            "enabled": true,
            "points": 10
          },
          "changelog": {
            "enabled": false,
            "points": 5
          },
          "glossary": {
            "enabled": false,
            "points": 1
          },
          "variables": {
            "enabled": true,
            "points": 1
          },
          "integrations": {
            "enabled": true,
            "points": 2
          }
        },
        "percentScore": 25,
        "totalScore": 163
      },
      "reCaptchaSiteKey": "",
      "reference": {
        "alwaysUseDefaults": true,
        "defaultExpandResponseExample": false,
        "defaultExpandResponseSchema": false,
        "enableOAuthFlows": false
      },
      "seo": {
        "overwrite_title_tag": false
      },
      "stable": {
        "_id": "5820a6b9775f3a1b00a460a1",
        "__v": 10,
        "createdAt": "2016-11-07T16:07:21.656Z",
        "is_hidden": false,
        "is_beta": false,
        "is_deprecated": false,
        "is_stable": true,
        "project": "57da63765740030e00f2129b",
        "releaseDate": "2016-11-07T16:07:21.656Z",
        "categories": [
          "5820a6b9775f3a1b00a460a2",
          "5820a6b9775f3a1b00a460a3",
          "5820a6b9775f3a1b00a460a4",
          "5820a6b9775f3a1b00a460a5",
          "5820a6b9775f3a1b00a460a6",
          "5820a6b9775f3a1b00a460a7",
          "5820a6b9775f3a1b00a460a8",
          "5820a6b9775f3a1b00a460a9",
          "5820a6b9775f3a1b00a460aa",
          "5820a6b9775f3a1b00a460ab",
          "5821b18b6d0cab1900d5f4ab",
          "585ab846a3f9182d00350803",
          "586a1e4315a1971900716bba",
          "5bd0ce22d280f2002a8f01c2",
          "5c505dbf936c420269f7f502",
          "5c505e2995b310000e9b10a6",
          "5dcb57646c82c4005201a450",
          "5de4f26e84e4d70049d4e880",
          "62a210ce1b53170028f5bd63",
          "62a329d6f4d108001485965f",
          "6335fda3f8dab2008b3eaef5",
          "6376b409081e400003bab905",
          "64126694707e70002da5a4c5",
          "641266fc7861d5005a6a8f3e"
        ],
        "codename": "",
        "version": "2",
        "version_clean": "2.0.0",
        "apiRegistries": [
          {
            "filename": "api-settings.json",
            "uuid": "1nhvzimao1wfx0"
          },
          {
            "filename": "api-settings-public.json",
            "uuid": "e19jolfwqbejx"
          },
          {
            "filename": "api-settings-auth.json",
            "uuid": "5aq11m3qa7fnu"
          },
          {
            "filename": "test-setting.json",
            "uuid": "9b41hl476b7ou"
          }
        ],
        "pdfStatus": "",
        "source": "readme",
        "updatedAt": "2025-06-10T21:55:24.960Z"
      },
      "subdomain": "bitfinex",
      "subpath": "",
      "superHubWaitlist": true,
      "topnav": {
        "edited": true,
        "left": [],
        "right": [],
        "bottom": []
      },
      "trial": {
        "trialEndsAt": "2016-09-29T09:01:42.511Z",
        "trialDeadlineEnabled": true
      },
      "translate": {
        "languages": [],
        "provider": "transifex",
        "key_public": "",
        "org_name": "",
        "project_name": "",
        "show_widget": false
      },
      "url": "https://www.bitfinex.com/",
      "versions": [
        {
          "_id": "57da63765740030e00f2129e",
          "project": "57da63765740030e00f2129b",
          "releaseDate": "2016-09-15T09:01:42.544Z",
          "version_clean": "1.0.0",
          "__v": 14,
          "createdAt": "2016-09-15T09:01:42.544Z",
          "is_beta": false,
          "is_deprecated": false,
          "is_hidden": false,
          "is_stable": false,
          "version": "1",
          "categories": [
            "57da63765740030e00f2129f",
            "57dac9b2b103490e006dd660",
            "57dac9b913ca3b0e0015b058",
            "57dacae82bb38f0e00ef41cb",
            "57e1b0c1a205a21900301679",
            "57e1b0c6a022d6380080badf",
            "57e1b43aa205a2190030167a",
            "57e3d0ed8e37b01700eb6caf",
            "57e92f58c698700e000ba884",
            "57ea81f8802e4a17009181a3",
            "57eaedca0392f60e001251f4",
            "57eaedcfc878550e00b3c460",
            "57f2be6c4d533b0e007231bb",
            "6376b409081e400003bab906"
          ],
          "codename": "",
          "apiRegistries": [
            {
              "filename": "api-settings.json",
              "uuid": "apcjrq2im5rahb2m"
            }
          ],
          "pdfStatus": "",
          "source": "readme",
          "updatedAt": "2025-06-10T21:55:24.962Z"
        },
        {
          "_id": "5820a6b9775f3a1b00a460a1",
          "__v": 10,
          "createdAt": "2016-11-07T16:07:21.656Z",
          "is_hidden": false,
          "is_beta": false,
          "is_deprecated": false,
          "is_stable": true,
          "project": "57da63765740030e00f2129b",
          "releaseDate": "2016-11-07T16:07:21.656Z",
          "categories": [
            "5820a6b9775f3a1b00a460a2",
            "5820a6b9775f3a1b00a460a3",
            "5820a6b9775f3a1b00a460a4",
            "5820a6b9775f3a1b00a460a5",
            "5820a6b9775f3a1b00a460a6",
            "5820a6b9775f3a1b00a460a7",
            "5820a6b9775f3a1b00a460a8",
            "5820a6b9775f3a1b00a460a9",
            "5820a6b9775f3a1b00a460aa",
            "5820a6b9775f3a1b00a460ab",
            "5821b18b6d0cab1900d5f4ab",
            "585ab846a3f9182d00350803",
            "586a1e4315a1971900716bba",
            "5bd0ce22d280f2002a8f01c2",
            "5c505dbf936c420269f7f502",
            "5c505e2995b310000e9b10a6",
            "5dcb57646c82c4005201a450",
            "5de4f26e84e4d70049d4e880",
            "62a210ce1b53170028f5bd63",
            "62a329d6f4d108001485965f",
            "6335fda3f8dab2008b3eaef5",
            "6376b409081e400003bab905",
            "64126694707e70002da5a4c5",
            "641266fc7861d5005a6a8f3e"
          ],
          "codename": "",
          "version": "2",
          "version_clean": "2.0.0",
          "apiRegistries": [
            {
              "filename": "api-settings.json",
              "uuid": "1nhvzimao1wfx0"
            },
            {
              "filename": "api-settings-public.json",
              "uuid": "e19jolfwqbejx"
            },
            {
              "filename": "api-settings-auth.json",
              "uuid": "5aq11m3qa7fnu"
            },
            {
              "filename": "test-setting.json",
              "uuid": "9b41hl476b7ou"
            }
          ],
          "pdfStatus": "",
          "source": "readme",
          "updatedAt": "2025-06-10T21:55:24.960Z"
        }
      ],
      "variableDefaults": [
        {
          "source": "security",
          "_id": "64126772e3ef43001e861546",
          "name": "bfx-nonce",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        },
        {
          "source": "security",
          "_id": "64126772e3ef43001e861545",
          "name": "bfx-apikey",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        },
        {
          "source": "security",
          "_id": "64126772e3ef43001e861544",
          "name": "bfx-signature",
          "type": "apiKey",
          "apiSetting": "5dcb57646c82c4005201a44f"
        }
      ],
      "webhookEnabled": false,
      "isHubEditable": true
    },
    "projectStore": {
      "data": {
        "allow_crawlers": "disabled",
        "canonical_url": null,
        "default_version": {
          "name": "2"
        },
        "description": "The Official Documentation for the Bitfinex API Reference.",
        "glossary": [],
        "homepage_url": "https://www.bitfinex.com/",
        "id": "57da63765740030e00f2129b",
        "name": "Bitfinex",
        "parent": null,
        "redirects": [],
        "sitemap": "disabled",
        "llms_txt": "disabled",
        "subdomain": "bitfinex",
        "suggested_edits": "disabled",
        "uri": "/projects/me",
        "variable_defaults": [
          {
            "name": "bfx-nonce",
            "source": "security",
            "type": "apiKey",
            "id": "64126772e3ef43001e861546"
          },
          {
            "name": "bfx-apikey",
            "source": "security",
            "type": "apiKey",
            "id": "64126772e3ef43001e861545"
          },
          {
            "name": "bfx-signature",
            "source": "security",
            "type": "apiKey",
            "id": "64126772e3ef43001e861544"
          }
        ],
        "webhooks": [],
        "api_designer": {
          "allow_editing": "enabled"
        },
        "custom_login": {
          "login_url": null,
          "logout_url": null
        },
        "features": {
          "mdx": "enabled"
        },
        "mcp": {},
        "onboarding_completed": {
          "api": true,
          "appearance": true,
          "documentation": true,
          "domain": true,
          "jwt": true,
          "logs": true,
          "metricsSDK": false
        },
        "pages": {
          "not_found": null
        },
        "privacy": {
          "openapi": "admin",
          "password": null,
          "view": "public"
        },
        "refactored": {
          "status": "enabled",
          "migrated": "successful"
        },
        "seo": {
          "overwrite_title_tag": "disabled"
        },
        "plan": {
          "type": "business",
          "grace_period": {
            "enabled": false,
            "end_date": null
          },
          "trial": {
            "expired": false,
            "end_date": "2016-09-29T09:01:42.511Z"
          }
        },
        "reference": {
          "api_sdk_snippets": "enabled",
          "defaults": "always_use",
          "json_editor": "disabled",
          "oauth_flows": "disabled",
          "request_history": "disabled",
          "response_examples": "collapsed",
          "response_schemas": "collapsed",
          "sdk_snippets": {
            "external": "disabled"
          }
        },
        "health_check": {
          "provider": "none",
          "settings": {
            "manual": {
              "status": "down",
              "url": null
            },
            "statuspage": {
              "id": null
            }
          }
        },
        "integrations": {
          "aws": {
            "readme_webhook_login": {
              "region": null,
              "external_id": null,
              "role_arn": null,
              "usage_plan_id": null
            }
          },
          "bing": {
            "verify": null
          },
          "google": {
            "analytics": null,
            "site_verification": null
          },
          "heap": {
            "id": null
          },
          "koala": {
            "key": null
          },
          "localize": {
            "key": null
          },
          "postman": {
            "key": null,
            "client_id": null,
            "client_secret": null
          },
          "recaptcha": {
            "site_key": null,
            "secret_key": null
          },
          "segment": {
            "key": null,
            "domain": null
          },
          "speakeasy": {
            "key": null,
            "spec_url": null
          },
          "stainless": {
            "key": null,
            "name": null
          },
          "typekit": {
            "key": null
          },
          "zendesk": {
            "subdomain": null
          },
          "intercom": {
            "app_id": null,
            "secure_mode": {
              "key": null,
              "email_only": false
            }
          }
        },
        "permissions": {
          "appearance": {
            "private_label": "enabled",
            "custom_code": {
              "css": "enabled",
              "html": "enabled",
              "js": "enabled"
            }
          },
          "branches": {
            "merge": {
              "admin": true
            }
          }
        },
        "appearance": {
          "brand": {
            "primary_color": "#ffffff",
            "link_color": "#03CA9B",
            "theme": "light"
          },
          "changelog": {
            "layout": "collapsed",
            "show_author": true,
            "show_exact_date": false
          },
          "layout": {
            "full_width": "disabled",
            "style": "classic"
          },
          "markdown": {
            "callouts": {
              "icon_font": "emojis"
            }
          },
          "table_of_contents": "enabled",
          "whats_next_label": null,
          "footer": {
            "readme_logo": "hide"
          },
          "logo": {
            "size": "default",
            "dark_mode": {
              "uri": null,
              "url": "https://files.readme.io/9ac0c82-small-336x80_logo.png",
              "name": "336x80_logo.png",
              "width": 336,
              "height": 80,
              "color": "#13494f",
              "links": {
                "original_url": "https://files.readme.io/88c187f-336x80_logo.png"
              }
            },
            "main": {
              "uri": null,
              "url": "https://files.readme.io/1a88ce8-small-336x80_logo.png",
              "name": "336x80_logo.png",
              "width": 336,
              "height": 80,
              "color": "#13494f",
              "links": {
                "original_url": "https://files.readme.io/3822f4f-336x80_logo.png"
              }
            },
            "favicon": {
              "uri": null,
              "url": "https://files.readme.io/9c1ed02-small-32x32_icon.png",
              "name": "32x32 icon.png",
              "width": 32,
              "height": 32,
              "color": "#03ca9b",
              "links": {
                "original_url": "https://files.readme.io/30bbe4b-32x32_icon.png"
              }
            }
          },
          "custom_code": {
            "css": "/* loader position */\n.hub-loading-indicator {\n\tmargin-top: 6rem;\n}\n\n\n/* search header */\n#hub-search-results {\n\tmargin-top: 11px;\n  -webkit-box-shadow: 0 3px 3px 1px rgba(0,0,0,0.3);\n  box-shadow: 0 3px 3px 1px rgba(0,0,0,0.3);\n}\n\n/* GET endpoint label */\n.APIMethod_get {\n  background: #03CA9B !important;\n  text-shadow: 1px 1px 0 #03CA9B, 0 1px 0 #03CA9B, 1px 0 0 #03CA9B  !important;\n}\n\n/* sidebar dropdown */\nli:has(ul.subpages) {\n  font-weight: var(--font-weight-bold);\n}\n\nli:has(ul.subpages) ul {\n  font-weight: 400;\n}\nli:has(ul.subpages) > a [data-testid=\"http-method\"] {\n  display: none;\n}\n\n/* link hower */\na:hover { \n  color: #01A781;\n}",
            "js": null,
            "html": {
              "header": "<meta property=\"twitter:image\" content=\"https://files.readme.io/03be6ef-image8.png\"></meta>\n<meta property=\"og:image\" content=\"https://files.readme.io/6311d83-image4.png\"></meta>",
              "home_footer": null,
              "page_footer": "<div id=\"app\"> </div>"
            }
          },
          "header": {
            "type": "solid",
            "gradient_color": null,
            "link_style": "buttons",
            "overlay": {
              "fill": "auto",
              "type": "triangles",
              "position": "top-left",
              "image": {
                "uri": null,
                "url": null,
                "name": null,
                "width": null,
                "height": null,
                "color": null,
                "links": {
                  "original_url": null
                }
              }
            }
          },
          "ai": {
            "dropdown": "disabled",
            "options": {
              "chatgpt": "enabled",
              "claude": "enabled",
              "clipboard": "enabled",
              "copilot": "enabled",
              "view_as_markdown": "enabled"
            }
          },
          "navigation": {
            "first_page": "documentation",
            "left": [],
            "logo_link": "landing_page",
            "page_icons": "enabled",
            "right": [],
            "sub_nav": [],
            "subheader_layout": "dropdown",
            "version": "enabled",
            "links": {
              "home": {
                "label": "Home",
                "visibility": "disabled"
              },
              "graphql": {
                "label": "GraphQL",
                "visibility": "disabled"
              },
              "guides": {
                "label": "Guides",
                "alias": "Overview",
                "visibility": "enabled"
              },
              "reference": {
                "label": "API Reference",
                "alias": "Documentation",
                "visibility": "enabled"
              },
              "recipes": {
                "label": "Recipes",
                "alias": null,
                "visibility": "enabled"
              },
              "changelog": {
                "label": "Changelog",
                "alias": null,
                "visibility": "disabled"
              },
              "discussions": {
                "label": "Discussions",
                "alias": null,
                "visibility": "disabled"
              }
            }
          }
        },
        "git": {
          "connection": {
            "repository": {},
            "organization": null,
            "status": "inactive"
          }
        }
      }
    },
    "version": {
      "_id": "57da63765740030e00f2129e",
      "project": "57da63765740030e00f2129b",
      "releaseDate": "2016-09-15T09:01:42.544Z",
      "version_clean": "1.0.0",
      "__v": 14,
      "createdAt": "2016-09-15T09:01:42.544Z",
      "is_beta": false,
      "is_deprecated": false,
      "is_hidden": false,
      "is_stable": false,
      "version": "1",
      "categories": [
        "57da63765740030e00f2129f",
        "57dac9b2b103490e006dd660",
        "57dac9b913ca3b0e0015b058",
        "57dacae82bb38f0e00ef41cb",
        "57e1b0c1a205a21900301679",
        "57e1b0c6a022d6380080badf",
        "57e1b43aa205a2190030167a",
        "57e3d0ed8e37b01700eb6caf",
        "57e92f58c698700e000ba884",
        "57ea81f8802e4a17009181a3",
        "57eaedca0392f60e001251f4",
        "57eaedcfc878550e00b3c460",
        "57f2be6c4d533b0e007231bb",
        "6376b409081e400003bab906"
      ],
      "codename": "",
      "apiRegistries": [
        {
          "filename": "api-settings.json",
          "uuid": "apcjrq2im5rahb2m"
        }
      ],
      "pdfStatus": "",
      "source": "readme",
      "updatedAt": "2025-06-10T21:55:24.962Z"
    }
  },
  "is404": false,
  "isDetachedProductionSite": false,
  "lang": "en",
  "langFull": "Default",
  "reqUrl": "/v1/reference/rest-auth-margin-information",
  "version": {
    "_id": "57da63765740030e00f2129e",
    "project": "57da63765740030e00f2129b",
    "releaseDate": "2016-09-15T09:01:42.544Z",
    "version_clean": "1.0.0",
    "__v": 14,
    "createdAt": "2016-09-15T09:01:42.544Z",
    "is_beta": false,
    "is_deprecated": false,
    "is_hidden": false,
    "is_stable": false,
    "version": "1",
    "categories": [
      "57da63765740030e00f2129f",
      "57dac9b2b103490e006dd660",
      "57dac9b913ca3b0e0015b058",
      "57dacae82bb38f0e00ef41cb",
      "57e1b0c1a205a21900301679",
      "57e1b0c6a022d6380080badf",
      "57e1b43aa205a2190030167a",
      "57e3d0ed8e37b01700eb6caf",
      "57e92f58c698700e000ba884",
      "57ea81f8802e4a17009181a3",
      "57eaedca0392f60e001251f4",
      "57eaedcfc878550e00b3c460",
      "57f2be6c4d533b0e007231bb",
      "6376b409081e400003bab906"
    ],
    "codename": "",
    "apiRegistries": [
      {
        "filename": "api-settings.json",
        "uuid": "apcjrq2im5rahb2m"
      }
    ],
    "pdfStatus": "",
    "source": "readme",
    "updatedAt": "2025-06-10T21:55:24.962Z"
  },
  "gitVersion": {
    "base": null,
    "display_name": null,
    "name": "1",
    "release_stage": "release",
    "source": "readme",
    "state": "current",
    "updated_at": "2025-06-12T07:40:29.000Z",
    "uri": "/branches/1",
    "privacy": {
      "view": "public"
    }
  },
  "versions": {
    "total": 2,
    "page": 1,
    "per_page": 100,
    "paging": {
      "next": null,
      "previous": null,
      "first": "/bitfinex/api-next/v2/branches?page=1&per_page=100",
      "last": null
    },
    "data": [
      {
        "base": null,
        "display_name": null,
        "name": "1",
        "release_stage": "release",
        "source": "readme",
        "state": "current",
        "updated_at": "2025-06-12T07:40:29.742Z",
        "uri": "/branches/1",
        "privacy": {
          "view": "public"
        }
      },
      {
        "base": null,
        "display_name": null,
        "name": "2",
        "release_stage": "release",
        "source": "readme",
        "state": "current",
        "updated_at": "2025-07-31T13:25:47.566Z",
        "uri": "/branches/2",
        "privacy": {
          "view": "default"
        }
      }
    ],
    "type": "version"
  }
}