
.venv\Lib\site-packages\nodeenv.py:97:    jobs = '2'
.venv\Lib\site-packages\nodeenv.py:257:            '-j', '--jobs', dest='jobs', default=Config.jobs,
.venv\Lib\site-packages\nodeenv.py:259:            'The default is 2 jobs.')
.venv\Lib\site-packages\nodeenv.py:707:    make_param_names = ['load-average', 'jobs']
.venv\Lib\site-packages\anyio\lowlevel.py:22:    Check for cancellation and allow the scheduler to switch to another task.
.venv\Lib\site-packages\anyio\lowlevel.py:40:    This does not allow the scheduler to switch to a different task.
.venv\Lib\site-packages\anyio\lowlevel.py:50:    Allow the scheduler to switch to another task but without checking for cancellation.
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:344:        Schedule another run at the end if we still have tasks eligible for cancellation.
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:368:        # Schedule another callback if there are still tasks left
.venv\Lib\site-packages\astroid\brain\brain_curses.py:89:    KEY_REFRESH = 1
.venv\Lib\site-packages\astroid\nodes\_base_nodes.py:339:                # errors, which is the job of a linter. So return something
.venv\Lib\site-packages\black\concurrency.py:103:            schedule_formatting(
.venv\Lib\site-packages\black\concurrency.py:122:async def schedule_formatting(
.venv\Lib\site-packages\black\report.py:46:                    msg = f"{src} already well formatted, good job."
.venv\Lib\site-packages\bs4\dammit.py:7:XML or HTML to reflect a new encoding; that's the tree builder's job.
.venv\Lib\site-packages\cachecontrol\controller.py:200:        # Client can try to refresh the value by repeating the request
.venv\Lib\site-packages\charset_normalizer\utils.py:40:        or "WITH MACRON" in description
.venv\Lib\site-packages\dill\source.py:217:                if not stdin: break # co_firstlineno does the job
.venv\Lib\site-packages\engineio\async_server.py:463:        s.schedule_ping()
.venv\Lib\site-packages\engineio\async_socket.py:42:            self.schedule_ping()
.venv\Lib\site-packages\engineio\async_socket.py:130:    def schedule_ping(self):
.venv\Lib\site-packages\engineio\server.py:403:        s.schedule_ping()
.venv\Lib\site-packages\engineio\socket.py:44:            self.schedule_ping()
.venv\Lib\site-packages\engineio\socket.py:132:    def schedule_ping(self):
.venv\Lib\site-packages\fastapi\openapi\models.py:492:    refreshUrl: Optional[str] = None
.venv\Lib\site-packages\fastapi\security\oauth2.py:505:        refreshUrl: Annotated[
.venv\Lib\site-packages\fastapi\security\oauth2.py:509:                The URL to refresh the token and obtain a new one.
.venv\Lib\site-packages\fastapi\security\oauth2.py:571:                    "refreshUrl": refreshUrl,
.venv\Lib\site-packages\git\cmd.py:700:    full path to :func:`git.refresh` (or invoke the script using a ``.exe`` shim).
.venv\Lib\site-packages\git\cmd.py:712:    _refresh_env_var = "GIT_PYTHON_REFRESH"
.venv\Lib\site-packages\git\cmd.py:719:        The git executable is actually found during the refresh step in the top level
.venv\Lib\site-packages\git\cmd.py:720:        ``__init__``. It can also be changed by explicitly calling :func:`git.refresh`.
.venv\Lib\site-packages\git\cmd.py:723:    _refresh_token = object()  # Since None would match an initial _version_info_token.
.venv\Lib\site-packages\git\cmd.py:726:    def refresh(cls, path: Union[None, PathLike] = None) -> bool:
.venv\Lib\site-packages\git\cmd.py:729:        Called by the :func:`git.refresh` function in the top level ``__init__``.
.venv\Lib\site-packages\git\cmd.py:736:            The top-level :func:`git.refresh` should be preferred because it calls this
.venv\Lib\site-packages\git\cmd.py:740:            There are three different ways to specify the command that refreshing causes
.venv\Lib\site-packages\git\cmd.py:757:               the time of the refresh. When git commands are run, they are run using
.venv\Lib\site-packages\git\cmd.py:763:            Refreshing always sets the :attr:`Git.GIT_PYTHON_GIT_EXECUTABLE` class
.venv\Lib\site-packages\git\cmd.py:767:            environment variable. The class attribute is set no matter how refreshing is
.venv\Lib\site-packages\git\cmd.py:770:        # Discern which path to refresh with.
.venv\Lib\site-packages\git\cmd.py:779:        old_refresh_token = cls._refresh_token
.venv\Lib\site-packages\git\cmd.py:781:        cls._refresh_token = object()
.venv\Lib\site-packages\git\cmd.py:802:                    - explicitly set via git.refresh(<full-path-to-git-executable>)
.venv\Lib\site-packages\git\cmd.py:810:            cls._refresh_token = old_refresh_token
.venv\Lib\site-packages\git\cmd.py:813:                # On the first refresh (when GIT_PYTHON_GIT_EXECUTABLE is None) we only
.venv\Lib\site-packages\git\cmd.py:814:                # are quiet, warn, or error depending on the GIT_PYTHON_REFRESH value.
.venv\Lib\site-packages\git\cmd.py:816:                # Determine what the user wants to happen during the initial refresh. We
.venv\Lib\site-packages\git\cmd.py:817:                # expect GIT_PYTHON_REFRESH to either be unset or be one of the
.venv\Lib\site-packages\git\cmd.py:824:                mode = os.environ.get(cls._refresh_env_var, "raise").lower()
.venv\Lib\site-packages\git\cmd.py:849:                        cls._refresh_env_var,
.venv\Lib\site-packages\git\cmd.py:853:                        cls._refresh_env_var,
.venv\Lib\site-packages\git\cmd.py:872:                        cls._refresh_env_var,
.venv\Lib\site-packages\git\cmd.py:879:                # We get here if this was the initial refresh and the refresh mode was
.venv\Lib\site-packages\git\cmd.py:881:                # discern the difference between the first refresh at import time
.venv\Lib\site-packages\git\cmd.py:882:                # and subsequent calls to git.refresh or this refresh method.
.venv\Lib\site-packages\git\cmd.py:885:                # After the first refresh (when GIT_PYTHON_GIT_EXECUTABLE is no longer
.venv\Lib\site-packages\git\cmd.py:1031:        # Refreshing is global, but version_info caching is per-instance.
.venv\Lib\site-packages\git\cmd.py:1032:        refresh_token = self._refresh_token  # Copy token in case of concurrent refresh.
.venv\Lib\site-packages\git\cmd.py:1034:        # Use the cached version if obtained after the most recent refresh.
.venv\Lib\site-packages\git\cmd.py:1035:        if self._version_info_token is refresh_token:
.venv\Lib\site-packages\git\cmd.py:1046:        # This value will be considered valid until the next refresh.
.venv\Lib\site-packages\git\cmd.py:1047:        self._version_info_token = refresh_token
.venv\Lib\site-packages\git\remote.py:331:    def refresh(cls) -> Literal[True]:
.venv\Lib\site-packages\git\remote.py:335:        Called by the :func:`git.refresh` function in the top level ``__init__``.
.venv\Lib\site-packages\git\__init__.py:82:    "refresh",
.venv\Lib\site-packages\git\__init__.py:263:def refresh(path: Optional[PathLike] = None) -> None:
.venv\Lib\site-packages\git\__init__.py:273:        :meth:`Git.refresh <git.cmd.Git.refresh>` for details on how to achieve this.
.venv\Lib\site-packages\git\__init__.py:276:        This calls :meth:`Git.refresh <git.cmd.Git.refresh>` and sets other global
.venv\Lib\site-packages\git\__init__.py:278:        usually be used instead of using :meth:`Git.refresh <git.cmd.Git.refresh>` or
.venv\Lib\site-packages\git\__init__.py:279:        :meth:`FetchInfo.refresh <git.remote.FetchInfo.refresh>` directly.
.venv\Lib\site-packages\git\__init__.py:287:    if not Git.refresh(path=path):
.venv\Lib\site-packages\git\__init__.py:289:    if not FetchInfo.refresh():  # noqa: F405
.venv\Lib\site-packages\git\__init__.py:296:    refresh()
.venv\Lib\site-packages\gotrue\helpers.py:74:        and "refresh_token" in data
.venv\Lib\site-packages\gotrue\helpers.py:77:        and data["refresh_token"]
.venv\Lib\site-packages\gotrue\timer.py:20:            async def schedule():
.venv\Lib\site-packages\gotrue\timer.py:27:            self._task = asyncio.create_task(schedule())
.venv\Lib\site-packages\gotrue\types.py:59:    "TOKEN_REFRESHED",
.venv\Lib\site-packages\gotrue\types.py:133:    provider_refresh_token: Union[str, None] = None
.venv\Lib\site-packages\gotrue\types.py:135:    The oauth provider refresh token. If present, this can be used to refresh
.venv\Lib\site-packages\gotrue\types.py:138:    Not all oauth providers return a provider refresh token. If the
.venv\Lib\site-packages\gotrue\types.py:139:    provider_refresh_token is missing, please refer to the oauth provider's
.venv\Lib\site-packages\gotrue\types.py:140:    documentation for information on how to obtain the provider refresh token.
.venv\Lib\site-packages\gotrue\types.py:143:    refresh_token: str
.venv\Lib\site-packages\gotrue\types.py:599:    refresh_token: str
.venv\Lib\site-packages\gotrue\types.py:601:    Refresh token you can use to obtain new access tokens when expired.
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:93:        auto_refresh_token: bool = True,
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:110:        self._auto_refresh_token = auto_refresh_token
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:114:        self._refresh_token_timer: Union[Timer, None] = None
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:144:        return await self._recover_and_refresh()
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:596:        Returns the session, refreshing it if necessary.
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:618:            await self._call_refresh_token(current_session.refresh_token)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:657:    async def set_session(self, access_token: str, refresh_token: str) -> AuthResponse:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:660:        is expired, `set_session` will take care of refreshing it to obtain a
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:663:        If the refresh token in the current session is invalid and the current
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:670:        refresh token and a user.
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:683:            if not refresh_token:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:685:            response = await self._refresh_access_token(refresh_token)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:693:                refresh_token=refresh_token,
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:700:        self._notify_all_subscribers("TOKEN_REFRESHED", session)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:703:    async def refresh_session(
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:704:        self, refresh_token: Union[str, None] = None
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:709:        Takes in an optional current session. If not passed in, then refreshSession()
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:711:        refresh token is invalid, an error will be thrown.
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:713:        if not refresh_token:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:716:                refresh_token = session.refresh_token
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:717:        if not refresh_token:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:719:        session = await self._call_refresh_token(refresh_token)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:728:        For server-side management, you can revoke all refresh tokens for a user by
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:913:        if self._refresh_token_timer:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:914:            self._refresh_token_timer.cancel()
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:915:            self._refresh_token_timer = None
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:938:        provider_refresh_token = self._get_param(params, "provider_refresh_token")
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:945:        refresh_token = self._get_param(params, "refresh_token")
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:946:        if not refresh_token:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:947:            raise AuthImplicitGrantRedirectError("No refresh_token detected.")
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:956:            provider_refresh_token=provider_refresh_token,
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:960:            refresh_token=refresh_token,
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:967:    async def _recover_and_refresh(self) -> None:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:977:            refresh_token = current_session.refresh_token
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:978:            if self._auto_refresh_token and refresh_token:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:981:                    await self._call_refresh_token(refresh_token)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:988:                        if self._refresh_token_timer:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:989:                            self._refresh_token_timer.cancel()
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:990:                        self._refresh_token_timer = Timer(
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:992:                            self._recover_and_refresh,
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:994:                        self._refresh_token_timer.start()
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1002:    async def _call_refresh_token(self, refresh_token: str) -> Session:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1003:        if not refresh_token:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1005:        response = await self._refresh_access_token(refresh_token)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1009:        self._notify_all_subscribers("TOKEN_REFRESHED", response.session)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1012:    async def _refresh_access_token(self, refresh_token: str) -> AuthResponse:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1016:            query={"grant_type": "refresh_token"},
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1017:            body={"refresh_token": refresh_token},
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1028:            refresh_duration_before_expires = (
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1031:            value = (expire_in - refresh_duration_before_expires) * 1000
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1032:            await self._start_auto_refresh_token(value)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1036:    async def _start_auto_refresh_token(self, value: float) -> None:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1037:        if self._refresh_token_timer:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1038:            self._refresh_token_timer.cancel()
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1039:            self._refresh_token_timer = None
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1040:        if value <= 0 or not self._auto_refresh_token:
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1043:        async def refresh_token_function():
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1048:                    await self._call_refresh_token(session.refresh_token)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1055:                    await self._start_auto_refresh_token(
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1059:        self._refresh_token_timer = Timer(value, refresh_token_function)
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1060:        self._refresh_token_timer.start()
.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1081:        if not data.get("refresh_token"):
.venv\Lib\site-packages\gotrue\_sync\api.py:574:    def refresh_access_token(self, *, refresh_token: str) -> Session:
.venv\Lib\site-packages\gotrue\_sync\api.py:579:        refresh_token : str
.venv\Lib\site-packages\gotrue\_sync\api.py:580:            A valid refresh token that was returned on login.
.venv\Lib\site-packages\gotrue\_sync\api.py:592:        data = {"refresh_token": refresh_token}
.venv\Lib\site-packages\gotrue\_sync\api.py:593:        url = f"{self.url}/token?grant_type=refresh_token"
.venv\Lib\site-packages\gotrue\_sync\client.py:34:        auto_refresh_token: bool = True,
.venv\Lib\site-packages\gotrue\_sync\client.py:49:        auto_refresh_token : bool
.venv\Lib\site-packages\gotrue\_sync\client.py:50:            Set to "true" if you want to automatically refresh the token before
.venv\Lib\site-packages\gotrue\_sync\client.py:70:        self.refresh_token_timer: Optional[Timer] = None
.venv\Lib\site-packages\gotrue\_sync\client.py:73:        self.auto_refresh_token = auto_refresh_token
.venv\Lib\site-packages\gotrue\_sync\client.py:98:        self._recover_and_refresh()
.venv\Lib\site-packages\gotrue\_sync\client.py:167:        refresh_token: Optional[str] = None,
.venv\Lib\site-packages\gotrue\_sync\client.py:184:        refresh_token : Optional[str]
.venv\Lib\site-packages\gotrue\_sync\client.py:185:            A valid refresh token that was returned on login.
.venv\Lib\site-packages\gotrue\_sync\client.py:206:            If refresh_token is provided, a logged-in session is returned.
.venv\Lib\site-packages\gotrue\_sync\client.py:236:        elif refresh_token:
.venv\Lib\site-packages\gotrue\_sync\client.py:238:            # on _call_refresh_token using the passed refresh_token
.venv\Lib\site-packages\gotrue\_sync\client.py:239:            self._call_refresh_token(refresh_token=refresh_token)
.venv\Lib\site-packages\gotrue\_sync\client.py:249:                "Email, phone, refresh_token, or provider must be defined, "
.venv\Lib\site-packages\gotrue\_sync\client.py:302:    def refresh_session(self) -> Session:
.venv\Lib\site-packages\gotrue\_sync\client.py:303:        """Force refreshes the session.
.venv\Lib\site-packages\gotrue\_sync\client.py:305:        Force refreshes the session including the user data incase it was
.venv\Lib\site-packages\gotrue\_sync\client.py:310:        return self._call_refresh_token()
.venv\Lib\site-packages\gotrue\_sync\client.py:347:    def set_session(self, *, refresh_token: str) -> Session:
.venv\Lib\site-packages\gotrue\_sync\client.py:348:        """Sets the session data from refresh_token and returns current Session
.venv\Lib\site-packages\gotrue\_sync\client.py:352:        refresh_token : str
.venv\Lib\site-packages\gotrue\_sync\client.py:365:        response = self.api.refresh_access_token(refresh_token=refresh_token)
.venv\Lib\site-packages\gotrue\_sync\client.py:395:            refresh_token=None,
.venv\Lib\site-packages\gotrue\_sync\client.py:401:            session.refresh_token = self.current_session.refresh_token
.venv\Lib\site-packages\gotrue\_sync\client.py:436:        refresh_token = query.get("refresh_token")
.venv\Lib\site-packages\gotrue\_sync\client.py:442:        if not refresh_token or not refresh_token[0]:
.venv\Lib\site-packages\gotrue\_sync\client.py:443:            raise APIError("No refresh_token detected.", 400)
.venv\Lib\site-packages\gotrue\_sync\client.py:460:            refresh_token=refresh_token[0],
.venv\Lib\site-packages\gotrue\_sync\client.py:583:    def _recover_and_refresh(self) -> None:
.venv\Lib\site-packages\gotrue\_sync\client.py:584:        """Recovers the session from LocalStorage and refreshes"""
.venv\Lib\site-packages\gotrue\_sync\client.py:589:        if expires_at < time_now and self.auto_refresh_token and session.refresh_token:
.venv\Lib\site-packages\gotrue\_sync\client.py:591:                self._call_refresh_token(refresh_token=session.refresh_token)
.venv\Lib\site-packages\gotrue\_sync\client.py:600:    def _call_refresh_token(self, *, refresh_token: Optional[str] = None) -> Session:
.venv\Lib\site-packages\gotrue\_sync\client.py:601:        if refresh_token is None:
.venv\Lib\site-packages\gotrue\_sync\client.py:603:                refresh_token = self.current_session.refresh_token
.venv\Lib\site-packages\gotrue\_sync\client.py:605:                raise ValueError("No current session and refresh_token not supplied.")
.venv\Lib\site-packages\gotrue\_sync\client.py:606:        response = self.api.refresh_access_token(refresh_token=cast(str, refresh_token))
.venv\Lib\site-packages\gotrue\_sync\client.py:608:        self._notify_all_subscribers(event=AuthChangeEvent.TOKEN_REFRESHED)
.venv\Lib\site-packages\gotrue\_sync\client.py:624:            refresh_duration_before_expires = 60 if expire_in > 60 else 0.5
.venv\Lib\site-packages\gotrue\_sync\client.py:625:            self._start_auto_refresh_token(
.venv\Lib\site-packages\gotrue\_sync\client.py:626:                value=(expire_in - refresh_duration_before_expires)
.venv\Lib\site-packages\gotrue\_sync\client.py:639:        if self.refresh_token_timer:
.venv\Lib\site-packages\gotrue\_sync\client.py:640:            self.refresh_token_timer.cancel()
.venv\Lib\site-packages\gotrue\_sync\client.py:643:    def _start_auto_refresh_token(self, *, value: float) -> None:
.venv\Lib\site-packages\gotrue\_sync\client.py:644:        if self.refresh_token_timer:
.venv\Lib\site-packages\gotrue\_sync\client.py:645:            self.refresh_token_timer.cancel()
.venv\Lib\site-packages\gotrue\_sync\client.py:646:        if value <= 0 or not self.auto_refresh_token:
.venv\Lib\site-packages\gotrue\_sync\client.py:648:        self.refresh_token_timer = Timer(value, self._call_refresh_token)
.venv\Lib\site-packages\gotrue\_sync\client.py:649:        self.refresh_token_timer.start()
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:93:        auto_refresh_token: bool = True,
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:110:        self._auto_refresh_token = auto_refresh_token
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:114:        self._refresh_token_timer: Union[Timer, None] = None
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:144:        return self._recover_and_refresh()
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:590:        Returns the session, refreshing it if necessary.
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:612:            self._call_refresh_token(current_session.refresh_token)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:651:    def set_session(self, access_token: str, refresh_token: str) -> AuthResponse:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:654:        is expired, `set_session` will take care of refreshing it to obtain a
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:657:        If the refresh token in the current session is invalid and the current
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:664:        refresh token and a user.
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:677:            if not refresh_token:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:679:            response = self._refresh_access_token(refresh_token)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:687:                refresh_token=refresh_token,
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:694:        self._notify_all_subscribers("TOKEN_REFRESHED", session)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:697:    def refresh_session(self, refresh_token: Union[str, None] = None) -> AuthResponse:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:701:        Takes in an optional current session. If not passed in, then refreshSession()
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:703:        refresh token is invalid, an error will be thrown.
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:705:        if not refresh_token:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:708:                refresh_token = session.refresh_token
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:709:        if not refresh_token:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:711:        session = self._call_refresh_token(refresh_token)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:720:        For server-side management, you can revoke all refresh tokens for a user by
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:905:        if self._refresh_token_timer:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:906:            self._refresh_token_timer.cancel()
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:907:            self._refresh_token_timer = None
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:930:        provider_refresh_token = self._get_param(params, "provider_refresh_token")
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:937:        refresh_token = self._get_param(params, "refresh_token")
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:938:        if not refresh_token:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:939:            raise AuthImplicitGrantRedirectError("No refresh_token detected.")
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:948:            provider_refresh_token=provider_refresh_token,
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:952:            refresh_token=refresh_token,
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:959:    def _recover_and_refresh(self) -> None:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:969:            refresh_token = current_session.refresh_token
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:970:            if self._auto_refresh_token and refresh_token:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:973:                    self._call_refresh_token(refresh_token)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:980:                        if self._refresh_token_timer:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:981:                            self._refresh_token_timer.cancel()
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:982:                        self._refresh_token_timer = Timer(
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:984:                            self._recover_and_refresh,
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:986:                        self._refresh_token_timer.start()
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:994:    def _call_refresh_token(self, refresh_token: str) -> Session:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:995:        if not refresh_token:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:997:        response = self._refresh_access_token(refresh_token)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1001:        self._notify_all_subscribers("TOKEN_REFRESHED", response.session)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1004:    def _refresh_access_token(self, refresh_token: str) -> AuthResponse:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1008:            query={"grant_type": "refresh_token"},
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1009:            body={"refresh_token": refresh_token},
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1020:            refresh_duration_before_expires = (
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1023:            value = (expire_in - refresh_duration_before_expires) * 1000
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1024:            self._start_auto_refresh_token(value)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1028:    def _start_auto_refresh_token(self, value: float) -> None:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1029:        if self._refresh_token_timer:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1030:            self._refresh_token_timer.cancel()
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1031:            self._refresh_token_timer = None
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1032:        if value <= 0 or not self._auto_refresh_token:
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1035:        def refresh_token_function():
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1040:                    self._call_refresh_token(session.refresh_token)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1047:                    self._start_auto_refresh_token(
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1051:        self._refresh_token_timer = Timer(value, refresh_token_function)
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1052:        self._refresh_token_timer.start()
.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1073:        if not data.get("refresh_token"):
.venv\Lib\site-packages\hpack\table.py:94:        (b'refresh'                     , b''             ),  # noqa
.venv\Lib\site-packages\html5lib\constants.py:1049:    "Omicron;": "\u039f",
.venv\Lib\site-packages\html5lib\constants.py:2295:    "omicron;": "\u03bf",
.venv\Lib\site-packages\html5lib\filters\sanitizer.py:34:    (namespaces['html'], 'acronym'),
.venv\Lib\site-packages\identify\vendor\licenses.py:4785:library does the same job as widely used non-free libraries.  In this
.venv\Lib\site-packages\isort\main.py:296:        "--jobs",
.venv\Lib\site-packages\isort\main.py:298:        dest="jobs",
.venv\Lib\site-packages\isort\main.py:1101:    jobs = config_dict.pop("jobs", None)
.venv\Lib\site-packages\isort\main.py:1194:        if jobs:
.venv\Lib\site-packages\isort\main.py:1197:            executor = multiprocessing.Pool(jobs if jobs > 0 else multiprocessing.cpu_count())
.venv\Lib\site-packages\jwt\jwks_client.py:68:    def get_jwk_set(self, refresh: bool = False) -> PyJWKSet:
.venv\Lib\site-packages\jwt\jwks_client.py:70:        if self.jwk_set_cache is not None and not refresh:
.venv\Lib\site-packages\jwt\jwks_client.py:81:    def get_signing_keys(self, refresh: bool = False) -> List[PyJWK]:
.venv\Lib\site-packages\jwt\jwks_client.py:82:        jwk_set = self.get_jwk_set(refresh)
.venv\Lib\site-packages\jwt\jwks_client.py:99:            # If no matching signing key from the jwk set, refresh the jwk set and try again.
.venv\Lib\site-packages\jwt\jwks_client.py:100:            signing_keys = self.get_signing_keys(refresh=True)
.venv\Lib\site-packages\lxml\html\builder.py:40:ACRONYM = E.acronym  #:
.venv\Lib\site-packages\lxml\html\defs.py:109:    'abbr', 'acronym', 'cite', 'code', 'del', 'dfn', 'em',
.venv\Lib\site-packages\lxml\html\__init__.py:102:_parse_meta_refresh_url = re.compile(
.venv\Lib\site-packages\lxml\html\__init__.py:550:                if http_equiv == 'refresh':
.venv\Lib\site-packages\lxml\html\__init__.py:552:                    match = _parse_meta_refresh_url(content)
.venv\Lib\site-packages\mypy\checkexpr.py:1704:            need_refresh = any(
.venv\Lib\site-packages\mypy\checkexpr.py:1709:            if need_refresh:
.venv\Lib\site-packages\mypy\checkexpr.py:1721:                callee, args, arg_kinds, arg_names, formal_to_actual, need_refresh, context
.venv\Lib\site-packages\mypy\checkexpr.py:1723:            if need_refresh:
.venv\Lib\site-packages\mypy\checkexpr.py:2015:        need_refresh: bool,
.venv\Lib\site-packages\mypy\checkexpr.py:2064:                    need_refresh,
.venv\Lib\site-packages\mypy\checkexpr.py:2091:                if need_refresh:
.venv\Lib\site-packages\mypy\checkexpr.py:2092:                    # Technically we need to refresh formal_to_actual after *each* inference pass,
.venv\Lib\site-packages\mypy\checkexpr.py:2153:        need_refresh: bool,
.venv\Lib\site-packages\mypy\checkexpr.py:2175:        if need_refresh:
.venv\Lib\site-packages\mypy\constraints.py:333:    # causing us to infer Any in situations where a better job could
.venv\Lib\site-packages\mypy\dmypy_server.py:34:from mypy.server.update import FineGrainedBuildManager, refresh_suppressed_submodules
.venv\Lib\site-packages\mypy\dmypy_server.py:653:        def refresh_file(module: str, path: str) -> list[str]:
.venv\Lib\site-packages\mypy\dmypy_server.py:657:            new_messages = refresh_suppressed_submodules(
.venv\Lib\site-packages\mypy\dmypy_server.py:658:                module_id, state.path, fine_grained_manager.deps, graph, self.fscache, refresh_file
.venv\Lib\site-packages\mypy\dmypy_server.py:677:                new_messages = refresh_suppressed_submodules(
.venv\Lib\site-packages\mypy\dmypy_server.py:678:                    module_id, path, fine_grained_manager.deps, graph, self.fscache, refresh_file
.venv\Lib\site-packages\mypy\dmypy_server.py:711:            refresh_suppressed_time=t3 - t2,
.venv\Lib\site-packages\mypy\inspections.py:411:        Also check if they need to be refreshed (cached nodes may have
.venv\Lib\site-packages\mypy\semanal.py:578:    def refresh_partial(
.venv\Lib\site-packages\mypy\semanal.py:587:        """Refresh a stale target in fine-grained incremental mode."""
.venv\Lib\site-packages\mypy\semanal.py:596:                self.refresh_top_level(node)
.venv\Lib\site-packages\mypy\semanal.py:602:    def refresh_top_level(self, file_node: MypyFile) -> None:
.venv\Lib\site-packages\mypy\semanal.py:2260:            self.schedule_patch(PRIORITY_FALLBACKS, lambda: calculate_tuple_fallback(base))
.venv\Lib\site-packages\mypy\semanal.py:6686:    def schedule_patch(self, priority: int, patch: Callable[[], None]) -> None:
.venv\Lib\site-packages\mypy\semanal_main.py:345:        refresh_node = node
.venv\Lib\site-packages\mypy\semanal_main.py:346:        if isinstance(refresh_node, Decorator):
.venv\Lib\site-packages\mypy\semanal_main.py:348:            refresh_node = refresh_node.func
.venv\Lib\site-packages\mypy\semanal_main.py:349:        analyzer.refresh_partial(
.venv\Lib\site-packages\mypy\semanal_main.py:350:            refresh_node,
.venv\Lib\site-packages\mypy\semanal_namedtuple.py:507:            self.api.schedule_patch(
.venv\Lib\site-packages\mypy\semanal_shared.py:200:    def schedule_patch(self, priority: int, fn: Callable[[], None]) -> None:
.venv\Lib\site-packages\mypy\stubinfo.py:26:    "croniter": "types-croniter",
.venv\Lib\site-packages\mypy\stubinfo.py:92:    "crontab": "types-python-crontab",
.venv\Lib\site-packages\mypy\treetransform.py:172:        # Refresh lines of the inner things
.venv\Lib\site-packages\mypy\server\update.py:1140:            # Processing them would spell trouble -- for example, we could be refreshing
.venv\Lib\site-packages\mypy\server\update.py:1158:        # The target can't be refreshed. It's possible that the target was
.venv\Lib\site-packages\mypy\server\update.py:1206:def refresh_suppressed_submodules(
.venv\Lib\site-packages\mypy\server\update.py:1212:    refresh_file: Callable[[str, str], list[str]],
.venv\Lib\site-packages\mypy\server\update.py:1225:        refresh_file: function that reads the AST of a module (returns error messages)
.venv\Lib\site-packages\mypy\server\update.py:1227:    Return a list of errors from refresh_file() if it was called. If the
.venv\Lib\site-packages\mypy\server\update.py:1228:    return value is None, we didn't call refresh_file().
.venv\Lib\site-packages\mypy\server\update.py:1269:                        messages = refresh_file(state.id, state.path)
.venv\Lib\site-packages\mypy\server\update.py:1271:                    assert tree  # Will be fine, due to refresh_file() above
.venv\Lib\site-packages\numpy\core\fromnumeric.py:2598:    The name of the function comes from the acronym for 'peak to peak'.
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:27:                                      get_num_build_jobs, \
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:34:_job_semaphore = None
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:272:    global _job_semaphore
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:274:    jobs = get_num_build_jobs()
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:276:    # setup semaphore to not exceed number of compile jobs when parallelized at
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:279:        if _job_semaphore is None:
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:280:            _job_semaphore = threading.Semaphore(jobs)
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:326:            # retrieve slot from our #job semaphore and build
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:327:            with _job_semaphore:
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:360:    if len(build) > 1 and jobs > 1:
.venv\Lib\site-packages\numpy\distutils\ccompiler.py:363:        with ThreadPoolExecutor(jobs) as pool:
.venv\Lib\site-packages\numpy\distutils\misc_util.py:45:           'get_num_build_jobs', 'sanitize_cxx_flags',
.venv\Lib\site-packages\numpy\distutils\misc_util.py:76:def get_num_build_jobs():
.venv\Lib\site-packages\numpy\distutils\misc_util.py:78:    Get number of parallel build jobs set by the --parallel command line
.venv\Lib\site-packages\numpy\distutils\misc_util.py:81:    NPY_NUM_BUILD_JOBS is checked. If that is unset, return the number of
.venv\Lib\site-packages\numpy\distutils\misc_util.py:88:        number of parallel jobs that can be run
.venv\Lib\site-packages\numpy\distutils\misc_util.py:97:    envjobs = int(os.environ.get("NPY_NUM_BUILD_JOBS", cpu_count))
.venv\Lib\site-packages\numpy\distutils\misc_util.py:101:        return envjobs
.venv\Lib\site-packages\numpy\distutils\misc_util.py:103:    # any of these three may have the job set, take the largest
.venv\Lib\site-packages\numpy\distutils\misc_util.py:108:        return envjobs
.venv\Lib\site-packages\numpy\distutils\command\build_clib.py:35:         "number of parallel jobs"),
.venv\Lib\site-packages\numpy\distutils\command\build_ext.py:32:         "number of parallel jobs"),
.venv\Lib\site-packages\numpy\linalg\__init__.py:16:- threadpoolctl: https://github.com/joblib/threadpoolctl
.venv\Lib\site-packages\numpy\random\tests\test_extending.py:54:        reason="Failing in 32-bit Windows wheel build job, skip for now"
.venv\Lib\site-packages\numpy\testing\_private\utils.py:154:        process has been scheduled in user mode. See man 5 proc.
.venv\Lib\site-packages\numpy\testing\_private\utils.py:175:        process has been scheduled in user mode. See man 5 proc.
.venv\Lib\site-packages\numpy\typing\tests\test_typing.py:97:    The cache refresh can be skipped using
.venv\Lib\site-packages\packaging\licenses\_spdx.py:216:    'cronyx': {'id': 'Cronyx', 'deprecated': False},
.venv\Lib\site-packages\pandas\core\frame.py:2111:            Location where the load job should run. See the `BigQuery locations
.venv\Lib\site-packages\pandas\core\indexes\multi.py:1433:            # little bit of a kludge job for #1217
.venv\Lib\site-packages\pandas\core\internals\managers.py:1133:                # If all block items are unfit, schedule the block for removal.
.venv\Lib\site-packages\pandas\io\gbq.py:99:        Location where the query job should run. See the `BigQuery locations
.venv\Lib\site-packages\pandas\io\gbq.py:107:        Query config parameters for job processing.
.venv\Lib\site-packages\pandas\io\gbq.py:113:        <https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs#configuration.query>`__.
.venv\Lib\site-packages\pandas\io\json\_normalize.py:438:        # A bit of a hackjob
.venv\Lib\site-packages\pandas\tests\io\xml\test_xml.py:836:<TrainSchedule>
.venv\Lib\site-packages\pandas\tests\io\xml\test_xml.py:852:</TrainSchedule>"""
.venv\Lib\site-packages\pandas\tests\tseries\offsets\test_fiscal.py:211:        # From Micron, see:
.venv\Lib\site-packages\pandas\tests\tseries\offsets\test_fiscal.py:546:        # From Micron, see:
.venv\Lib\site-packages\pip\_internal\self_outdated_check.py:90:        # Determine if we need to refresh the state
.venv\Lib\site-packages\pip\_internal\cli\progress_bars.py:60:    progress = Progress(*columns, refresh_per_second=5)
.venv\Lib\site-packages\pip\_internal\cli\progress_bars.py:84:    bar = Progress(*columns, refresh_per_second=6, console=console, transient=True)
.venv\Lib\site-packages\pip\_internal\cli\progress_bars.py:85:    # Hiding the progress bar at initialization forces a refresh cycle to occur
.venv\Lib\site-packages\pip\_internal\cli\spinners.py:202:    with Live(spinner, refresh_per_second=SPINS_PER_SECOND, console=console):
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:586:        def schedule(req: InstallRequirement) -> None:
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:593:                schedule(dep)
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:597:            schedule(install_req)
.venv\Lib\site-packages\pip\_vendor\cachecontrol\controller.py:200:        # Client can try to refresh the value by repeating the request
.venv\Lib\site-packages\pip\_vendor\packaging\licenses\_spdx.py:216:    'cronyx': {'id': 'Cronyx', 'deprecated': False},
.venv\Lib\site-packages\pip\_vendor\rich\console.py:1170:        refresh_per_second: float = 12.5,
.venv\Lib\site-packages\pip\_vendor\rich\console.py:1179:            refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
.venv\Lib\site-packages\pip\_vendor\rich\console.py:1192:            refresh_per_second=refresh_per_second,
.venv\Lib\site-packages\pip\_vendor\rich\layout.py:328:    def refresh_screen(self, console: "Console", layout_name: str) -> None:
.venv\Lib\site-packages\pip\_vendor\rich\layout.py:329:        """Refresh a sub-layout.
.venv\Lib\site-packages\pip\_vendor\rich\live.py:22:class _RefreshThread(Thread):
.venv\Lib\site-packages\pip\_vendor\rich\live.py:23:    """A thread that calls refresh() at regular intervals."""
.venv\Lib\site-packages\pip\_vendor\rich\live.py:25:    def __init__(self, live: "Live", refresh_per_second: float) -> None:
.venv\Lib\site-packages\pip\_vendor\rich\live.py:27:        self.refresh_per_second = refresh_per_second
.venv\Lib\site-packages\pip\_vendor\rich\live.py:35:        while not self.done.wait(1 / self.refresh_per_second):
.venv\Lib\site-packages\pip\_vendor\rich\live.py:38:                    self.live.refresh()
.venv\Lib\site-packages\pip\_vendor\rich\live.py:48:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()` or `update()` with refresh flag. Defaults to True
.venv\Lib\site-packages\pip\_vendor\rich\live.py:49:        refresh_per_second (float, optional): Number of times per second to refresh the live display. Defaults to 4.
.venv\Lib\site-packages\pip\_vendor\rich\live.py:63:        auto_refresh: bool = True,
.venv\Lib\site-packages\pip\_vendor\rich\live.py:64:        refresh_per_second: float = 4,
.venv\Lib\site-packages\pip\_vendor\rich\live.py:71:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
.venv\Lib\site-packages\pip\_vendor\rich\live.py:84:        self.auto_refresh = auto_refresh
.venv\Lib\site-packages\pip\_vendor\rich\live.py:88:        self._refresh_thread: Optional[_RefreshThread] = None
.venv\Lib\site-packages\pip\_vendor\rich\live.py:89:        self.refresh_per_second = refresh_per_second
.venv\Lib\site-packages\pip\_vendor\rich\live.py:111:    def start(self, refresh: bool = False) -> None:
.venv\Lib\site-packages\pip\_vendor\rich\live.py:115:            refresh (bool, optional): Also refresh. Defaults to False.
.venv\Lib\site-packages\pip\_vendor\rich\live.py:131:            if refresh:
.venv\Lib\site-packages\pip\_vendor\rich\live.py:133:                    self.refresh()
.venv\Lib\site-packages\pip\_vendor\rich\live.py:135:                    # If refresh fails, we want to stop the redirection of sys.stderr,
.venv\Lib\site-packages\pip\_vendor\rich\live.py:141:            if self.auto_refresh:
.venv\Lib\site-packages\pip\_vendor\rich\live.py:142:                self._refresh_thread = _RefreshThread(self, self.refresh_per_second)
.venv\Lib\site-packages\pip\_vendor\rich\live.py:143:                self._refresh_thread.start()
.venv\Lib\site-packages\pip\_vendor\rich\live.py:157:            if self.auto_refresh and self._refresh_thread is not None:
.venv\Lib\site-packages\pip\_vendor\rich\live.py:158:                self._refresh_thread.stop()
.venv\Lib\site-packages\pip\_vendor\rich\live.py:159:                self._refresh_thread = None
.venv\Lib\site-packages\pip\_vendor\rich\live.py:165:                        self.refresh()
.venv\Lib\site-packages\pip\_vendor\rich\live.py:180:        self.start(refresh=self._renderable is not None)
.venv\Lib\site-packages\pip\_vendor\rich\live.py:226:    def update(self, renderable: RenderableType, *, refresh: bool = False) -> None:
.venv\Lib\site-packages\pip\_vendor\rich\live.py:231:            refresh (bool, optional): Refresh the display. Defaults to False.
.venv\Lib\site-packages\pip\_vendor\rich\live.py:237:            if refresh:
.venv\Lib\site-packages\pip\_vendor\rich\live.py:238:                self.refresh()
.venv\Lib\site-packages\pip\_vendor\rich\live.py:240:    def refresh(self) -> None:
.venv\Lib\site-packages\pip\_vendor\rich\live.py:246:                    self.console._live_stack[0].refresh()
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:88:        self.progress.update(self.task_id, completed=self.completed, refresh=True)
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:109:    auto_refresh: bool = True,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:113:    refresh_per_second: float = 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:131:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:134:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:164:        auto_refresh=auto_refresh,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:168:        refresh_per_second=refresh_per_second or 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:311:    auto_refresh: bool = True,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:315:    refresh_per_second: float = 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:328:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:331:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:359:        auto_refresh=auto_refresh,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:363:        refresh_per_second=refresh_per_second or 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:382:    auto_refresh: bool = True,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:386:    refresh_per_second: float = 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:407:    auto_refresh: bool = True,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:411:    refresh_per_second: float = 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:431:    auto_refresh: bool = True,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:435:    refresh_per_second: float = 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:453:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:456:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:486:        auto_refresh=auto_refresh,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:490:        refresh_per_second=refresh_per_second or 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:510:    max_refresh: Optional[float] = None
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:531:        if self.max_refresh is not None and not task.completed:
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:537:                if timestamp + self.max_refresh > current_time:
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:780:    # Only refresh twice a second to prevent jitter
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:781:    max_refresh = 0.5
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1066:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()`.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1067:        refresh_per_second (Optional[float], optional): Number of times per second to refresh the progress information or None to use default (10). Defaults to None.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1081:        auto_refresh: bool = True,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1082:        refresh_per_second: float = 10,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1091:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1102:            auto_refresh=auto_refresh,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1103:            refresh_per_second=refresh_per_second,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1171:            self.live.start(refresh=True)
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1223:        if self.live.auto_refresh:
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1230:            refresh = self.refresh
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1234:                refresh()
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1425:        refresh: bool = False,
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1437:            refresh (bool): Force a refresh of progress information. Default is False.
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1474:        if refresh:
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1475:            self.refresh()
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1514:        self.refresh()
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1546:    def refresh(self) -> None:
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1547:        """Refresh (render) the progress information."""
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1549:            self.live.refresh()
.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1639:        self.refresh()
.venv\Lib\site-packages\pip\_vendor\rich\prompt.py:345:                run_job()
.venv\Lib\site-packages\pip\_vendor\rich\spinner.py:130:    with Live(all_spinners, refresh_per_second=20) as live:
.venv\Lib\site-packages\pip\_vendor\rich\status.py:20:        refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
.venv\Lib\site-packages\pip\_vendor\rich\status.py:31:        refresh_per_second: float = 12.5,
.venv\Lib\site-packages\pip\_vendor\rich\status.py:40:            refresh_per_second=refresh_per_second,
.venv\Lib\site-packages\pip\_vendor\rich\status.py:79:            self._live.update(self.renderable, refresh=True)
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:193:    "micronesia": "🇫🇲",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:3147:    "flag_for_micronesia": "🇫🇲",
.venv\Lib\site-packages\pip_audit\_state.py:127:        refresh_per_second: float = 12.5,
.venv\Lib\site-packages\pip_audit\_state.py:137:        `refresh_per_second` is the number of refreshes per second. Defaults to 12.5.
.venv\Lib\site-packages\pip_audit\_state.py:145:            refresh_per_second=refresh_per_second,
.venv\Lib\site-packages\pip_audit\_state.py:178:        self._live.update(self.renderable, refresh=True)
.venv\Lib\site-packages\pip_audit\_state.py:214:        # NOTE: audits can be quite fast, so we need a pretty high refresh rate here.
.venv\Lib\site-packages\pip_audit\_state.py:216:            message, console=self._console, spinner="line", refresh_per_second=30
.venv\Lib\site-packages\pkg_resources\_vendor\jaraco\text\__init__.py:263:    Acronyms should be retained
.venv\Lib\site-packages\pre_commit\lang_base.py:163:        jobs = 1
.venv\Lib\site-packages\pre_commit\lang_base.py:169:        jobs = target_concurrency()
.venv\Lib\site-packages\pre_commit\lang_base.py:170:    return xargs.xargs(cmd, file_args, target_concurrency=jobs, color=color)
.venv\Lib\site-packages\pre_commit\main.py:233:        '-j', '--jobs', type=int, default=1,
.venv\Lib\site-packages\pre_commit\main.py:379:                jobs=args.jobs,
.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:167:        jobs: int = 1,
.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:180:    jobs = jobs or xargs.cpu_count()  # 0 => number of cpus
.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:181:    jobs = min(jobs, len(repos) or len(config_repos))  # max 1-per-thread
.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:182:    jobs = max(jobs, 1)  # at least one thread
.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:183:    with concurrent.futures.ThreadPoolExecutor(jobs) as exe:
.venv\Lib\site-packages\psutil\_pslinux.py:2193:                    # https://travis-ci.org/giampaolo/psutil/jobs/51368273
.venv\Lib\site-packages\psutil\_psosx.py:317:        # https://travis-ci.org/giampaolo/psutil/jobs/309619941
.venv\Lib\site-packages\psutil\tests\test_linux.py:1944:        # https://travis-ci.org/giampaolo/psutil/jobs/225694530
.venv\Lib\site-packages\psutil\tests\test_linux.py:2085:        # https://travis-ci.org/giampaolo/psutil/jobs/51368273
.venv\Lib\site-packages\psutil\tests\test_posix.py:446:                # https://travis-ci.org/giampaolo/psutil/jobs/138338464
.venv\Lib\site-packages\psutil\tests\test_posix.py:447:                # https://travis-ci.org/giampaolo/psutil/jobs/138343361
.venv\Lib\site-packages\psutil\tests\test_unicode.py:116:        # https://ci.appveyor.com/project/giampaolo/psutil/build/job/
.venv\Lib\site-packages\psutil\tests\__init__.py:865:    exist at the time this call is made. Also schedule it for safe
.venv\Lib\site-packages\psutil\tests\__init__.py:1890:            #       job/o53330pbnri9bcw7
.venv\Lib\site-packages\pygments\lexers\actionscript.py:81:                'Point', 'PrintJob', 'PrintJobOptions', 'PrintJobOrientation', 'ProgressEvent', 'Proxy',
.venv\Lib\site-packages\pygments\lexers\automation.py:299:    @desktopheight @desktoprefresh @desktopwidth @documentscommondir @error
.venv\Lib\site-packages\pygments\lexers\business.py:398:             r'RAISE|RAISING|RANGES?|READ|RECEIVE|REDEFINITION|REFRESH|REJECT|REPORT|RESERVE|'
.venv\Lib\site-packages\pygments\lexers\configs.py:515:        "refresh_pattern", "reload_into_ims", "request_body_max_size",
.venv\Lib\site-packages\pygments\lexers\c_like.py:458:        'GSMScanner', 'FileSystem', 'Scheduler', 'GSMServer', 'YunClient', 'YunServer',
.venv\Lib\site-packages\pygments\lexers\dsls.py:273:                    'when', 'timeout', 'schedule'),
.venv\Lib\site-packages\pygments\lexers\dsls.py:406:                'create_resources', 'crit', 'cron', 'debug', 'default',
.venv\Lib\site-packages\pygments\lexers\dsls.py:420:                'schedule', 'scheduled_task', 'search', 'selboolean', 'selmodule',
.venv\Lib\site-packages\pygments\lexers\ecl.py:104:                'COVARIANCE', 'CRON', 'DATASET', 'DEDUP', 'DEFINE', 'DENORMALIZE',
.venv\Lib\site-packages\pygments\lexers\foxpro.py:97:             r'RECNO|RECSIZE|REFRESH|RELATION|REPLICATE|REQUERY|RGB|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:200:             r'InsertCmdDataSource|InsertCmdRefreshCmd|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:201:             r'InsertCmdRefreshFieldList|InsertCmdRefreshKeyFieldList|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:230:             r'PrintJobName|Procedure|PROCESSID|ProgID|ProjectHookClass|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:234:             r'RecordSource|RefreshAlias|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:235:             r'RefreshCmdDataSourceType|RefreshCmdDataSource|RefreshCmd|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:236:             r'RefreshIgnoreFieldList|RefreshTimeStamp|RelationalExpr|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:256:             r'UpdateCmdRefreshCmd|UpdateCmdRefreshFieldList|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:257:             r'UpdateCmdRefreshKeyFieldList|UpdateCmd|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:279:             r'CursorRefresh|DataToClip|DelayedMemoFetch|DeleteColumn|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:286:             r'RecordRefresh|Refresh|ReleaseXML|Release|RemoveFromSCC|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:297:             r'AfterCursorDetach|AfterCursorFill|AfterCursorRefresh|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:299:             r'AfterRecordRefresh|AfterUpdate|AfterDock|AfterReport|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:302:             r'BeforeCursorRefresh|BeforeCursorUpdate|BeforeDelete|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:304:             r'BeforeRecordRefresh|BeforeReport|BeforeRowColChange|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:407:             r'SET\s*REFRESH|SET\s*RELATION|SET\s*RELATION\s*OFF|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:419:             r'DO\s*WHILE|ENDDO|FOR|ENDFOR|NEXT|IF|ELSE|ENDIF|PRINTJOB|'
.venv\Lib\site-packages\pygments\lexers\foxpro.py:420:             r'ENDPRINTJOB|SCAN|ENDSCAN|TEXT|ENDTEXT|=)',
.venv\Lib\site-packages\pygments\lexers\idl.py:84:        'dialog_printersetup', 'dialog_printjob',
.venv\Lib\site-packages\pygments\lexers\lisp.py:2631:        'schedule', 'exp', 'log', 'sin', 'cos', 'tan', 'asin', 'acos', 'atan',
.venv\Lib\site-packages\pygments\lexers\macaulay2.py:940:    "schedule",
.venv\Lib\site-packages\pygments\lexers\markup.py:690:            # Deadline, Scheduled, CLOSED
.venv\Lib\site-packages\pygments\lexers\markup.py:691:            (r'(?i)^( *(?:DEADLINE|SCHEDULED): )(<.+?> *)$',
.venv\Lib\site-packages\pygments\lexers\matlab.py:2096:                        "refresh",
.venv\Lib\site-packages\pygments\lexers\matlab.py:2097:                        "refreshSourceControl",
.venv\Lib\site-packages\pygments\lexers\matlab.py:2098:                        "refreshdata",
.venv\Lib\site-packages\pygments\lexers\matlab.py:3045:        "rectint", "refresh", "refreshdata",
.venv\Lib\site-packages\pygments\lexers\mosel.py:334:    # mosel exam mmjobs | sed -n -e "s/ [pf][a-z]* \([a-zA-Z0-9_]*\).*/'\1',/p" | sort -u
.venv\Lib\site-packages\pygments\lexers\pascal.py:324:        'cronometro',
.venv\Lib\site-packages\pygments\lexers\pascal.py:525:                        # it's not a dot, our job is done
.venv\Lib\site-packages\pygments\lexers\perl.py:346:        'schedule-on','scheduler','scope','sec','sech','second','seek','self',
.venv\Lib\site-packages\pygments\lexers\perl.py:382:        'compiler','Complex','ComplexStr','Cool','CurrentThreadScheduler',
.venv\Lib\site-packages\pygments\lexers\perl.py:403:        'Rational','RatStr','Real','Regex','Routine','Scalar','Scheduler',
.venv\Lib\site-packages\pygments\lexers\perl.py:408:        'Telemetry::Period','Telemetry::Sampler','Thread','ThreadPoolScheduler',
.venv\Lib\site-packages\pygments\lexers\phix.py:136:        'IupRadio', 'IupRecordInput', 'IupRedraw', 'IupRefresh',
.venv\Lib\site-packages\pygments\lexers\phix.py:137:        'IupRefreshChildren', 'IupSeparator', 'IupSetAttribute',
.venv\Lib\site-packages\pygments\lexers\phix.py:260:        'task_delay', 'task_list', 'task_schedule', 'task_self', 'task_status',
.venv\Lib\site-packages\pygments\lexers\scripting.py:661:    lsl_invalid_unimplemented = r'\b(?:CHARACTER_(?:MAX_ANGULAR_(?:ACCEL|SPEED)|TURN_SPEED_MULTIPLIER)|PERMISSION_(?:CHANGE_(?:JOINTS|PERMISSIONS)|RELEASE_OWNERSHIP|REMAP_CONTROLS)|PRIM_PHYSICS_MATERIAL|PSYS_SRC_OBJ_REL_MASK|ll(?:CollisionSprite|(?:Stop)?PointAt|(?:(?:Refresh|Set)Prim)URL|(?:Take|Release)Camera|RemoteLoadScript))\b'
.venv\Lib\site-packages\pygments\lexers\scripting.py:1345:        'RECORD-LENGTH', 'REFRESH', 'RELEASE', 'RENUM', 'REPEAT', 'REPORT',
.venv\Lib\site-packages\pygments\lexers\scripting.py:1367:            (r'(JOB|PARM)' + r'(' + _DELIMITER_PATTERN + r')',
.venv\Lib\site-packages\pygments\lexers\scripting.py:1408:        hasJob = False
.venv\Lib\site-packages\pygments\lexers\scripting.py:1437:                        if not hasJob:
.venv\Lib\site-packages\pygments\lexers\scripting.py:1444:                            if firstWord == 'JOB':
.venv\Lib\site-packages\pygments\lexers\scripting.py:1445:                                hasJob = True
.venv\Lib\site-packages\pygments\lexers\scripting.py:1454:            if hasJob and (hasProc == hasEndProc):
.venv\Lib\site-packages\pygments\lexers\scripting.py:1459:                        # Found PARM, JOB and PROC/END-PROC:
.venv\Lib\site-packages\pygments\lexers\scripting.py:1463:                        # Found PARAM and  JOB: probably this is Easytrieve
.venv\Lib\site-packages\pygments\lexers\scripting.py:1466:                    # Found JOB and possibly other keywords: might be Easytrieve
.venv\Lib\site-packages\pygments\lexers\scripting.py:1483:    Job Control Language (JCL)
.venv\Lib\site-packages\pygments\lexers\scripting.py:1485:    on how to run a batch job or start a subsystem. It is somewhat
.venv\Lib\site-packages\pygments\lexers\scripting.py:1492:    url = 'https://en.wikipedia.org/wiki/Job_Control_Language'
.venv\Lib\site-packages\pygments\lexers\scripting.py:1507:            (r'([a-z]\w*)(\s+)(exec|job)(\s*)',
.venv\Lib\site-packages\pygments\lexers\scripting.py:1521:            (r'\b(jobparam|message|netacct|notify|output|priority|route|'
.venv\Lib\site-packages\pygments\lexers\scripting.py:1549:    _JOB_HEADER_PATTERN = re.compile(r'^//[a-z#$@][a-z0-9#$@]{0,7}\s+job(\s+.*)?$',
.venv\Lib\site-packages\pygments\lexers\scripting.py:1554:        Recognize JCL job by header.
.venv\Lib\site-packages\pygments\lexers\scripting.py:1559:            if JclLexer._JOB_HEADER_PATTERN.match(lines[0]):
.venv\Lib\site-packages\pygments\lexers\shell.py:62:             r'export|false|fc|fg|getopts|hash|help|history|jobs|kill|let|'
.venv\Lib\site-packages\pygments\lexers\shell.py:579:             r'glob|getspath|hashstat|history|hup|inlib|jobs|kill|'
.venv\Lib\site-packages\pygments\lexers\shell.py:806:             r'history|isatty|jobs|math|mimedb|nextd|open|popd|prevd|psub|'
.venv\Lib\site-packages\pygments\lexers\thingsdb.py:97:             r'refresh_module|set_module_conf|set_module_scope|'
.venv\Lib\site-packages\pygments\lexers\unicon.py:108:                'real', 'receive', 'Refresh', 'Rem', 'remove', 'rename',
.venv\Lib\site-packages\pygments\lexers\unicon.py:251:                'real', 'receive', 'Refresh', 'Rem', 'remove', 'rename',
.venv\Lib\site-packages\pygments\lexers\unicon.py:361:                'refresh', 'rswap',
.venv\Lib\site-packages\pygments\lexers\urbi.py:92:                'Hash', 'InputStream', 'IoService', 'Job', 'Kernel', 'Lazy', 'List',
.venv\Lib\site-packages\pygments\lexers\_cocoa_builtins.py:14:COCOA_INTERFACES = {'AAAttribution', 'ABNewPersonViewController', 'ABPeoplePickerNavigationController', 'ABPersonViewController', 'ABUnknownPersonViewController', 'ACAccount', 'ACAccountCredential', 'ACAccountStore', 'ACAccountType', 'ADBannerView', 'ADClient', 'ADInterstitialAd', 'ADInterstitialAdPresentationViewController', 'AEAssessmentConfiguration', 'AEAssessmentSession', 'ALAsset', 'ALAssetRepresentation', 'ALAssetsFilter', 'ALA
ssetsGroup', 'ALAssetsLibrary', 'APActivationPayload', 'ARAnchor', 'ARAppClipCodeAnchor', 'ARBody2D', 'ARBodyAnchor', 'ARBodyTrackingConfiguration', 'ARCamera', 'ARCoachingOverlayView', 'ARCollaborationData', 'ARConfiguration', 'ARDepthData', 'ARDirectionalLightEstimate', 'AREnvironmentProbeAnchor', 'ARFaceAnchor', 'ARFaceGeometry', 'ARFaceTrackingConfiguration', 'ARFrame', 'ARGeoAnchor', 'ARGeoTrackingConfiguration', 'ARGeoTrackingStatus', 'ARGeometryElement', 'ARGeometrySource', 'ARHitTestResu
lt', 'ARImageAnchor', 'ARImageTrackingConfiguration', 'ARLightEstimate', 'ARMatteGenerator', 'ARMeshAnchor', 'ARMeshGeometry', 'ARObjectAnchor', 'ARObjectScanningConfiguration', 'AROrientationTrackingConfiguration', 'ARParticipantAnchor', 'ARPlaneAnchor', 'ARPlaneGeometry', 'ARPointCloud', 'ARPositionalTrackingConfiguration', 'ARQuickLookPreviewItem', 'ARRaycastQuery', 'ARRaycastResult', 'ARReferenceImage', 'ARReferenceObject', 'ARSCNFaceGeometry', 'ARSCNPlaneGeometry', 'ARSCNView', 'ARSKView',
'ARSession', 'ARSkeleton', 'ARSkeleton2D', 'ARSkeleton3D', 'ARSkeletonDefinition', 'ARTrackedRaycast', 'ARVideoFormat', 'ARView', 'ARWorldMap', 'ARWorldTrackingConfiguration', 'ASAccountAuthenticationModificationController', 'ASAccountAuthenticationModificationExtensionContext', 'ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest', 'ASAccountAuthenticationModificationRequest', 'ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest', 'ASAccountAuthent
icationModificationViewController', 'ASAuthorization', 'ASAuthorizationAppleIDButton', 'ASAuthorizationAppleIDCredential', 'ASAuthorizationAppleIDProvider', 'ASAuthorizationAppleIDRequest', 'ASAuthorizationController', 'ASAuthorizationOpenIDRequest', 'ASAuthorizationPasswordProvider', 'ASAuthorizationPasswordRequest', 'ASAuthorizationProviderExtensionAuthorizationRequest', 'ASAuthorizationRequest', 'ASAuthorizationSingleSignOnCredential', 'ASAuthorizationSingleSignOnProvider', 'ASAuthorizationSi
ngleSignOnRequest', 'ASCredentialIdentityStore', 'ASCredentialIdentityStoreState', 'ASCredentialProviderExtensionContext', 'ASCredentialProviderViewController', 'ASCredentialServiceIdentifier', 'ASIdentifierManager', 'ASPasswordCredential', 'ASPasswordCredentialIdentity', 'ASWebAuthenticationSession', 'ASWebAuthenticationSessionRequest', 'ASWebAuthenticationSessionWebBrowserSessionManager', 'ATTrackingManager', 'AUAudioUnit', 'AUAudioUnitBus', 'AUAudioUnitBusArray', 'AUAudioUnitPreset', 'AUAudio
UnitV2Bridge', 'AUAudioUnitViewConfiguration', 'AUParameter', 'AUParameterGroup', 'AUParameterNode', 'AUParameterTree', 'AUViewController', 'AVAggregateAssetDownloadTask', 'AVAsset', 'AVAssetCache', 'AVAssetDownloadStorageManagementPolicy', 'AVAssetDownloadStorageManager', 'AVAssetDownloadTask', 'AVAssetDownloadURLSession', 'AVAssetExportSession', 'AVAssetImageGenerator', 'AVAssetReader', 'AVAssetReaderAudioMixOutput', 'AVAssetReaderOutput', 'AVAssetReaderOutputMetadataAdaptor', 'AVAssetReaderSa
mpleReferenceOutput', 'AVAssetReaderTrackOutput', 'AVAssetReaderVideoCompositionOutput', 'AVAssetResourceLoader', 'AVAssetResourceLoadingContentInformationRequest', 'AVAssetResourceLoadingDataRequest', 'AVAssetResourceLoadingRequest', 'AVAssetResourceLoadingRequestor', 'AVAssetResourceRenewalRequest', 'AVAssetSegmentReport', 'AVAssetSegmentReportSampleInformation', 'AVAssetSegmentTrackReport', 'AVAssetTrack', 'AVAssetTrackGroup', 'AVAssetTrackSegment', 'AVAssetWriter', 'AVAssetWriterInput', 'AVA
ssetWriterInputGroup', 'AVAssetWriterInputMetadataAdaptor', 'AVAssetWriterInputPassDescription', 'AVAssetWriterInputPixelBufferAdaptor', 'AVAsynchronousCIImageFilteringRequest', 'AVAsynchronousVideoCompositionRequest', 'AVAudioMix', 'AVAudioMixInputParameters', 'AVAudioSession', 'AVCameraCalibrationData', 'AVCaptureAudioChannel', 'AVCaptureAudioDataOutput', 'AVCaptureAudioFileOutput', 'AVCaptureAudioPreviewOutput', 'AVCaptureAutoExposureBracketedStillImageSettings', 'AVCaptureBracketedStillImage
Settings', 'AVCaptureConnection', 'AVCaptureDataOutputSynchronizer', 'AVCaptureDepthDataOutput', 'AVCaptureDevice', 'AVCaptureDeviceDiscoverySession', 'AVCaptureDeviceFormat', 'AVCaptureDeviceInput', 'AVCaptureDeviceInputSource', 'AVCaptureFileOutput', 'AVCaptureInput', 'AVCaptureInputPort', 'AVCaptureManualExposureBracketedStillImageSettings', 'AVCaptureMetadataInput', 'AVCaptureMetadataOutput', 'AVCaptureMovieFileOutput', 'AVCaptureMultiCamSession', 'AVCaptureOutput', 'AVCapturePhoto', 'AVCapt
urePhotoBracketSettings', 'AVCapturePhotoOutput', 'AVCapturePhotoSettings', 'AVCaptureResolvedPhotoSettings', 'AVCaptureScreenInput', 'AVCaptureSession', 'AVCaptureStillImageOutput', 'AVCaptureSynchronizedData', 'AVCaptureSynchronizedDataCollection', 'AVCaptureSynchronizedDepthData', 'AVCaptureSynchronizedMetadataObjectData', 'AVCaptureSynchronizedSampleBufferData', 'AVCaptureSystemPressureState', 'AVCaptureVideoDataOutput', 'AVCaptureVideoPreviewLayer', 'AVComposition', 'AVCompositionTrack', 'A
VCompositionTrackFormatDescriptionReplacement', 'AVCompositionTrackSegment', 'AVContentKeyRequest', 'AVContentKeyResponse', 'AVContentKeySession', 'AVDateRangeMetadataGroup', 'AVDepthData', 'AVDisplayCriteria', 'AVFragmentedAsset', 'AVFragmentedAssetMinder', 'AVFragmentedAssetTrack', 'AVFragmentedMovie', 'AVFragmentedMovieMinder', 'AVFragmentedMovieTrack', 'AVFrameRateRange', 'AVMediaDataStorage', 'AVMediaSelection', 'AVMediaSelectionGroup', 'AVMediaSelectionOption', 'AVMetadataBodyObject', 'AVM
etadataCatBodyObject', 'AVMetadataDogBodyObject', 'AVMetadataFaceObject', 'AVMetadataGroup', 'AVMetadataHumanBodyObject', 'AVMetadataItem', 'AVMetadataItemFilter', 'AVMetadataItemValueRequest', 'AVMetadataMachineReadableCodeObject', 'AVMetadataObject', 'AVMetadataSalientObject', 'AVMovie', 'AVMovieTrack', 'AVMutableAssetDownloadStorageManagementPolicy', 'AVMutableAudioMix', 'AVMutableAudioMixInputParameters', 'AVMutableComposition', 'AVMutableCompositionTrack', 'AVMutableDateRangeMetadataGroup',
 'AVMutableMediaSelection', 'AVMutableMetadataItem', 'AVMutableMovie', 'AVMutableMovieTrack', 'AVMutableTimedMetadataGroup', 'AVMutableVideoComposition', 'AVMutableVideoCompositionInstruction', 'AVMutableVideoCompositionLayerInstruction', 'AVOutputSettingsAssistant', 'AVPersistableContentKeyRequest', 'AVPictureInPictureController', 'AVPlayer', 'AVPlayerItem', 'AVPlayerItemAccessLog', 'AVPlayerItemAccessLogEvent', 'AVPlayerItemErrorLog', 'AVPlayerItemErrorLogEvent', 'AVPlayerItemLegibleOutput', '
AVPlayerItemMediaDataCollector', 'AVPlayerItemMetadataCollector', 'AVPlayerItemMetadataOutput', 'AVPlayerItemOutput', 'AVPlayerItemTrack', 'AVPlayerItemVideoOutput', 'AVPlayerLayer', 'AVPlayerLooper', 'AVPlayerMediaSelectionCriteria', 'AVPlayerViewController', 'AVPortraitEffectsMatte', 'AVQueuePlayer', 'AVRouteDetector', 'AVRoutePickerView', 'AVSampleBufferAudioRenderer', 'AVSampleBufferDisplayLayer', 'AVSampleBufferRenderSynchronizer', 'AVSemanticSegmentationMatte', 'AVSynchronizedLayer', 'AVTe
xtStyleRule', 'AVTimedMetadataGroup', 'AVURLAsset', 'AVVideoComposition', 'AVVideoCompositionCoreAnimationTool', 'AVVideoCompositionInstruction', 'AVVideoCompositionLayerInstruction', 'AVVideoCompositionRenderContext', 'AVVideoCompositionRenderHint', 'AXCustomContent', 'BCChatAction', 'BCChatButton', 'BGAppRefreshTask', 'BGAppRefreshTaskRequest', 'BGProcessingTask', 'BGProcessingTaskRequest', 'BGTask', 'BGTaskRequest', 'BGTaskScheduler', 'CAAnimation', 'CAAnimationGroup', 'CABTMIDICentralViewCon
troller', 'CABTMIDILocalPeripheralViewController', 'CABasicAnimation', 'CADisplayLink', 'CAEAGLLayer', 'CAEmitterCell', 'CAEmitterLayer', 'CAGradientLayer', 'CAInterAppAudioSwitcherView', 'CAInterAppAudioTransportView', 'CAKeyframeAnimation', 'CALayer', 'CAMediaTimingFunction', 'CAMetalLayer', 'CAPropertyAnimation', 'CAReplicatorLayer', 'CAScrollLayer', 'CAShapeLayer', 'CASpringAnimation', 'CATextLayer', 'CATiledLayer', 'CATransaction', 'CATransformLayer', 'CATransition', 'CAValueFunction', 'CBA
TTRequest', 'CBAttribute', 'CBCentral', 'CBCentralManager', 'CBCharacteristic', 'CBDescriptor', 'CBL2CAPChannel', 'CBManager', 'CBMutableCharacteristic', 'CBMutableDescriptor', 'CBMutableService', 'CBPeer', 'CBPeripheral', 'CBPeripheralManager', 'CBService', 'CBUUID', 'CHHapticDynamicParameter', 'CHHapticEngine', 'CHHapticEvent', 'CHHapticEventParameter', 'CHHapticParameterCurve', 'CHHapticParameterCurveControlPoint', 'CHHapticPattern', 'CIAztecCodeDescriptor', 'CIBarcodeDescriptor', 'CIBlendKer
nel', 'CIColor', 'CIColorKernel', 'CIContext', 'CIDataMatrixCodeDescriptor', 'CIDetector', 'CIFaceFeature', 'CIFeature', 'CIFilter', 'CIFilterGenerator', 'CIFilterShape', 'CIImage', 'CIImageAccumulator', 'CIImageProcessorKernel', 'CIKernel', 'CIPDF417CodeDescriptor', 'CIPlugIn', 'CIQRCodeDescriptor', 'CIQRCodeFeature', 'CIRectangleFeature', 'CIRenderDestination', 'CIRenderInfo', 'CIRenderTask', 'CISampler', 'CITextFeature', 'CIVector', 'CIWarpKernel', 'CKAcceptSharesOperation', 'CKAsset', 'CKCon
tainer', 'CKDatabase', 'CKDatabaseNotification', 'CKDatabaseOperation', 'CKDatabaseSubscription', 'CKDiscoverAllUserIdentitiesOperation', 'CKDiscoverUserIdentitiesOperation', 'CKFetchDatabaseChangesOperation', 'CKFetchNotificationChangesOperation', 'CKFetchRecordChangesOperation', 'CKFetchRecordZoneChangesConfiguration', 'CKFetchRecordZoneChangesOperation', 'CKFetchRecordZoneChangesOptions', 'CKFetchRecordZonesOperation', 'CKFetchRecordsOperation', 'CKFetchShareMetadataOperation', 'CKFetchShareP
articipantsOperation', 'CKFetchSubscriptionsOperation', 'CKFetchWebAuthTokenOperation', 'CKLocationSortDescriptor', 'CKMarkNotificationsReadOperation', 'CKModifyBadgeOperation', 'CKModifyRecordZonesOperation', 'CKModifyRecordsOperation', 'CKModifySubscriptionsOperation', 'CKNotification', 'CKNotificationID', 'CKNotificationInfo', 'CKOperation', 'CKOperationConfiguration', 'CKOperationGroup', 'CKQuery', 'CKQueryCursor', 'CKQueryNotification', 'CKQueryOperation', 'CKQuerySubscription', 'CKRecord',
 'CKRecordID', 'CKRecordZone', 'CKRecordZoneID', 'CKRecordZoneNotification', 'CKRecordZoneSubscription', 'CKReference', 'CKServerChangeToken', 'CKShare', 'CKShareMetadata', 'CKShareParticipant', 'CKSubscription', 'CKUserIdentity', 'CKUserIdentityLookupInfo', 'CLBeacon', 'CLBeaconIdentityConstraint', 'CLBeaconRegion', 'CLCircularRegion', 'CLFloor', 'CLGeocoder', 'CLHeading', 'CLKComplication', 'CLKComplicationDescriptor', 'CLKComplicationServer', 'CLKComplicationTemplate', 'CLKComplicationTemplat
eCircularSmallRingImage', 'CLKComplicationTemplateCircularSmallRingText', 'CLKComplicationTemplateCircularSmallSimpleImage', 'CLKComplicationTemplateCircularSmallSimpleText', 'CLKComplicationTemplateCircularSmallStackImage', 'CLKComplicationTemplateCircularSmallStackText', 'CLKComplicationTemplateExtraLargeColumnsText', 'CLKComplicationTemplateExtraLargeRingImage', 'CLKComplicationTemplateExtraLargeRingText', 'CLKComplicationTemplateExtraLargeSimpleImage', 'CLKComplicationTemplateExtraLargeSimpl
eText', 'CLKComplicationTemplateExtraLargeStackImage', 'CLKComplicationTemplateExtraLargeStackText', 'CLKComplicationTemplateGraphicBezelCircularText', 'CLKComplicationTemplateGraphicCircular', 'CLKComplicationTemplateGraphicCircularClosedGaugeImage', 'CLKComplicationTemplateGraphicCircularClosedGaugeText', 'CLKComplicationTemplateGraphicCircularImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeRangeText', 'CLKComplicationTemplateGrap
hicCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicCircularStackImage', 'CLKComplicationTemplateGraphicCircularStackText', 'CLKComplicationTemplateGraphicCornerCircularImage', 'CLKComplicationTemplateGraphicCornerGaugeImage', 'CLKComplicationTemplateGraphicCornerGaugeText', 'CLKComplicationTemplateGraphicCornerStackText', 'CLKComplicationTemplateGraphicCornerTextImage', 'CLKComplicationTemplateGraphicExtraLargeCircular', 'CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeIm
age', 'CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText', 'CLKComplicationTemplateGraphicExtraLargeCircularImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicExtraLargeCircularStackImage', 'CLKComplicationTemplateGraphicExtraLargeCircularStackText', 'CLKComplicationTemplateGraphicRectangul
arFullImage', 'CLKComplicationTemplateGraphicRectangularLargeImage', 'CLKComplicationTemplateGraphicRectangularStandardBody', 'CLKComplicationTemplateGraphicRectangularTextGauge', 'CLKComplicationTemplateModularLargeColumns', 'CLKComplicationTemplateModularLargeStandardBody', 'CLKComplicationTemplateModularLargeTable', 'CLKComplicationTemplateModularLargeTallBody', 'CLKComplicationTemplateModularSmallColumnsText', 'CLKComplicationTemplateModularSmallRingImage', 'CLKComplicationTemplateModularSma
llRingText', 'CLKComplicationTemplateModularSmallSimpleImage', 'CLKComplicationTemplateModularSmallSimpleText', 'CLKComplicationTemplateModularSmallStackImage', 'CLKComplicationTemplateModularSmallStackText', 'CLKComplicationTemplateUtilitarianLargeFlat', 'CLKComplicationTemplateUtilitarianSmallFlat', 'CLKComplicationTemplateUtilitarianSmallRingImage', 'CLKComplicationTemplateUtilitarianSmallRingText', 'CLKComplicationTemplateUtilitarianSmallSquare', 'CLKComplicationTimelineEntry', 'CLKDateTextP
rovider', 'CLKFullColorImageProvider', 'CLKGaugeProvider', 'CLKImageProvider', 'CLKRelativeDateTextProvider', 'CLKSimpleGaugeProvider', 'CLKSimpleTextProvider', 'CLKTextProvider', 'CLKTimeIntervalGaugeProvider', 'CLKTimeIntervalTextProvider', 'CLKTimeTextProvider', 'CLKWatchFaceLibrary', 'CLLocation', 'CLLocationManager', 'CLPlacemark', 'CLRegion', 'CLSActivity', 'CLSActivityItem', 'CLSBinaryItem', 'CLSContext', 'CLSDataStore', 'CLSObject', 'CLSProgressReportingCapability', 'CLSQuantityItem', 'C
LSScoreItem', 'CLVisit', 'CMAccelerometerData', 'CMAltimeter', 'CMAltitudeData', 'CMAttitude', 'CMDeviceMotion', 'CMDyskineticSymptomResult', 'CMFallDetectionEvent', 'CMFallDetectionManager', 'CMGyroData', 'CMHeadphoneMotionManager', 'CMLogItem', 'CMMagnetometerData', 'CMMotionActivity', 'CMMotionActivityManager', 'CMMotionManager', 'CMMovementDisorderManager', 'CMPedometer', 'CMPedometerData', 'CMPedometerEvent', 'CMRecordedAccelerometerData', 'CMRecordedRotationRateData', 'CMRotationRateData',
 'CMSensorDataList', 'CMSensorRecorder', 'CMStepCounter', 'CMTremorResult', 'CNChangeHistoryAddContactEvent', 'CNChangeHistoryAddGroupEvent', 'CNChangeHistoryAddMemberToGroupEvent', 'CNChangeHistoryAddSubgroupToGroupEvent', 'CNChangeHistoryDeleteContactEvent', 'CNChangeHistoryDeleteGroupEvent', 'CNChangeHistoryDropEverythingEvent', 'CNChangeHistoryEvent', 'CNChangeHistoryFetchRequest', 'CNChangeHistoryRemoveMemberFromGroupEvent', 'CNChangeHistoryRemoveSubgroupFromGroupEvent', 'CNChangeHistoryUpd
ateContactEvent', 'CNChangeHistoryUpdateGroupEvent', 'CNContact', 'CNContactFetchRequest', 'CNContactFormatter', 'CNContactPickerViewController', 'CNContactProperty', 'CNContactRelation', 'CNContactStore', 'CNContactVCardSerialization', 'CNContactViewController', 'CNContactsUserDefaults', 'CNContainer', 'CNFetchRequest', 'CNFetchResult', 'CNGroup', 'CNInstantMessageAddress', 'CNLabeledValue', 'CNMutableContact', 'CNMutableGroup', 'CNMutablePostalAddress', 'CNPhoneNumber', 'CNPostalAddress', 'CNP
ostalAddressFormatter', 'CNSaveRequest', 'CNSocialProfile', 'CPActionSheetTemplate', 'CPAlertAction', 'CPAlertTemplate', 'CPBarButton', 'CPButton', 'CPContact', 'CPContactCallButton', 'CPContactDirectionsButton', 'CPContactMessageButton', 'CPContactTemplate', 'CPDashboardButton', 'CPDashboardController', 'CPGridButton', 'CPGridTemplate', 'CPImageSet', 'CPInformationItem', 'CPInformationRatingItem', 'CPInformationTemplate', 'CPInterfaceController', 'CPListImageRowItem', 'CPListItem', 'CPListSecti
on', 'CPListTemplate', 'CPManeuver', 'CPMapButton', 'CPMapTemplate', 'CPMessageComposeBarButton', 'CPMessageListItem', 'CPMessageListItemLeadingConfiguration', 'CPMessageListItemTrailingConfiguration', 'CPNavigationAlert', 'CPNavigationSession', 'CPNowPlayingAddToLibraryButton', 'CPNowPlayingButton', 'CPNowPlayingImageButton', 'CPNowPlayingMoreButton', 'CPNowPlayingPlaybackRateButton', 'CPNowPlayingRepeatButton', 'CPNowPlayingShuffleButton', 'CPNowPlayingTemplate', 'CPPointOfInterest', 'CPPointO
fInterestTemplate', 'CPRouteChoice', 'CPSearchTemplate', 'CPSessionConfiguration', 'CPTabBarTemplate', 'CPTemplate', 'CPTemplateApplicationDashboardScene', 'CPTemplateApplicationScene', 'CPTextButton', 'CPTravelEstimates', 'CPTrip', 'CPTripPreviewTextConfiguration', 'CPVoiceControlState', 'CPVoiceControlTemplate', 'CPWindow', 'CSCustomAttributeKey', 'CSIndexExtensionRequestHandler', 'CSLocalizedString', 'CSPerson', 'CSSearchQuery', 'CSSearchableIndex', 'CSSearchableItem', 'CSSearchableItemAttrib
uteSet', 'CTCall', 'CTCallCenter', 'CTCarrier', 'CTCellularData', 'CTCellularPlanProvisioning', 'CTCellularPlanProvisioningRequest', 'CTSubscriber', 'CTSubscriberInfo', 'CTTelephonyNetworkInfo', 'CXAction', 'CXAnswerCallAction', 'CXCall', 'CXCallAction', 'CXCallController', 'CXCallDirectoryExtensionContext', 'CXCallDirectoryManager', 'CXCallDirectoryProvider', 'CXCallObserver', 'CXCallUpdate', 'CXEndCallAction', 'CXHandle', 'CXPlayDTMFCallAction', 'CXProvider', 'CXProviderConfiguration', 'CXSetG
roupCallAction', 'CXSetHeldCallAction', 'CXSetMutedCallAction', 'CXStartCallAction', 'CXTransaction', 'DCAppAttestService', 'DCDevice', 'EAAccessory', 'EAAccessoryManager', 'EAGLContext', 'EAGLSharegroup', 'EASession', 'EAWiFiUnconfiguredAccessory', 'EAWiFiUnconfiguredAccessoryBrowser', 'EKAlarm', 'EKCalendar', 'EKCalendarChooser', 'EKCalendarItem', 'EKEvent', 'EKEventEditViewController', 'EKEventStore', 'EKEventViewController', 'EKObject', 'EKParticipant', 'EKRecurrenceDayOfWeek', 'EKRecurrence
End', 'EKRecurrenceRule', 'EKReminder', 'EKSource', 'EKStructuredLocation', 'ENExposureConfiguration', 'ENExposureDaySummary', 'ENExposureDetectionSummary', 'ENExposureInfo', 'ENExposureSummaryItem', 'ENExposureWindow', 'ENManager', 'ENScanInstance', 'ENTemporaryExposureKey', 'EntityRotationGestureRecognizer', 'EntityScaleGestureRecognizer', 'EntityTranslationGestureRecognizer', 'FPUIActionExtensionContext', 'FPUIActionExtensionViewController', 'GCColor', 'GCController', 'GCControllerAxisInput',
 'GCControllerButtonInput', 'GCControllerDirectionPad', 'GCControllerElement', 'GCControllerTouchpad', 'GCDeviceBattery', 'GCDeviceCursor', 'GCDeviceHaptics', 'GCDeviceLight', 'GCDirectionalGamepad', 'GCDualShockGamepad', 'GCEventViewController', 'GCExtendedGamepad', 'GCExtendedGamepadSnapshot', 'GCGamepad', 'GCGamepadSnapshot', 'GCKeyboard', 'GCKeyboardInput', 'GCMicroGamepad', 'GCMicroGamepadSnapshot', 'GCMotion', 'GCMouse', 'GCMouseInput', 'GCPhysicalInputProfile', 'GCXboxGamepad', 'GKARC4Ran
domSource', 'GKAccessPoint', 'GKAchievement', 'GKAchievementChallenge', 'GKAchievementDescription', 'GKAchievementViewController', 'GKAgent', 'GKAgent2D', 'GKAgent3D', 'GKBasePlayer', 'GKBehavior', 'GKBillowNoiseSource', 'GKChallenge', 'GKChallengeEventHandler', 'GKCheckerboardNoiseSource', 'GKCircleObstacle', 'GKCloudPlayer', 'GKCoherentNoiseSource', 'GKComponent', 'GKComponentSystem', 'GKCompositeBehavior', 'GKConstantNoiseSource', 'GKCylindersNoiseSource', 'GKDecisionNode', 'GKDecisionTree',
'GKEntity', 'GKFriendRequestComposeViewController', 'GKGameCenterViewController', 'GKGameSession', 'GKGameSessionSharingViewController', 'GKGaussianDistribution', 'GKGoal', 'GKGraph', 'GKGraphNode', 'GKGraphNode2D', 'GKGraphNode3D', 'GKGridGraph', 'GKGridGraphNode', 'GKInvite', 'GKLeaderboard', 'GKLeaderboardEntry', 'GKLeaderboardScore', 'GKLeaderboardSet', 'GKLeaderboardViewController', 'GKLinearCongruentialRandomSource', 'GKLocalPlayer', 'GKMatch', 'GKMatchRequest', 'GKMatchmaker', 'GKMatchmak
erViewController', 'GKMersenneTwisterRandomSource', 'GKMeshGraph', 'GKMinmaxStrategist', 'GKMonteCarloStrategist', 'GKNSPredicateRule', 'GKNoise', 'GKNoiseMap', 'GKNoiseSource', 'GKNotificationBanner', 'GKObstacle', 'GKObstacleGraph', 'GKOctree', 'GKOctreeNode', 'GKPath', 'GKPeerPickerController', 'GKPerlinNoiseSource', 'GKPlayer', 'GKPolygonObstacle', 'GKQuadtree', 'GKQuadtreeNode', 'GKRTree', 'GKRandomDistribution', 'GKRandomSource', 'GKRidgedNoiseSource', 'GKRule', 'GKRuleSystem', 'GKSCNNodeC
omponent', 'GKSKNodeComponent', 'GKSavedGame', 'GKScene', 'GKScore', 'GKScoreChallenge', 'GKSession', 'GKShuffledDistribution', 'GKSphereObstacle', 'GKSpheresNoiseSource', 'GKState', 'GKStateMachine', 'GKTurnBasedEventHandler', 'GKTurnBasedExchangeReply', 'GKTurnBasedMatch', 'GKTurnBasedMatchmakerViewController', 'GKTurnBasedParticipant', 'GKVoiceChat', 'GKVoiceChatService', 'GKVoronoiNoiseSource', 'GLKBaseEffect', 'GLKEffectProperty', 'GLKEffectPropertyFog', 'GLKEffectPropertyLight', 'GLKEffect
PropertyMaterial', 'GLKEffectPropertyTexture', 'GLKEffectPropertyTransform', 'GLKMesh', 'GLKMeshBuffer', 'GLKMeshBufferAllocator', 'GLKReflectionMapEffect', 'GLKSkyboxEffect', 'GLKSubmesh', 'GLKTextureInfo', 'GLKTextureLoader', 'GLKView', 'GLKViewController', 'HKActivityMoveModeObject', 'HKActivityRingView', 'HKActivitySummary', 'HKActivitySummaryQuery', 'HKActivitySummaryType', 'HKAnchoredObjectQuery', 'HKAudiogramSample', 'HKAudiogramSampleType', 'HKAudiogramSensitivityPoint', 'HKBiologicalSex
Object', 'HKBloodTypeObject', 'HKCDADocument', 'HKCDADocumentSample', 'HKCategorySample', 'HKCategoryType', 'HKCharacteristicType', 'HKClinicalRecord', 'HKClinicalType', 'HKCorrelation', 'HKCorrelationQuery', 'HKCorrelationType', 'HKCumulativeQuantitySample', 'HKCumulativeQuantitySeriesSample', 'HKDeletedObject', 'HKDevice', 'HKDiscreteQuantitySample', 'HKDocumentQuery', 'HKDocumentSample', 'HKDocumentType', 'HKElectrocardiogram', 'HKElectrocardiogramQuery', 'HKElectrocardiogramType', 'HKElectro
cardiogramVoltageMeasurement', 'HKFHIRResource', 'HKFHIRVersion', 'HKFitzpatrickSkinTypeObject', 'HKHealthStore', 'HKHeartbeatSeriesBuilder', 'HKHeartbeatSeriesQuery', 'HKHeartbeatSeriesSample', 'HKLiveWorkoutBuilder', 'HKLiveWorkoutDataSource', 'HKObject', 'HKObjectType', 'HKObserverQuery', 'HKQuantity', 'HKQuantitySample', 'HKQuantitySeriesSampleBuilder', 'HKQuantitySeriesSampleQuery', 'HKQuantityType', 'HKQuery', 'HKQueryAnchor', 'HKSample', 'HKSampleQuery', 'HKSampleType', 'HKSeriesBuilder',
 'HKSeriesSample', 'HKSeriesType', 'HKSource', 'HKSourceQuery', 'HKSourceRevision', 'HKStatistics', 'HKStatisticsCollection', 'HKStatisticsCollectionQuery', 'HKStatisticsQuery', 'HKUnit', 'HKWheelchairUseObject', 'HKWorkout', 'HKWorkoutBuilder', 'HKWorkoutConfiguration', 'HKWorkoutEvent', 'HKWorkoutRoute', 'HKWorkoutRouteBuilder', 'HKWorkoutRouteQuery', 'HKWorkoutSession', 'HKWorkoutType', 'HMAccessControl', 'HMAccessory', 'HMAccessoryBrowser', 'HMAccessoryCategory', 'HMAccessoryOwnershipToken',
 'HMAccessoryProfile', 'HMAccessorySetupPayload', 'HMAction', 'HMActionSet', 'HMAddAccessoryRequest', 'HMCalendarEvent', 'HMCameraAudioControl', 'HMCameraControl', 'HMCameraProfile', 'HMCameraSettingsControl', 'HMCameraSnapshot', 'HMCameraSnapshotControl', 'HMCameraSource', 'HMCameraStream', 'HMCameraStreamControl', 'HMCameraView', 'HMCharacteristic', 'HMCharacteristicEvent', 'HMCharacteristicMetadata', 'HMCharacteristicThresholdRangeEvent', 'HMCharacteristicWriteAction', 'HMDurationEvent', 'HME
vent', 'HMEventTrigger', 'HMHome', 'HMHomeAccessControl', 'HMHomeManager', 'HMLocationEvent', 'HMMutableCalendarEvent', 'HMMutableCharacteristicEvent', 'HMMutableCharacteristicThresholdRangeEvent', 'HMMutableDurationEvent', 'HMMutableLocationEvent', 'HMMutablePresenceEvent', 'HMMutableSignificantTimeEvent', 'HMNetworkConfigurationProfile', 'HMNumberRange', 'HMPresenceEvent', 'HMRoom', 'HMService', 'HMServiceGroup', 'HMSignificantTimeEvent', 'HMTimeEvent', 'HMTimerTrigger', 'HMTrigger', 'HMUser',
 'HMZone', 'ICCameraDevice', 'ICCameraFile', 'ICCameraFolder', 'ICCameraItem', 'ICDevice', 'ICDeviceBrowser', 'ICScannerBandData', 'ICScannerDevice', 'ICScannerFeature', 'ICScannerFeatureBoolean', 'ICScannerFeatureEnumeration', 'ICScannerFeatureRange', 'ICScannerFeatureTemplate', 'ICScannerFunctionalUnit', 'ICScannerFunctionalUnitDocumentFeeder', 'ICScannerFunctionalUnitFlatbed', 'ICScannerFunctionalUnitNegativeTransparency', 'ICScannerFunctionalUnitPositiveTransparency', 'ILCallClassificationRe
quest', 'ILCallCommunication', 'ILClassificationRequest', 'ILClassificationResponse', 'ILClassificationUIExtensionContext', 'ILClassificationUIExtensionViewController', 'ILCommunication', 'ILMessageClassificationRequest', 'ILMessageCommunication', 'ILMessageFilterExtension', 'ILMessageFilterExtensionContext', 'ILMessageFilterQueryRequest', 'ILMessageFilterQueryResponse', 'ILNetworkResponse', 'INAccountTypeResolutionResult', 'INActivateCarSignalIntent', 'INActivateCarSignalIntentResponse', 'INAdd
MediaIntent', 'INAddMediaIntentResponse', 'INAddMediaMediaDestinationResolutionResult', 'INAddMediaMediaItemResolutionResult', 'INAddTasksIntent', 'INAddTasksIntentResponse', 'INAddTasksTargetTaskListResolutionResult', 'INAddTasksTemporalEventTriggerResolutionResult', 'INAirline', 'INAirport', 'INAirportGate', 'INAppendToNoteIntent', 'INAppendToNoteIntentResponse', 'INBalanceAmount', 'INBalanceTypeResolutionResult', 'INBillDetails', 'INBillPayee', 'INBillPayeeResolutionResult', 'INBillTypeResolu
tionResult', 'INBoatReservation', 'INBoatTrip', 'INBookRestaurantReservationIntent', 'INBookRestaurantReservationIntentResponse', 'INBooleanResolutionResult', 'INBusReservation', 'INBusTrip', 'INCallCapabilityResolutionResult', 'INCallDestinationTypeResolutionResult', 'INCallRecord', 'INCallRecordFilter', 'INCallRecordResolutionResult', 'INCallRecordTypeOptionsResolutionResult', 'INCallRecordTypeResolutionResult', 'INCancelRideIntent', 'INCancelRideIntentResponse', 'INCancelWorkoutIntent', 'INCa
ncelWorkoutIntentResponse', 'INCar', 'INCarAirCirculationModeResolutionResult', 'INCarAudioSourceResolutionResult', 'INCarDefrosterResolutionResult', 'INCarHeadUnit', 'INCarSeatResolutionResult', 'INCarSignalOptionsResolutionResult', 'INCreateNoteIntent', 'INCreateNoteIntentResponse', 'INCreateTaskListIntent', 'INCreateTaskListIntentResponse', 'INCurrencyAmount', 'INCurrencyAmountResolutionResult', 'INDailyRoutineRelevanceProvider', 'INDateComponentsRange', 'INDateComponentsRangeResolutionResult
', 'INDateComponentsResolutionResult', 'INDateRelevanceProvider', 'INDateSearchTypeResolutionResult', 'INDefaultCardTemplate', 'INDeleteTasksIntent', 'INDeleteTasksIntentResponse', 'INDeleteTasksTaskListResolutionResult', 'INDeleteTasksTaskResolutionResult', 'INDoubleResolutionResult', 'INEndWorkoutIntent', 'INEndWorkoutIntentResponse', 'INEnergyResolutionResult', 'INEnumResolutionResult', 'INExtension', 'INFile', 'INFileResolutionResult', 'INFlight', 'INFlightReservation', 'INGetAvailableRestau
rantReservationBookingDefaultsIntent', 'INGetAvailableRestaurantReservationBookingDefaultsIntentResponse', 'INGetAvailableRestaurantReservationBookingsIntent', 'INGetAvailableRestaurantReservationBookingsIntentResponse', 'INGetCarLockStatusIntent', 'INGetCarLockStatusIntentResponse', 'INGetCarPowerLevelStatusIntent', 'INGetCarPowerLevelStatusIntentResponse', 'INGetReservationDetailsIntent', 'INGetReservationDetailsIntentResponse', 'INGetRestaurantGuestIntent', 'INGetRestaurantGuestIntentResponse
', 'INGetRideStatusIntent', 'INGetRideStatusIntentResponse', 'INGetUserCurrentRestaurantReservationBookingsIntent', 'INGetUserCurrentRestaurantReservationBookingsIntentResponse', 'INGetVisualCodeIntent', 'INGetVisualCodeIntentResponse', 'INImage', 'INImageNoteContent', 'INIntegerResolutionResult', 'INIntent', 'INIntentResolutionResult', 'INIntentResponse', 'INInteraction', 'INLengthResolutionResult', 'INListCarsIntent', 'INListCarsIntentResponse', 'INListRideOptionsIntent', 'INListRideOptionsInt
entResponse', 'INLocationRelevanceProvider', 'INLocationSearchTypeResolutionResult', 'INLodgingReservation', 'INMassResolutionResult', 'INMediaAffinityTypeResolutionResult', 'INMediaDestination', 'INMediaDestinationResolutionResult', 'INMediaItem', 'INMediaItemResolutionResult', 'INMediaSearch', 'INMediaUserContext', 'INMessage', 'INMessageAttributeOptionsResolutionResult', 'INMessageAttributeResolutionResult', 'INNote', 'INNoteContent', 'INNoteContentResolutionResult', 'INNoteContentTypeResolut
ionResult', 'INNoteResolutionResult', 'INNotebookItemTypeResolutionResult', 'INObject', 'INObjectCollection', 'INObjectResolutionResult', 'INObjectSection', 'INOutgoingMessageTypeResolutionResult', 'INParameter', 'INPauseWorkoutIntent', 'INPauseWorkoutIntentResponse', 'INPayBillIntent', 'INPayBillIntentResponse', 'INPaymentAccount', 'INPaymentAccountResolutionResult', 'INPaymentAmount', 'INPaymentAmountResolutionResult', 'INPaymentMethod', 'INPaymentMethodResolutionResult', 'INPaymentRecord', 'I
NPaymentStatusResolutionResult', 'INPerson', 'INPersonHandle', 'INPersonResolutionResult', 'INPlacemarkResolutionResult', 'INPlayMediaIntent', 'INPlayMediaIntentResponse', 'INPlayMediaMediaItemResolutionResult', 'INPlayMediaPlaybackSpeedResolutionResult', 'INPlaybackQueueLocationResolutionResult', 'INPlaybackRepeatModeResolutionResult', 'INPreferences', 'INPriceRange', 'INRadioTypeResolutionResult', 'INRecurrenceRule', 'INRelativeReferenceResolutionResult', 'INRelativeSettingResolutionResult', '
INRelevanceProvider', 'INRelevantShortcut', 'INRelevantShortcutStore', 'INRentalCar', 'INRentalCarReservation', 'INRequestPaymentCurrencyAmountResolutionResult', 'INRequestPaymentIntent', 'INRequestPaymentIntentResponse', 'INRequestPaymentPayerResolutionResult', 'INRequestRideIntent', 'INRequestRideIntentResponse', 'INReservation', 'INReservationAction', 'INRestaurant', 'INRestaurantGuest', 'INRestaurantGuestDisplayPreferences', 'INRestaurantGuestResolutionResult', 'INRestaurantOffer', 'INRestau
rantReservation', 'INRestaurantReservationBooking', 'INRestaurantReservationUserBooking', 'INRestaurantResolutionResult', 'INResumeWorkoutIntent', 'INResumeWorkoutIntentResponse', 'INRideCompletionStatus', 'INRideDriver', 'INRideFareLineItem', 'INRideOption', 'INRidePartySizeOption', 'INRideStatus', 'INRideVehicle', 'INSaveProfileInCarIntent', 'INSaveProfileInCarIntentResponse', 'INSearchCallHistoryIntent', 'INSearchCallHistoryIntentResponse', 'INSearchForAccountsIntent', 'INSearchForAccountsInt
entResponse', 'INSearchForBillsIntent', 'INSearchForBillsIntentResponse', 'INSearchForMediaIntent', 'INSearchForMediaIntentResponse', 'INSearchForMediaMediaItemResolutionResult', 'INSearchForMessagesIntent', 'INSearchForMessagesIntentResponse', 'INSearchForNotebookItemsIntent', 'INSearchForNotebookItemsIntentResponse', 'INSearchForPhotosIntent', 'INSearchForPhotosIntentResponse', 'INSeat', 'INSendMessageAttachment', 'INSendMessageIntent', 'INSendMessageIntentResponse', 'INSendMessageRecipientRes
olutionResult', 'INSendPaymentCurrencyAmountResolutionResult', 'INSendPaymentIntent', 'INSendPaymentIntentResponse', 'INSendPaymentPayeeResolutionResult', 'INSendRideFeedbackIntent', 'INSendRideFeedbackIntentResponse', 'INSetAudioSourceInCarIntent', 'INSetAudioSourceInCarIntentResponse', 'INSetCarLockStatusIntent', 'INSetCarLockStatusIntentResponse', 'INSetClimateSettingsInCarIntent', 'INSetClimateSettingsInCarIntentResponse', 'INSetDefrosterSettingsInCarIntent', 'INSetDefrosterSettingsInCarInte
ntResponse', 'INSetMessageAttributeIntent', 'INSetMessageAttributeIntentResponse', 'INSetProfileInCarIntent', 'INSetProfileInCarIntentResponse', 'INSetRadioStationIntent', 'INSetRadioStationIntentResponse', 'INSetSeatSettingsInCarIntent', 'INSetSeatSettingsInCarIntentResponse', 'INSetTaskAttributeIntent', 'INSetTaskAttributeIntentResponse', 'INSetTaskAttributeTemporalEventTriggerResolutionResult', 'INShortcut', 'INSnoozeTasksIntent', 'INSnoozeTasksIntentResponse', 'INSnoozeTasksTaskResolutionRes
ult', 'INSpatialEventTrigger', 'INSpatialEventTriggerResolutionResult', 'INSpeakableString', 'INSpeakableStringResolutionResult', 'INSpeedResolutionResult', 'INStartAudioCallIntent', 'INStartAudioCallIntentResponse', 'INStartCallCallCapabilityResolutionResult', 'INStartCallCallRecordToCallBackResolutionResult', 'INStartCallContactResolutionResult', 'INStartCallIntent', 'INStartCallIntentResponse', 'INStartPhotoPlaybackIntent', 'INStartPhotoPlaybackIntentResponse', 'INStartVideoCallIntent', 'INSt
artVideoCallIntentResponse', 'INStartWorkoutIntent', 'INStartWorkoutIntentResponse', 'INStringResolutionResult', 'INTask', 'INTaskList', 'INTaskListResolutionResult', 'INTaskPriorityResolutionResult', 'INTaskResolutionResult', 'INTaskStatusResolutionResult', 'INTemperatureResolutionResult', 'INTemporalEventTrigger', 'INTemporalEventTriggerResolutionResult', 'INTemporalEventTriggerTypeOptionsResolutionResult', 'INTermsAndConditions', 'INTextNoteContent', 'INTicketedEvent', 'INTicketedEventReserva
tion', 'INTimeIntervalResolutionResult', 'INTrainReservation', 'INTrainTrip', 'INTransferMoneyIntent', 'INTransferMoneyIntentResponse', 'INUIAddVoiceShortcutButton', 'INUIAddVoiceShortcutViewController', 'INUIEditVoiceShortcutViewController', 'INURLResolutionResult', 'INUpcomingMediaManager', 'INUpdateMediaAffinityIntent', 'INUpdateMediaAffinityIntentResponse', 'INUpdateMediaAffinityMediaItemResolutionResult', 'INUserContext', 'INVisualCodeTypeResolutionResult', 'INVocabulary', 'INVoiceShortcut'
, 'INVoiceShortcutCenter', 'INVolumeResolutionResult', 'INWorkoutGoalUnitTypeResolutionResult', 'INWorkoutLocationTypeResolutionResult', 'IOSurface', 'JSContext', 'JSManagedValue', 'JSValue', 'JSVirtualMachine', 'LAContext', 'LPLinkMetadata', 'LPLinkView', 'LPMetadataProvider', 'MCAdvertiserAssistant', 'MCBrowserViewController', 'MCNearbyServiceAdvertiser', 'MCNearbyServiceBrowser', 'MCPeerID', 'MCSession', 'MDLAnimatedMatrix4x4', 'MDLAnimatedQuaternion', 'MDLAnimatedQuaternionArray', 'MDLAnimat
edScalar', 'MDLAnimatedScalarArray', 'MDLAnimatedValue', 'MDLAnimatedVector2', 'MDLAnimatedVector3', 'MDLAnimatedVector3Array', 'MDLAnimatedVector4', 'MDLAnimationBindComponent', 'MDLAreaLight', 'MDLAsset', 'MDLBundleAssetResolver', 'MDLCamera', 'MDLCheckerboardTexture', 'MDLColorSwatchTexture', 'MDLLight', 'MDLLightProbe', 'MDLMaterial', 'MDLMaterialProperty', 'MDLMaterialPropertyConnection', 'MDLMaterialPropertyGraph', 'MDLMaterialPropertyNode', 'MDLMatrix4x4Array', 'MDLMesh', 'MDLMeshBufferDa
ta', 'MDLMeshBufferDataAllocator', 'MDLMeshBufferMap', 'MDLMeshBufferZoneDefault', 'MDLNoiseTexture', 'MDLNormalMapTexture', 'MDLObject', 'MDLObjectContainer', 'MDLPackedJointAnimation', 'MDLPathAssetResolver', 'MDLPhotometricLight', 'MDLPhysicallyPlausibleLight', 'MDLPhysicallyPlausibleScatteringFunction', 'MDLRelativeAssetResolver', 'MDLScatteringFunction', 'MDLSkeleton', 'MDLSkyCubeTexture', 'MDLStereoscopicCamera', 'MDLSubmesh', 'MDLSubmeshTopology', 'MDLTexture', 'MDLTextureFilter', 'MDLTex
tureSampler', 'MDLTransform', 'MDLTransformMatrixOp', 'MDLTransformOrientOp', 'MDLTransformRotateOp', 'MDLTransformRotateXOp', 'MDLTransformRotateYOp', 'MDLTransformRotateZOp', 'MDLTransformScaleOp', 'MDLTransformStack', 'MDLTransformTranslateOp', 'MDLURLTexture', 'MDLVertexAttribute', 'MDLVertexAttributeData', 'MDLVertexBufferLayout', 'MDLVertexDescriptor', 'MDLVoxelArray', 'MFMailComposeViewController', 'MFMessageComposeViewController', 'MIDICIDeviceInfo', 'MIDICIDiscoveredNode', 'MIDICIDiscov
eryManager', 'MIDICIProfile', 'MIDICIProfileState', 'MIDICIResponder', 'MIDICISession', 'MIDINetworkConnection', 'MIDINetworkHost', 'MIDINetworkSession', 'MKAnnotationView', 'MKCircle', 'MKCircleRenderer', 'MKCircleView', 'MKClusterAnnotation', 'MKCompassButton', 'MKDirections', 'MKDirectionsRequest', 'MKDirectionsResponse', 'MKDistanceFormatter', 'MKETAResponse', 'MKGeoJSONDecoder', 'MKGeoJSONFeature', 'MKGeodesicPolyline', 'MKGradientPolylineRenderer', 'MKLocalPointsOfInterestRequest', 'MKLoca
lSearch', 'MKLocalSearchCompleter', 'MKLocalSearchCompletion', 'MKLocalSearchRequest', 'MKLocalSearchResponse', 'MKMapCamera', 'MKMapCameraBoundary', 'MKMapCameraZoomRange', 'MKMapItem', 'MKMapSnapshot', 'MKMapSnapshotOptions', 'MKMapSnapshotter', 'MKMapView', 'MKMarkerAnnotationView', 'MKMultiPoint', 'MKMultiPolygon', 'MKMultiPolygonRenderer', 'MKMultiPolyline', 'MKMultiPolylineRenderer', 'MKOverlayPathRenderer', 'MKOverlayPathView', 'MKOverlayRenderer', 'MKOverlayView', 'MKPinAnnotationView',
'MKPitchControl', 'MKPlacemark', 'MKPointAnnotation', 'MKPointOfInterestFilter', 'MKPolygon', 'MKPolygonRenderer', 'MKPolygonView', 'MKPolyline', 'MKPolylineRenderer', 'MKPolylineView', 'MKReverseGeocoder', 'MKRoute', 'MKRouteStep', 'MKScaleView', 'MKShape', 'MKTileOverlay', 'MKTileOverlayRenderer', 'MKUserLocation', 'MKUserLocationView', 'MKUserTrackingBarButtonItem', 'MKUserTrackingButton', 'MKZoomControl', 'MLArrayBatchProvider', 'MLCActivationDescriptor', 'MLCActivationLayer', 'MLCArithmetic
Layer', 'MLCBatchNormalizationLayer', 'MLCConcatenationLayer', 'MLCConvolutionDescriptor', 'MLCConvolutionLayer', 'MLCDevice', 'MLCDropoutLayer', 'MLCEmbeddingDescriptor', 'MLCEmbeddingLayer', 'MLCFullyConnectedLayer', 'MLCGramMatrixLayer', 'MLCGraph', 'MLCGroupNormalizationLayer', 'MLCInferenceGraph', 'MLCInstanceNormalizationLayer', 'MLCLSTMDescriptor', 'MLCLSTMLayer', 'MLCLayer', 'MLCLayerNormalizationLayer', 'MLCLossDescriptor', 'MLCLossLayer', 'MLCMatMulDescriptor', 'MLCMatMulLayer', 'MLCMu
ltiheadAttentionDescriptor', 'MLCMultiheadAttentionLayer', 'MLCPaddingLayer', 'MLCPoolingDescriptor', 'MLCPoolingLayer', 'MLCReductionLayer', 'MLCReshapeLayer', 'MLCSliceLayer', 'MLCSoftmaxLayer', 'MLCSplitLayer', 'MLCTensor', 'MLCTensorData', 'MLCTensorDescriptor', 'MLCTensorOptimizerDeviceData', 'MLCTensorParameter', 'MLCTrainingGraph', 'MLCTransposeLayer', 'MLCUpsampleLayer', 'MLCYOLOLossDescriptor', 'MLCYOLOLossLayer', 'MLDictionaryConstraint', 'MLDictionaryFeatureProvider', 'MLFeatureDescri
ption', 'MLFeatureValue', 'MLImageConstraint', 'MLImageSize', 'MLImageSizeConstraint', 'MLKey', 'MLMetricKey', 'MLModel', 'MLModelCollection', 'MLModelCollectionEntry', 'MLModelConfiguration', 'MLModelDescription', 'MLMultiArray', 'MLMultiArrayConstraint', 'MLMultiArrayShapeConstraint', 'MLNumericConstraint', 'MLParameterDescription', 'MLParameterKey', 'MLPredictionOptions', 'MLSequence', 'MLSequenceConstraint', 'MLTask', 'MLUpdateContext', 'MLUpdateProgressHandlers', 'MLUpdateTask', 'MPChangeLa
nguageOptionCommandEvent', 'MPChangePlaybackPositionCommand', 'MPChangePlaybackPositionCommandEvent', 'MPChangePlaybackRateCommand', 'MPChangePlaybackRateCommandEvent', 'MPChangeRepeatModeCommand', 'MPChangeRepeatModeCommandEvent', 'MPChangeShuffleModeCommand', 'MPChangeShuffleModeCommandEvent', 'MPContentItem', 'MPFeedbackCommand', 'MPFeedbackCommandEvent', 'MPMediaEntity', 'MPMediaItem', 'MPMediaItemArtwork', 'MPMediaItemCollection', 'MPMediaLibrary', 'MPMediaPickerController', 'MPMediaPlaylis
t', 'MPMediaPlaylistCreationMetadata', 'MPMediaPredicate', 'MPMediaPropertyPredicate', 'MPMediaQuery', 'MPMediaQuerySection', 'MPMovieAccessLog', 'MPMovieAccessLogEvent', 'MPMovieErrorLog', 'MPMovieErrorLogEvent', 'MPMoviePlayerController', 'MPMoviePlayerViewController', 'MPMusicPlayerApplicationController', 'MPMusicPlayerController', 'MPMusicPlayerControllerMutableQueue', 'MPMusicPlayerControllerQueue', 'MPMusicPlayerMediaItemQueueDescriptor', 'MPMusicPlayerPlayParameters', 'MPMusicPlayerPlayPa
rametersQueueDescriptor', 'MPMusicPlayerQueueDescriptor', 'MPMusicPlayerStoreQueueDescriptor', 'MPNowPlayingInfoCenter', 'MPNowPlayingInfoLanguageOption', 'MPNowPlayingInfoLanguageOptionGroup', 'MPNowPlayingSession', 'MPPlayableContentManager', 'MPPlayableContentManagerContext', 'MPRatingCommand', 'MPRatingCommandEvent', 'MPRemoteCommand', 'MPRemoteCommandCenter', 'MPRemoteCommandEvent', 'MPSGraph', 'MPSGraphConvolution2DOpDescriptor', 'MPSGraphDepthwiseConvolution2DOpDescriptor', 'MPSGraphDevic
e', 'MPSGraphExecutionDescriptor', 'MPSGraphOperation', 'MPSGraphPooling2DOpDescriptor', 'MPSGraphShapedType', 'MPSGraphTensor', 'MPSGraphTensorData', 'MPSGraphVariableOp', 'MPSeekCommandEvent', 'MPSkipIntervalCommand', 'MPSkipIntervalCommandEvent', 'MPTimedMetadata', 'MPVolumeView', 'MSConversation', 'MSMessage', 'MSMessageLayout', 'MSMessageLiveLayout', 'MSMessageTemplateLayout', 'MSMessagesAppViewController', 'MSServiceAccount', 'MSSession', 'MSSetupSession', 'MSSticker', 'MSStickerBrowserVie
w', 'MSStickerBrowserViewController', 'MSStickerView', 'MTKMesh', 'MTKMeshBuffer', 'MTKMeshBufferAllocator', 'MTKSubmesh', 'MTKTextureLoader', 'MTKView', 'MTLAccelerationStructureBoundingBoxGeometryDescriptor', 'MTLAccelerationStructureDescriptor', 'MTLAccelerationStructureGeometryDescriptor', 'MTLAccelerationStructureTriangleGeometryDescriptor', 'MTLArgument', 'MTLArgumentDescriptor', 'MTLArrayType', 'MTLAttribute', 'MTLAttributeDescriptor', 'MTLAttributeDescriptorArray', 'MTLBinaryArchiveDescr
iptor', 'MTLBlitPassDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptorArray', 'MTLBufferLayoutDescriptor', 'MTLBufferLayoutDescriptorArray', 'MTLCaptureDescriptor', 'MTLCaptureManager', 'MTLCommandBufferDescriptor', 'MTLCompileOptions', 'MTLComputePassDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptorArray', 'MTLComputePipelineDescriptor', 'MTLComputePipelineReflection', 'MTLCounterS
ampleBufferDescriptor', 'MTLDepthStencilDescriptor', 'MTLFunctionConstant', 'MTLFunctionConstantValues', 'MTLFunctionDescriptor', 'MTLHeapDescriptor', 'MTLIndirectCommandBufferDescriptor', 'MTLInstanceAccelerationStructureDescriptor', 'MTLIntersectionFunctionDescriptor', 'MTLIntersectionFunctionTableDescriptor', 'MTLLinkedFunctions', 'MTLPipelineBufferDescriptor', 'MTLPipelineBufferDescriptorArray', 'MTLPointerType', 'MTLPrimitiveAccelerationStructureDescriptor', 'MTLRasterizationRateLayerArray'
, 'MTLRasterizationRateLayerDescriptor', 'MTLRasterizationRateMapDescriptor', 'MTLRasterizationRateSampleArray', 'MTLRenderPassAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptorArray', 'MTLRenderPassDepthAttachmentDescriptor', 'MTLRenderPassDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptorArray', 'MTLRenderPassStencilAttachmentDescriptor', 'MTLRenderPipelineColorAttachmentDescriptor',
 'MTLRenderPipelineColorAttachmentDescriptorArray', 'MTLRenderPipelineDescriptor', 'MTLRenderPipelineReflection', 'MTLResourceStatePassDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptorArray', 'MTLSamplerDescriptor', 'MTLSharedEventHandle', 'MTLSharedEventListener', 'MTLSharedTextureHandle', 'MTLStageInputOutputDescriptor', 'MTLStencilDescriptor', 'MTLStructMember', 'MTLStructType', 'MTLTextureDescriptor', 'MTLTextureReferen
ceType', 'MTLTileRenderPipelineColorAttachmentDescriptor', 'MTLTileRenderPipelineColorAttachmentDescriptorArray', 'MTLTileRenderPipelineDescriptor', 'MTLType', 'MTLVertexAttribute', 'MTLVertexAttributeDescriptor', 'MTLVertexAttributeDescriptorArray', 'MTLVertexBufferLayoutDescriptor', 'MTLVertexBufferLayoutDescriptorArray', 'MTLVertexDescriptor', 'MTLVisibleFunctionTableDescriptor', 'MXAnimationMetric', 'MXAppExitMetric', 'MXAppLaunchMetric', 'MXAppResponsivenessMetric', 'MXAppRunTimeMetric', 'M
XAverage', 'MXBackgroundExitData', 'MXCPUExceptionDiagnostic', 'MXCPUMetric', 'MXCallStackTree', 'MXCellularConditionMetric', 'MXCrashDiagnostic', 'MXDiagnostic', 'MXDiagnosticPayload', 'MXDiskIOMetric', 'MXDiskWriteExceptionDiagnostic', 'MXDisplayMetric', 'MXForegroundExitData', 'MXGPUMetric', 'MXHangDiagnostic', 'MXHistogram', 'MXHistogramBucket', 'MXLocationActivityMetric', 'MXMemoryMetric', 'MXMetaData', 'MXMetric', 'MXMetricManager', 'MXMetricPayload', 'MXNetworkTransferMetric', 'MXSignpost
IntervalData', 'MXSignpostMetric', 'MXUnitAveragePixelLuminance', 'MXUnitSignalBars', 'MyClass', 'NCWidgetController', 'NEAppProxyFlow', 'NEAppProxyProvider', 'NEAppProxyProviderManager', 'NEAppProxyTCPFlow', 'NEAppProxyUDPFlow', 'NEAppPushManager', 'NEAppPushProvider', 'NEAppRule', 'NEDNSOverHTTPSSettings', 'NEDNSOverTLSSettings', 'NEDNSProxyManager', 'NEDNSProxyProvider', 'NEDNSProxyProviderProtocol', 'NEDNSSettings', 'NEDNSSettingsManager', 'NEEvaluateConnectionRule', 'NEFilterBrowserFlow', '
NEFilterControlProvider', 'NEFilterControlVerdict', 'NEFilterDataProvider', 'NEFilterDataVerdict', 'NEFilterFlow', 'NEFilterManager', 'NEFilterNewFlowVerdict', 'NEFilterPacketContext', 'NEFilterPacketProvider', 'NEFilterProvider', 'NEFilterProviderConfiguration', 'NEFilterRemediationVerdict', 'NEFilterReport', 'NEFilterRule', 'NEFilterSettings', 'NEFilterSocketFlow', 'NEFilterVerdict', 'NEFlowMetaData', 'NEHotspotConfiguration', 'NEHotspotConfigurationManager', 'NEHotspotEAPSettings', 'NEHotspot
HS20Settings', 'NEHotspotHelper', 'NEHotspotHelperCommand', 'NEHotspotHelperResponse', 'NEHotspotNetwork', 'NEIPv4Route', 'NEIPv4Settings', 'NEIPv6Route', 'NEIPv6Settings', 'NENetworkRule', 'NEOnDemandRule', 'NEOnDemandRuleConnect', 'NEOnDemandRuleDisconnect', 'NEOnDemandRuleEvaluateConnection', 'NEOnDemandRuleIgnore', 'NEPacket', 'NEPacketTunnelFlow', 'NEPacketTunnelNetworkSettings', 'NEPacketTunnelProvider', 'NEProvider', 'NEProxyServer', 'NEProxySettings', 'NETransparentProxyManager', 'NETran
sparentProxyNetworkSettings', 'NETransparentProxyProvider', 'NETunnelNetworkSettings', 'NETunnelProvider', 'NETunnelProviderManager', 'NETunnelProviderProtocol', 'NETunnelProviderSession', 'NEVPNConnection', 'NEVPNIKEv2SecurityAssociationParameters', 'NEVPNManager', 'NEVPNProtocol', 'NEVPNProtocolIKEv2', 'NEVPNProtocolIPSec', 'NFCISO15693CustomCommandConfiguration', 'NFCISO15693ReadMultipleBlocksConfiguration', 'NFCISO15693ReaderSession', 'NFCISO7816APDU', 'NFCNDEFMessage', 'NFCNDEFPayload', 'NF
CNDEFReaderSession', 'NFCReaderSession', 'NFCTagCommandConfiguration', 'NFCTagReaderSession', 'NFCVASCommandConfiguration', 'NFCVASReaderSession', 'NFCVASResponse', 'NIConfiguration', 'NIDiscoveryToken', 'NINearbyObject', 'NINearbyPeerConfiguration', 'NISession', 'NKAssetDownload', 'NKIssue', 'NKLibrary', 'NLEmbedding', 'NLGazetteer', 'NLLanguageRecognizer', 'NLModel', 'NLModelConfiguration', 'NLTagger', 'NLTokenizer', 'NSArray', 'NSAssertionHandler', 'NSAsynchronousFetchRequest', 'NSAsynchronou
sFetchResult', 'NSAtomicStore', 'NSAtomicStoreCacheNode', 'NSAttributeDescription', 'NSAttributedString', 'NSAutoreleasePool', 'NSBatchDeleteRequest', 'NSBatchDeleteResult', 'NSBatchInsertRequest', 'NSBatchInsertResult', 'NSBatchUpdateRequest', 'NSBatchUpdateResult', 'NSBlockOperation', 'NSBundle', 'NSBundleResourceRequest', 'NSByteCountFormatter', 'NSCache', 'NSCachedURLResponse', 'NSCalendar', 'NSCharacterSet', 'NSCoder', 'NSCollectionLayoutAnchor', 'NSCollectionLayoutBoundarySupplementaryItem
', 'NSCollectionLayoutDecorationItem', 'NSCollectionLayoutDimension', 'NSCollectionLayoutEdgeSpacing', 'NSCollectionLayoutGroup', 'NSCollectionLayoutGroupCustomItem', 'NSCollectionLayoutItem', 'NSCollectionLayoutSection', 'NSCollectionLayoutSize', 'NSCollectionLayoutSpacing', 'NSCollectionLayoutSupplementaryItem', 'NSComparisonPredicate', 'NSCompoundPredicate', 'NSCondition', 'NSConditionLock', 'NSConstantString', 'NSConstraintConflict', 'NSCoreDataCoreSpotlightDelegate', 'NSCountedSet', 'NSData
', 'NSDataAsset', 'NSDataDetector', 'NSDate', 'NSDateComponents', 'NSDateComponentsFormatter', 'NSDateFormatter', 'NSDateInterval', 'NSDateIntervalFormatter', 'NSDecimalNumber', 'NSDecimalNumberHandler', 'NSDerivedAttributeDescription', 'NSDictionary', 'NSDiffableDataSourceSectionSnapshot', 'NSDiffableDataSourceSectionTransaction', 'NSDiffableDataSourceSnapshot', 'NSDiffableDataSourceTransaction', 'NSDimension', 'NSDirectoryEnumerator', 'NSEnergyFormatter', 'NSEntityDescription', 'NSEntityMappin
g', 'NSEntityMigrationPolicy', 'NSEnumerator', 'NSError', 'NSEvent', 'NSException', 'NSExpression', 'NSExpressionDescription', 'NSExtensionContext', 'NSExtensionItem', 'NSFetchIndexDescription', 'NSFetchIndexElementDescription', 'NSFetchRequest', 'NSFetchRequestExpression', 'NSFetchedPropertyDescription', 'NSFetchedResultsController', 'NSFileAccessIntent', 'NSFileCoordinator', 'NSFileHandle', 'NSFileManager', 'NSFileProviderDomain', 'NSFileProviderExtension', 'NSFileProviderManager', 'NSFileProv
iderService', 'NSFileSecurity', 'NSFileVersion', 'NSFileWrapper', 'NSFormatter', 'NSHTTPCookie', 'NSHTTPCookieStorage', 'NSHTTPURLResponse', 'NSHashTable', 'NSISO8601DateFormatter', 'NSIncrementalStore', 'NSIncrementalStoreNode', 'NSIndexPath', 'NSIndexSet', 'NSInputStream', 'NSInvocation', 'NSInvocationOperation', 'NSItemProvider', 'NSJSONSerialization', 'NSKeyedArchiver', 'NSKeyedUnarchiver', 'NSLayoutAnchor', 'NSLayoutConstraint', 'NSLayoutDimension', 'NSLayoutManager', 'NSLayoutXAxisAnchor',
 'NSLayoutYAxisAnchor', 'NSLengthFormatter', 'NSLinguisticTagger', 'NSListFormatter', 'NSLocale', 'NSLock', 'NSMachPort', 'NSManagedObject', 'NSManagedObjectContext', 'NSManagedObjectID', 'NSManagedObjectModel', 'NSMapTable', 'NSMappingModel', 'NSMassFormatter', 'NSMeasurement', 'NSMeasurementFormatter', 'NSMenuToolbarItem', 'NSMergeConflict', 'NSMergePolicy', 'NSMessagePort', 'NSMetadataItem', 'NSMetadataQuery', 'NSMetadataQueryAttributeValueTuple', 'NSMetadataQueryResultGroup', 'NSMethodSignat
ure', 'NSMigrationManager', 'NSMutableArray', 'NSMutableAttributedString', 'NSMutableCharacterSet', 'NSMutableData', 'NSMutableDictionary', 'NSMutableIndexSet', 'NSMutableOrderedSet', 'NSMutableParagraphStyle', 'NSMutableSet', 'NSMutableString', 'NSMutableURLRequest', 'NSNetService', 'NSNetServiceBrowser', 'NSNotification', 'NSNotificationCenter', 'NSNotificationQueue', 'NSNull', 'NSNumber', 'NSNumberFormatter', 'NSObject', 'NSOperation', 'NSOperationQueue', 'NSOrderedCollectionChange', 'NSOrder
edCollectionDifference', 'NSOrderedSet', 'NSOrthography', 'NSOutputStream', 'NSParagraphStyle', 'NSPersistentCloudKitContainer', 'NSPersistentCloudKitContainerEvent', 'NSPersistentCloudKitContainerEventRequest', 'NSPersistentCloudKitContainerEventResult', 'NSPersistentCloudKitContainerOptions', 'NSPersistentContainer', 'NSPersistentHistoryChange', 'NSPersistentHistoryChangeRequest', 'NSPersistentHistoryResult', 'NSPersistentHistoryToken', 'NSPersistentHistoryTransaction', 'NSPersistentStore', 'N
SPersistentStoreAsynchronousResult', 'NSPersistentStoreCoordinator', 'NSPersistentStoreDescription', 'NSPersistentStoreRequest', 'NSPersistentStoreResult', 'NSPersonNameComponents', 'NSPersonNameComponentsFormatter', 'NSPipe', 'NSPointerArray', 'NSPointerFunctions', 'NSPort', 'NSPredicate', 'NSProcessInfo', 'NSProgress', 'NSPropertyDescription', 'NSPropertyListSerialization', 'NSPropertyMapping', 'NSProxy', 'NSPurgeableData', 'NSQueryGenerationToken', 'NSRecursiveLock', 'NSRegularExpression', 'N
SRelationshipDescription', 'NSRelativeDateTimeFormatter', 'NSRunLoop', 'NSSaveChangesRequest', 'NSScanner', 'NSSecureUnarchiveFromDataTransformer', 'NSSet', 'NSShadow', 'NSSharingServicePickerToolbarItem', 'NSSharingServicePickerTouchBarItem', 'NSSimpleCString', 'NSSocketPort', 'NSSortDescriptor', 'NSStream', 'NSString', 'NSStringDrawingContext', 'NSTextAttachment', 'NSTextCheckingResult', 'NSTextContainer', 'NSTextStorage', 'NSTextTab', 'NSThread', 'NSTimeZone', 'NSTimer', 'NSToolbarItem', 'NSU
RL', 'NSURLAuthenticationChallenge', 'NSURLCache', 'NSURLComponents', 'NSURLConnection', 'NSURLCredential', 'NSURLCredentialStorage', 'NSURLProtectionSpace', 'NSURLProtocol', 'NSURLQueryItem', 'NSURLRequest', 'NSURLResponse', 'NSURLSession', 'NSURLSessionConfiguration', 'NSURLSessionDataTask', 'NSURLSessionDownloadTask', 'NSURLSessionStreamTask', 'NSURLSessionTask', 'NSURLSessionTaskMetrics', 'NSURLSessionTaskTransactionMetrics', 'NSURLSessionUploadTask', 'NSURLSessionWebSocketMessage', 'NSURLSe
ssionWebSocketTask', 'NSUUID', 'NSUbiquitousKeyValueStore', 'NSUndoManager', 'NSUnit', 'NSUnitAcceleration', 'NSUnitAngle', 'NSUnitArea', 'NSUnitConcentrationMass', 'NSUnitConverter', 'NSUnitConverterLinear', 'NSUnitDispersion', 'NSUnitDuration', 'NSUnitElectricCharge', 'NSUnitElectricCurrent', 'NSUnitElectricPotentialDifference', 'NSUnitElectricResistance', 'NSUnitEnergy', 'NSUnitFrequency', 'NSUnitFuelEfficiency', 'NSUnitIlluminance', 'NSUnitInformationStorage', 'NSUnitLength', 'NSUnitMass', '
NSUnitPower', 'NSUnitPressure', 'NSUnitSpeed', 'NSUnitTemperature', 'NSUnitVolume', 'NSUserActivity', 'NSUserDefaults', 'NSValue', 'NSValueTransformer', 'NSXMLParser', 'NSXPCCoder', 'NSXPCConnection', 'NSXPCInterface', 'NSXPCListener', 'NSXPCListenerEndpoint', 'NWBonjourServiceEndpoint', 'NWEndpoint', 'NWHostEndpoint', 'NWPath', 'NWTCPConnection', 'NWTLSParameters', 'NWUDPSession', 'OSLogEntry', 'OSLogEntryActivity', 'OSLogEntryBoundary', 'OSLogEntryLog', 'OSLogEntrySignpost', 'OSLogEnumerator',
 'OSLogMessageComponent', 'OSLogPosition', 'OSLogStore', 'PDFAction', 'PDFActionGoTo', 'PDFActionNamed', 'PDFActionRemoteGoTo', 'PDFActionResetForm', 'PDFActionURL', 'PDFAnnotation', 'PDFAppearanceCharacteristics', 'PDFBorder', 'PDFDestination', 'PDFDocument', 'PDFOutline', 'PDFPage', 'PDFSelection', 'PDFThumbnailView', 'PDFView', 'PHAdjustmentData', 'PHAsset', 'PHAssetChangeRequest', 'PHAssetCollection', 'PHAssetCollectionChangeRequest', 'PHAssetCreationRequest', 'PHAssetResource', 'PHAssetReso
urceCreationOptions', 'PHAssetResourceManager', 'PHAssetResourceRequestOptions', 'PHCachingImageManager', 'PHChange', 'PHChangeRequest', 'PHCloudIdentifier', 'PHCollection', 'PHCollectionList', 'PHCollectionListChangeRequest', 'PHContentEditingInput', 'PHContentEditingInputRequestOptions', 'PHContentEditingOutput', 'PHEditingExtensionContext', 'PHFetchOptions', 'PHFetchResult', 'PHFetchResultChangeDetails', 'PHImageManager', 'PHImageRequestOptions', 'PHLivePhoto', 'PHLivePhotoEditingContext', 'P
HLivePhotoRequestOptions', 'PHLivePhotoView', 'PHObject', 'PHObjectChangeDetails', 'PHObjectPlaceholder', 'PHPhotoLibrary', 'PHPickerConfiguration', 'PHPickerFilter', 'PHPickerResult', 'PHPickerViewController', 'PHProject', 'PHProjectChangeRequest', 'PHVideoRequestOptions', 'PKAddCarKeyPassConfiguration', 'PKAddPassButton', 'PKAddPassesViewController', 'PKAddPaymentPassRequest', 'PKAddPaymentPassRequestConfiguration', 'PKAddPaymentPassViewController', 'PKAddSecureElementPassConfiguration', 'PKAd
dSecureElementPassViewController', 'PKAddShareablePassConfiguration', 'PKBarcodeEventConfigurationRequest', 'PKBarcodeEventMetadataRequest', 'PKBarcodeEventMetadataResponse', 'PKBarcodeEventSignatureRequest', 'PKBarcodeEventSignatureResponse', 'PKCanvasView', 'PKContact', 'PKDisbursementAuthorizationController', 'PKDisbursementRequest', 'PKDisbursementVoucher', 'PKDrawing', 'PKEraserTool', 'PKFloatRange', 'PKInk', 'PKInkingTool', 'PKIssuerProvisioningExtensionHandler', 'PKIssuerProvisioningExten
sionPassEntry', 'PKIssuerProvisioningExtensionPaymentPassEntry', 'PKIssuerProvisioningExtensionStatus', 'PKLabeledValue', 'PKLassoTool', 'PKObject', 'PKPass', 'PKPassLibrary', 'PKPayment', 'PKPaymentAuthorizationController', 'PKPaymentAuthorizationResult', 'PKPaymentAuthorizationViewController', 'PKPaymentButton', 'PKPaymentInformationEventExtension', 'PKPaymentMerchantSession', 'PKPaymentMethod', 'PKPaymentPass', 'PKPaymentRequest', 'PKPaymentRequestMerchantSessionUpdate', 'PKPaymentRequestPaym
entMethodUpdate', 'PKPaymentRequestShippingContactUpdate', 'PKPaymentRequestShippingMethodUpdate', 'PKPaymentRequestUpdate', 'PKPaymentSummaryItem', 'PKPaymentToken', 'PKPushCredentials', 'PKPushPayload', 'PKPushRegistry', 'PKSecureElementPass', 'PKShareablePassMetadata', 'PKShippingMethod', 'PKStroke', 'PKStrokePath', 'PKStrokePoint', 'PKSuicaPassProperties', 'PKTool', 'PKToolPicker', 'PKTransitPassProperties', 'QLFileThumbnailRequest', 'QLPreviewController', 'QLThumbnailGenerationRequest', 'QL
ThumbnailGenerator', 'QLThumbnailProvider', 'QLThumbnailReply', 'QLThumbnailRepresentation', 'RPBroadcastActivityController', 'RPBroadcastActivityViewController', 'RPBroadcastConfiguration', 'RPBroadcastController', 'RPBroadcastHandler', 'RPBroadcastMP4ClipHandler', 'RPBroadcastSampleHandler', 'RPPreviewViewController', 'RPScreenRecorder', 'RPSystemBroadcastPickerView', 'SCNAccelerationConstraint', 'SCNAction', 'SCNAnimation', 'SCNAnimationEvent', 'SCNAnimationPlayer', 'SCNAudioPlayer', 'SCNAudi
oSource', 'SCNAvoidOccluderConstraint', 'SCNBillboardConstraint', 'SCNBox', 'SCNCamera', 'SCNCameraController', 'SCNCapsule', 'SCNCone', 'SCNConstraint', 'SCNCylinder', 'SCNDistanceConstraint', 'SCNFloor', 'SCNGeometry', 'SCNGeometryElement', 'SCNGeometrySource', 'SCNGeometryTessellator', 'SCNHitTestResult', 'SCNIKConstraint', 'SCNLevelOfDetail', 'SCNLight', 'SCNLookAtConstraint', 'SCNMaterial', 'SCNMaterialProperty', 'SCNMorpher', 'SCNNode', 'SCNParticlePropertyController', 'SCNParticleSystem',
 'SCNPhysicsBallSocketJoint', 'SCNPhysicsBehavior', 'SCNPhysicsBody', 'SCNPhysicsConeTwistJoint', 'SCNPhysicsContact', 'SCNPhysicsField', 'SCNPhysicsHingeJoint', 'SCNPhysicsShape', 'SCNPhysicsSliderJoint', 'SCNPhysicsVehicle', 'SCNPhysicsVehicleWheel', 'SCNPhysicsWorld', 'SCNPlane', 'SCNProgram', 'SCNPyramid', 'SCNReferenceNode', 'SCNRenderer', 'SCNReplicatorConstraint', 'SCNScene', 'SCNSceneSource', 'SCNShape', 'SCNSkinner', 'SCNSliderConstraint', 'SCNSphere', 'SCNTechnique', 'SCNText', 'SCNTim
ingFunction', 'SCNTorus', 'SCNTransaction', 'SCNTransformConstraint', 'SCNTube', 'SCNView', 'SFAcousticFeature', 'SFAuthenticationSession', 'SFContentBlockerManager', 'SFContentBlockerState', 'SFSafariViewController', 'SFSafariViewControllerConfiguration', 'SFSpeechAudioBufferRecognitionRequest', 'SFSpeechRecognitionRequest', 'SFSpeechRecognitionResult', 'SFSpeechRecognitionTask', 'SFSpeechRecognizer', 'SFSpeechURLRecognitionRequest', 'SFTranscription', 'SFTranscriptionSegment', 'SFVoiceAnalytic
s', 'SK3DNode', 'SKAction', 'SKAdNetwork', 'SKArcadeService', 'SKAttribute', 'SKAttributeValue', 'SKAudioNode', 'SKCameraNode', 'SKCloudServiceController', 'SKCloudServiceSetupViewController', 'SKConstraint', 'SKCropNode', 'SKDownload', 'SKEffectNode', 'SKEmitterNode', 'SKFieldNode', 'SKKeyframeSequence', 'SKLabelNode', 'SKLightNode', 'SKMutablePayment', 'SKMutableTexture', 'SKNode', 'SKOverlay', 'SKOverlayAppClipConfiguration', 'SKOverlayAppConfiguration', 'SKOverlayConfiguration', 'SKOverlayTr
ansitionContext', 'SKPayment', 'SKPaymentDiscount', 'SKPaymentQueue', 'SKPaymentTransaction', 'SKPhysicsBody', 'SKPhysicsContact', 'SKPhysicsJoint', 'SKPhysicsJointFixed', 'SKPhysicsJointLimit', 'SKPhysicsJointPin', 'SKPhysicsJointSliding', 'SKPhysicsJointSpring', 'SKPhysicsWorld', 'SKProduct', 'SKProductDiscount', 'SKProductStorePromotionController', 'SKProductSubscriptionPeriod', 'SKProductsRequest', 'SKProductsResponse', 'SKRange', 'SKReachConstraints', 'SKReceiptRefreshRequest', 'SKReference
Node', 'SKRegion', 'SKRenderer', 'SKRequest', 'SKScene', 'SKShader', 'SKShapeNode', 'SKSpriteNode', 'SKStoreProductViewController', 'SKStoreReviewController', 'SKStorefront', 'SKTexture', 'SKTextureAtlas', 'SKTileDefinition', 'SKTileGroup', 'SKTileGroupRule', 'SKTileMapNode', 'SKTileSet', 'SKTransformNode', 'SKTransition', 'SKUniform', 'SKVideoNode', 'SKView', 'SKWarpGeometry', 'SKWarpGeometryGrid', 'SLComposeServiceViewController', 'SLComposeSheetConfigurationItem', 'SLComposeViewController', '
SLRequest', 'SNAudioFileAnalyzer', 'SNAudioStreamAnalyzer', 'SNClassification', 'SNClassificationResult', 'SNClassifySoundRequest', 'SRAmbientLightSample', 'SRApplicationUsage', 'SRDeletionRecord', 'SRDevice', 'SRDeviceUsageReport', 'SRFetchRequest', 'SRFetchResult', 'SRKeyboardMetrics', 'SRKeyboardProbabilityMetric', 'SRMessagesUsageReport', 'SRNotificationUsage', 'SRPhoneUsageReport', 'SRSensorReader', 'SRVisit', 'SRWebUsage', 'SRWristDetection', 'SSReadingList', 'STScreenTimeConfiguration', '
STScreenTimeConfigurationObserver', 'STWebHistory', 'STWebpageController', 'TKBERTLVRecord', 'TKCompactTLVRecord', 'TKSimpleTLVRecord', 'TKSmartCard', 'TKSmartCardATR', 'TKSmartCardATRInterfaceGroup', 'TKSmartCardPINFormat', 'TKSmartCardSlot', 'TKSmartCardSlotManager', 'TKSmartCardToken', 'TKSmartCardTokenDriver', 'TKSmartCardTokenSession', 'TKSmartCardUserInteraction', 'TKSmartCardUserInteractionForPINOperation', 'TKSmartCardUserInteractionForSecurePINChange', 'TKSmartCardUserInteractionForSecu
rePINVerification', 'TKTLVRecord', 'TKToken', 'TKTokenAuthOperation', 'TKTokenConfiguration', 'TKTokenDriver', 'TKTokenDriverConfiguration', 'TKTokenKeyAlgorithm', 'TKTokenKeyExchangeParameters', 'TKTokenKeychainCertificate', 'TKTokenKeychainContents', 'TKTokenKeychainItem', 'TKTokenKeychainKey', 'TKTokenPasswordAuthOperation', 'TKTokenSession', 'TKTokenSmartCardPINAuthOperation', 'TKTokenWatcher', 'TWRequest', 'TWTweetComposeViewController', 'UIAcceleration', 'UIAccelerometer', 'UIAccessibility
CustomAction', 'UIAccessibilityCustomRotor', 'UIAccessibilityCustomRotorItemResult', 'UIAccessibilityCustomRotorSearchPredicate', 'UIAccessibilityElement', 'UIAccessibilityLocationDescriptor', 'UIAction', 'UIActionSheet', 'UIActivity', 'UIActivityIndicatorView', 'UIActivityItemProvider', 'UIActivityItemsConfiguration', 'UIActivityViewController', 'UIAlertAction', 'UIAlertController', 'UIAlertView', 'UIApplication', 'UIApplicationShortcutIcon', 'UIApplicationShortcutItem', 'UIAttachmentBehavior',
 'UIBackgroundConfiguration', 'UIBarAppearance', 'UIBarButtonItem', 'UIBarButtonItemAppearance', 'UIBarButtonItemGroup', 'UIBarButtonItemStateAppearance', 'UIBarItem', 'UIBezierPath', 'UIBlurEffect', 'UIButton', 'UICellAccessory', 'UICellAccessoryCheckmark', 'UICellAccessoryCustomView', 'UICellAccessoryDelete', 'UICellAccessoryDisclosureIndicator', 'UICellAccessoryInsert', 'UICellAccessoryLabel', 'UICellAccessoryMultiselect', 'UICellAccessoryOutlineDisclosure', 'UICellAccessoryReorder', 'UICellC
onfigurationState', 'UICloudSharingController', 'UICollectionLayoutListConfiguration', 'UICollectionReusableView', 'UICollectionView', 'UICollectionViewCell', 'UICollectionViewCellRegistration', 'UICollectionViewCompositionalLayout', 'UICollectionViewCompositionalLayoutConfiguration', 'UICollectionViewController', 'UICollectionViewDiffableDataSource', 'UICollectionViewDiffableDataSourceReorderingHandlers', 'UICollectionViewDiffableDataSourceSectionSnapshotHandlers', 'UICollectionViewDropPlacehol
der', 'UICollectionViewDropProposal', 'UICollectionViewFlowLayout', 'UICollectionViewFlowLayoutInvalidationContext', 'UICollectionViewFocusUpdateContext', 'UICollectionViewLayout', 'UICollectionViewLayoutAttributes', 'UICollectionViewLayoutInvalidationContext', 'UICollectionViewListCell', 'UICollectionViewPlaceholder', 'UICollectionViewSupplementaryRegistration', 'UICollectionViewTransitionLayout', 'UICollectionViewUpdateItem', 'UICollisionBehavior', 'UIColor', 'UIColorPickerViewController', 'UI
ColorWell', 'UICommand', 'UICommandAlternate', 'UIContextMenuConfiguration', 'UIContextMenuInteraction', 'UIContextualAction', 'UIControl', 'UICubicTimingParameters', 'UIDatePicker', 'UIDeferredMenuElement', 'UIDevice', 'UIDictationPhrase', 'UIDocument', 'UIDocumentBrowserAction', 'UIDocumentBrowserTransitionController', 'UIDocumentBrowserViewController', 'UIDocumentInteractionController', 'UIDocumentMenuViewController', 'UIDocumentPickerExtensionViewController', 'UIDocumentPickerViewController'
, 'UIDragInteraction', 'UIDragItem', 'UIDragPreview', 'UIDragPreviewParameters', 'UIDragPreviewTarget', 'UIDropInteraction', 'UIDropProposal', 'UIDynamicAnimator', 'UIDynamicBehavior', 'UIDynamicItemBehavior', 'UIDynamicItemGroup', 'UIEvent', 'UIFeedbackGenerator', 'UIFieldBehavior', 'UIFocusAnimationCoordinator', 'UIFocusDebugger', 'UIFocusGuide', 'UIFocusMovementHint', 'UIFocusSystem', 'UIFocusUpdateContext', 'UIFont', 'UIFontDescriptor', 'UIFontMetrics', 'UIFontPickerViewController', 'UIFontP
ickerViewControllerConfiguration', 'UIGestureRecognizer', 'UIGraphicsImageRenderer', 'UIGraphicsImageRendererContext', 'UIGraphicsImageRendererFormat', 'UIGraphicsPDFRenderer', 'UIGraphicsPDFRendererContext', 'UIGraphicsPDFRendererFormat', 'UIGraphicsRenderer', 'UIGraphicsRendererContext', 'UIGraphicsRendererFormat', 'UIGravityBehavior', 'UIHoverGestureRecognizer', 'UIImage', 'UIImageAsset', 'UIImageConfiguration', 'UIImagePickerController', 'UIImageSymbolConfiguration', 'UIImageView', 'UIImpact
FeedbackGenerator', 'UIIndirectScribbleInteraction', 'UIInputView', 'UIInputViewController', 'UIInterpolatingMotionEffect', 'UIKey', 'UIKeyCommand', 'UILabel', 'UILargeContentViewerInteraction', 'UILayoutGuide', 'UILexicon', 'UILexiconEntry', 'UIListContentConfiguration', 'UIListContentImageProperties', 'UIListContentTextProperties', 'UIListContentView', 'UILocalNotification', 'UILocalizedIndexedCollation', 'UILongPressGestureRecognizer', 'UIManagedDocument', 'UIMarkupTextPrintFormatter', 'UIMen
u', 'UIMenuController', 'UIMenuElement', 'UIMenuItem', 'UIMenuSystem', 'UIMotionEffect', 'UIMotionEffectGroup', 'UIMutableApplicationShortcutItem', 'UIMutableUserNotificationAction', 'UIMutableUserNotificationCategory', 'UINavigationBar', 'UINavigationBarAppearance', 'UINavigationController', 'UINavigationItem', 'UINib', 'UINotificationFeedbackGenerator', 'UIOpenURLContext', 'UIPageControl', 'UIPageViewController', 'UIPanGestureRecognizer', 'UIPasteConfiguration', 'UIPasteboard', 'UIPencilIntera
ction', 'UIPercentDrivenInteractiveTransition', 'UIPickerView', 'UIPinchGestureRecognizer', 'UIPointerEffect', 'UIPointerHighlightEffect', 'UIPointerHoverEffect', 'UIPointerInteraction', 'UIPointerLiftEffect', 'UIPointerLockState', 'UIPointerRegion', 'UIPointerRegionRequest', 'UIPointerShape', 'UIPointerStyle', 'UIPopoverBackgroundView', 'UIPopoverController', 'UIPopoverPresentationController', 'UIPresentationController', 'UIPress', 'UIPressesEvent', 'UIPreviewAction', 'UIPreviewActionGroup', 'U
IPreviewInteraction', 'UIPreviewParameters', 'UIPreviewTarget', 'UIPrintFormatter', 'UIPrintInfo', 'UIPrintInteractionController', 'UIPrintPageRenderer', 'UIPrintPaper', 'UIPrinter', 'UIPrinterPickerController', 'UIProgressView', 'UIPushBehavior', 'UIReferenceLibraryViewController', 'UIRefreshControl', 'UIRegion', 'UIResponder', 'UIRotationGestureRecognizer', 'UIScene', 'UISceneActivationConditions', 'UISceneActivationRequestOptions', 'UISceneConfiguration', 'UISceneConnectionOptions', 'UISceneD
estructionRequestOptions', 'UISceneOpenExternalURLOptions', 'UISceneOpenURLOptions', 'UISceneSession', 'UISceneSizeRestrictions', 'UIScreen', 'UIScreenEdgePanGestureRecognizer', 'UIScreenMode', 'UIScreenshotService', 'UIScribbleInteraction', 'UIScrollView', 'UISearchBar', 'UISearchContainerViewController', 'UISearchController', 'UISearchDisplayController', 'UISearchSuggestionItem', 'UISearchTextField', 'UISearchToken', 'UISegmentedControl', 'UISelectionFeedbackGenerator', 'UISimpleTextPrintForma
tter', 'UISlider', 'UISnapBehavior', 'UISplitViewController', 'UISpringLoadedInteraction', 'UISpringTimingParameters', 'UIStackView', 'UIStatusBarManager', 'UIStepper', 'UIStoryboard', 'UIStoryboardPopoverSegue', 'UIStoryboardSegue', 'UIStoryboardUnwindSegueSource', 'UISwipeActionsConfiguration', 'UISwipeGestureRecognizer', 'UISwitch', 'UITabBar', 'UITabBarAppearance', 'UITabBarController', 'UITabBarItem', 'UITabBarItemAppearance', 'UITabBarItemStateAppearance', 'UITableView', 'UITableViewCell',
 'UITableViewController', 'UITableViewDiffableDataSource', 'UITableViewDropPlaceholder', 'UITableViewDropProposal', 'UITableViewFocusUpdateContext', 'UITableViewHeaderFooterView', 'UITableViewPlaceholder', 'UITableViewRowAction', 'UITapGestureRecognizer', 'UITargetedDragPreview', 'UITargetedPreview', 'UITextChecker', 'UITextDragPreviewRenderer', 'UITextDropProposal', 'UITextField', 'UITextFormattingCoordinator', 'UITextInputAssistantItem', 'UITextInputMode', 'UITextInputPasswordRules', 'UITextIn
putStringTokenizer', 'UITextInteraction', 'UITextPlaceholder', 'UITextPosition', 'UITextRange', 'UITextSelectionRect', 'UITextView', 'UITitlebar', 'UIToolbar', 'UIToolbarAppearance', 'UITouch', 'UITraitCollection', 'UIUserNotificationAction', 'UIUserNotificationCategory', 'UIUserNotificationSettings', 'UIVibrancyEffect', 'UIVideoEditorController', 'UIView', 'UIViewConfigurationState', 'UIViewController', 'UIViewPrintFormatter', 'UIViewPropertyAnimator', 'UIVisualEffect', 'UIVisualEffectView', 'U
IWebView', 'UIWindow', 'UIWindowScene', 'UIWindowSceneDestructionRequestOptions', 'UNCalendarNotificationTrigger', 'UNLocationNotificationTrigger', 'UNMutableNotificationContent', 'UNNotification', 'UNNotificationAction', 'UNNotificationAttachment', 'UNNotificationCategory', 'UNNotificationContent', 'UNNotificationRequest', 'UNNotificationResponse', 'UNNotificationServiceExtension', 'UNNotificationSettings', 'UNNotificationSound', 'UNNotificationTrigger', 'UNPushNotificationTrigger', 'UNTextInpu
tNotificationAction', 'UNTextInputNotificationResponse', 'UNTimeIntervalNotificationTrigger', 'UNUserNotificationCenter', 'UTType', 'VNBarcodeObservation', 'VNCircle', 'VNClassificationObservation', 'VNClassifyImageRequest', 'VNContour', 'VNContoursObservation', 'VNCoreMLFeatureValueObservation', 'VNCoreMLModel', 'VNCoreMLRequest', 'VNDetectBarcodesRequest', 'VNDetectContoursRequest', 'VNDetectFaceCaptureQualityRequest', 'VNDetectFaceLandmarksRequest', 'VNDetectFaceRectanglesRequest', 'VNDetectH
orizonRequest', 'VNDetectHumanBodyPoseRequest', 'VNDetectHumanHandPoseRequest', 'VNDetectHumanRectanglesRequest', 'VNDetectRectanglesRequest', 'VNDetectTextRectanglesRequest', 'VNDetectTrajectoriesRequest', 'VNDetectedObjectObservation', 'VNDetectedPoint', 'VNDocumentCameraScan', 'VNDocumentCameraViewController', 'VNFaceLandmarkRegion', 'VNFaceLandmarkRegion2D', 'VNFaceLandmarks', 'VNFaceLandmarks2D', 'VNFaceObservation', 'VNFeaturePrintObservation', 'VNGenerateAttentionBasedSaliencyImageRequest
', 'VNGenerateImageFeaturePrintRequest', 'VNGenerateObjectnessBasedSaliencyImageRequest', 'VNGenerateOpticalFlowRequest', 'VNGeometryUtils', 'VNHomographicImageRegistrationRequest', 'VNHorizonObservation', 'VNHumanBodyPoseObservation', 'VNHumanHandPoseObservation', 'VNImageAlignmentObservation', 'VNImageBasedRequest', 'VNImageHomographicAlignmentObservation', 'VNImageRegistrationRequest', 'VNImageRequestHandler', 'VNImageTranslationAlignmentObservation', 'VNObservation', 'VNPixelBufferObservatio
n', 'VNPoint', 'VNRecognizeAnimalsRequest', 'VNRecognizeTextRequest', 'VNRecognizedObjectObservation', 'VNRecognizedPoint', 'VNRecognizedPointsObservation', 'VNRecognizedText', 'VNRecognizedTextObservation', 'VNRectangleObservation', 'VNRequest', 'VNSaliencyImageObservation', 'VNSequenceRequestHandler', 'VNStatefulRequest', 'VNTargetedImageRequest', 'VNTextObservation', 'VNTrackObjectRequest', 'VNTrackRectangleRequest', 'VNTrackingRequest', 'VNTrajectoryObservation', 'VNTranslationalImageRegistr
ationRequest', 'VNVector', 'VNVideoProcessor', 'VNVideoProcessorCadence', 'VNVideoProcessorFrameRateCadence', 'VNVideoProcessorRequestProcessingOptions', 'VNVideoProcessorTimeIntervalCadence', 'VSAccountApplicationProvider', 'VSAccountManager', 'VSAccountManagerResult', 'VSAccountMetadata', 'VSAccountMetadataRequest', 'VSAccountProviderResponse', 'VSSubscription', 'VSSubscriptionRegistrationCenter', 'WCSession', 'WCSessionFile', 'WCSessionFileTransfer', 'WCSessionUserInfoTransfer', 'WKBackForwar
dList', 'WKBackForwardListItem', 'WKContentRuleList', 'WKContentRuleListStore', 'WKContentWorld', 'WKContextMenuElementInfo', 'WKFindConfiguration', 'WKFindResult', 'WKFrameInfo', 'WKHTTPCookieStore', 'WKNavigation', 'WKNavigationAction', 'WKNavigationResponse', 'WKOpenPanelParameters', 'WKPDFConfiguration', 'WKPreferences', 'WKPreviewElementInfo', 'WKProcessPool', 'WKScriptMessage', 'WKSecurityOrigin', 'WKSnapshotConfiguration', 'WKUserContentController', 'WKUserScript', 'WKWebView', 'WKWebView
Configuration', 'WKWebpagePreferences', 'WKWebsiteDataRecord', 'WKWebsiteDataStore', 'WKWindowFeatures', '__EntityAccessibilityWrapper'}
.venv\Lib\site-packages\pygments\lexers\_cocoa_builtins.py:16:COCOA_PRIMITIVES = {'ACErrorCode', 'ALCcontext_struct', 'ALCdevice_struct', 'ALMXGlyphEntry', 'ALMXHeader', 'API_UNAVAILABLE', 'AUChannelInfo', 'AUDependentParameter', 'AUDistanceAttenuationData', 'AUHostIdentifier', 'AUHostVersionIdentifier', 'AUInputSamplesInOutputCallbackStruct', 'AUMIDIEvent', 'AUMIDIOutputCallbackStruct', 'AUNodeInteraction', 'AUNodeRenderCallback', 'AUNumVersion', 'AUParameterAutomationEvent', 'AUParameterEvent'
, 'AUParameterMIDIMapping', 'AUPreset', 'AUPresetEvent', 'AURecordedParameterEvent', 'AURenderCallbackStruct', 'AURenderEventHeader', 'AUSamplerBankPresetData', 'AUSamplerInstrumentData', 'AnchorPoint', 'AnchorPointTable', 'AnkrTable', 'AudioBalanceFade', 'AudioBuffer', 'AudioBufferList', 'AudioBytePacketTranslation', 'AudioChannelDescription', 'AudioChannelLayout', 'AudioClassDescription', 'AudioCodecMagicCookieInfo', 'AudioCodecPrimeInfo', 'AudioComponentDescription', 'AudioComponentPlugInInte
rface', 'AudioConverterPrimeInfo', 'AudioFileMarker', 'AudioFileMarkerList', 'AudioFilePacketTableInfo', 'AudioFileRegion', 'AudioFileRegionList', 'AudioFileTypeAndFormatID', 'AudioFile_SMPTE_Time', 'AudioFormatInfo', 'AudioFormatListItem', 'AudioFramePacketTranslation', 'AudioIndependentPacketTranslation', 'AudioOutputUnitMIDICallbacks', 'AudioOutputUnitStartAtTimeParams', 'AudioPacketDependencyInfoTranslation', 'AudioPacketRangeByteCountTranslation', 'AudioPacketRollDistanceTranslation', 'Audi
oPanningInfo', 'AudioQueueBuffer', 'AudioQueueChannelAssignment', 'AudioQueueLevelMeterState', 'AudioQueueParameterEvent', 'AudioStreamBasicDescription', 'AudioStreamPacketDescription', 'AudioTimeStamp', 'AudioUnitCocoaViewInfo', 'AudioUnitConnection', 'AudioUnitExternalBuffer', 'AudioUnitFrequencyResponseBin', 'AudioUnitMIDIControlMapping', 'AudioUnitMeterClipping', 'AudioUnitNodeConnection', 'AudioUnitOtherPluginDesc', 'AudioUnitParameter', 'AudioUnitParameterEvent', 'AudioUnitParameterHistory
Info', 'AudioUnitParameterInfo', 'AudioUnitParameterNameInfo', 'AudioUnitParameterStringFromValue', 'AudioUnitParameterValueFromString', 'AudioUnitParameterValueName', 'AudioUnitParameterValueTranslation', 'AudioUnitPresetMAS_SettingData', 'AudioUnitPresetMAS_Settings', 'AudioUnitProperty', 'AudioUnitRenderContext', 'AudioValueRange', 'AudioValueTranslation', 'AuthorizationOpaqueRef', 'BslnFormat0Part', 'BslnFormat1Part', 'BslnFormat2Part', 'BslnFormat3Part', 'BslnTable', 'CABarBeatTime', 'CAFAu
dioDescription', 'CAFChunkHeader', 'CAFDataChunk', 'CAFFileHeader', 'CAFInfoStrings', 'CAFInstrumentChunk', 'CAFMarker', 'CAFMarkerChunk', 'CAFOverviewChunk', 'CAFOverviewSample', 'CAFPacketTableHeader', 'CAFPeakChunk', 'CAFPositionPeak', 'CAFRegion', 'CAFRegionChunk', 'CAFStringID', 'CAFStrings', 'CAFUMIDChunk', 'CAF_SMPTE_Time', 'CAF_UUID_ChunkHeader', 'CA_BOXABLE', 'CFHostClientContext', 'CFNetServiceClientContext', 'CF_BRIDGED_MUTABLE_TYPE', 'CF_BRIDGED_TYPE', 'CF_RELATED_TYPE', 'CGAffineTra
nsform', 'CGDataConsumerCallbacks', 'CGDataProviderDirectCallbacks', 'CGDataProviderSequentialCallbacks', 'CGFunctionCallbacks', 'CGPDFArray', 'CGPDFContentStream', 'CGPDFDictionary', 'CGPDFObject', 'CGPDFOperatorTable', 'CGPDFScanner', 'CGPDFStream', 'CGPDFString', 'CGPathElement', 'CGPatternCallbacks', 'CGVector', 'CG_BOXABLE', 'CLLocationCoordinate2D', 'CM_BRIDGED_TYPE', 'CTParagraphStyleSetting', 'CVPlanarComponentInfo', 'CVPlanarPixelBufferInfo', 'CVPlanarPixelBufferInfo_YCbCrBiPlanar', 'CV
PlanarPixelBufferInfo_YCbCrPlanar', 'CVSMPTETime', 'CV_BRIDGED_TYPE', 'ComponentInstanceRecord', 'ExtendedAudioFormatInfo', 'ExtendedControlEvent', 'ExtendedNoteOnEvent', 'ExtendedTempoEvent', 'FontVariation', 'GCQuaternion', 'GKBox', 'GKQuad', 'GKTriangle', 'GLKEffectPropertyPrv', 'HostCallbackInfo', 'IIO_BRIDGED_TYPE', 'IUnknownVTbl', 'JustDirectionTable', 'JustPCAction', 'JustPCActionSubrecord', 'JustPCConditionalAddAction', 'JustPCDecompositionAction', 'JustPCDuctilityAction', 'JustPCGlyphRe
peatAddAction', 'JustPostcompTable', 'JustTable', 'JustWidthDeltaEntry', 'JustWidthDeltaGroup', 'KernIndexArrayHeader', 'KernKerningPair', 'KernOffsetTable', 'KernOrderedListEntry', 'KernOrderedListHeader', 'KernSimpleArrayHeader', 'KernStateEntry', 'KernStateHeader', 'KernSubtableHeader', 'KernTableHeader', 'KernVersion0Header', 'KernVersion0SubtableHeader', 'KerxAnchorPointAction', 'KerxControlPointAction', 'KerxControlPointEntry', 'KerxControlPointHeader', 'KerxCoordinateAction', 'KerxIndexAr
rayHeader', 'KerxKerningPair', 'KerxOrderedListEntry', 'KerxOrderedListHeader', 'KerxSimpleArrayHeader', 'KerxStateEntry', 'KerxStateHeader', 'KerxSubtableHeader', 'KerxTableHeader', 'LcarCaretClassEntry', 'LcarCaretTable', 'LtagStringRange', 'LtagTable', 'MDL_CLASS_EXPORT', 'MIDICIDeviceIdentification', 'MIDIChannelMessage', 'MIDIControlTransform', 'MIDIDriverInterface', 'MIDIEventList', 'MIDIEventPacket', 'MIDIIOErrorNotification', 'MIDIMessage_128', 'MIDIMessage_64', 'MIDIMessage_96', 'MIDIMe
taEvent', 'MIDINoteMessage', 'MIDINotification', 'MIDIObjectAddRemoveNotification', 'MIDIObjectPropertyChangeNotification', 'MIDIPacket', 'MIDIPacketList', 'MIDIRawData', 'MIDISysexSendRequest', 'MIDIThruConnectionEndpoint', 'MIDIThruConnectionParams', 'MIDITransform', 'MIDIValueMap', 'MPSDeviceOptions', 'MixerDistanceParams', 'MortChain', 'MortContextualSubtable', 'MortFeatureEntry', 'MortInsertionSubtable', 'MortLigatureSubtable', 'MortRearrangementSubtable', 'MortSubtable', 'MortSwashSubtable
', 'MortTable', 'MorxChain', 'MorxContextualSubtable', 'MorxInsertionSubtable', 'MorxLigatureSubtable', 'MorxRearrangementSubtable', 'MorxSubtable', 'MorxTable', 'MusicDeviceNoteParams', 'MusicDeviceStdNoteParams', 'MusicEventUserData', 'MusicTrackLoopInfo', 'NoteParamsControlValue', 'OpaqueAudioComponent', 'OpaqueAudioComponentInstance', 'OpaqueAudioConverter', 'OpaqueAudioQueue', 'OpaqueAudioQueueProcessingTap', 'OpaqueAudioQueueTimeline', 'OpaqueExtAudioFile', 'OpaqueJSClass', 'OpaqueJSContex
t', 'OpaqueJSContextGroup', 'OpaqueJSPropertyNameAccumulator', 'OpaqueJSPropertyNameArray', 'OpaqueJSString', 'OpaqueJSValue', 'OpaqueMusicEventIterator', 'OpaqueMusicPlayer', 'OpaqueMusicSequence', 'OpaqueMusicTrack', 'OpbdSideValues', 'OpbdTable', 'ParameterEvent', 'PropLookupSegment', 'PropLookupSingle', 'PropTable', 'ROTAGlyphEntry', 'ROTAHeader', 'SCNMatrix4', 'SCNVector3', 'SCNVector4', 'SFNTLookupArrayHeader', 'SFNTLookupBinarySearchHeader', 'SFNTLookupSegment', 'SFNTLookupSegmentHeader',
 'SFNTLookupSingle', 'SFNTLookupSingleHeader', 'SFNTLookupTable', 'SFNTLookupTrimmedArrayHeader', 'SFNTLookupVectorHeader', 'SMPTETime', 'STClassTable', 'STEntryOne', 'STEntryTwo', 'STEntryZero', 'STHeader', 'STXEntryOne', 'STXEntryTwo', 'STXEntryZero', 'STXHeader', 'ScheduledAudioFileRegion', 'ScheduledAudioSlice', 'SecKeychainAttribute', 'SecKeychainAttributeInfo', 'SecKeychainAttributeList', 'TrakTable', 'TrakTableData', 'TrakTableEntry', 'UIAccessibility', 'VTDecompressionOutputCallbackRecor
d', 'VTInt32Point', 'VTInt32Size', '_CFHTTPAuthentication', '_GLKMatrix2', '_GLKMatrix3', '_GLKMatrix4', '_GLKQuaternion', '_GLKVector2', '_GLKVector3', '_GLKVector4', '_GLKVertexAttributeParameters', '_MTLAxisAlignedBoundingBox', '_MTLPackedFloat3', '_MTLPackedFloat4x3', '_NSRange', '_NSZone', '__CFHTTPMessage', '__CFHost', '__CFNetDiagnostic', '__CFNetService', '__CFNetServiceBrowser', '__CFNetServiceMonitor', '__CFXMLNode', '__CFXMLParser', '__GLsync', '__SecAccess', '__SecCertificate', '__Se
cIdentity', '__SecKey', '__SecRandom', '__attribute__', 'gss_OID_desc_struct', 'gss_OID_set_desc_struct', 'gss_auth_identity', 'gss_buffer_desc_struct', 'gss_buffer_set_desc_struct', 'gss_channel_bindings_struct', 'gss_cred_id_t_desc_struct', 'gss_ctx_id_t_desc_struct', 'gss_iov_buffer_desc_struct', 'gss_krb5_cfx_keydata', 'gss_krb5_lucid_context_v1', 'gss_krb5_lucid_context_version', 'gss_krb5_lucid_key', 'gss_krb5_rfc1964_keydata', 'gss_name_t_desc_struct', 'opaqueCMBufferQueueTriggerToken', '
sfntCMapEncoding', 'sfntCMapExtendedSubHeader', 'sfntCMapHeader', 'sfntCMapSubHeader', 'sfntDescriptorHeader', 'sfntDirectory', 'sfntDirectoryEntry', 'sfntFeatureHeader', 'sfntFeatureName', 'sfntFontDescriptor', 'sfntFontFeatureSetting', 'sfntFontRunFeature', 'sfntInstance', 'sfntNameHeader', 'sfntNameRecord', 'sfntVariationAxis', 'sfntVariationHeader'}
.venv\Lib\site-packages\pygments\lexers\_csound_builtins.py:1333:schedule
.venv\Lib\site-packages\pygments\lexers\_csound_builtins.py:1334:schedulek
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:130:        'jobject',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:1938:        '_admin_refreshconnector',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:1939:        '_admin_refreshsecurity',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:2009:        'admin_refreshlicensing',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:2010:        'admin_refreshsecurity',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:2428:        'event_schedule',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:4101:        'jobjectisa',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:4459:        'refresh',
.venv\Lib\site-packages\pygments\lexers\_mql_builtins.py:234:    'RefreshRates',
.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:1044:    'schedule',
.venv\Lib\site-packages\pygments\lexers\_openedge_builtins.py:1953:    'REFRESH',
.venv\Lib\site-packages\pygments\lexers\_openedge_builtins.py:1954:    'REFRESH-AUDIT-POLICY',
.venv\Lib\site-packages\pygments\lexers\_openedge_builtins.py:1955:    'REFRESHABLE',
.venv\Lib\site-packages\pygments\lexers\_php_builtins.py:1299:          'ldap_exop_refresh',
.venv\Lib\site-packages\pygments\lexers\_php_builtins.py:2969:              'wincache_refresh_if_changed',
.venv\Lib\site-packages\pygments\lexers\_postgres_builtins.py:330:    'REFRESH',
.venv\Lib\site-packages\pylint\lint\base_options.py:242:            "jobs",
.venv\Lib\site-packages\pylint\lint\parallel.py:126:    jobs: int,
.venv\Lib\site-packages\pylint\lint\parallel.py:130:    """Use the given linter to lint the files with given amount of workers (jobs).
.venv\Lib\site-packages\pylint\lint\parallel.py:142:        max_workers=jobs, initializer=initializer, initargs=(dill.dumps(linter),)
.venv\Lib\site-packages\pylint\lint\pylinter.py:677:        if not self.config.from_stdin and self.config.jobs > 1:
.venv\Lib\site-packages\pylint\lint\pylinter.py:681:                self.config.jobs,
.venv\Lib\site-packages\pylint\lint\run.py:72:            # Not useful for AWS Batch based jobs as result is -1, but works on local linux systems
.venv\Lib\site-packages\pylint\lint\run.py:214:        if linter.config.jobs < 0:
.venv\Lib\site-packages\pylint\lint\run.py:216:                f"Jobs number ({linter.config.jobs}) should be greater than or equal to 0",
.venv\Lib\site-packages\pylint\lint\run.py:220:        if linter.config.jobs > 1 or linter.config.jobs == 0:
.venv\Lib\site-packages\pylint\lint\run.py:226:                linter.set_option("jobs", 1)
.venv\Lib\site-packages\pylint\lint\run.py:227:            elif linter.config.jobs == 0:
.venv\Lib\site-packages\pylint\lint\run.py:228:                linter.config.jobs = _cpu_count()
.venv\Lib\site-packages\rich\console.py:1170:        refresh_per_second: float = 12.5,
.venv\Lib\site-packages\rich\console.py:1179:            refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
.venv\Lib\site-packages\rich\console.py:1192:            refresh_per_second=refresh_per_second,
.venv\Lib\site-packages\rich\layout.py:328:    def refresh_screen(self, console: "Console", layout_name: str) -> None:
.venv\Lib\site-packages\rich\layout.py:329:        """Refresh a sub-layout.
.venv\Lib\site-packages\rich\live.py:22:class _RefreshThread(Thread):
.venv\Lib\site-packages\rich\live.py:23:    """A thread that calls refresh() at regular intervals."""
.venv\Lib\site-packages\rich\live.py:25:    def __init__(self, live: "Live", refresh_per_second: float) -> None:
.venv\Lib\site-packages\rich\live.py:27:        self.refresh_per_second = refresh_per_second
.venv\Lib\site-packages\rich\live.py:35:        while not self.done.wait(1 / self.refresh_per_second):
.venv\Lib\site-packages\rich\live.py:38:                    self.live.refresh()
.venv\Lib\site-packages\rich\live.py:48:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()` or `update()` with refresh flag. Defaults to True
.venv\Lib\site-packages\rich\live.py:49:        refresh_per_second (float, optional): Number of times per second to refresh the live display. Defaults to 4.
.venv\Lib\site-packages\rich\live.py:63:        auto_refresh: bool = True,
.venv\Lib\site-packages\rich\live.py:64:        refresh_per_second: float = 4,
.venv\Lib\site-packages\rich\live.py:71:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
.venv\Lib\site-packages\rich\live.py:84:        self.auto_refresh = auto_refresh
.venv\Lib\site-packages\rich\live.py:88:        self._refresh_thread: Optional[_RefreshThread] = None
.venv\Lib\site-packages\rich\live.py:89:        self.refresh_per_second = refresh_per_second
.venv\Lib\site-packages\rich\live.py:111:    def start(self, refresh: bool = False) -> None:
.venv\Lib\site-packages\rich\live.py:115:            refresh (bool, optional): Also refresh. Defaults to False.
.venv\Lib\site-packages\rich\live.py:131:            if refresh:
.venv\Lib\site-packages\rich\live.py:133:                    self.refresh()
.venv\Lib\site-packages\rich\live.py:135:                    # If refresh fails, we want to stop the redirection of sys.stderr,
.venv\Lib\site-packages\rich\live.py:141:            if self.auto_refresh:
.venv\Lib\site-packages\rich\live.py:142:                self._refresh_thread = _RefreshThread(self, self.refresh_per_second)
.venv\Lib\site-packages\rich\live.py:143:                self._refresh_thread.start()
.venv\Lib\site-packages\rich\live.py:157:            if self.auto_refresh and self._refresh_thread is not None:
.venv\Lib\site-packages\rich\live.py:158:                self._refresh_thread.stop()
.venv\Lib\site-packages\rich\live.py:159:                self._refresh_thread = None
.venv\Lib\site-packages\rich\live.py:165:                        self.refresh()
.venv\Lib\site-packages\rich\live.py:180:        self.start(refresh=self._renderable is not None)
.venv\Lib\site-packages\rich\live.py:226:    def update(self, renderable: RenderableType, *, refresh: bool = False) -> None:
.venv\Lib\site-packages\rich\live.py:231:            refresh (bool, optional): Refresh the display. Defaults to False.
.venv\Lib\site-packages\rich\live.py:237:            if refresh:
.venv\Lib\site-packages\rich\live.py:238:                self.refresh()
.venv\Lib\site-packages\rich\live.py:240:    def refresh(self) -> None:
.venv\Lib\site-packages\rich\live.py:246:                    self.console._live_stack[0].refresh()
.venv\Lib\site-packages\rich\progress.py:88:        self.progress.update(self.task_id, completed=self.completed, refresh=True)
.venv\Lib\site-packages\rich\progress.py:109:    auto_refresh: bool = True,
.venv\Lib\site-packages\rich\progress.py:113:    refresh_per_second: float = 10,
.venv\Lib\site-packages\rich\progress.py:131:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
.venv\Lib\site-packages\rich\progress.py:134:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
.venv\Lib\site-packages\rich\progress.py:164:        auto_refresh=auto_refresh,
.venv\Lib\site-packages\rich\progress.py:168:        refresh_per_second=refresh_per_second or 10,
.venv\Lib\site-packages\rich\progress.py:311:    auto_refresh: bool = True,
.venv\Lib\site-packages\rich\progress.py:315:    refresh_per_second: float = 10,
.venv\Lib\site-packages\rich\progress.py:328:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
.venv\Lib\site-packages\rich\progress.py:331:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
.venv\Lib\site-packages\rich\progress.py:359:        auto_refresh=auto_refresh,
.venv\Lib\site-packages\rich\progress.py:363:        refresh_per_second=refresh_per_second or 10,
.venv\Lib\site-packages\rich\progress.py:382:    auto_refresh: bool = True,
.venv\Lib\site-packages\rich\progress.py:386:    refresh_per_second: float = 10,
.venv\Lib\site-packages\rich\progress.py:407:    auto_refresh: bool = True,
.venv\Lib\site-packages\rich\progress.py:411:    refresh_per_second: float = 10,
.venv\Lib\site-packages\rich\progress.py:431:    auto_refresh: bool = True,
.venv\Lib\site-packages\rich\progress.py:435:    refresh_per_second: float = 10,
.venv\Lib\site-packages\rich\progress.py:453:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
.venv\Lib\site-packages\rich\progress.py:456:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
.venv\Lib\site-packages\rich\progress.py:486:        auto_refresh=auto_refresh,
.venv\Lib\site-packages\rich\progress.py:490:        refresh_per_second=refresh_per_second or 10,
.venv\Lib\site-packages\rich\progress.py:510:    max_refresh: Optional[float] = None
.venv\Lib\site-packages\rich\progress.py:531:        if self.max_refresh is not None and not task.completed:
.venv\Lib\site-packages\rich\progress.py:537:                if timestamp + self.max_refresh > current_time:
.venv\Lib\site-packages\rich\progress.py:780:    # Only refresh twice a second to prevent jitter
.venv\Lib\site-packages\rich\progress.py:781:    max_refresh = 0.5
.venv\Lib\site-packages\rich\progress.py:1066:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()`.
.venv\Lib\site-packages\rich\progress.py:1067:        refresh_per_second (Optional[float], optional): Number of times per second to refresh the progress information or None to use default (10). Defaults to None.
.venv\Lib\site-packages\rich\progress.py:1081:        auto_refresh: bool = True,
.venv\Lib\site-packages\rich\progress.py:1082:        refresh_per_second: float = 10,
.venv\Lib\site-packages\rich\progress.py:1091:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
.venv\Lib\site-packages\rich\progress.py:1102:            auto_refresh=auto_refresh,
.venv\Lib\site-packages\rich\progress.py:1103:            refresh_per_second=refresh_per_second,
.venv\Lib\site-packages\rich\progress.py:1171:            self.live.start(refresh=True)
.venv\Lib\site-packages\rich\progress.py:1223:        if self.live.auto_refresh:
.venv\Lib\site-packages\rich\progress.py:1230:            refresh = self.refresh
.venv\Lib\site-packages\rich\progress.py:1234:                refresh()
.venv\Lib\site-packages\rich\progress.py:1425:        refresh: bool = False,
.venv\Lib\site-packages\rich\progress.py:1437:            refresh (bool): Force a refresh of progress information. Default is False.
.venv\Lib\site-packages\rich\progress.py:1474:        if refresh:
.venv\Lib\site-packages\rich\progress.py:1475:            self.refresh()
.venv\Lib\site-packages\rich\progress.py:1514:        self.refresh()
.venv\Lib\site-packages\rich\progress.py:1546:    def refresh(self) -> None:
.venv\Lib\site-packages\rich\progress.py:1547:        """Refresh (render) the progress information."""
.venv\Lib\site-packages\rich\progress.py:1549:            self.live.refresh()
.venv\Lib\site-packages\rich\progress.py:1639:        self.refresh()
.venv\Lib\site-packages\rich\prompt.py:345:                run_job()
.venv\Lib\site-packages\rich\spinner.py:130:    with Live(all_spinners, refresh_per_second=20) as live:
.venv\Lib\site-packages\rich\status.py:20:        refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
.venv\Lib\site-packages\rich\status.py:31:        refresh_per_second: float = 12.5,
.venv\Lib\site-packages\rich\status.py:40:            refresh_per_second=refresh_per_second,
.venv\Lib\site-packages\rich\status.py:79:            self._live.update(self.renderable, refresh=True)
.venv\Lib\site-packages\rich\_emoji_codes.py:193:    "micronesia": "🇫🇲",
.venv\Lib\site-packages\rich\_emoji_codes.py:3147:    "flag_for_micronesia": "🇫🇲",
.venv\Lib\site-packages\setuptools\package_index.py:532:        """Scan urls scheduled for prescanning (e.g. --find-links)"""
.venv\Lib\site-packages\setuptools\command\editable_wheel.py:839:    most appropriate tool for the job...
.venv\Lib\site-packages\setuptools\_distutils\ccompiler.py:487:        language_map, and language_order to do the job.
.venv\Lib\site-packages\setuptools\_distutils\msvc9compiler.py:11:# hacked by Robin Becker and Thomas Heller to do a better job of
.venv\Lib\site-packages\setuptools\_distutils\msvccompiler.py:8:# hacked by Robin Becker and Thomas Heller to do a better job of
.venv\Lib\site-packages\setuptools\_distutils\text_file.py:200:                    # the job of a later step (rstrip_ws) to remove it --
.venv\Lib\site-packages\setuptools\_distutils\_msvccompiler.py:11:# hacked by Robin Becker and Thomas Heller to do a better job of
.venv\Lib\site-packages\setuptools\_distutils\command\build.py:41:        ('parallel=', 'j', "number of parallel build jobs"),
.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:97:        ('parallel=', 'j', "number of parallel build jobs"),
.venv\Lib\site-packages\setuptools\_vendor\jaraco\text\__init__.py:263:    Acronyms should be retained
.venv\Lib\site-packages\socketio\async_simple_client.py:120:        This method schedules the event to be sent out and returns, without
.venv\Lib\site-packages\socketio\simple_client.py:116:        This method schedules the event to be sent out and returns, without
.venv\Lib\site-packages\supabase\lib\client_options.py:25:    auto_refresh_token: bool = True
.venv\Lib\site-packages\supabase\lib\client_options.py:26:    """Automatically refreshes the token for logged in users."""
.venv\Lib\site-packages\supabase\lib\client_options.py:52:        auto_refresh_token: Optional[bool] = None,
.venv\Lib\site-packages\supabase\lib\client_options.py:68:        client_options.auto_refresh_token = (
.venv\Lib\site-packages\supabase\lib\client_options.py:69:            auto_refresh_token or self.auto_refresh_token
.venv\Lib\site-packages\supabase\_async\auth_client.py:21:        auto_refresh_token: bool = True,
.venv\Lib\site-packages\supabase\_async\auth_client.py:36:            auto_refresh_token=auto_refresh_token,
.venv\Lib\site-packages\supabase\_async\client.py:224:            auto_refresh_token=client_options.auto_refresh_token,
.venv\Lib\site-packages\supabase\_async\client.py:268:        if event in ["SIGNED_IN", "TOKEN_REFRESHED", "SIGNED_OUT"]:
.venv\Lib\site-packages\supabase\_sync\auth_client.py:21:        auto_refresh_token: bool = True,
.venv\Lib\site-packages\supabase\_sync\auth_client.py:36:            auto_refresh_token=auto_refresh_token,
.venv\Lib\site-packages\supabase\_sync\client.py:220:            auto_refresh_token=client_options.auto_refresh_token,
.venv\Lib\site-packages\supabase\_sync\client.py:264:        if event in ["SIGNED_IN", "TOKEN_REFRESHED", "SIGNED_OUT"]:
.venv\Lib\site-packages\virtualenv\create\pyenv_cfg.py:45:    def refresh(self):
.venv\Lib\site-packages\virtualenv\create\via_global_ref\venv.py:89:        venv_content = copy(self.pyenv_cfg.refresh())
.venv\Lib\site-packages\websockets\protocol.py:489:        If it returns :obj:`True`, schedule closing the TCP connection after a
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:83:    """Schedule the timeout at absolute time.
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:122:    # TimeoutError is raised immediately when scheduled
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:182:        """Reject scheduled timeout if any."""
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:199:        Raise RuntimeError if shift is called when deadline is not scheduled
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:203:            raise RuntimeError("cannot shift timeout if deadline is not scheduled")
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:218:            raise RuntimeError("cannot reschedule after exit from context manager")
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:220:            raise RuntimeError("cannot reschedule expired timeout")
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:225:            self._reschedule()
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:227:    def _reschedule(self) -> None:
.venv\Lib\site-packages\websockets\legacy\async_timeout.py:247:        self._reschedule()
.venv\Lib\site-packages\websockets\legacy\server.py:151:        # schedules its execution, and the moment the handler starts running.
.venv\Lib\site-packages\_pytest\fixtures.py:695:            self._schedule_finalizers(fixturedef, subrequest)
.venv\Lib\site-packages\_pytest\fixtures.py:697:    def _schedule_finalizers(
.venv\Lib\site-packages\_pytest\fixtures.py:775:    def _schedule_finalizers(
.venv\Lib\site-packages\_pytest\fixtures.py:785:        super()._schedule_finalizers(fixturedef, subrequest)
.venv\Lib\site-packages\_pytest\hookspec.py:494:    :param nextitem: The scheduled-to-be-next test item (or None if this is the end my friend).
.venv\Lib\site-packages\_pytest\hookspec.py:563:        The scheduled-to-be-next test item (None if no further test item is
.venv\Lib\site-packages\_pytest\hookspec.py:564:        scheduled). This argument is used to perform exact teardowns, i.e.
.venv\Lib\site-packages\_pytest\skipping.py:231:# Saves the xfail mark evaluation. Can be refreshed during call if None.
.venv\Lib\site-packages\_pytest\_py\path.py:1354:                # https://ci.appveyor.com/project/pytestbot/py/build/1.0.21/job/ffi85j4c0lqwsfwa
.venv\Lib\site-packages\_pytest\_py\path.py:1371:            """Check if path denotes directory scheduled for removal"""
.venv\Lib\site-packages\_pytest\_py\path.py:1396:                    # and scheduled for removal to avoid another thread/process
scripts\gh_actions_status.py:75:def list_jobs(owner: str, repo: str, run_id: int, token: str | None) -> dict[str, Any]:
scripts\gh_actions_status.py:76:    url = f"{GITHUB_API}/repos/{owner}/{repo}/actions/runs/{run_id}/jobs"
scripts\gh_actions_status.py:94:def download_job_logs(
scripts\gh_actions_status.py:95:    owner: str, repo: str, job_id: int, token: str | None
scripts\gh_actions_status.py:97:    url = f"{GITHUB_API}/repos/{owner}/{repo}/actions/jobs/{job_id}/logs"
scripts\gh_actions_status.py:126:    p.add_argument("--show-jobs", action="store_true")
scripts\gh_actions_status.py:129:    p.add_argument("--print-failed-job-logs", action="store_true")
scripts\gh_actions_status.py:152:    failed_jobs: list[dict[str, Any]] = []
scripts\gh_actions_status.py:154:    if args.show_jobs and run_id:
scripts\gh_actions_status.py:155:        print("\nJobs for latest run:")
scripts\gh_actions_status.py:156:        jobs = list_jobs(args.owner, args.repo, run_id, token)
scripts\gh_actions_status.py:157:        for j in jobs.get("jobs", []):
scripts\gh_actions_status.py:162:                f"- job={name} status={status} conclusion={concl} "
scripts\gh_actions_status.py:166:                failed_jobs.append(j)
scripts\gh_actions_status.py:183:    if args.print_failed_job_logs and failed_jobs:
scripts\gh_actions_status.py:184:        print("\n=== Failed job logs (tails) ===")
scripts\gh_actions_status.py:185:        for j in failed_jobs:
scripts\gh_actions_status.py:186:            job_id = int(j.get("id"))
scripts\gh_actions_status.py:188:            print(f"\n--- {name} (job_id={job_id}) ---")
scripts\gh_actions_status.py:189:            lines = download_job_logs(args.owner, args.repo, job_id, token)
scripts\mcp\.venv\Lib\site-packages\adodbapi\adodbapi.py:847:                self.cmd.Parameters.Refresh()
scripts\mcp\.venv\Lib\site-packages\adodbapi\adodbapi.py:857:                    print("ADO Parameter Refresh failed")
scripts\mcp\.venv\Lib\site-packages\anyio\lowlevel.py:16:    Check for cancellation and allow the scheduler to switch to another task.
scripts\mcp\.venv\Lib\site-packages\anyio\lowlevel.py:34:    This does not allow the scheduler to switch to a different task.
scripts\mcp\.venv\Lib\site-packages\anyio\lowlevel.py:44:    Allow the scheduler to switch to another task but without checking for cancellation.
scripts\mcp\.venv\Lib\site-packages\anyio\abc\_eventloop.py:117:        to be scheduled if not.
scripts\mcp\.venv\Lib\site-packages\anyio\abc\_tasks.py:46:        tasks being scheduled on the next iteration of the event loop, and may thus
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:282:        """Schedule the shutdown of the default executor."""
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:556:        Schedule another run at the end if we still have tasks eligible for
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:587:        # Schedule another callback if there are still tasks left
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:4:Implements authorization code flow with PKCE and automatic token refresh.
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:135:    def can_refresh_token(self) -> bool:
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:136:        """Check if token can be refreshed."""
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:137:        return bool(self.current_tokens and self.current_tokens.refresh_token and self.client_info)
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:411:    async def _refresh_token(self) -> httpx.Request:
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:412:        """Build token refresh request."""
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:413:        if not self.context.current_tokens or not self.context.current_tokens.refresh_token:
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:414:            raise OAuthTokenError("No refresh token available")
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:425:        refresh_data = {
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:426:            "grant_type": "refresh_token",
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:427:            "refresh_token": self.context.current_tokens.refresh_token,
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:433:            refresh_data["resource"] = self.context.get_resource_url()  # RFC 8707
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:436:            refresh_data["client_secret"] = self.context.client_info.client_secret
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:439:            "POST", token_url, data=refresh_data, headers={"Content-Type": "application/x-www-form-urlencoded"}
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:442:    async def _handle_refresh_response(self, response: httpx.Response) -> bool:
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:443:        """Handle token refresh response. Returns True if successful."""
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:445:            logger.warning(f"Token refresh failed: {response.status_code}")
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:459:            logger.exception("Invalid refresh response")
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:494:            if not self.context.is_token_valid() and self.context.can_refresh_token():
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:495:                # Try to refresh token
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:496:                refresh_request = await self._refresh_token()
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:497:                refresh_response = yield refresh_request
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:499:                if not await self._handle_refresh_response(refresh_response):
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:500:                    # Refresh failed, need full re-authentication
scripts\mcp\.venv\Lib\site-packages\mcp\client\session.py:316:            # refresh output schema cache
scripts\mcp\.venv\Lib\site-packages\mcp\client\stdio\__init__.py:244:    Windows: Creates process in a Job Object for reliable child termination
scripts\mcp\.venv\Lib\site-packages\mcp\client\stdio\__init__.py:265:    Windows: Uses Job Objects via pywin32 for reliable child process cleanup
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:20:# Windows-specific imports for Job Objects
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:25:    import win32job
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:30:    win32job = None
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:33:JobHandle = int
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:144:    Creates a subprocess in a Windows-compatible way with Job Object support.
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:151:    The process is automatically added to a Job Object to ensure all child
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:164:    job = _create_job_object()
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:191:    _maybe_assign_process_to_job(process, job)
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:233:def _create_job_object() -> int | None:
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:235:    Create a Windows Job Object configured to terminate all processes when closed.
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:237:    if sys.platform != "win32" or not win32job:
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:241:        job = win32job.CreateJobObject(None, "")
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:242:        extended_info = win32job.QueryInformationJobObject(job, win32job.JobObjectExtendedLimitInformation)
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:244:        extended_info["BasicLimitInformation"]["LimitFlags"] |= win32job.JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:245:        win32job.SetInformationJobObject(job, win32job.JobObjectExtendedLimitInformation, extended_info)
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:246:        return job
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:248:        logger.warning(f"Failed to create Job Object for process tree management: {e}")
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:252:def _maybe_assign_process_to_job(process: Process | FallbackProcess, job: JobHandle | None) -> None:
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:254:    Try to assign a process to a job object. If assignment fails
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:255:    for any reason, the job handle is closed.
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:257:    if not job:
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:260:    if sys.platform != "win32" or not win32api or not win32con or not win32job:
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:271:            win32job.AssignProcessToJobObject(job, process_handle)
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:272:            process._job_object = job
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:276:        logger.warning(f"Failed to assign process {process.pid} to Job Object: {e}")
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:278:            win32api.CloseHandle(job)
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:285:    If the process has an associated job object, it will be terminated.
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:295:    job = getattr(process, "_job_object", None)
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:296:    if job and win32job:
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:298:            win32job.TerminateJobObject(job, 1)
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:300:            # Job might already be terminated
scripts\mcp\.venv\Lib\site-packages\mcp\os\win32\utilities.py:305:                    win32api.CloseHandle(job)
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:30:class RefreshToken(BaseModel):
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:102:RefreshTokenT = TypeVar("RefreshTokenT", bound=RefreshToken)
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:106:class OAuthAuthorizationServerProvider(Protocol, Generic[AuthorizationCodeT, RefreshTokenT, AccessTokenT]):
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:199:        Exchanges an authorization code for an access token and refresh token.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:206:            The OAuth token, containing access and refresh tokens.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:213:    async def load_refresh_token(self, client: OAuthClientInformationFull, refresh_token: str) -> RefreshTokenT | None:
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:215:        Loads a RefreshToken by its token string.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:218:            client: The client that is requesting to load the refresh token.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:219:            refresh_token: The refresh token string to load.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:222:            The RefreshToken object if found, or None if not found.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:227:    async def exchange_refresh_token(
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:230:        refresh_token: RefreshTokenT,
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:234:        Exchanges a refresh token for an access token and refresh token.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:236:        Implementations SHOULD rotate both the access token and refresh token.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:239:            client: The client exchanging the refresh token.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:240:            refresh_token: The refresh token to exchange.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:244:            The OAuth token, containing access and refresh tokens.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:265:        token: AccessTokenT | RefreshTokenT,
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:268:        Revokes an access or refresh token.
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:273:        refresh token, regardless of which of the access token or refresh token is
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\provider.py:301:    def __init__(self, provider: "OAuthAuthorizationServerProvider[AuthorizationCode, RefreshToken, AccessToken]"):
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\routes.py:166:        grant_types_supported=["authorization_code", "refresh_token"],
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\register.py:71:        if set(client_metadata.grant_types) != {"authorization_code", "refresh_token"}:
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\register.py:75:                    error_description="grant_types must be authorization_code and refresh_token",
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\revoke.py:14:from mcp.server.auth.provider import AccessToken, OAuthAuthorizationServerProvider, RefreshToken
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\revoke.py:23:    token_type_hint: Literal["access_token", "refresh_token"] | None = None
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\revoke.py:70:            partial(self.provider.load_refresh_token, client),
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\revoke.py:72:        if revocation_request.token_type_hint == "refresh_token":
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\revoke.py:75:        token: None | AccessToken | RefreshToken = None
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:31:class RefreshTokenRequest(BaseModel):
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:33:    grant_type: Literal["refresh_token"]
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:34:    refresh_token: str = Field(..., description="The refresh token")
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:46:            AuthorizationCodeRequest | RefreshTokenRequest,
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:52:        AuthorizationCodeRequest | RefreshTokenRequest,
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:195:            case RefreshTokenRequest():
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:196:                refresh_token = await self.provider.load_refresh_token(client_info, token_request.refresh_token)
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:197:                if refresh_token is None or refresh_token.client_id != token_request.client_id:
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:202:                            error_description="refresh token does not exist",
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:206:                if refresh_token.expires_at and refresh_token.expires_at < time.time():
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:207:                    # if the refresh token has expired, pretend it doesn't exist
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:211:                            error_description="refresh token has expired",
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:216:                scopes = token_request.scope.split(" ") if token_request.scope else refresh_token.scopes
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:219:                    if scope not in refresh_token.scopes:
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:223:                                error_description=(f"cannot request scope `{scope}` not provided by refresh token"),
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:228:                    # Exchange refresh token for new tokens
scripts\mcp\.venv\Lib\site-packages\mcp\server\auth\handlers\token.py:229:                    tokens = await self.provider.exchange_refresh_token(client_info, refresh_token, scopes)
scripts\mcp\.venv\Lib\site-packages\mcp\server\lowlevel\server.py:389:                # Refresh the tool cache
scripts\mcp\.venv\Lib\site-packages\mcp\server\lowlevel\server.py:410:        """Get tool definition from cache, refreshing if necessary.
scripts\mcp\.venv\Lib\site-packages\mcp\server\lowlevel\server.py:416:                logger.debug("Tool cache miss for %s, refreshing cache", tool_name)
scripts\mcp\.venv\Lib\site-packages\mcp\shared\auth.py:15:    refresh_token: str | None = None
scripts\mcp\.venv\Lib\site-packages\mcp\shared\auth.py:49:    # grant_types: this implementation only supports authorization_code & refresh_token
scripts\mcp\.venv\Lib\site-packages\mcp\shared\auth.py:50:    grant_types: list[Literal["authorization_code", "refresh_token"]] = [
scripts\mcp\.venv\Lib\site-packages\mcp\shared\auth.py:52:        "refresh_token",
scripts\mcp\.venv\Lib\site-packages\pip\_internal\self_outdated_check.py:90:        # Determine if we need to refresh the state
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\progress_bars.py:60:    progress = Progress(*columns, refresh_per_second=5)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\progress_bars.py:84:    bar = Progress(*columns, refresh_per_second=6, console=console, transient=True)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\progress_bars.py:85:    # Hiding the progress bar at initialization forces a refresh cycle to occur
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\spinners.py:202:    with Live(spinner, refresh_per_second=SPINS_PER_SECOND, console=console):
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:586:        def schedule(req: InstallRequirement) -> None:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:593:                schedule(dep)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:597:            schedule(install_req)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\cachecontrol\controller.py:200:        # Client can try to refresh the value by repeating the request
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\packaging\licenses\_spdx.py:216:    'cronyx': {'id': 'Cronyx', 'deprecated': False},
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1170:        refresh_per_second: float = 12.5,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1179:            refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1192:            refresh_per_second=refresh_per_second,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\layout.py:328:    def refresh_screen(self, console: "Console", layout_name: str) -> None:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\layout.py:329:        """Refresh a sub-layout.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:22:class _RefreshThread(Thread):
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:23:    """A thread that calls refresh() at regular intervals."""
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:25:    def __init__(self, live: "Live", refresh_per_second: float) -> None:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:27:        self.refresh_per_second = refresh_per_second
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:35:        while not self.done.wait(1 / self.refresh_per_second):
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:38:                    self.live.refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:48:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()` or `update()` with refresh flag. Defaults to True
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:49:        refresh_per_second (float, optional): Number of times per second to refresh the live display. Defaults to 4.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:63:        auto_refresh: bool = True,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:64:        refresh_per_second: float = 4,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:71:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:84:        self.auto_refresh = auto_refresh
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:88:        self._refresh_thread: Optional[_RefreshThread] = None
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:89:        self.refresh_per_second = refresh_per_second
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:111:    def start(self, refresh: bool = False) -> None:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:115:            refresh (bool, optional): Also refresh. Defaults to False.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:131:            if refresh:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:133:                    self.refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:135:                    # If refresh fails, we want to stop the redirection of sys.stderr,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:141:            if self.auto_refresh:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:142:                self._refresh_thread = _RefreshThread(self, self.refresh_per_second)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:143:                self._refresh_thread.start()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:157:            if self.auto_refresh and self._refresh_thread is not None:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:158:                self._refresh_thread.stop()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:159:                self._refresh_thread = None
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:165:                        self.refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:180:        self.start(refresh=self._renderable is not None)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:226:    def update(self, renderable: RenderableType, *, refresh: bool = False) -> None:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:231:            refresh (bool, optional): Refresh the display. Defaults to False.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:237:            if refresh:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:238:                self.refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:240:    def refresh(self) -> None:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\live.py:246:                    self.console._live_stack[0].refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:88:        self.progress.update(self.task_id, completed=self.completed, refresh=True)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:109:    auto_refresh: bool = True,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:113:    refresh_per_second: float = 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:131:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:134:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:164:        auto_refresh=auto_refresh,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:168:        refresh_per_second=refresh_per_second or 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:311:    auto_refresh: bool = True,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:315:    refresh_per_second: float = 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:328:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:331:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:359:        auto_refresh=auto_refresh,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:363:        refresh_per_second=refresh_per_second or 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:382:    auto_refresh: bool = True,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:386:    refresh_per_second: float = 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:407:    auto_refresh: bool = True,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:411:    refresh_per_second: float = 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:431:    auto_refresh: bool = True,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:435:    refresh_per_second: float = 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:453:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:456:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:486:        auto_refresh=auto_refresh,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:490:        refresh_per_second=refresh_per_second or 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:510:    max_refresh: Optional[float] = None
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:531:        if self.max_refresh is not None and not task.completed:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:537:                if timestamp + self.max_refresh > current_time:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:780:    # Only refresh twice a second to prevent jitter
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:781:    max_refresh = 0.5
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1066:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()`.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1067:        refresh_per_second (Optional[float], optional): Number of times per second to refresh the progress information or None to use default (10). Defaults to None.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1081:        auto_refresh: bool = True,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1082:        refresh_per_second: float = 10,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1091:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1102:            auto_refresh=auto_refresh,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1103:            refresh_per_second=refresh_per_second,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1171:            self.live.start(refresh=True)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1223:        if self.live.auto_refresh:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1230:            refresh = self.refresh
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1234:                refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1425:        refresh: bool = False,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1437:            refresh (bool): Force a refresh of progress information. Default is False.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1474:        if refresh:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1475:            self.refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1514:        self.refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1546:    def refresh(self) -> None:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1547:        """Refresh (render) the progress information."""
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1549:            self.live.refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1639:        self.refresh()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\prompt.py:345:                run_job()
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\spinner.py:130:    with Live(all_spinners, refresh_per_second=20) as live:
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\status.py:20:        refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\status.py:31:        refresh_per_second: float = 12.5,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\status.py:40:            refresh_per_second=refresh_per_second,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\status.py:79:            self._live.update(self.renderable, refresh=True)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:193:    "micronesia": "🇫🇲",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:3147:    "flag_for_micronesia": "🇫🇲",
scripts\mcp\.venv\Lib\site-packages\pkg_resources\_vendor\jaraco\text\__init__.py:263:    Acronyms should be retained
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\debugger\debugger.py:164:# 	def Refresh(self):
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\debugger\debugger.py:248:            self.list.Refresh()
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:1:# dojobapp - do a job, show the result in a dialog, and exit.
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:6:# pythonwin /app demos\dojobapp.py
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:14:class DoJobAppDialog(dlgappcore.AppDialog):
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:49:class DoJobDialogApp(dlgappcore.DialogApp):
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:51:        return DoJobAppDialog("Do Something")
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:54:class CopyToDialogApp(DoJobDialogApp):
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:56:        DoJobDialogApp.__init__(self)
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:59:app = DoJobDialogApp()
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\dojobapp.py:63:    t = DoJobAppDialog("Copy To")
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\framework\editor\document.py:330:    def RefreshEvent(self):
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\framework\editor\document.py:361:                self.RefreshEvent()
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\framework\editor\ModuleBrowser.py:153:            self.CheckRefreshList()
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\framework\editor\ModuleBrowser.py:165:                what = "Refreshing"
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\framework\editor\ModuleBrowser.py:210:    def CheckRefreshList(self):
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\framework\editor\ModuleBrowser.py:219:                    self.list.Refresh()
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1166:SCLEX_NNCRONTAB = 26
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1780:SCE_NNCRONTAB_DEFAULT = 0
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1781:SCE_NNCRONTAB_COMMENT = 1
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1782:SCE_NNCRONTAB_TASK = 2
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1783:SCE_NNCRONTAB_SECTION = 3
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1784:SCE_NNCRONTAB_KEYWORD = 4
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1785:SCE_NNCRONTAB_MODIFIER = 5
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1786:SCE_NNCRONTAB_ASTERISK = 6
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1787:SCE_NNCRONTAB_NUMBER = 7
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1788:SCE_NNCRONTAB_STRING = 8
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1789:SCE_NNCRONTAB_ENVIRONMENT = 9
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1790:SCE_NNCRONTAB_IDENTIFIER = 10
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\tools\hierlist.py:198:    def Refresh(self, hparent=None):
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\tools\hierlist.py:199:        # Attempt to refresh the given item's sub-entries, but maintain the tree state
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\tools\hierlist.py:204:            # This item has never been expanded, so no refresh can possibly be required.
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\tools\hierlist.py:229:                # And recursively refresh iold
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\tools\hierlist.py:232:                    self.Refresh(hold)
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\tools\regedit.py:128:            self.hierList.Refresh(hparent)
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\tools\regedit.py:137:            self.hierList.Refresh(hitem)
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\tools\regedit.py:148:            # Simply re-select the current item to refresh the right spitter.
scripts\mcp\.venv\Lib\site-packages\setuptools\package_index.py:532:        """Scan urls scheduled for prescanning (e.g. --find-links)"""
scripts\mcp\.venv\Lib\site-packages\setuptools\command\editable_wheel.py:839:    most appropriate tool for the job...
scripts\mcp\.venv\Lib\site-packages\setuptools\_distutils\ccompiler.py:487:        language_map, and language_order to do the job.
scripts\mcp\.venv\Lib\site-packages\setuptools\_distutils\msvc9compiler.py:11:# hacked by Robin Becker and Thomas Heller to do a better job of
scripts\mcp\.venv\Lib\site-packages\setuptools\_distutils\msvccompiler.py:8:# hacked by Robin Becker and Thomas Heller to do a better job of
scripts\mcp\.venv\Lib\site-packages\setuptools\_distutils\text_file.py:200:                    # the job of a later step (rstrip_ws) to remove it --
scripts\mcp\.venv\Lib\site-packages\setuptools\_distutils\_msvccompiler.py:11:# hacked by Robin Becker and Thomas Heller to do a better job of
scripts\mcp\.venv\Lib\site-packages\setuptools\_distutils\command\build.py:41:        ('parallel=', 'j', "number of parallel build jobs"),
scripts\mcp\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:97:        ('parallel=', 'j', "number of parallel build jobs"),
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\jaraco\text\__init__.py:263:    Acronyms should be retained
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:408:DS_REPMOD_UPDATE_SCHEDULE = 0x00000004
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:428:NTDSCONN_OPT_USER_OWNED_SCHEDULE = 1 << 5
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:442:NTDSCONN_OPT_IGNORE_SCHEDULE_MASK = -2147483648
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:453:NTDSSETTINGS_OPT_IS_SCHEDULE_HASHING_ENABLED = 1 << 9
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:456:NTDSTRANSPORT_OPT_IGNORE_SCHEDULES = 1 << 0
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:535:DS_REPL_NBR_DO_SCHEDULED_SYNCS = 0x00000040
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:544:DS_REPL_NBR_DISABLE_SCHEDULED_SYNC = 0x08000000
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:550:    | DS_REPL_NBR_DO_SCHEDULED_SYNCS
scripts\mcp\.venv\Lib\site-packages\win32\lib\ntsecuritycon.py:553:    | DS_REPL_NBR_DISABLE_SCHEDULED_SYNC
scripts\mcp\.venv\Lib\site-packages\win32\lib\sspicon.py:458:KerbRefreshSmartcardCredentialsMessage = 16
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:1393:WM_MDIREFRESHMENU = 564
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:2612:PR_JOBSTATUS = 0
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:2809:VREFRESH = 116
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32inetcon.py:156:INTERNET_OPTION_REFRESH = 37
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32inetcon.py:432:HTTP_QUERY_REFRESH = 46
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32inetcon.py:694:INTERENT_GOONLINE_REFRESH = 0x00000001
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32inetcon.py:750:WINHTTP_FLAG_REFRESH = WINHTTP_FLAG_BYPASS_PROXY_CACHE
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32inetcon.py:988:WINHTTP_QUERY_REFRESH = 46
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32netcon.py:349:SV_CHDEVJOBS_PARMNUM = 411
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32netcon.py:412:SV_ALERTSCHEDULE_PARMNUM = 547
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32pdhutil.py:87:    bRefresh=0,
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32pdhutil.py:98:    if bRefresh:  # PDH docs say this is how you do a refresh.
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:834:ERROR_PROCESS_NOT_IN_JOB = 759
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:835:ERROR_PROCESS_IN_JOB = 760
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:1025:ERROR_SHUTDOWN_IS_SCHEDULED = 1190
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:1097:ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = 1274
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:1299:ERROR_JOB_NO_CONTAINER = 1505
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:1570:ERROR_SPL_NO_ADDJOB = 3004
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:1575:ERROR_PRINTER_HAS_JOBS_QUEUED = 3009
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:1586:ERROR_PRINT_JOB_RESTART_REQUIRED = 3020
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:2581:ERROR_DS_DRA_OUT_SCHEDULE_WINDOW = 8617
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:3880:SCHED_S_TASK_NOT_SCHEDULED = 0x00041305
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:5434:TBSIMP_E_SCHEDULER_NOT_RUNNING = -2144796150
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:6677:D2DERR_PRINT_JOB_CLOSED = -2003238869
scripts\mcp\.venv\Lib\site-packages\win32\lib\winioctlcon.py:302:VOLUME_UPGRADE_SCHEDULED = 0x00000002
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:213:JOB_OBJECT_ASSIGN_PROCESS = 1
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:214:JOB_OBJECT_SET_ATTRIBUTES = 2
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:215:JOB_OBJECT_QUERY = 4
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:216:JOB_OBJECT_TERMINATE = 8
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:222:JOB_OBJECT_LIMIT_WORKINGSET = 1
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:223:JOB_OBJECT_LIMIT_PROCESS_TIME = 2
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:224:JOB_OBJECT_LIMIT_JOB_TIME = 4
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:225:JOB_OBJECT_LIMIT_ACTIVE_PROCESS = 8
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:226:JOB_OBJECT_LIMIT_AFFINITY = 16
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:227:JOB_OBJECT_LIMIT_PRIORITY_CLASS = 32
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:228:JOB_OBJECT_LIMIT_VALID_FLAGS = 63
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:1049:REG_REFRESH_HIVE = 2
scripts\mcp\.venv\Lib\site-packages\win32\scripts\killProcName.py:23:    # "refresh", allowing us to kill processes created since this was run
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:86:    since the ways, and needs, of refreshing your topics will vary greatly. For
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:98:      4. Excel calls our RefreshData method, and receives a 2d SafeArray (row-major)
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:110:    NOTE: By default, excel will at most call RefreshData once every 2 seconds.
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:121:        "RefreshData",
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:177:    def RefreshData(self, TopicCount):
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:189:        self.OnRefreshData()
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:250:    def OnRefreshData(self):
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:358:                refresh = False
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:362:                        refresh = True
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:365:                if refresh:
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:409:        refresh = False
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:412:                refresh = True
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:415:                refresh = True
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:418:                refresh = True
scripts\mcp\.venv\Lib\site-packages\win32com\demos\excelRTDServer.py:422:        if refresh:
scripts\mcp\.venv\Lib\site-packages\win32comext\axdebug\debugger.py:66:def RefreshAllModules(builtItems, rootNode, create_node, create_node_args):
scripts\mcp\.venv\Lib\site-packages\win32comext\axdebug\debugger.py:81:        self.axdebugger.RefreshAllModules(self.nodes, self)
scripts\mcp\.venv\Lib\site-packages\win32comext\axdebug\debugger.py:86:        #     self.axdebugger.RefreshAllModules(self.nodes, self)
scripts\mcp\.venv\Lib\site-packages\win32comext\axdebug\debugger.py:179:    def RefreshAllModules(self, nodes, containerProvider):
scripts\mcp\.venv\Lib\site-packages\win32comext\axdebug\debugger.py:180:        RefreshAllModules(
scripts\mcp\.venv\Lib\site-packages\win32comext\axdebug\gateways.py:249:        that its contents should be refreshed.
scripts\mcp\.venv\Lib\site-packages\win32comext\axscript\server\axsite.py:79:            # Gregs code did str.lower this - I think that is callers job if he wants!
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:1:# Dump lots of info about BITS jobs.
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:8:    if name.startswith("BG_JOB_STATE_")
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:11:job_types = {
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:14:    if name.startswith("BG_JOB_TYPE_")
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:25:    enum = bcm.EnumJobs(bits.BG_JOB_ENUM_ALL_USERS)
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:27:    print("Failed to get jobs for all users - trying for current user")
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:28:    enum = bcm.EnumJobs(0)
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:30:for job in enum:
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:31:    print("Job:", job.GetDisplayName())
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:32:    print("Description:", job.GetDescription())
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:33:    print("Id:", job.GetId())
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:34:    print("State:", states.get(job.GetState()))
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:35:    print("Type:", job_types.get(job.GetType()))
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:36:    print("Owner:", job.GetOwner())
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:37:    print("Errors:", job.GetErrorCount())
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:38:    print("Created/Modified/Finished times:", [str(t) for t in job.GetTimes()])
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:39:    bytes_tot, bytes_xf, files_tot, files_xf = job.GetProgress()
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\show_all_jobs.py:42:    for f in job.EnumFiles():
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:13:job_name = "bits-pywin32-test"
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:17:    if name.startswith("BG_JOB_STATE_")
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:28:class BackgroundJobCallback:
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:30:    _public_methods_ = ["JobTransferred", "JobError", "JobModification"]
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:32:    def JobTransferred(self, job):
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:33:        print("Job Transferred", job)
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:34:        job.Complete()
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:37:    def JobError(self, job, error):
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:38:        print("Job Error", job, error)
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:50:            job.Resume()
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:52:            job.Cancel()
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:63:    def JobModification(self, job, reserved):
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:64:        state = job.GetState()
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:65:        print("Job Modification", job.GetDisplayName(), states.get(state))
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:66:        # Need to catch TRANSIENT_ERROR here, as JobError doesn't get
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:68:        if state == bits.BG_JOB_STATE_TRANSIENT_ERROR:
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:70:            err = job.GetError()
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:74:job = bcm.CreateJob(job_name, bits.BG_JOB_TYPE_DOWNLOAD)
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:76:job.SetNotifyInterface(wrap(BackgroundJobCallback()))
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:77:job.SetNotifyFlags(
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:78:    bits.BG_NOTIFY_JOB_TRANSFERRED
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:79:    | bits.BG_NOTIFY_JOB_ERROR
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:80:    | bits.BG_NOTIFY_JOB_MODIFICATION
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:85:# downloaded. Then the JobError notification will be triggered, where
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:87:# and call Resume() on the job, making the job finish successfully.
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:90:# TRANSIENT_ERROR instead of ERROR, and the JobError notification will
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:95:job.AddFile(
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:99:job.AddFile(
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:104:for f in job.EnumFiles():
scripts\mcp\.venv\Lib\site-packages\win32comext\bits\test\test_bits.py:108:job.Resume()
scripts\mcp\.venv\Lib\site-packages\win32comext\internet\inetcon.py:49:URLMON_OPTION_USERAGENT_REFRESH = 0x10000002
scripts\mcp\.venv\Lib\site-packages\win32comext\internet\inetcon.py:157:URLACTION_HTML_META_REFRESH = 0x00001608
scripts\mcp\.venv\Lib\site-packages\win32comext\mapi\emsabtags.py:78:PR_EMS_AB_ACTIVATION_SCHEDULE = PROP_TAG(PT_BINARY, 32837)
scripts\mcp\.venv\Lib\site-packages\win32comext\mapi\emsabtags.py:612:PR_EMS_AB_OFF_LINE_AB_SCHEDULE = PROP_TAG(PT_BINARY, 33017)
scripts\mcp\.venv\Lib\site-packages\win32comext\mapi\emsabtags.py:685:PR_EMS_AB_QUOTA_NOTIFICATION_SCHEDULE = PROP_TAG(PT_BINARY, 33041)
scripts\mcp\.venv\Lib\site-packages\win32comext\mapi\mapitags.py:895:PR_REPLICATION_SCHEDULE = PROP_TAG(PT_BINARY, pidAdminMin + 1)
scripts\mcp\.venv\Lib\site-packages\win32comext\propsys\pscon.py:255:PKEY_Contact_JobTitle = (IID("{176DC63C-2688-4E89-8143-A347800F25E9}"), 6)
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\shellcon.py:999:AD_APPLY_REFRESH = 4
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\shellcon.py:1000:AD_APPLY_ALL = AD_APPLY_SAVE | AD_APPLY_HTMLGEN | AD_APPLY_REFRESH
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\shellcon.py:1002:AD_APPLY_BUFFERED_REFRESH = 16
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\shellcon.py:1003:AD_APPLY_DYNAMICREFRESH = 32
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\shellcon.py:1053:SSM_REFRESH = 2
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\shellcon.py:1060:SCHEME_REFRESH = 0x0010
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\shellcon.py:1158:NSTCS_SHOWREFRESHBUTTON = -2147483648  # 0x80000000
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\shellcon.py:1220:    "Refresh",
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\demos\servers\empty_volume_cache.py:49:            print("We are being run on a schedule")
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\demos\servers\shell_view.py:542:        self.Refresh()
scripts\mcp\.venv\Lib\site-packages\win32comext\shell\demos\servers\shell_view.py:588:    def Refresh(self):
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:7:from win32com.taskscheduler import taskscheduler
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:9:task_name = "test_addtask.job"
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:11:    taskscheduler.CLSID_CTaskScheduler,
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:14:    taskscheduler.IID_ITaskScheduler,
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:26:t.SetPriority(taskscheduler.REALTIME_PRIORITY_CLASS)
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:34:    taskscheduler.TASK_FLAG_INTERACTIVE | taskscheduler.TASK_FLAG_RUN_ONLY_IF_LOGGED_ON
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:36:##               |taskscheduler.TASK_FLAG_DELETE_WHEN_DONE)  #task self destructs when no more future run times
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:46:tt.Flags = taskscheduler.TASK_TRIGGER_FLAG_KILL_AT_DURATION_END
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask.py:55:tt.TriggerType = taskscheduler.TASK_TIME_TRIGGER_MONTHLYDATE
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:5:from win32com.taskscheduler import taskscheduler
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:7:test_task_name = "test_addtask_1.job"
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:10:    taskscheduler.CLSID_CTaskScheduler,
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:13:    taskscheduler.IID_ITaskScheduler,
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:24:    taskscheduler.CLSID_CTask,
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:27:    taskscheduler.IID_ITask,
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:32:    taskscheduler.TASK_FLAG_INTERACTIVE | taskscheduler.TASK_FLAG_RUN_ONLY_IF_LOGGED_ON
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:37:new_task.SetPriority(taskscheduler.REALTIME_PRIORITY_CLASS)
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:51:tt.TriggerType = taskscheduler.TASK_EVENT_TRIGGER_ON_IDLE
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_1.py:52:tt.Flags = taskscheduler.TASK_TRIGGER_FLAG_HAS_END_DATE
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_2.py:4:from win32com.taskscheduler import taskscheduler
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_2.py:6:task_name = "test_addtask_2.job"
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_2.py:8:    taskscheduler.CLSID_CTaskScheduler,
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_2.py:11:    taskscheduler.IID_ITaskScheduler,
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_2.py:23:t.SetPriority(taskscheduler.REALTIME_PRIORITY_CLASS)
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_2.py:27:t.SetFlags(taskscheduler.TASK_FLAG_DELETE_WHEN_DONE)
scripts\mcp\.venv\Lib\site-packages\win32comext\taskscheduler\test\test_addtask_2.py:38:tt.TriggerType = taskscheduler.TASK_TIME_TRIGGER_ONCE
scripts\openai_batch\poll_batch.py:17:        description="Poll an OpenAI Batch job and download results"
scripts\openai_batch\submit_batch.py:13:    parser = argparse.ArgumentParser(description="Submit an OpenAI Batch job")
scripts\openai_batch\.venv\Lib\site-packages\anyio\lowlevel.py:16:    Check for cancellation and allow the scheduler to switch to another task.
scripts\openai_batch\.venv\Lib\site-packages\anyio\lowlevel.py:34:    This does not allow the scheduler to switch to a different task.
scripts\openai_batch\.venv\Lib\site-packages\anyio\lowlevel.py:44:    Allow the scheduler to switch to another task but without checking for cancellation.
scripts\openai_batch\.venv\Lib\site-packages\anyio\abc\_eventloop.py:117:        to be scheduled if not.
scripts\openai_batch\.venv\Lib\site-packages\anyio\abc\_tasks.py:46:        tasks being scheduled on the next iteration of the event loop, and may thus
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:282:        """Schedule the shutdown of the default executor."""
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:556:        Schedule another run at the end if we still have tasks eligible for
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:587:        # Schedule another callback if there are still tasks left
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_progress.py:53:            meter.refresh()
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:12:    FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:13:    FineTuningJobEvent,
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:21:    sub = subparser.add_parser("fine_tuning.jobs.create")
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:50:    sub.set_defaults(func=CLIFineTuningJobs.create, args_model=CLIFineTuningJobsCreateArgs)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:52:    sub = subparser.add_parser("fine_tuning.jobs.retrieve")
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:56:        help="The ID of the fine-tuning job to retrieve.",
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:59:    sub.set_defaults(func=CLIFineTuningJobs.retrieve, args_model=CLIFineTuningJobsRetrieveArgs)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:61:    sub = subparser.add_parser("fine_tuning.jobs.list")
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:65:        help="Identifier for the last job from the previous pagination request. If provided, only jobs created after this job will be returned.",
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:70:        help="Number of fine-tuning jobs to retrieve.",
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:73:    sub.set_defaults(func=CLIFineTuningJobs.list, args_model=CLIFineTuningJobsListArgs)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:75:    sub = subparser.add_parser("fine_tuning.jobs.cancel")
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:79:        help="The ID of the fine-tuning job to cancel.",
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:82:    sub.set_defaults(func=CLIFineTuningJobs.cancel, args_model=CLIFineTuningJobsCancelArgs)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:84:    sub = subparser.add_parser("fine_tuning.jobs.list_events")
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:88:        help="The ID of the fine-tuning job to list events for.",
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:99:        help="Number of fine-tuning job events to retrieve.",
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:102:    sub.set_defaults(func=CLIFineTuningJobs.list_events, args_model=CLIFineTuningJobsListEventsArgs)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:105:class CLIFineTuningJobsCreateArgs(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:113:class CLIFineTuningJobsRetrieveArgs(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:117:class CLIFineTuningJobsListArgs(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:122:class CLIFineTuningJobsCancelArgs(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:126:class CLIFineTuningJobsListEventsArgs(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:132:class CLIFineTuningJobs:
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:134:    def create(args: CLIFineTuningJobsCreateArgs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:136:        fine_tuning_job: FineTuningJob = get_client().fine_tuning.jobs.create(
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:143:        print_model(fine_tuning_job)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:146:    def retrieve(args: CLIFineTuningJobsRetrieveArgs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:147:        fine_tuning_job: FineTuningJob = get_client().fine_tuning.jobs.retrieve(fine_tuning_job_id=args.id)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:148:        print_model(fine_tuning_job)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:151:    def list(args: CLIFineTuningJobsListArgs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:152:        fine_tuning_jobs: SyncCursorPage[FineTuningJob] = get_client().fine_tuning.jobs.list(
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:155:        print_model(fine_tuning_jobs)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:158:    def cancel(args: CLIFineTuningJobsCancelArgs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:159:        fine_tuning_job: FineTuningJob = get_client().fine_tuning.jobs.cancel(fine_tuning_job_id=args.id)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:160:        print_model(fine_tuning_job)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:163:    def list_events(args: CLIFineTuningJobsListEventsArgs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:164:        fine_tuning_job_events: SyncCursorPage[FineTuningJobEvent] = get_client().fine_tuning.jobs.list_events(
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:165:            fine_tuning_job_id=args.id,
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\jobs.py:169:        print_model(fine_tuning_job_events)
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\__init__.py:6:from . import jobs
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\fine_tuning\__init__.py:13:    jobs.register(subparser)
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_old_api.py:56:    "FineTuningJob",
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_validators.py:617:        f"Once your model starts training, it'll approximately take {time_string} to train a `curie` model, and less for `ada` and `babbage`. Queue will approximately take half an hour per job ahead of you.\n"
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:6:from .jobs.jobs import (
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:7:    Jobs,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:8:    AsyncJobs,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:9:    JobsWithRawResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:10:    AsyncJobsWithRawResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:11:    JobsWithStreamingResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:12:    AsyncJobsWithStreamingResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:37:    def jobs(self) -> Jobs:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:38:        return Jobs(self._client)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:70:    def jobs(self) -> AsyncJobs:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:71:        return AsyncJobs(self._client)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:106:    def jobs(self) -> JobsWithRawResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:107:        return JobsWithRawResponse(self._fine_tuning.jobs)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:123:    def jobs(self) -> AsyncJobsWithRawResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:124:        return AsyncJobsWithRawResponse(self._fine_tuning.jobs)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:140:    def jobs(self) -> JobsWithStreamingResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:141:        return JobsWithStreamingResponse(self._fine_tuning.jobs)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:157:    def jobs(self) -> AsyncJobsWithStreamingResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\fine_tuning.py:158:        return AsyncJobsWithStreamingResponse(self._fine_tuning.jobs)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:3:from .jobs import (
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:4:    Jobs,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:5:    AsyncJobs,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:6:    JobsWithRawResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:7:    AsyncJobsWithRawResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:8:    JobsWithStreamingResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:9:    AsyncJobsWithStreamingResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:37:    "Jobs",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:38:    "AsyncJobs",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:39:    "JobsWithRawResponse",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:40:    "AsyncJobsWithRawResponse",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:41:    "JobsWithStreamingResponse",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\__init__.py:42:    "AsyncJobsWithStreamingResponse",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\alpha\graders.py:58:          grader: The grader used for the fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\alpha\graders.py:109:          grader: The grader used for the fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\alpha\graders.py:166:          grader: The grader used for the fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\alpha\graders.py:217:          grader: The grader used for the fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:18:from ....types.fine_tuning.jobs import checkpoint_list_params
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:19:from ....types.fine_tuning.jobs.fine_tuning_job_checkpoint import FineTuningJobCheckpoint
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:46:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:56:    ) -> SyncCursorPage[FineTuningJobCheckpoint]:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:58:        List checkpoints for a fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:73:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:74:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:76:            f"/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:77:            page=SyncCursorPage[FineTuningJobCheckpoint],
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:91:            model=FineTuningJobCheckpoint,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:117:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:127:    ) -> AsyncPaginator[FineTuningJobCheckpoint, AsyncCursorPage[FineTuningJobCheckpoint]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:129:        List checkpoints for a fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:144:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:145:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:147:            f"/fine_tuning/jobs/{fine_tuning_job_id}/checkpoints",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:148:            page=AsyncCursorPage[FineTuningJobCheckpoint],
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\checkpoints.py:162:            model=FineTuningJobCheckpoint,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:29:from ....types.fine_tuning import job_list_params, job_create_params, job_list_events_params
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:31:from ....types.fine_tuning.fine_tuning_job import FineTuningJob
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:32:from ....types.fine_tuning.fine_tuning_job_event import FineTuningJobEvent
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:34:__all__ = ["Jobs", "AsyncJobs"]
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:37:class Jobs(SyncAPIResource):
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:43:    def with_raw_response(self) -> JobsWithRawResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:50:        return JobsWithRawResponse(self)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:53:    def with_streaming_response(self) -> JobsWithStreamingResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:59:        return JobsWithStreamingResponse(self)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:66:        hyperparameters: job_create_params.Hyperparameters | NotGiven = NOT_GIVEN,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:67:        integrations: Optional[Iterable[job_create_params.Integration]] | NotGiven = NOT_GIVEN,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:69:        method: job_create_params.Method | NotGiven = NOT_GIVEN,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:79:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:81:        Creates a fine-tuning job which begins the process of creating a new model from
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:84:        Response includes details of the enqueued job including job status and the name
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:112:          hyperparameters: The hyperparameters used for the fine-tuning job. This value is now deprecated
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:115:          integrations: A list of integrations to enable for your fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:126:          seed: The seed controls the reproducibility of the job. Passing in the same seed and
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:127:              job parameters should produce the same results, but may differ in rare cases. If
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:159:            "/fine_tuning/jobs",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:172:                job_create_params.JobCreateParams,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:177:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:182:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:190:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:192:        Get info about a fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:205:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:206:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:208:            f"/fine_tuning/jobs/{fine_tuning_job_id}",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:212:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:227:    ) -> SyncCursorPage[FineTuningJob]:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:229:        List your organization's fine-tuning jobs
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:232:          after: Identifier for the last job from the previous pagination request.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:234:          limit: Number of fine-tuning jobs to retrieve.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:248:            "/fine_tuning/jobs",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:249:            page=SyncCursorPage[FineTuningJob],
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:261:                    job_list_params.JobListParams,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:264:            model=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:269:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:277:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:279:        Immediately cancel a fine-tune job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:290:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:291:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:293:            f"/fine_tuning/jobs/{fine_tuning_job_id}/cancel",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:297:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:302:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:312:    ) -> SyncCursorPage[FineTuningJobEvent]:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:314:        Get status updates for a fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:329:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:330:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:332:            f"/fine_tuning/jobs/{fine_tuning_job_id}/events",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:333:            page=SyncCursorPage[FineTuningJobEvent],
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:344:                    job_list_events_params.JobListEventsParams,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:347:            model=FineTuningJobEvent,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:352:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:360:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:362:        Pause a fine-tune job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:373:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:374:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:376:            f"/fine_tuning/jobs/{fine_tuning_job_id}/pause",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:380:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:385:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:393:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:395:        Resume a fine-tune job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:406:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:407:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:409:            f"/fine_tuning/jobs/{fine_tuning_job_id}/resume",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:413:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:417:class AsyncJobs(AsyncAPIResource):
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:423:    def with_raw_response(self) -> AsyncJobsWithRawResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:430:        return AsyncJobsWithRawResponse(self)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:433:    def with_streaming_response(self) -> AsyncJobsWithStreamingResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:439:        return AsyncJobsWithStreamingResponse(self)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:446:        hyperparameters: job_create_params.Hyperparameters | NotGiven = NOT_GIVEN,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:447:        integrations: Optional[Iterable[job_create_params.Integration]] | NotGiven = NOT_GIVEN,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:449:        method: job_create_params.Method | NotGiven = NOT_GIVEN,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:459:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:461:        Creates a fine-tuning job which begins the process of creating a new model from
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:464:        Response includes details of the enqueued job including job status and the name
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:492:          hyperparameters: The hyperparameters used for the fine-tuning job. This value is now deprecated
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:495:          integrations: A list of integrations to enable for your fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:506:          seed: The seed controls the reproducibility of the job. Passing in the same seed and
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:507:              job parameters should produce the same results, but may differ in rare cases. If
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:539:            "/fine_tuning/jobs",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:552:                job_create_params.JobCreateParams,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:557:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:562:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:570:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:572:        Get info about a fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:585:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:586:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:588:            f"/fine_tuning/jobs/{fine_tuning_job_id}",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:592:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:607:    ) -> AsyncPaginator[FineTuningJob, AsyncCursorPage[FineTuningJob]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:609:        List your organization's fine-tuning jobs
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:612:          after: Identifier for the last job from the previous pagination request.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:614:          limit: Number of fine-tuning jobs to retrieve.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:628:            "/fine_tuning/jobs",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:629:            page=AsyncCursorPage[FineTuningJob],
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:641:                    job_list_params.JobListParams,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:644:            model=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:649:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:657:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:659:        Immediately cancel a fine-tune job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:670:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:671:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:673:            f"/fine_tuning/jobs/{fine_tuning_job_id}/cancel",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:677:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:682:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:692:    ) -> AsyncPaginator[FineTuningJobEvent, AsyncCursorPage[FineTuningJobEvent]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:694:        Get status updates for a fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:709:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:710:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:712:            f"/fine_tuning/jobs/{fine_tuning_job_id}/events",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:713:            page=AsyncCursorPage[FineTuningJobEvent],
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:724:                    job_list_events_params.JobListEventsParams,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:727:            model=FineTuningJobEvent,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:732:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:740:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:742:        Pause a fine-tune job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:753:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:754:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:756:            f"/fine_tuning/jobs/{fine_tuning_job_id}/pause",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:760:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:765:        fine_tuning_job_id: str,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:773:    ) -> FineTuningJob:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:775:        Resume a fine-tune job.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:786:        if not fine_tuning_job_id:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:787:            raise ValueError(f"Expected a non-empty value for `fine_tuning_job_id` but received {fine_tuning_job_id!r}")
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:789:            f"/fine_tuning/jobs/{fine_tuning_job_id}/resume",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:793:            cast_to=FineTuningJob,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:797:class JobsWithRawResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:798:    def __init__(self, jobs: Jobs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:799:        self._jobs = jobs
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:802:            jobs.create,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:805:            jobs.retrieve,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:808:            jobs.list,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:811:            jobs.cancel,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:814:            jobs.list_events,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:817:            jobs.pause,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:820:            jobs.resume,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:825:        return CheckpointsWithRawResponse(self._jobs.checkpoints)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:828:class AsyncJobsWithRawResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:829:    def __init__(self, jobs: AsyncJobs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:830:        self._jobs = jobs
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:833:            jobs.create,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:836:            jobs.retrieve,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:839:            jobs.list,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:842:            jobs.cancel,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:845:            jobs.list_events,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:848:            jobs.pause,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:851:            jobs.resume,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:856:        return AsyncCheckpointsWithRawResponse(self._jobs.checkpoints)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:859:class JobsWithStreamingResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:860:    def __init__(self, jobs: Jobs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:861:        self._jobs = jobs
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:864:            jobs.create,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:867:            jobs.retrieve,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:870:            jobs.list,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:873:            jobs.cancel,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:876:            jobs.list_events,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:879:            jobs.pause,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:882:            jobs.resume,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:887:        return CheckpointsWithStreamingResponse(self._jobs.checkpoints)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:890:class AsyncJobsWithStreamingResponse:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:891:    def __init__(self, jobs: AsyncJobs) -> None:
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:892:        self._jobs = jobs
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:895:            jobs.create,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:898:            jobs.retrieve,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:901:            jobs.list,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:904:            jobs.cancel,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:907:            jobs.list_events,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:910:            jobs.pause,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:913:            jobs.resume,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\jobs.py:918:        return AsyncCheckpointsWithStreamingResponse(self._jobs.checkpoints)
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:3:from .jobs import (
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:4:    Jobs,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:5:    AsyncJobs,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:6:    JobsWithRawResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:7:    AsyncJobsWithRawResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:8:    JobsWithStreamingResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:9:    AsyncJobsWithStreamingResponse,
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:27:    "Jobs",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:28:    "AsyncJobs",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:29:    "JobsWithRawResponse",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:30:    "AsyncJobsWithRawResponse",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:31:    "JobsWithStreamingResponse",
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\fine_tuning\jobs\__init__.py:32:    "AsyncJobsWithStreamingResponse",
scripts\openai_batch\.venv\Lib\site-packages\openai\types\file_object.py:57:    `error` field on `fine_tuning.job`.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\dpo_method.py:13:    """The hyperparameters used for the DPO fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\dpo_method_param.py:14:    """The hyperparameters used for the DPO fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:11:from .fine_tuning_job_wandb_integration_object import FineTuningJobWandbIntegrationObject
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:13:__all__ = ["FineTuningJob", "Error", "Hyperparameters", "Method"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:65:class FineTuningJob(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:70:    """The Unix timestamp (in seconds) for when the fine-tuning job was created."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:74:    For fine-tuning jobs that have `failed`, this will contain more information on
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:81:    The value will be null if the fine-tuning job is still running.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:85:    """The Unix timestamp (in seconds) for when the fine-tuning job was finished.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:87:    The value will be null if the fine-tuning job is still running.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:91:    """The hyperparameters used for the fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:93:    This value will only be returned when running `supervised` jobs.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:99:    object: Literal["fine_tuning.job"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:100:    """The object type, which is always "fine_tuning.job"."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:103:    """The organization that owns the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:106:    """The compiled results file ID(s) for the fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:113:    """The seed used for the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:117:    The current status of the fine-tuning job, which can be either
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:122:    """The total number of billable tokens processed by this fine-tuning job.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:124:    The value will be null if the fine-tuning job is still running.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:143:    The Unix timestamp (in seconds) for when the fine-tuning job is estimated to
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:144:    finish. The value will be null if the fine-tuning job is not running.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:147:    integrations: Optional[List[FineTuningJobWandbIntegrationObject]] = None
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job.py:148:    """A list of integrations to enable for this fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_event.py:9:__all__ = ["FineTuningJobEvent"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_event.py:12:class FineTuningJobEvent(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_event.py:17:    """The Unix timestamp (in seconds) for when the fine-tuning job was created."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_event.py:25:    object: Literal["fine_tuning.job.event"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_event.py:26:    """The object type, which is always "fine_tuning.job.event"."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_integration.py:3:from .fine_tuning_job_wandb_integration_object import FineTuningJobWandbIntegrationObject
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_integration.py:5:FineTuningJobIntegration = FineTuningJobWandbIntegrationObject
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration.py:7:__all__ = ["FineTuningJobWandbIntegration"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration.py:10:class FineTuningJobWandbIntegration(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration.py:25:    If not set, we will use the Job ID as the name.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration.py:32:    by OpenAI: "openai/finetune", "openai/{base-model}", "openai/{ftjob-abcdef}".
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration_object.py:6:from .fine_tuning_job_wandb_integration import FineTuningJobWandbIntegration
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration_object.py:8:__all__ = ["FineTuningJobWandbIntegrationObject"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration_object.py:11:class FineTuningJobWandbIntegrationObject(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration_object.py:13:    """The type of the integration being enabled for the fine-tuning job"""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\fine_tuning_job_wandb_integration_object.py:15:    wandb: FineTuningJobWandbIntegration
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_create_params.py:13:__all__ = ["JobCreateParams", "Hyperparameters", "Integration", "IntegrationWandb", "Method"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_create_params.py:16:class JobCreateParams(TypedDict, total=False):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_create_params.py:47:    The hyperparameters used for the fine-tuning job. This value is now deprecated
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_create_params.py:52:    """A list of integrations to enable for your fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_create_params.py:68:    """The seed controls the reproducibility of the job.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_create_params.py:70:    Passing in the same seed and job parameters should produce the same results, but
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_create_params.py:137:    If not set, we will use the Job ID as the name.
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_create_params.py:144:    by OpenAI: "openai/finetune", "openai/{base-model}", "openai/{ftjob-abcdef}".
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_list_events_params.py:7:__all__ = ["JobListEventsParams"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_list_events_params.py:10:class JobListEventsParams(TypedDict, total=False):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_list_params.py:8:__all__ = ["JobListParams"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_list_params.py:11:class JobListParams(TypedDict, total=False):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_list_params.py:13:    """Identifier for the last job from the previous pagination request."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\job_list_params.py:16:    """Number of fine-tuning jobs to retrieve."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\reinforcement_method.py:21:    """The grader used for the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\reinforcement_method.py:24:    """The hyperparameters used for the reinforcement fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\reinforcement_method_param.py:24:    """The grader used for the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\reinforcement_method_param.py:27:    """The hyperparameters used for the reinforcement fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\supervised_method.py:13:    """The hyperparameters used for the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\supervised_method_param.py:14:    """The hyperparameters used for the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:6:from .fine_tuning_job import FineTuningJob as FineTuningJob
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:7:from .job_list_params import JobListParams as JobListParams
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:9:from .job_create_params import JobCreateParams as JobCreateParams
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:13:from .fine_tuning_job_event import FineTuningJobEvent as FineTuningJobEvent
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:14:from .job_list_events_params import JobListEventsParams as JobListEventsParams
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:19:from .fine_tuning_job_integration import FineTuningJobIntegration as FineTuningJobIntegration
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:22:from .fine_tuning_job_wandb_integration import FineTuningJobWandbIntegration as FineTuningJobWandbIntegration
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:24:from .fine_tuning_job_wandb_integration_object import (
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\__init__.py:25:    FineTuningJobWandbIntegrationObject as FineTuningJobWandbIntegrationObject,
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\alpha\grader_run_params.py:19:    """The grader used for the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\alpha\grader_validate_params.py:19:    """The grader used for the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\alpha\grader_validate_response.py:20:    """The grader used for the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\jobs\fine_tuning_job_checkpoint.py:8:__all__ = ["FineTuningJobCheckpoint", "Metrics"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\jobs\fine_tuning_job_checkpoint.py:27:class FineTuningJobCheckpoint(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\jobs\fine_tuning_job_checkpoint.py:37:    fine_tuning_job_id: str
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\jobs\fine_tuning_job_checkpoint.py:38:    """The name of the fine-tuning job that this checkpoint was created from."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\jobs\fine_tuning_job_checkpoint.py:41:    """Metrics at the step number during the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\jobs\fine_tuning_job_checkpoint.py:43:    object: Literal["fine_tuning.job.checkpoint"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\jobs\fine_tuning_job_checkpoint.py:44:    """The object type, which is always "fine_tuning.job.checkpoint"."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\fine_tuning\jobs\__init__.py:6:from .fine_tuning_job_checkpoint import FineTuningJobCheckpoint as FineTuningJobCheckpoint
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_cancelled_webhook_event.py:8:__all__ = ["FineTuningJobCancelledWebhookEvent", "Data"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_cancelled_webhook_event.py:13:    """The unique ID of the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_cancelled_webhook_event.py:16:class FineTuningJobCancelledWebhookEvent(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_cancelled_webhook_event.py:21:    """The Unix timestamp (in seconds) of when the fine-tuning job was cancelled."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_cancelled_webhook_event.py:26:    type: Literal["fine_tuning.job.cancelled"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_cancelled_webhook_event.py:27:    """The type of the event. Always `fine_tuning.job.cancelled`."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_failed_webhook_event.py:8:__all__ = ["FineTuningJobFailedWebhookEvent", "Data"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_failed_webhook_event.py:13:    """The unique ID of the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_failed_webhook_event.py:16:class FineTuningJobFailedWebhookEvent(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_failed_webhook_event.py:21:    """The Unix timestamp (in seconds) of when the fine-tuning job failed."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_failed_webhook_event.py:26:    type: Literal["fine_tuning.job.failed"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_failed_webhook_event.py:27:    """The type of the event. Always `fine_tuning.job.failed`."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_succeeded_webhook_event.py:8:__all__ = ["FineTuningJobSucceededWebhookEvent", "Data"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_succeeded_webhook_event.py:13:    """The unique ID of the fine-tuning job."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_succeeded_webhook_event.py:16:class FineTuningJobSucceededWebhookEvent(BaseModel):
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_succeeded_webhook_event.py:21:    """The Unix timestamp (in seconds) of when the fine-tuning job succeeded."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_succeeded_webhook_event.py:26:    type: Literal["fine_tuning.job.succeeded"]
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\fine_tuning_job_succeeded_webhook_event.py:27:    """The type of the event. Always `fine_tuning.job.succeeded`."""
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\unwrap_webhook_event.py:18:from .fine_tuning_job_failed_webhook_event import FineTuningJobFailedWebhookEvent
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\unwrap_webhook_event.py:19:from .fine_tuning_job_cancelled_webhook_event import FineTuningJobCancelledWebhookEvent
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\unwrap_webhook_event.py:20:from .fine_tuning_job_succeeded_webhook_event import FineTuningJobSucceededWebhookEvent
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\unwrap_webhook_event.py:33:        FineTuningJobCancelledWebhookEvent,
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\unwrap_webhook_event.py:34:        FineTuningJobFailedWebhookEvent,
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\unwrap_webhook_event.py:35:        FineTuningJobSucceededWebhookEvent,
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\__init__.py:17:from .fine_tuning_job_failed_webhook_event import FineTuningJobFailedWebhookEvent as FineTuningJobFailedWebhookEvent
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\__init__.py:18:from .fine_tuning_job_cancelled_webhook_event import (
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\__init__.py:19:    FineTuningJobCancelledWebhookEvent as FineTuningJobCancelledWebhookEvent,
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\__init__.py:21:from .fine_tuning_job_succeeded_webhook_event import (
scripts\openai_batch\.venv\Lib\site-packages\openai\types\webhooks\__init__.py:22:    FineTuningJobSucceededWebhookEvent as FineTuningJobSucceededWebhookEvent,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\self_outdated_check.py:84:        # Determine if we need to refresh the state
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\cli\progress_bars.py:50:    progress = Progress(*columns, refresh_per_second=30)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:586:        def schedule(req: InstallRequirement) -> None:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:593:                schedule(dep)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:597:            schedule(install_req)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\cachecontrol\controller.py:193:        # Client can try to refresh the value by repeating the request
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1156:        refresh_per_second: float = 12.5,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1165:            refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1178:            refresh_per_second=refresh_per_second,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\layout.py:329:    def refresh_screen(self, console: "Console", layout_name: str) -> None:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\layout.py:330:        """Refresh a sub-layout.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:16:class _RefreshThread(Thread):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:17:    """A thread that calls refresh() at regular intervals."""
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:19:    def __init__(self, live: "Live", refresh_per_second: float) -> None:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:21:        self.refresh_per_second = refresh_per_second
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:29:        while not self.done.wait(1 / self.refresh_per_second):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:32:                    self.live.refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:42:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()` or `update()` with refresh flag. Defaults to True
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:43:        refresh_per_second (float, optional): Number of times per second to refresh the live display. Defaults to 4.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:57:        auto_refresh: bool = True,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:58:        refresh_per_second: float = 4,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:65:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:78:        self.auto_refresh = auto_refresh
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:82:        self._refresh_thread: Optional[_RefreshThread] = None
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:83:        self.refresh_per_second = refresh_per_second
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:104:    def start(self, refresh: bool = False) -> None:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:108:            refresh (bool, optional): Also refresh. Defaults to False.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:120:            if refresh:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:122:                    self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:124:                    # If refresh fails, we want to stop the redirection of sys.stderr,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:130:            if self.auto_refresh:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:131:                self._refresh_thread = _RefreshThread(self, self.refresh_per_second)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:132:                self._refresh_thread.start()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:142:            if self.auto_refresh and self._refresh_thread is not None:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:143:                self._refresh_thread.stop()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:144:                self._refresh_thread = None
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:150:                        self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:166:        self.start(refresh=self._renderable is not None)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:206:    def update(self, renderable: RenderableType, *, refresh: bool = False) -> None:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:211:            refresh (bool, optional): Refresh the display. Defaults to False.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:217:            if refresh:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:218:                self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\live.py:220:    def refresh(self) -> None:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:87:        self.progress.update(self.task_id, completed=self.completed, refresh=True)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:107:    auto_refresh: bool = True,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:111:    refresh_per_second: float = 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:126:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:129:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:159:        auto_refresh=auto_refresh,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:163:        refresh_per_second=refresh_per_second or 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:299:    auto_refresh: bool = True,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:303:    refresh_per_second: float = 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:316:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:319:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:347:        auto_refresh=auto_refresh,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:351:        refresh_per_second=refresh_per_second or 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:370:    auto_refresh: bool = True,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:374:    refresh_per_second: float = 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:395:    auto_refresh: bool = True,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:399:    refresh_per_second: float = 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:419:    auto_refresh: bool = True,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:423:    refresh_per_second: float = 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:441:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:444:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:474:        auto_refresh=auto_refresh,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:478:        refresh_per_second=refresh_per_second or 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:498:    max_refresh: Optional[float] = None
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:519:        if self.max_refresh is not None and not task.completed:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:525:                if timestamp + self.max_refresh > current_time:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:769:    # Only refresh twice a second to prevent jitter
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:770:    max_refresh = 0.5
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1055:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()`.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1056:        refresh_per_second (Optional[float], optional): Number of times per second to refresh the progress information or None to use default (10). Defaults to None.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1070:        auto_refresh: bool = True,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1071:        refresh_per_second: float = 10,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1080:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1091:            auto_refresh=auto_refresh,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1092:            refresh_per_second=refresh_per_second,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1160:            self.live.start(refresh=True)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1208:        if self.live.auto_refresh:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1215:            refresh = self.refresh
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1219:                refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1410:        refresh: bool = False,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1422:            refresh (bool): Force a refresh of progress information. Default is False.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1459:        if refresh:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1460:            self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1499:        self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1531:    def refresh(self) -> None:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1532:        """Refresh (render) the progress information."""
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1534:            self.live.refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1624:        self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\prompt.py:327:                run_job()
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\spinner.py:134:        refresh_per_second=20,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\status.py:20:        refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\status.py:31:        refresh_per_second: float = 12.5,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\status.py:40:            refresh_per_second=refresh_per_second,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\status.py:79:            self._live.update(self.renderable, refresh=True)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:193:    "micronesia": "🇫🇲",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:3147:    "flag_for_micronesia": "🇫🇲",
scripts\openai_batch\.venv\Lib\site-packages\pkg_resources\_vendor\jaraco\text\__init__.py:263:    Acronyms should be retained
scripts\openai_batch\.venv\Lib\site-packages\setuptools\package_index.py:532:        """Scan urls scheduled for prescanning (e.g. --find-links)"""
scripts\openai_batch\.venv\Lib\site-packages\setuptools\command\editable_wheel.py:839:    most appropriate tool for the job...
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_distutils\ccompiler.py:487:        language_map, and language_order to do the job.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_distutils\msvc9compiler.py:11:# hacked by Robin Becker and Thomas Heller to do a better job of
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_distutils\msvccompiler.py:8:# hacked by Robin Becker and Thomas Heller to do a better job of
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_distutils\text_file.py:200:                    # the job of a later step (rstrip_ws) to remove it --
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_distutils\_msvccompiler.py:11:# hacked by Robin Becker and Thomas Heller to do a better job of
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_distutils\command\build.py:41:        ('parallel=', 'j', "number of parallel build jobs"),
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:97:        ('parallel=', 'j', "number of parallel build jobs"),
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\jaraco\text\__init__.py:263:    Acronyms should be retained
scripts\openai_batch\.venv\Lib\site-packages\tqdm\keras.py:27:                bar.set_postfix(logs, refresh=False)
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:83:    an argument to joblib or the parallelism lib you use.
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:346:        Passed to `refresh` for intermediate output
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:443:        updating may not work (it will print a new line at each refresh).
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:729:        Disable tqdm within context and refresh tqdm when exits.
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:748:            # Force refresh display of bars we cleared
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:750:                inst.refresh(nolock=True)
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1080:                self.set_postfix(refresh=False, **postfix)
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1098:                self.refresh(lock_args=self.lock_args)
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1228:            self.last_print_n += n  # for auto-refresh logic to work
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1242:                self.refresh(lock_args=self.lock_args)
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1325:    def refresh(self, nolock=False, lock_args=None):
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1327:        Force refresh the display of this bar.
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1380:        self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1382:    def set_description(self, desc=None, refresh=True):
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1389:        refresh  : bool, optional
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1390:            Forces refresh [default: True].
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1393:        if refresh:
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1394:            self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1396:    def set_description_str(self, desc=None, refresh=True):
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1399:        if refresh:
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1400:            self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1402:    def set_postfix(self, ordered_dict=None, refresh=True, **kwargs):
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1410:        refresh  : bool, optional
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1411:            Forces refresh [default: True].
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1430:        if refresh:
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1431:            self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1433:    def set_postfix_str(self, s='', refresh=True):
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1438:        if refresh:
scripts\openai_batch\.venv\Lib\site-packages\tqdm\std.py:1439:            self.refresh()
scripts\openai_batch\.venv\Lib\site-packages\tqdm\tk.py:28:    consider calling `tqdm_tk.refresh()` frequently in the Tk thread.
scripts\openai_batch\.venv\Lib\site-packages\tqdm\tk.py:143:    def set_description(self, desc=None, refresh=True):
scripts\openai_batch\.venv\Lib\site-packages\tqdm\tk.py:144:        self.set_description_str(desc, refresh)
scripts\openai_batch\.venv\Lib\site-packages\tqdm\tk.py:146:    def set_description_str(self, desc=None, refresh=True):
scripts\openai_batch\.venv\Lib\site-packages\tqdm\tk.py:150:            if refresh and not self._tk_dispatching:
scripts\openai_batch\.venv\Lib\site-packages\tqdm\_monitor.py:75:                    # and last refresh exceeded maxinterval
scripts\openai_batch\.venv\Lib\site-packages\tqdm\_monitor.py:83:                        # Refresh now! (works only for manual tqdm)
scripts\openai_batch\.venv\Lib\site-packages\tqdm\_monitor.py:84:                        instance.refresh(nolock=True)
tradingbot-backend\main.py:137:    # Scheduler avstängd för att undvika rate limiting och event loop problem
tradingbot-backend\main.py:138:    logger.info("🚫 Scheduler avstängd för att undvika rate limiting")
tradingbot-backend\main.py:152:    # Stoppa scheduler om den körs
tradingbot-backend\main.py:154:        from services.scheduler import scheduler
tradingbot-backend\main.py:156:        await scheduler.stop()
tradingbot-backend\main.py:157:        logger.info("✅ Scheduler stoppad")
tradingbot-backend\main.py:159:        logger.warning(f"⚠️ Fel vid stopp av scheduler: {e}")
tradingbot-backend\.venv\Lib\site-packages\nodeenv.py:97:    jobs = '2'
tradingbot-backend\.venv\Lib\site-packages\nodeenv.py:257:            '-j', '--jobs', dest='jobs', default=Config.jobs,
tradingbot-backend\.venv\Lib\site-packages\nodeenv.py:259:            'The default is 2 jobs.')
tradingbot-backend\.venv\Lib\site-packages\nodeenv.py:707:    make_param_names = ['load-average', 'jobs']
tradingbot-backend\.venv\Lib\site-packages\anyio\lowlevel.py:16:    Check for cancellation and allow the scheduler to switch to another task.
tradingbot-backend\.venv\Lib\site-packages\anyio\lowlevel.py:34:    This does not allow the scheduler to switch to a different task.
tradingbot-backend\.venv\Lib\site-packages\anyio\lowlevel.py:44:    Allow the scheduler to switch to another task but without checking for cancellation.
tradingbot-backend\.venv\Lib\site-packages\anyio\abc\_eventloop.py:117:        to be scheduled if not.
tradingbot-backend\.venv\Lib\site-packages\anyio\abc\_tasks.py:46:        tasks being scheduled on the next iteration of the event loop, and may thus
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:282:        """Schedule the shutdown of the default executor."""
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:556:        Schedule another run at the end if we still have tasks eligible for
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:587:        # Schedule another callback if there are still tasks left
tradingbot-backend\.venv\Lib\site-packages\black\concurrency.py:102:            schedule_formatting(
tradingbot-backend\.venv\Lib\site-packages\black\concurrency.py:121:async def schedule_formatting(
tradingbot-backend\.venv\Lib\site-packages\black\report.py:46:                    msg = f"{src} already well formatted, good job."
tradingbot-backend\.venv\Lib\site-packages\bs4\dammit.py:7:XML or HTML to reflect a new encoding; that's the tree builder's job.
tradingbot-backend\.venv\Lib\site-packages\charset_normalizer\utils.py:40:        or "WITH MACRON" in description
tradingbot-backend\.venv\Lib\site-packages\engineio\async_server.py:463:        s.schedule_ping()
tradingbot-backend\.venv\Lib\site-packages\engineio\async_socket.py:42:            self.schedule_ping()
tradingbot-backend\.venv\Lib\site-packages\engineio\async_socket.py:130:    def schedule_ping(self):
tradingbot-backend\.venv\Lib\site-packages\engineio\server.py:403:        s.schedule_ping()
tradingbot-backend\.venv\Lib\site-packages\engineio\socket.py:44:            self.schedule_ping()
tradingbot-backend\.venv\Lib\site-packages\engineio\socket.py:132:    def schedule_ping(self):
tradingbot-backend\.venv\Lib\site-packages\fastapi\openapi\models.py:317:    refreshUrl: Optional[str] = None
tradingbot-backend\.venv\Lib\site-packages\fastapi\security\oauth2.py:179:        refreshUrl: Optional[str] = None,
tradingbot-backend\.venv\Lib\site-packages\fastapi\security\oauth2.py:191:                "refreshUrl": refreshUrl,
tradingbot-backend\.venv\Lib\site-packages\gotrue\helpers.py:74:        and "refresh_token" in data
tradingbot-backend\.venv\Lib\site-packages\gotrue\helpers.py:77:        and data["refresh_token"]
tradingbot-backend\.venv\Lib\site-packages\gotrue\timer.py:20:            async def schedule():
tradingbot-backend\.venv\Lib\site-packages\gotrue\timer.py:27:            self._task = asyncio.create_task(schedule())
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:59:    "TOKEN_REFRESHED",
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:133:    provider_refresh_token: Union[str, None] = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:135:    The oauth provider refresh token. If present, this can be used to refresh
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:138:    Not all oauth providers return a provider refresh token. If the
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:139:    provider_refresh_token is missing, please refer to the oauth provider's
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:140:    documentation for information on how to obtain the provider refresh token.
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:143:    refresh_token: str
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:599:    refresh_token: str
tradingbot-backend\.venv\Lib\site-packages\gotrue\types.py:601:    Refresh token you can use to obtain new access tokens when expired.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:93:        auto_refresh_token: bool = True,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:110:        self._auto_refresh_token = auto_refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:114:        self._refresh_token_timer: Union[Timer, None] = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:144:        return await self._recover_and_refresh()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:596:        Returns the session, refreshing it if necessary.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:618:            await self._call_refresh_token(current_session.refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:657:    async def set_session(self, access_token: str, refresh_token: str) -> AuthResponse:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:660:        is expired, `set_session` will take care of refreshing it to obtain a
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:663:        If the refresh token in the current session is invalid and the current
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:670:        refresh token and a user.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:683:            if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:685:            response = await self._refresh_access_token(refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:693:                refresh_token=refresh_token,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:700:        self._notify_all_subscribers("TOKEN_REFRESHED", session)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:703:    async def refresh_session(
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:704:        self, refresh_token: Union[str, None] = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:709:        Takes in an optional current session. If not passed in, then refreshSession()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:711:        refresh token is invalid, an error will be thrown.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:713:        if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:716:                refresh_token = session.refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:717:        if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:719:        session = await self._call_refresh_token(refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:728:        For server-side management, you can revoke all refresh tokens for a user by
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:913:        if self._refresh_token_timer:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:914:            self._refresh_token_timer.cancel()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:915:            self._refresh_token_timer = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:938:        provider_refresh_token = self._get_param(params, "provider_refresh_token")
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:945:        refresh_token = self._get_param(params, "refresh_token")
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:946:        if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:947:            raise AuthImplicitGrantRedirectError("No refresh_token detected.")
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:956:            provider_refresh_token=provider_refresh_token,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:960:            refresh_token=refresh_token,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:967:    async def _recover_and_refresh(self) -> None:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:977:            refresh_token = current_session.refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:978:            if self._auto_refresh_token and refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:981:                    await self._call_refresh_token(refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:988:                        if self._refresh_token_timer:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:989:                            self._refresh_token_timer.cancel()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:990:                        self._refresh_token_timer = Timer(
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:992:                            self._recover_and_refresh,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:994:                        self._refresh_token_timer.start()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1002:    async def _call_refresh_token(self, refresh_token: str) -> Session:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1003:        if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1005:        response = await self._refresh_access_token(refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1009:        self._notify_all_subscribers("TOKEN_REFRESHED", response.session)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1012:    async def _refresh_access_token(self, refresh_token: str) -> AuthResponse:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1016:            query={"grant_type": "refresh_token"},
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1017:            body={"refresh_token": refresh_token},
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1028:            refresh_duration_before_expires = (
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1031:            value = (expire_in - refresh_duration_before_expires) * 1000
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1032:            await self._start_auto_refresh_token(value)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1036:    async def _start_auto_refresh_token(self, value: float) -> None:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1037:        if self._refresh_token_timer:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1038:            self._refresh_token_timer.cancel()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1039:            self._refresh_token_timer = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1040:        if value <= 0 or not self._auto_refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1043:        async def refresh_token_function():
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1048:                    await self._call_refresh_token(session.refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1055:                    await self._start_auto_refresh_token(
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1059:        self._refresh_token_timer = Timer(value, refresh_token_function)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1060:        self._refresh_token_timer.start()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_async\gotrue_client.py:1081:        if not data.get("refresh_token"):
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\api.py:574:    def refresh_access_token(self, *, refresh_token: str) -> Session:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\api.py:579:        refresh_token : str
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\api.py:580:            A valid refresh token that was returned on login.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\api.py:592:        data = {"refresh_token": refresh_token}
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\api.py:593:        url = f"{self.url}/token?grant_type=refresh_token"
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:34:        auto_refresh_token: bool = True,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:49:        auto_refresh_token : bool
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:50:            Set to "true" if you want to automatically refresh the token before
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:70:        self.refresh_token_timer: Optional[Timer] = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:73:        self.auto_refresh_token = auto_refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:98:        self._recover_and_refresh()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:167:        refresh_token: Optional[str] = None,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:184:        refresh_token : Optional[str]
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:185:            A valid refresh token that was returned on login.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:206:            If refresh_token is provided, a logged-in session is returned.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:236:        elif refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:238:            # on _call_refresh_token using the passed refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:239:            self._call_refresh_token(refresh_token=refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:249:                "Email, phone, refresh_token, or provider must be defined, "
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:302:    def refresh_session(self) -> Session:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:303:        """Force refreshes the session.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:305:        Force refreshes the session including the user data incase it was
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:310:        return self._call_refresh_token()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:347:    def set_session(self, *, refresh_token: str) -> Session:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:348:        """Sets the session data from refresh_token and returns current Session
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:352:        refresh_token : str
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:365:        response = self.api.refresh_access_token(refresh_token=refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:395:            refresh_token=None,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:401:            session.refresh_token = self.current_session.refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:436:        refresh_token = query.get("refresh_token")
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:442:        if not refresh_token or not refresh_token[0]:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:443:            raise APIError("No refresh_token detected.", 400)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:460:            refresh_token=refresh_token[0],
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:583:    def _recover_and_refresh(self) -> None:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:584:        """Recovers the session from LocalStorage and refreshes"""
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:589:        if expires_at < time_now and self.auto_refresh_token and session.refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:591:                self._call_refresh_token(refresh_token=session.refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:600:    def _call_refresh_token(self, *, refresh_token: Optional[str] = None) -> Session:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:601:        if refresh_token is None:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:603:                refresh_token = self.current_session.refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:605:                raise ValueError("No current session and refresh_token not supplied.")
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:606:        response = self.api.refresh_access_token(refresh_token=cast(str, refresh_token))
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:608:        self._notify_all_subscribers(event=AuthChangeEvent.TOKEN_REFRESHED)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:624:            refresh_duration_before_expires = 60 if expire_in > 60 else 0.5
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:625:            self._start_auto_refresh_token(
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:626:                value=(expire_in - refresh_duration_before_expires)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:639:        if self.refresh_token_timer:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:640:            self.refresh_token_timer.cancel()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:643:    def _start_auto_refresh_token(self, *, value: float) -> None:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:644:        if self.refresh_token_timer:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:645:            self.refresh_token_timer.cancel()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:646:        if value <= 0 or not self.auto_refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:648:        self.refresh_token_timer = Timer(value, self._call_refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\client.py:649:        self.refresh_token_timer.start()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:93:        auto_refresh_token: bool = True,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:110:        self._auto_refresh_token = auto_refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:114:        self._refresh_token_timer: Union[Timer, None] = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:144:        return self._recover_and_refresh()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:590:        Returns the session, refreshing it if necessary.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:612:            self._call_refresh_token(current_session.refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:651:    def set_session(self, access_token: str, refresh_token: str) -> AuthResponse:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:654:        is expired, `set_session` will take care of refreshing it to obtain a
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:657:        If the refresh token in the current session is invalid and the current
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:664:        refresh token and a user.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:677:            if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:679:            response = self._refresh_access_token(refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:687:                refresh_token=refresh_token,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:694:        self._notify_all_subscribers("TOKEN_REFRESHED", session)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:697:    def refresh_session(self, refresh_token: Union[str, None] = None) -> AuthResponse:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:701:        Takes in an optional current session. If not passed in, then refreshSession()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:703:        refresh token is invalid, an error will be thrown.
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:705:        if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:708:                refresh_token = session.refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:709:        if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:711:        session = self._call_refresh_token(refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:720:        For server-side management, you can revoke all refresh tokens for a user by
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:905:        if self._refresh_token_timer:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:906:            self._refresh_token_timer.cancel()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:907:            self._refresh_token_timer = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:930:        provider_refresh_token = self._get_param(params, "provider_refresh_token")
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:937:        refresh_token = self._get_param(params, "refresh_token")
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:938:        if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:939:            raise AuthImplicitGrantRedirectError("No refresh_token detected.")
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:948:            provider_refresh_token=provider_refresh_token,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:952:            refresh_token=refresh_token,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:959:    def _recover_and_refresh(self) -> None:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:969:            refresh_token = current_session.refresh_token
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:970:            if self._auto_refresh_token and refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:973:                    self._call_refresh_token(refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:980:                        if self._refresh_token_timer:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:981:                            self._refresh_token_timer.cancel()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:982:                        self._refresh_token_timer = Timer(
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:984:                            self._recover_and_refresh,
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:986:                        self._refresh_token_timer.start()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:994:    def _call_refresh_token(self, refresh_token: str) -> Session:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:995:        if not refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:997:        response = self._refresh_access_token(refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1001:        self._notify_all_subscribers("TOKEN_REFRESHED", response.session)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1004:    def _refresh_access_token(self, refresh_token: str) -> AuthResponse:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1008:            query={"grant_type": "refresh_token"},
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1009:            body={"refresh_token": refresh_token},
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1020:            refresh_duration_before_expires = (
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1023:            value = (expire_in - refresh_duration_before_expires) * 1000
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1024:            self._start_auto_refresh_token(value)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1028:    def _start_auto_refresh_token(self, value: float) -> None:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1029:        if self._refresh_token_timer:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1030:            self._refresh_token_timer.cancel()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1031:            self._refresh_token_timer = None
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1032:        if value <= 0 or not self._auto_refresh_token:
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1035:        def refresh_token_function():
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1040:                    self._call_refresh_token(session.refresh_token)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1047:                    self._start_auto_refresh_token(
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1051:        self._refresh_token_timer = Timer(value, refresh_token_function)
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1052:        self._refresh_token_timer.start()
tradingbot-backend\.venv\Lib\site-packages\gotrue\_sync\gotrue_client.py:1073:        if not data.get("refresh_token"):
tradingbot-backend\.venv\Lib\site-packages\hpack\table.py:94:        (b'refresh'                     , b''             ),  # noqa
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:4785:library does the same job as widely used non-free libraries.  In this
tradingbot-backend\.venv\Lib\site-packages\jwt\jwks_client.py:68:    def get_jwk_set(self, refresh: bool = False) -> PyJWKSet:
tradingbot-backend\.venv\Lib\site-packages\jwt\jwks_client.py:70:        if self.jwk_set_cache is not None and not refresh:
tradingbot-backend\.venv\Lib\site-packages\jwt\jwks_client.py:81:    def get_signing_keys(self, refresh: bool = False) -> List[PyJWK]:
tradingbot-backend\.venv\Lib\site-packages\jwt\jwks_client.py:82:        jwk_set = self.get_jwk_set(refresh)
tradingbot-backend\.venv\Lib\site-packages\jwt\jwks_client.py:99:            # If no matching signing key from the jwk set, refresh the jwk set and try again.
tradingbot-backend\.venv\Lib\site-packages\jwt\jwks_client.py:100:            signing_keys = self.get_signing_keys(refresh=True)
tradingbot-backend\.venv\Lib\site-packages\lxml\html\builder.py:40:ACRONYM = E.acronym  #:
tradingbot-backend\.venv\Lib\site-packages\lxml\html\defs.py:109:    'abbr', 'acronym', 'cite', 'code', 'del', 'dfn', 'em',
tradingbot-backend\.venv\Lib\site-packages\lxml\html\__init__.py:102:_parse_meta_refresh_url = re.compile(
tradingbot-backend\.venv\Lib\site-packages\lxml\html\__init__.py:550:                if http_equiv == 'refresh':
tradingbot-backend\.venv\Lib\site-packages\lxml\html\__init__.py:552:                    match = _parse_meta_refresh_url(content)
tradingbot-backend\.venv\Lib\site-packages\numpy\core\fromnumeric.py:2609:    The name of the function comes from the acronym for 'peak to peak'.
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:25:                                      get_num_build_jobs, \
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:32:_job_semaphore = None
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:270:    global _job_semaphore
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:272:    jobs = get_num_build_jobs()
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:274:    # setup semaphore to not exceed number of compile jobs when parallelized at
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:277:        if _job_semaphore is None:
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:278:            _job_semaphore = threading.Semaphore(jobs)
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:323:            # retrieve slot from our #job semaphore and build
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:324:            with _job_semaphore:
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:356:    if len(build) > 1 and jobs > 1:
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler.py:359:        with ThreadPoolExecutor(jobs) as pool:
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:45:           'get_num_build_jobs', 'sanitize_cxx_flags',
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:76:def get_num_build_jobs():
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:78:    Get number of parallel build jobs set by the --parallel command line
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:81:    NPY_NUM_BUILD_JOBS is checked. If that is unset, return the number of
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:88:        number of parallel jobs that can be run
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:97:    envjobs = int(os.environ.get("NPY_NUM_BUILD_JOBS", cpu_count))
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:101:        return envjobs
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:103:    # any of these three may have the job set, take the largest
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\misc_util.py:108:        return envjobs
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\command\build_clib.py:35:         "number of parallel jobs"),
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\command\build_ext.py:32:         "number of parallel jobs"),
tradingbot-backend\.venv\Lib\site-packages\numpy\linalg\__init__.py:16:- threadpoolctl: https://github.com/joblib/threadpoolctl
tradingbot-backend\.venv\Lib\site-packages\numpy\testing\_private\utils.py:221:        process has been scheduled in user mode. See man 5 proc.
tradingbot-backend\.venv\Lib\site-packages\numpy\testing\_private\utils.py:242:        process has been scheduled in user mode. See man 5 proc.
tradingbot-backend\.venv\Lib\site-packages\numpy\typing\tests\test_typing.py:74:    The cache refresh can be skipped using
tradingbot-backend\.venv\Lib\site-packages\packaging\licenses\_spdx.py:216:    'cronyx': {'id': 'Cronyx', 'deprecated': False},
tradingbot-backend\.venv\Lib\site-packages\pandas\core\frame.py:2059:            Location where the load job should run. See the `BigQuery locations
tradingbot-backend\.venv\Lib\site-packages\pandas\core\indexes\multi.py:1378:            # little bit of a kludge job for #1217
tradingbot-backend\.venv\Lib\site-packages\pandas\core\internals\managers.py:1219:                # If all block items are unfit, schedule the block for removal.
tradingbot-backend\.venv\Lib\site-packages\pandas\io\gbq.py:97:        Location where the query job should run. See the `BigQuery locations
tradingbot-backend\.venv\Lib\site-packages\pandas\io\gbq.py:105:        Query config parameters for job processing.
tradingbot-backend\.venv\Lib\site-packages\pandas\io\gbq.py:111:        <https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs#configuration.query>`__.
tradingbot-backend\.venv\Lib\site-packages\pandas\io\json\_normalize.py:440:        # A bit of a hackjob
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\xml\test_xml.py:817:<TrainSchedule>
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\xml\test_xml.py:833:</TrainSchedule>"""
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\tseries\offsets\test_fiscal.py:211:        # From Micron, see:
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\tseries\offsets\test_fiscal.py:546:        # From Micron, see:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\self_outdated_check.py:84:        # Determine if we need to refresh the state
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\cli\progress_bars.py:50:    progress = Progress(*columns, refresh_per_second=30)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:586:        def schedule(req: InstallRequirement) -> None:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:593:                schedule(dep)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:597:            schedule(install_req)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\cachecontrol\controller.py:193:        # Client can try to refresh the value by repeating the request
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1156:        refresh_per_second: float = 12.5,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1165:            refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\console.py:1178:            refresh_per_second=refresh_per_second,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\layout.py:329:    def refresh_screen(self, console: "Console", layout_name: str) -> None:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\layout.py:330:        """Refresh a sub-layout.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:16:class _RefreshThread(Thread):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:17:    """A thread that calls refresh() at regular intervals."""
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:19:    def __init__(self, live: "Live", refresh_per_second: float) -> None:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:21:        self.refresh_per_second = refresh_per_second
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:29:        while not self.done.wait(1 / self.refresh_per_second):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:32:                    self.live.refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:42:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()` or `update()` with refresh flag. Defaults to True
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:43:        refresh_per_second (float, optional): Number of times per second to refresh the live display. Defaults to 4.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:57:        auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:58:        refresh_per_second: float = 4,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:65:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:78:        self.auto_refresh = auto_refresh
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:82:        self._refresh_thread: Optional[_RefreshThread] = None
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:83:        self.refresh_per_second = refresh_per_second
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:104:    def start(self, refresh: bool = False) -> None:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:108:            refresh (bool, optional): Also refresh. Defaults to False.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:120:            if refresh:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:122:                    self.refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:124:                    # If refresh fails, we want to stop the redirection of sys.stderr,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:130:            if self.auto_refresh:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:131:                self._refresh_thread = _RefreshThread(self, self.refresh_per_second)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:132:                self._refresh_thread.start()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:142:            if self.auto_refresh and self._refresh_thread is not None:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:143:                self._refresh_thread.stop()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:144:                self._refresh_thread = None
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:150:                        self.refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:166:        self.start(refresh=self._renderable is not None)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:206:    def update(self, renderable: RenderableType, *, refresh: bool = False) -> None:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:211:            refresh (bool, optional): Refresh the display. Defaults to False.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:217:            if refresh:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:218:                self.refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\live.py:220:    def refresh(self) -> None:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:87:        self.progress.update(self.task_id, completed=self.completed, refresh=True)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:107:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:111:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:126:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:129:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:159:        auto_refresh=auto_refresh,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:163:        refresh_per_second=refresh_per_second or 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:299:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:303:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:316:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:319:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:347:        auto_refresh=auto_refresh,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:351:        refresh_per_second=refresh_per_second or 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:370:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:374:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:395:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:399:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:419:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:423:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:441:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:444:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:474:        auto_refresh=auto_refresh,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:478:        refresh_per_second=refresh_per_second or 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:498:    max_refresh: Optional[float] = None
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:519:        if self.max_refresh is not None and not task.completed:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:525:                if timestamp + self.max_refresh > current_time:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:769:    # Only refresh twice a second to prevent jitter
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:770:    max_refresh = 0.5
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1055:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()`.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1056:        refresh_per_second (Optional[float], optional): Number of times per second to refresh the progress information or None to use default (10). Defaults to None.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1070:        auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1071:        refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1080:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1091:            auto_refresh=auto_refresh,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1092:            refresh_per_second=refresh_per_second,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1160:            self.live.start(refresh=True)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1208:        if self.live.auto_refresh:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1215:            refresh = self.refresh
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1219:                refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1410:        refresh: bool = False,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1422:            refresh (bool): Force a refresh of progress information. Default is False.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1459:        if refresh:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1460:            self.refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1499:        self.refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1531:    def refresh(self) -> None:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1532:        """Refresh (render) the progress information."""
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1534:            self.live.refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\progress.py:1624:        self.refresh()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\prompt.py:327:                run_job()
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\spinner.py:134:        refresh_per_second=20,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\status.py:20:        refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\status.py:31:        refresh_per_second: float = 12.5,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\status.py:40:            refresh_per_second=refresh_per_second,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\status.py:79:            self._live.update(self.renderable, refresh=True)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:193:    "micronesia": "🇫🇲",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:3147:    "flag_for_micronesia": "🇫🇲",
tradingbot-backend\.venv\Lib\site-packages\pre_commit\lang_base.py:163:        jobs = 1
tradingbot-backend\.venv\Lib\site-packages\pre_commit\lang_base.py:169:        jobs = target_concurrency()
tradingbot-backend\.venv\Lib\site-packages\pre_commit\lang_base.py:170:    return xargs.xargs(cmd, file_args, target_concurrency=jobs, color=color)
tradingbot-backend\.venv\Lib\site-packages\pre_commit\main.py:236:        '-j', '--jobs', type=int, default=1,
tradingbot-backend\.venv\Lib\site-packages\pre_commit\main.py:382:                jobs=args.jobs,
tradingbot-backend\.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:167:        jobs: int = 1,
tradingbot-backend\.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:180:    jobs = jobs or xargs.cpu_count()  # 0 => number of cpus
tradingbot-backend\.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:181:    jobs = min(jobs, len(repos) or len(config_repos))  # max 1-per-thread
tradingbot-backend\.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:182:    jobs = max(jobs, 1)  # at least one thread
tradingbot-backend\.venv\Lib\site-packages\pre_commit\commands\autoupdate.py:183:    with concurrent.futures.ThreadPoolExecutor(jobs) as exe:
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\actionscript.py:81:                'Point', 'PrintJob', 'PrintJobOptions', 'PrintJobOrientation', 'ProgressEvent', 'Proxy',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\automation.py:299:    @desktopheight @desktoprefresh @desktopwidth @documentscommondir @error
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\business.py:398:             r'RAISE|RAISING|RANGES?|READ|RECEIVE|REDEFINITION|REFRESH|REJECT|REPORT|RESERVE|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\configs.py:515:        "refresh_pattern", "reload_into_ims", "request_body_max_size",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\c_like.py:458:        'GSMScanner', 'FileSystem', 'Scheduler', 'GSMServer', 'YunClient', 'YunServer',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\dsls.py:273:                    'when', 'timeout', 'schedule'),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\dsls.py:406:                'create_resources', 'crit', 'cron', 'debug', 'default',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\dsls.py:420:                'schedule', 'scheduled_task', 'search', 'selboolean', 'selmodule',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\ecl.py:104:                'COVARIANCE', 'CRON', 'DATASET', 'DEDUP', 'DEFINE', 'DENORMALIZE',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:97:             r'RECNO|RECSIZE|REFRESH|RELATION|REPLICATE|REQUERY|RGB|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:200:             r'InsertCmdDataSource|InsertCmdRefreshCmd|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:201:             r'InsertCmdRefreshFieldList|InsertCmdRefreshKeyFieldList|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:230:             r'PrintJobName|Procedure|PROCESSID|ProgID|ProjectHookClass|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:234:             r'RecordSource|RefreshAlias|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:235:             r'RefreshCmdDataSourceType|RefreshCmdDataSource|RefreshCmd|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:236:             r'RefreshIgnoreFieldList|RefreshTimeStamp|RelationalExpr|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:256:             r'UpdateCmdRefreshCmd|UpdateCmdRefreshFieldList|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:257:             r'UpdateCmdRefreshKeyFieldList|UpdateCmd|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:279:             r'CursorRefresh|DataToClip|DelayedMemoFetch|DeleteColumn|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:286:             r'RecordRefresh|Refresh|ReleaseXML|Release|RemoveFromSCC|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:297:             r'AfterCursorDetach|AfterCursorFill|AfterCursorRefresh|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:299:             r'AfterRecordRefresh|AfterUpdate|AfterDock|AfterReport|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:302:             r'BeforeCursorRefresh|BeforeCursorUpdate|BeforeDelete|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:304:             r'BeforeRecordRefresh|BeforeReport|BeforeRowColChange|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:407:             r'SET\s*REFRESH|SET\s*RELATION|SET\s*RELATION\s*OFF|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:419:             r'DO\s*WHILE|ENDDO|FOR|ENDFOR|NEXT|IF|ELSE|ENDIF|PRINTJOB|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:420:             r'ENDPRINTJOB|SCAN|ENDSCAN|TEXT|ENDTEXT|=)',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\idl.py:84:        'dialog_printersetup', 'dialog_printjob',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\lisp.py:2631:        'schedule', 'exp', 'log', 'sin', 'cos', 'tan', 'asin', 'acos', 'atan',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\macaulay2.py:940:    "schedule",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\markup.py:690:            # Deadline, Scheduled, CLOSED
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\markup.py:691:            (r'(?i)^( *(?:DEADLINE|SCHEDULED): )(<.+?> *)$',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:2096:                        "refresh",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:2097:                        "refreshSourceControl",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:2098:                        "refreshdata",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:3045:        "rectint", "refresh", "refreshdata",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\mosel.py:334:    # mosel exam mmjobs | sed -n -e "s/ [pf][a-z]* \([a-zA-Z0-9_]*\).*/'\1',/p" | sort -u
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\pascal.py:324:        'cronometro',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\pascal.py:525:                        # it's not a dot, our job is done
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\perl.py:346:        'schedule-on','scheduler','scope','sec','sech','second','seek','self',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\perl.py:382:        'compiler','Complex','ComplexStr','Cool','CurrentThreadScheduler',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\perl.py:403:        'Rational','RatStr','Real','Regex','Routine','Scalar','Scheduler',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\perl.py:408:        'Telemetry::Period','Telemetry::Sampler','Thread','ThreadPoolScheduler',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\phix.py:136:        'IupRadio', 'IupRecordInput', 'IupRedraw', 'IupRefresh',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\phix.py:137:        'IupRefreshChildren', 'IupSeparator', 'IupSetAttribute',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\phix.py:260:        'task_delay', 'task_list', 'task_schedule', 'task_self', 'task_status',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:661:    lsl_invalid_unimplemented = r'\b(?:CHARACTER_(?:MAX_ANGULAR_(?:ACCEL|SPEED)|TURN_SPEED_MULTIPLIER)|PERMISSION_(?:CHANGE_(?:JOINTS|PERMISSIONS)|RELEASE_OWNERSHIP|REMAP_CONTROLS)|PRIM_PHYSICS_MATERIAL|PSYS_SRC_OBJ_REL_MASK|ll(?:CollisionSprite|(?:Stop)?PointAt|(?:(?:Refresh|Set)Prim)URL|(?:Take|Release)Camera|RemoteLoadScript))\b'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1345:        'RECORD-LENGTH', 'REFRESH', 'RELEASE', 'RENUM', 'REPEAT', 'REPORT',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1367:            (r'(JOB|PARM)' + r'(' + _DELIMITER_PATTERN + r')',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1408:        hasJob = False
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1437:                        if not hasJob:
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1444:                            if firstWord == 'JOB':
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1445:                                hasJob = True
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1454:            if hasJob and (hasProc == hasEndProc):
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1459:                        # Found PARM, JOB and PROC/END-PROC:
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1463:                        # Found PARAM and  JOB: probably this is Easytrieve
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1466:                    # Found JOB and possibly other keywords: might be Easytrieve
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1483:    Job Control Language (JCL)
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1485:    on how to run a batch job or start a subsystem. It is somewhat
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1492:    url = 'https://en.wikipedia.org/wiki/Job_Control_Language'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1507:            (r'([a-z]\w*)(\s+)(exec|job)(\s*)',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1521:            (r'\b(jobparam|message|netacct|notify|output|priority|route|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1549:    _JOB_HEADER_PATTERN = re.compile(r'^//[a-z#$@][a-z0-9#$@]{0,7}\s+job(\s+.*)?$',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1554:        Recognize JCL job by header.
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\scripting.py:1559:            if JclLexer._JOB_HEADER_PATTERN.match(lines[0]):
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\shell.py:62:             r'export|false|fc|fg|getopts|hash|help|history|jobs|kill|let|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\shell.py:579:             r'glob|getspath|hashstat|history|hup|inlib|jobs|kill|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\shell.py:806:             r'history|isatty|jobs|math|mimedb|nextd|open|popd|prevd|psub|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\thingsdb.py:97:             r'refresh_module|set_module_conf|set_module_scope|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\unicon.py:108:                'real', 'receive', 'Refresh', 'Rem', 'remove', 'rename',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\unicon.py:251:                'real', 'receive', 'Refresh', 'Rem', 'remove', 'rename',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\unicon.py:361:                'refresh', 'rswap',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\urbi.py:92:                'Hash', 'InputStream', 'IoService', 'Job', 'Kernel', 'Lazy', 'List',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_cocoa_builtins.py:14:COCOA_INTERFACES = {'AAAttribution', 'ABNewPersonViewController', 'ABPeoplePickerNavigationController', 'ABPersonViewController', 'ABUnknownPersonViewController', 'ACAccount', 'ACAccountCredential', 'ACAccountStore', 'ACAccountType', 'ADBannerView', 'ADClient', 'ADInterstitialAd', 'ADInterstitialAdPresentationViewController', 'AEAssessmentConfiguration', 'AEAssessmentSession', 'ALAsset', 'ALAssetRepresentation', 'AL
AssetsFilter', 'ALAssetsGroup', 'ALAssetsLibrary', 'APActivationPayload', 'ARAnchor', 'ARAppClipCodeAnchor', 'ARBody2D', 'ARBodyAnchor', 'ARBodyTrackingConfiguration', 'ARCamera', 'ARCoachingOverlayView', 'ARCollaborationData', 'ARConfiguration', 'ARDepthData', 'ARDirectionalLightEstimate', 'AREnvironmentProbeAnchor', 'ARFaceAnchor', 'ARFaceGeometry', 'ARFaceTrackingConfiguration', 'ARFrame', 'ARGeoAnchor', 'ARGeoTrackingConfiguration', 'ARGeoTrackingStatus', 'ARGeometryElement', 'ARGeometrySour
ce', 'ARHitTestResult', 'ARImageAnchor', 'ARImageTrackingConfiguration', 'ARLightEstimate', 'ARMatteGenerator', 'ARMeshAnchor', 'ARMeshGeometry', 'ARObjectAnchor', 'ARObjectScanningConfiguration', 'AROrientationTrackingConfiguration', 'ARParticipantAnchor', 'ARPlaneAnchor', 'ARPlaneGeometry', 'ARPointCloud', 'ARPositionalTrackingConfiguration', 'ARQuickLookPreviewItem', 'ARRaycastQuery', 'ARRaycastResult', 'ARReferenceImage', 'ARReferenceObject', 'ARSCNFaceGeometry', 'ARSCNPlaneGeometry', 'ARSCN
View', 'ARSKView', 'ARSession', 'ARSkeleton', 'ARSkeleton2D', 'ARSkeleton3D', 'ARSkeletonDefinition', 'ARTrackedRaycast', 'ARVideoFormat', 'ARView', 'ARWorldMap', 'ARWorldTrackingConfiguration', 'ASAccountAuthenticationModificationController', 'ASAccountAuthenticationModificationExtensionContext', 'ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest', 'ASAccountAuthenticationModificationRequest', 'ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest'
, 'ASAccountAuthenticationModificationViewController', 'ASAuthorization', 'ASAuthorizationAppleIDButton', 'ASAuthorizationAppleIDCredential', 'ASAuthorizationAppleIDProvider', 'ASAuthorizationAppleIDRequest', 'ASAuthorizationController', 'ASAuthorizationOpenIDRequest', 'ASAuthorizationPasswordProvider', 'ASAuthorizationPasswordRequest', 'ASAuthorizationProviderExtensionAuthorizationRequest', 'ASAuthorizationRequest', 'ASAuthorizationSingleSignOnCredential', 'ASAuthorizationSingleSignOnProvider',
 'ASAuthorizationSingleSignOnRequest', 'ASCredentialIdentityStore', 'ASCredentialIdentityStoreState', 'ASCredentialProviderExtensionContext', 'ASCredentialProviderViewController', 'ASCredentialServiceIdentifier', 'ASIdentifierManager', 'ASPasswordCredential', 'ASPasswordCredentialIdentity', 'ASWebAuthenticationSession', 'ASWebAuthenticationSessionRequest', 'ASWebAuthenticationSessionWebBrowserSessionManager', 'ATTrackingManager', 'AUAudioUnit', 'AUAudioUnitBus', 'AUAudioUnitBusArray', 'AUAudioUn
itPreset', 'AUAudioUnitV2Bridge', 'AUAudioUnitViewConfiguration', 'AUParameter', 'AUParameterGroup', 'AUParameterNode', 'AUParameterTree', 'AUViewController', 'AVAggregateAssetDownloadTask', 'AVAsset', 'AVAssetCache', 'AVAssetDownloadStorageManagementPolicy', 'AVAssetDownloadStorageManager', 'AVAssetDownloadTask', 'AVAssetDownloadURLSession', 'AVAssetExportSession', 'AVAssetImageGenerator', 'AVAssetReader', 'AVAssetReaderAudioMixOutput', 'AVAssetReaderOutput', 'AVAssetReaderOutputMetadataAdaptor
', 'AVAssetReaderSampleReferenceOutput', 'AVAssetReaderTrackOutput', 'AVAssetReaderVideoCompositionOutput', 'AVAssetResourceLoader', 'AVAssetResourceLoadingContentInformationRequest', 'AVAssetResourceLoadingDataRequest', 'AVAssetResourceLoadingRequest', 'AVAssetResourceLoadingRequestor', 'AVAssetResourceRenewalRequest', 'AVAssetSegmentReport', 'AVAssetSegmentReportSampleInformation', 'AVAssetSegmentTrackReport', 'AVAssetTrack', 'AVAssetTrackGroup', 'AVAssetTrackSegment', 'AVAssetWriter', 'AVAsse
tWriterInput', 'AVAssetWriterInputGroup', 'AVAssetWriterInputMetadataAdaptor', 'AVAssetWriterInputPassDescription', 'AVAssetWriterInputPixelBufferAdaptor', 'AVAsynchronousCIImageFilteringRequest', 'AVAsynchronousVideoCompositionRequest', 'AVAudioMix', 'AVAudioMixInputParameters', 'AVAudioSession', 'AVCameraCalibrationData', 'AVCaptureAudioChannel', 'AVCaptureAudioDataOutput', 'AVCaptureAudioFileOutput', 'AVCaptureAudioPreviewOutput', 'AVCaptureAutoExposureBracketedStillImageSettings', 'AVCapture
BracketedStillImageSettings', 'AVCaptureConnection', 'AVCaptureDataOutputSynchronizer', 'AVCaptureDepthDataOutput', 'AVCaptureDevice', 'AVCaptureDeviceDiscoverySession', 'AVCaptureDeviceFormat', 'AVCaptureDeviceInput', 'AVCaptureDeviceInputSource', 'AVCaptureFileOutput', 'AVCaptureInput', 'AVCaptureInputPort', 'AVCaptureManualExposureBracketedStillImageSettings', 'AVCaptureMetadataInput', 'AVCaptureMetadataOutput', 'AVCaptureMovieFileOutput', 'AVCaptureMultiCamSession', 'AVCaptureOutput', 'AVCap
turePhoto', 'AVCapturePhotoBracketSettings', 'AVCapturePhotoOutput', 'AVCapturePhotoSettings', 'AVCaptureResolvedPhotoSettings', 'AVCaptureScreenInput', 'AVCaptureSession', 'AVCaptureStillImageOutput', 'AVCaptureSynchronizedData', 'AVCaptureSynchronizedDataCollection', 'AVCaptureSynchronizedDepthData', 'AVCaptureSynchronizedMetadataObjectData', 'AVCaptureSynchronizedSampleBufferData', 'AVCaptureSystemPressureState', 'AVCaptureVideoDataOutput', 'AVCaptureVideoPreviewLayer', 'AVComposition', 'AVCo
mpositionTrack', 'AVCompositionTrackFormatDescriptionReplacement', 'AVCompositionTrackSegment', 'AVContentKeyRequest', 'AVContentKeyResponse', 'AVContentKeySession', 'AVDateRangeMetadataGroup', 'AVDepthData', 'AVDisplayCriteria', 'AVFragmentedAsset', 'AVFragmentedAssetMinder', 'AVFragmentedAssetTrack', 'AVFragmentedMovie', 'AVFragmentedMovieMinder', 'AVFragmentedMovieTrack', 'AVFrameRateRange', 'AVMediaDataStorage', 'AVMediaSelection', 'AVMediaSelectionGroup', 'AVMediaSelectionOption', 'AVMetada
taBodyObject', 'AVMetadataCatBodyObject', 'AVMetadataDogBodyObject', 'AVMetadataFaceObject', 'AVMetadataGroup', 'AVMetadataHumanBodyObject', 'AVMetadataItem', 'AVMetadataItemFilter', 'AVMetadataItemValueRequest', 'AVMetadataMachineReadableCodeObject', 'AVMetadataObject', 'AVMetadataSalientObject', 'AVMovie', 'AVMovieTrack', 'AVMutableAssetDownloadStorageManagementPolicy', 'AVMutableAudioMix', 'AVMutableAudioMixInputParameters', 'AVMutableComposition', 'AVMutableCompositionTrack', 'AVMutableDateR
angeMetadataGroup', 'AVMutableMediaSelection', 'AVMutableMetadataItem', 'AVMutableMovie', 'AVMutableMovieTrack', 'AVMutableTimedMetadataGroup', 'AVMutableVideoComposition', 'AVMutableVideoCompositionInstruction', 'AVMutableVideoCompositionLayerInstruction', 'AVOutputSettingsAssistant', 'AVPersistableContentKeyRequest', 'AVPictureInPictureController', 'AVPlayer', 'AVPlayerItem', 'AVPlayerItemAccessLog', 'AVPlayerItemAccessLogEvent', 'AVPlayerItemErrorLog', 'AVPlayerItemErrorLogEvent', 'AVPlayerIt
emLegibleOutput', 'AVPlayerItemMediaDataCollector', 'AVPlayerItemMetadataCollector', 'AVPlayerItemMetadataOutput', 'AVPlayerItemOutput', 'AVPlayerItemTrack', 'AVPlayerItemVideoOutput', 'AVPlayerLayer', 'AVPlayerLooper', 'AVPlayerMediaSelectionCriteria', 'AVPlayerViewController', 'AVPortraitEffectsMatte', 'AVQueuePlayer', 'AVRouteDetector', 'AVRoutePickerView', 'AVSampleBufferAudioRenderer', 'AVSampleBufferDisplayLayer', 'AVSampleBufferRenderSynchronizer', 'AVSemanticSegmentationMatte', 'AVSynchr
onizedLayer', 'AVTextStyleRule', 'AVTimedMetadataGroup', 'AVURLAsset', 'AVVideoComposition', 'AVVideoCompositionCoreAnimationTool', 'AVVideoCompositionInstruction', 'AVVideoCompositionLayerInstruction', 'AVVideoCompositionRenderContext', 'AVVideoCompositionRenderHint', 'AXCustomContent', 'BCChatAction', 'BCChatButton', 'BGAppRefreshTask', 'BGAppRefreshTaskRequest', 'BGProcessingTask', 'BGProcessingTaskRequest', 'BGTask', 'BGTaskRequest', 'BGTaskScheduler', 'CAAnimation', 'CAAnimationGroup', 'CAB
TMIDICentralViewController', 'CABTMIDILocalPeripheralViewController', 'CABasicAnimation', 'CADisplayLink', 'CAEAGLLayer', 'CAEmitterCell', 'CAEmitterLayer', 'CAGradientLayer', 'CAInterAppAudioSwitcherView', 'CAInterAppAudioTransportView', 'CAKeyframeAnimation', 'CALayer', 'CAMediaTimingFunction', 'CAMetalLayer', 'CAPropertyAnimation', 'CAReplicatorLayer', 'CAScrollLayer', 'CAShapeLayer', 'CASpringAnimation', 'CATextLayer', 'CATiledLayer', 'CATransaction', 'CATransformLayer', 'CATransition', 'CAV
alueFunction', 'CBATTRequest', 'CBAttribute', 'CBCentral', 'CBCentralManager', 'CBCharacteristic', 'CBDescriptor', 'CBL2CAPChannel', 'CBManager', 'CBMutableCharacteristic', 'CBMutableDescriptor', 'CBMutableService', 'CBPeer', 'CBPeripheral', 'CBPeripheralManager', 'CBService', 'CBUUID', 'CHHapticDynamicParameter', 'CHHapticEngine', 'CHHapticEvent', 'CHHapticEventParameter', 'CHHapticParameterCurve', 'CHHapticParameterCurveControlPoint', 'CHHapticPattern', 'CIAztecCodeDescriptor', 'CIBarcodeDescr
iptor', 'CIBlendKernel', 'CIColor', 'CIColorKernel', 'CIContext', 'CIDataMatrixCodeDescriptor', 'CIDetector', 'CIFaceFeature', 'CIFeature', 'CIFilter', 'CIFilterGenerator', 'CIFilterShape', 'CIImage', 'CIImageAccumulator', 'CIImageProcessorKernel', 'CIKernel', 'CIPDF417CodeDescriptor', 'CIPlugIn', 'CIQRCodeDescriptor', 'CIQRCodeFeature', 'CIRectangleFeature', 'CIRenderDestination', 'CIRenderInfo', 'CIRenderTask', 'CISampler', 'CITextFeature', 'CIVector', 'CIWarpKernel', 'CKAcceptSharesOperation'
, 'CKAsset', 'CKContainer', 'CKDatabase', 'CKDatabaseNotification', 'CKDatabaseOperation', 'CKDatabaseSubscription', 'CKDiscoverAllUserIdentitiesOperation', 'CKDiscoverUserIdentitiesOperation', 'CKFetchDatabaseChangesOperation', 'CKFetchNotificationChangesOperation', 'CKFetchRecordChangesOperation', 'CKFetchRecordZoneChangesConfiguration', 'CKFetchRecordZoneChangesOperation', 'CKFetchRecordZoneChangesOptions', 'CKFetchRecordZonesOperation', 'CKFetchRecordsOperation', 'CKFetchShareMetadataOperati
on', 'CKFetchShareParticipantsOperation', 'CKFetchSubscriptionsOperation', 'CKFetchWebAuthTokenOperation', 'CKLocationSortDescriptor', 'CKMarkNotificationsReadOperation', 'CKModifyBadgeOperation', 'CKModifyRecordZonesOperation', 'CKModifyRecordsOperation', 'CKModifySubscriptionsOperation', 'CKNotification', 'CKNotificationID', 'CKNotificationInfo', 'CKOperation', 'CKOperationConfiguration', 'CKOperationGroup', 'CKQuery', 'CKQueryCursor', 'CKQueryNotification', 'CKQueryOperation', 'CKQuerySubscri
ption', 'CKRecord', 'CKRecordID', 'CKRecordZone', 'CKRecordZoneID', 'CKRecordZoneNotification', 'CKRecordZoneSubscription', 'CKReference', 'CKServerChangeToken', 'CKShare', 'CKShareMetadata', 'CKShareParticipant', 'CKSubscription', 'CKUserIdentity', 'CKUserIdentityLookupInfo', 'CLBeacon', 'CLBeaconIdentityConstraint', 'CLBeaconRegion', 'CLCircularRegion', 'CLFloor', 'CLGeocoder', 'CLHeading', 'CLKComplication', 'CLKComplicationDescriptor', 'CLKComplicationServer', 'CLKComplicationTemplate', 'CLK
ComplicationTemplateCircularSmallRingImage', 'CLKComplicationTemplateCircularSmallRingText', 'CLKComplicationTemplateCircularSmallSimpleImage', 'CLKComplicationTemplateCircularSmallSimpleText', 'CLKComplicationTemplateCircularSmallStackImage', 'CLKComplicationTemplateCircularSmallStackText', 'CLKComplicationTemplateExtraLargeColumnsText', 'CLKComplicationTemplateExtraLargeRingImage', 'CLKComplicationTemplateExtraLargeRingText', 'CLKComplicationTemplateExtraLargeSimpleImage', 'CLKComplicationTemp
lateExtraLargeSimpleText', 'CLKComplicationTemplateExtraLargeStackImage', 'CLKComplicationTemplateExtraLargeStackText', 'CLKComplicationTemplateGraphicBezelCircularText', 'CLKComplicationTemplateGraphicCircular', 'CLKComplicationTemplateGraphicCircularClosedGaugeImage', 'CLKComplicationTemplateGraphicCircularClosedGaugeText', 'CLKComplicationTemplateGraphicCircularImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeRangeText', 'CLKCompl
icationTemplateGraphicCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicCircularStackImage', 'CLKComplicationTemplateGraphicCircularStackText', 'CLKComplicationTemplateGraphicCornerCircularImage', 'CLKComplicationTemplateGraphicCornerGaugeImage', 'CLKComplicationTemplateGraphicCornerGaugeText', 'CLKComplicationTemplateGraphicCornerStackText', 'CLKComplicationTemplateGraphicCornerTextImage', 'CLKComplicationTemplateGraphicExtraLargeCircular', 'CLKComplicationTemplateGraphicExtraLargeCi
rcularClosedGaugeImage', 'CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText', 'CLKComplicationTemplateGraphicExtraLargeCircularImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicExtraLargeCircularStackImage', 'CLKComplicationTemplateGraphicExtraLargeCircularStackText', 'CLKComplicationTempl
ateGraphicRectangularFullImage', 'CLKComplicationTemplateGraphicRectangularLargeImage', 'CLKComplicationTemplateGraphicRectangularStandardBody', 'CLKComplicationTemplateGraphicRectangularTextGauge', 'CLKComplicationTemplateModularLargeColumns', 'CLKComplicationTemplateModularLargeStandardBody', 'CLKComplicationTemplateModularLargeTable', 'CLKComplicationTemplateModularLargeTallBody', 'CLKComplicationTemplateModularSmallColumnsText', 'CLKComplicationTemplateModularSmallRingImage', 'CLKComplicatio
nTemplateModularSmallRingText', 'CLKComplicationTemplateModularSmallSimpleImage', 'CLKComplicationTemplateModularSmallSimpleText', 'CLKComplicationTemplateModularSmallStackImage', 'CLKComplicationTemplateModularSmallStackText', 'CLKComplicationTemplateUtilitarianLargeFlat', 'CLKComplicationTemplateUtilitarianSmallFlat', 'CLKComplicationTemplateUtilitarianSmallRingImage', 'CLKComplicationTemplateUtilitarianSmallRingText', 'CLKComplicationTemplateUtilitarianSmallSquare', 'CLKComplicationTimelineEn
try', 'CLKDateTextProvider', 'CLKFullColorImageProvider', 'CLKGaugeProvider', 'CLKImageProvider', 'CLKRelativeDateTextProvider', 'CLKSimpleGaugeProvider', 'CLKSimpleTextProvider', 'CLKTextProvider', 'CLKTimeIntervalGaugeProvider', 'CLKTimeIntervalTextProvider', 'CLKTimeTextProvider', 'CLKWatchFaceLibrary', 'CLLocation', 'CLLocationManager', 'CLPlacemark', 'CLRegion', 'CLSActivity', 'CLSActivityItem', 'CLSBinaryItem', 'CLSContext', 'CLSDataStore', 'CLSObject', 'CLSProgressReportingCapability', 'C
LSQuantityItem', 'CLSScoreItem', 'CLVisit', 'CMAccelerometerData', 'CMAltimeter', 'CMAltitudeData', 'CMAttitude', 'CMDeviceMotion', 'CMDyskineticSymptomResult', 'CMFallDetectionEvent', 'CMFallDetectionManager', 'CMGyroData', 'CMHeadphoneMotionManager', 'CMLogItem', 'CMMagnetometerData', 'CMMotionActivity', 'CMMotionActivityManager', 'CMMotionManager', 'CMMovementDisorderManager', 'CMPedometer', 'CMPedometerData', 'CMPedometerEvent', 'CMRecordedAccelerometerData', 'CMRecordedRotationRateData', 'C
MRotationRateData', 'CMSensorDataList', 'CMSensorRecorder', 'CMStepCounter', 'CMTremorResult', 'CNChangeHistoryAddContactEvent', 'CNChangeHistoryAddGroupEvent', 'CNChangeHistoryAddMemberToGroupEvent', 'CNChangeHistoryAddSubgroupToGroupEvent', 'CNChangeHistoryDeleteContactEvent', 'CNChangeHistoryDeleteGroupEvent', 'CNChangeHistoryDropEverythingEvent', 'CNChangeHistoryEvent', 'CNChangeHistoryFetchRequest', 'CNChangeHistoryRemoveMemberFromGroupEvent', 'CNChangeHistoryRemoveSubgroupFromGroupEvent',
'CNChangeHistoryUpdateContactEvent', 'CNChangeHistoryUpdateGroupEvent', 'CNContact', 'CNContactFetchRequest', 'CNContactFormatter', 'CNContactPickerViewController', 'CNContactProperty', 'CNContactRelation', 'CNContactStore', 'CNContactVCardSerialization', 'CNContactViewController', 'CNContactsUserDefaults', 'CNContainer', 'CNFetchRequest', 'CNFetchResult', 'CNGroup', 'CNInstantMessageAddress', 'CNLabeledValue', 'CNMutableContact', 'CNMutableGroup', 'CNMutablePostalAddress', 'CNPhoneNumber', 'CNP
ostalAddress', 'CNPostalAddressFormatter', 'CNSaveRequest', 'CNSocialProfile', 'CPActionSheetTemplate', 'CPAlertAction', 'CPAlertTemplate', 'CPBarButton', 'CPButton', 'CPContact', 'CPContactCallButton', 'CPContactDirectionsButton', 'CPContactMessageButton', 'CPContactTemplate', 'CPDashboardButton', 'CPDashboardController', 'CPGridButton', 'CPGridTemplate', 'CPImageSet', 'CPInformationItem', 'CPInformationRatingItem', 'CPInformationTemplate', 'CPInterfaceController', 'CPListImageRowItem', 'CPList
Item', 'CPListSection', 'CPListTemplate', 'CPManeuver', 'CPMapButton', 'CPMapTemplate', 'CPMessageComposeBarButton', 'CPMessageListItem', 'CPMessageListItemLeadingConfiguration', 'CPMessageListItemTrailingConfiguration', 'CPNavigationAlert', 'CPNavigationSession', 'CPNowPlayingAddToLibraryButton', 'CPNowPlayingButton', 'CPNowPlayingImageButton', 'CPNowPlayingMoreButton', 'CPNowPlayingPlaybackRateButton', 'CPNowPlayingRepeatButton', 'CPNowPlayingShuffleButton', 'CPNowPlayingTemplate', 'CPPointOfI
nterest', 'CPPointOfInterestTemplate', 'CPRouteChoice', 'CPSearchTemplate', 'CPSessionConfiguration', 'CPTabBarTemplate', 'CPTemplate', 'CPTemplateApplicationDashboardScene', 'CPTemplateApplicationScene', 'CPTextButton', 'CPTravelEstimates', 'CPTrip', 'CPTripPreviewTextConfiguration', 'CPVoiceControlState', 'CPVoiceControlTemplate', 'CPWindow', 'CSCustomAttributeKey', 'CSIndexExtensionRequestHandler', 'CSLocalizedString', 'CSPerson', 'CSSearchQuery', 'CSSearchableIndex', 'CSSearchableItem', 'CSS
earchableItemAttributeSet', 'CTCall', 'CTCallCenter', 'CTCarrier', 'CTCellularData', 'CTCellularPlanProvisioning', 'CTCellularPlanProvisioningRequest', 'CTSubscriber', 'CTSubscriberInfo', 'CTTelephonyNetworkInfo', 'CXAction', 'CXAnswerCallAction', 'CXCall', 'CXCallAction', 'CXCallController', 'CXCallDirectoryExtensionContext', 'CXCallDirectoryManager', 'CXCallDirectoryProvider', 'CXCallObserver', 'CXCallUpdate', 'CXEndCallAction', 'CXHandle', 'CXPlayDTMFCallAction', 'CXProvider', 'CXProviderConf
iguration', 'CXSetGroupCallAction', 'CXSetHeldCallAction', 'CXSetMutedCallAction', 'CXStartCallAction', 'CXTransaction', 'DCAppAttestService', 'DCDevice', 'EAAccessory', 'EAAccessoryManager', 'EAGLContext', 'EAGLSharegroup', 'EASession', 'EAWiFiUnconfiguredAccessory', 'EAWiFiUnconfiguredAccessoryBrowser', 'EKAlarm', 'EKCalendar', 'EKCalendarChooser', 'EKCalendarItem', 'EKEvent', 'EKEventEditViewController', 'EKEventStore', 'EKEventViewController', 'EKObject', 'EKParticipant', 'EKRecurrenceDayOfW
eek', 'EKRecurrenceEnd', 'EKRecurrenceRule', 'EKReminder', 'EKSource', 'EKStructuredLocation', 'ENExposureConfiguration', 'ENExposureDaySummary', 'ENExposureDetectionSummary', 'ENExposureInfo', 'ENExposureSummaryItem', 'ENExposureWindow', 'ENManager', 'ENScanInstance', 'ENTemporaryExposureKey', 'EntityRotationGestureRecognizer', 'EntityScaleGestureRecognizer', 'EntityTranslationGestureRecognizer', 'FPUIActionExtensionContext', 'FPUIActionExtensionViewController', 'GCColor', 'GCController', 'GCCo
ntrollerAxisInput', 'GCControllerButtonInput', 'GCControllerDirectionPad', 'GCControllerElement', 'GCControllerTouchpad', 'GCDeviceBattery', 'GCDeviceCursor', 'GCDeviceHaptics', 'GCDeviceLight', 'GCDirectionalGamepad', 'GCDualShockGamepad', 'GCEventViewController', 'GCExtendedGamepad', 'GCExtendedGamepadSnapshot', 'GCGamepad', 'GCGamepadSnapshot', 'GCKeyboard', 'GCKeyboardInput', 'GCMicroGamepad', 'GCMicroGamepadSnapshot', 'GCMotion', 'GCMouse', 'GCMouseInput', 'GCPhysicalInputProfile', 'GCXboxG
amepad', 'GKARC4RandomSource', 'GKAccessPoint', 'GKAchievement', 'GKAchievementChallenge', 'GKAchievementDescription', 'GKAchievementViewController', 'GKAgent', 'GKAgent2D', 'GKAgent3D', 'GKBasePlayer', 'GKBehavior', 'GKBillowNoiseSource', 'GKChallenge', 'GKChallengeEventHandler', 'GKCheckerboardNoiseSource', 'GKCircleObstacle', 'GKCloudPlayer', 'GKCoherentNoiseSource', 'GKComponent', 'GKComponentSystem', 'GKCompositeBehavior', 'GKConstantNoiseSource', 'GKCylindersNoiseSource', 'GKDecisionNode',
 'GKDecisionTree', 'GKEntity', 'GKFriendRequestComposeViewController', 'GKGameCenterViewController', 'GKGameSession', 'GKGameSessionSharingViewController', 'GKGaussianDistribution', 'GKGoal', 'GKGraph', 'GKGraphNode', 'GKGraphNode2D', 'GKGraphNode3D', 'GKGridGraph', 'GKGridGraphNode', 'GKInvite', 'GKLeaderboard', 'GKLeaderboardEntry', 'GKLeaderboardScore', 'GKLeaderboardSet', 'GKLeaderboardViewController', 'GKLinearCongruentialRandomSource', 'GKLocalPlayer', 'GKMatch', 'GKMatchRequest', 'GKMatch
maker', 'GKMatchmakerViewController', 'GKMersenneTwisterRandomSource', 'GKMeshGraph', 'GKMinmaxStrategist', 'GKMonteCarloStrategist', 'GKNSPredicateRule', 'GKNoise', 'GKNoiseMap', 'GKNoiseSource', 'GKNotificationBanner', 'GKObstacle', 'GKObstacleGraph', 'GKOctree', 'GKOctreeNode', 'GKPath', 'GKPeerPickerController', 'GKPerlinNoiseSource', 'GKPlayer', 'GKPolygonObstacle', 'GKQuadtree', 'GKQuadtreeNode', 'GKRTree', 'GKRandomDistribution', 'GKRandomSource', 'GKRidgedNoiseSource', 'GKRule', 'GKRuleS
ystem', 'GKSCNNodeComponent', 'GKSKNodeComponent', 'GKSavedGame', 'GKScene', 'GKScore', 'GKScoreChallenge', 'GKSession', 'GKShuffledDistribution', 'GKSphereObstacle', 'GKSpheresNoiseSource', 'GKState', 'GKStateMachine', 'GKTurnBasedEventHandler', 'GKTurnBasedExchangeReply', 'GKTurnBasedMatch', 'GKTurnBasedMatchmakerViewController', 'GKTurnBasedParticipant', 'GKVoiceChat', 'GKVoiceChatService', 'GKVoronoiNoiseSource', 'GLKBaseEffect', 'GLKEffectProperty', 'GLKEffectPropertyFog', 'GLKEffectPropert
yLight', 'GLKEffectPropertyMaterial', 'GLKEffectPropertyTexture', 'GLKEffectPropertyTransform', 'GLKMesh', 'GLKMeshBuffer', 'GLKMeshBufferAllocator', 'GLKReflectionMapEffect', 'GLKSkyboxEffect', 'GLKSubmesh', 'GLKTextureInfo', 'GLKTextureLoader', 'GLKView', 'GLKViewController', 'HKActivityMoveModeObject', 'HKActivityRingView', 'HKActivitySummary', 'HKActivitySummaryQuery', 'HKActivitySummaryType', 'HKAnchoredObjectQuery', 'HKAudiogramSample', 'HKAudiogramSampleType', 'HKAudiogramSensitivityPoint
', 'HKBiologicalSexObject', 'HKBloodTypeObject', 'HKCDADocument', 'HKCDADocumentSample', 'HKCategorySample', 'HKCategoryType', 'HKCharacteristicType', 'HKClinicalRecord', 'HKClinicalType', 'HKCorrelation', 'HKCorrelationQuery', 'HKCorrelationType', 'HKCumulativeQuantitySample', 'HKCumulativeQuantitySeriesSample', 'HKDeletedObject', 'HKDevice', 'HKDiscreteQuantitySample', 'HKDocumentQuery', 'HKDocumentSample', 'HKDocumentType', 'HKElectrocardiogram', 'HKElectrocardiogramQuery', 'HKElectrocardiogr
amType', 'HKElectrocardiogramVoltageMeasurement', 'HKFHIRResource', 'HKFHIRVersion', 'HKFitzpatrickSkinTypeObject', 'HKHealthStore', 'HKHeartbeatSeriesBuilder', 'HKHeartbeatSeriesQuery', 'HKHeartbeatSeriesSample', 'HKLiveWorkoutBuilder', 'HKLiveWorkoutDataSource', 'HKObject', 'HKObjectType', 'HKObserverQuery', 'HKQuantity', 'HKQuantitySample', 'HKQuantitySeriesSampleBuilder', 'HKQuantitySeriesSampleQuery', 'HKQuantityType', 'HKQuery', 'HKQueryAnchor', 'HKSample', 'HKSampleQuery', 'HKSampleType',
 'HKSeriesBuilder', 'HKSeriesSample', 'HKSeriesType', 'HKSource', 'HKSourceQuery', 'HKSourceRevision', 'HKStatistics', 'HKStatisticsCollection', 'HKStatisticsCollectionQuery', 'HKStatisticsQuery', 'HKUnit', 'HKWheelchairUseObject', 'HKWorkout', 'HKWorkoutBuilder', 'HKWorkoutConfiguration', 'HKWorkoutEvent', 'HKWorkoutRoute', 'HKWorkoutRouteBuilder', 'HKWorkoutRouteQuery', 'HKWorkoutSession', 'HKWorkoutType', 'HMAccessControl', 'HMAccessory', 'HMAccessoryBrowser', 'HMAccessoryCategory', 'HMAccess
oryOwnershipToken', 'HMAccessoryProfile', 'HMAccessorySetupPayload', 'HMAction', 'HMActionSet', 'HMAddAccessoryRequest', 'HMCalendarEvent', 'HMCameraAudioControl', 'HMCameraControl', 'HMCameraProfile', 'HMCameraSettingsControl', 'HMCameraSnapshot', 'HMCameraSnapshotControl', 'HMCameraSource', 'HMCameraStream', 'HMCameraStreamControl', 'HMCameraView', 'HMCharacteristic', 'HMCharacteristicEvent', 'HMCharacteristicMetadata', 'HMCharacteristicThresholdRangeEvent', 'HMCharacteristicWriteAction', 'HMD
urationEvent', 'HMEvent', 'HMEventTrigger', 'HMHome', 'HMHomeAccessControl', 'HMHomeManager', 'HMLocationEvent', 'HMMutableCalendarEvent', 'HMMutableCharacteristicEvent', 'HMMutableCharacteristicThresholdRangeEvent', 'HMMutableDurationEvent', 'HMMutableLocationEvent', 'HMMutablePresenceEvent', 'HMMutableSignificantTimeEvent', 'HMNetworkConfigurationProfile', 'HMNumberRange', 'HMPresenceEvent', 'HMRoom', 'HMService', 'HMServiceGroup', 'HMSignificantTimeEvent', 'HMTimeEvent', 'HMTimerTrigger', 'HM
Trigger', 'HMUser', 'HMZone', 'ICCameraDevice', 'ICCameraFile', 'ICCameraFolder', 'ICCameraItem', 'ICDevice', 'ICDeviceBrowser', 'ICScannerBandData', 'ICScannerDevice', 'ICScannerFeature', 'ICScannerFeatureBoolean', 'ICScannerFeatureEnumeration', 'ICScannerFeatureRange', 'ICScannerFeatureTemplate', 'ICScannerFunctionalUnit', 'ICScannerFunctionalUnitDocumentFeeder', 'ICScannerFunctionalUnitFlatbed', 'ICScannerFunctionalUnitNegativeTransparency', 'ICScannerFunctionalUnitPositiveTransparency', 'ILC
allClassificationRequest', 'ILCallCommunication', 'ILClassificationRequest', 'ILClassificationResponse', 'ILClassificationUIExtensionContext', 'ILClassificationUIExtensionViewController', 'ILCommunication', 'ILMessageClassificationRequest', 'ILMessageCommunication', 'ILMessageFilterExtension', 'ILMessageFilterExtensionContext', 'ILMessageFilterQueryRequest', 'ILMessageFilterQueryResponse', 'ILNetworkResponse', 'INAccountTypeResolutionResult', 'INActivateCarSignalIntent', 'INActivateCarSignalInte
ntResponse', 'INAddMediaIntent', 'INAddMediaIntentResponse', 'INAddMediaMediaDestinationResolutionResult', 'INAddMediaMediaItemResolutionResult', 'INAddTasksIntent', 'INAddTasksIntentResponse', 'INAddTasksTargetTaskListResolutionResult', 'INAddTasksTemporalEventTriggerResolutionResult', 'INAirline', 'INAirport', 'INAirportGate', 'INAppendToNoteIntent', 'INAppendToNoteIntentResponse', 'INBalanceAmount', 'INBalanceTypeResolutionResult', 'INBillDetails', 'INBillPayee', 'INBillPayeeResolutionResult'
, 'INBillTypeResolutionResult', 'INBoatReservation', 'INBoatTrip', 'INBookRestaurantReservationIntent', 'INBookRestaurantReservationIntentResponse', 'INBooleanResolutionResult', 'INBusReservation', 'INBusTrip', 'INCallCapabilityResolutionResult', 'INCallDestinationTypeResolutionResult', 'INCallRecord', 'INCallRecordFilter', 'INCallRecordResolutionResult', 'INCallRecordTypeOptionsResolutionResult', 'INCallRecordTypeResolutionResult', 'INCancelRideIntent', 'INCancelRideIntentResponse', 'INCancelWo
rkoutIntent', 'INCancelWorkoutIntentResponse', 'INCar', 'INCarAirCirculationModeResolutionResult', 'INCarAudioSourceResolutionResult', 'INCarDefrosterResolutionResult', 'INCarHeadUnit', 'INCarSeatResolutionResult', 'INCarSignalOptionsResolutionResult', 'INCreateNoteIntent', 'INCreateNoteIntentResponse', 'INCreateTaskListIntent', 'INCreateTaskListIntentResponse', 'INCurrencyAmount', 'INCurrencyAmountResolutionResult', 'INDailyRoutineRelevanceProvider', 'INDateComponentsRange', 'INDateComponentsRa
ngeResolutionResult', 'INDateComponentsResolutionResult', 'INDateRelevanceProvider', 'INDateSearchTypeResolutionResult', 'INDefaultCardTemplate', 'INDeleteTasksIntent', 'INDeleteTasksIntentResponse', 'INDeleteTasksTaskListResolutionResult', 'INDeleteTasksTaskResolutionResult', 'INDoubleResolutionResult', 'INEndWorkoutIntent', 'INEndWorkoutIntentResponse', 'INEnergyResolutionResult', 'INEnumResolutionResult', 'INExtension', 'INFile', 'INFileResolutionResult', 'INFlight', 'INFlightReservation', 'I
NGetAvailableRestaurantReservationBookingDefaultsIntent', 'INGetAvailableRestaurantReservationBookingDefaultsIntentResponse', 'INGetAvailableRestaurantReservationBookingsIntent', 'INGetAvailableRestaurantReservationBookingsIntentResponse', 'INGetCarLockStatusIntent', 'INGetCarLockStatusIntentResponse', 'INGetCarPowerLevelStatusIntent', 'INGetCarPowerLevelStatusIntentResponse', 'INGetReservationDetailsIntent', 'INGetReservationDetailsIntentResponse', 'INGetRestaurantGuestIntent', 'INGetRestaurant
GuestIntentResponse', 'INGetRideStatusIntent', 'INGetRideStatusIntentResponse', 'INGetUserCurrentRestaurantReservationBookingsIntent', 'INGetUserCurrentRestaurantReservationBookingsIntentResponse', 'INGetVisualCodeIntent', 'INGetVisualCodeIntentResponse', 'INImage', 'INImageNoteContent', 'INIntegerResolutionResult', 'INIntent', 'INIntentResolutionResult', 'INIntentResponse', 'INInteraction', 'INLengthResolutionResult', 'INListCarsIntent', 'INListCarsIntentResponse', 'INListRideOptionsIntent', 'I
NListRideOptionsIntentResponse', 'INLocationRelevanceProvider', 'INLocationSearchTypeResolutionResult', 'INLodgingReservation', 'INMassResolutionResult', 'INMediaAffinityTypeResolutionResult', 'INMediaDestination', 'INMediaDestinationResolutionResult', 'INMediaItem', 'INMediaItemResolutionResult', 'INMediaSearch', 'INMediaUserContext', 'INMessage', 'INMessageAttributeOptionsResolutionResult', 'INMessageAttributeResolutionResult', 'INNote', 'INNoteContent', 'INNoteContentResolutionResult', 'INNot
eContentTypeResolutionResult', 'INNoteResolutionResult', 'INNotebookItemTypeResolutionResult', 'INObject', 'INObjectCollection', 'INObjectResolutionResult', 'INObjectSection', 'INOutgoingMessageTypeResolutionResult', 'INParameter', 'INPauseWorkoutIntent', 'INPauseWorkoutIntentResponse', 'INPayBillIntent', 'INPayBillIntentResponse', 'INPaymentAccount', 'INPaymentAccountResolutionResult', 'INPaymentAmount', 'INPaymentAmountResolutionResult', 'INPaymentMethod', 'INPaymentMethodResolutionResult', 'I
NPaymentRecord', 'INPaymentStatusResolutionResult', 'INPerson', 'INPersonHandle', 'INPersonResolutionResult', 'INPlacemarkResolutionResult', 'INPlayMediaIntent', 'INPlayMediaIntentResponse', 'INPlayMediaMediaItemResolutionResult', 'INPlayMediaPlaybackSpeedResolutionResult', 'INPlaybackQueueLocationResolutionResult', 'INPlaybackRepeatModeResolutionResult', 'INPreferences', 'INPriceRange', 'INRadioTypeResolutionResult', 'INRecurrenceRule', 'INRelativeReferenceResolutionResult', 'INRelativeSettingR
esolutionResult', 'INRelevanceProvider', 'INRelevantShortcut', 'INRelevantShortcutStore', 'INRentalCar', 'INRentalCarReservation', 'INRequestPaymentCurrencyAmountResolutionResult', 'INRequestPaymentIntent', 'INRequestPaymentIntentResponse', 'INRequestPaymentPayerResolutionResult', 'INRequestRideIntent', 'INRequestRideIntentResponse', 'INReservation', 'INReservationAction', 'INRestaurant', 'INRestaurantGuest', 'INRestaurantGuestDisplayPreferences', 'INRestaurantGuestResolutionResult', 'INRestaura
ntOffer', 'INRestaurantReservation', 'INRestaurantReservationBooking', 'INRestaurantReservationUserBooking', 'INRestaurantResolutionResult', 'INResumeWorkoutIntent', 'INResumeWorkoutIntentResponse', 'INRideCompletionStatus', 'INRideDriver', 'INRideFareLineItem', 'INRideOption', 'INRidePartySizeOption', 'INRideStatus', 'INRideVehicle', 'INSaveProfileInCarIntent', 'INSaveProfileInCarIntentResponse', 'INSearchCallHistoryIntent', 'INSearchCallHistoryIntentResponse', 'INSearchForAccountsIntent', 'INS
earchForAccountsIntentResponse', 'INSearchForBillsIntent', 'INSearchForBillsIntentResponse', 'INSearchForMediaIntent', 'INSearchForMediaIntentResponse', 'INSearchForMediaMediaItemResolutionResult', 'INSearchForMessagesIntent', 'INSearchForMessagesIntentResponse', 'INSearchForNotebookItemsIntent', 'INSearchForNotebookItemsIntentResponse', 'INSearchForPhotosIntent', 'INSearchForPhotosIntentResponse', 'INSeat', 'INSendMessageAttachment', 'INSendMessageIntent', 'INSendMessageIntentResponse', 'INSend
MessageRecipientResolutionResult', 'INSendPaymentCurrencyAmountResolutionResult', 'INSendPaymentIntent', 'INSendPaymentIntentResponse', 'INSendPaymentPayeeResolutionResult', 'INSendRideFeedbackIntent', 'INSendRideFeedbackIntentResponse', 'INSetAudioSourceInCarIntent', 'INSetAudioSourceInCarIntentResponse', 'INSetCarLockStatusIntent', 'INSetCarLockStatusIntentResponse', 'INSetClimateSettingsInCarIntent', 'INSetClimateSettingsInCarIntentResponse', 'INSetDefrosterSettingsInCarIntent', 'INSetDefrost
erSettingsInCarIntentResponse', 'INSetMessageAttributeIntent', 'INSetMessageAttributeIntentResponse', 'INSetProfileInCarIntent', 'INSetProfileInCarIntentResponse', 'INSetRadioStationIntent', 'INSetRadioStationIntentResponse', 'INSetSeatSettingsInCarIntent', 'INSetSeatSettingsInCarIntentResponse', 'INSetTaskAttributeIntent', 'INSetTaskAttributeIntentResponse', 'INSetTaskAttributeTemporalEventTriggerResolutionResult', 'INShortcut', 'INSnoozeTasksIntent', 'INSnoozeTasksIntentResponse', 'INSnoozeTas
ksTaskResolutionResult', 'INSpatialEventTrigger', 'INSpatialEventTriggerResolutionResult', 'INSpeakableString', 'INSpeakableStringResolutionResult', 'INSpeedResolutionResult', 'INStartAudioCallIntent', 'INStartAudioCallIntentResponse', 'INStartCallCallCapabilityResolutionResult', 'INStartCallCallRecordToCallBackResolutionResult', 'INStartCallContactResolutionResult', 'INStartCallIntent', 'INStartCallIntentResponse', 'INStartPhotoPlaybackIntent', 'INStartPhotoPlaybackIntentResponse', 'INStartVide
oCallIntent', 'INStartVideoCallIntentResponse', 'INStartWorkoutIntent', 'INStartWorkoutIntentResponse', 'INStringResolutionResult', 'INTask', 'INTaskList', 'INTaskListResolutionResult', 'INTaskPriorityResolutionResult', 'INTaskResolutionResult', 'INTaskStatusResolutionResult', 'INTemperatureResolutionResult', 'INTemporalEventTrigger', 'INTemporalEventTriggerResolutionResult', 'INTemporalEventTriggerTypeOptionsResolutionResult', 'INTermsAndConditions', 'INTextNoteContent', 'INTicketedEvent', 'INT
icketedEventReservation', 'INTimeIntervalResolutionResult', 'INTrainReservation', 'INTrainTrip', 'INTransferMoneyIntent', 'INTransferMoneyIntentResponse', 'INUIAddVoiceShortcutButton', 'INUIAddVoiceShortcutViewController', 'INUIEditVoiceShortcutViewController', 'INURLResolutionResult', 'INUpcomingMediaManager', 'INUpdateMediaAffinityIntent', 'INUpdateMediaAffinityIntentResponse', 'INUpdateMediaAffinityMediaItemResolutionResult', 'INUserContext', 'INVisualCodeTypeResolutionResult', 'INVocabulary'
, 'INVoiceShortcut', 'INVoiceShortcutCenter', 'INVolumeResolutionResult', 'INWorkoutGoalUnitTypeResolutionResult', 'INWorkoutLocationTypeResolutionResult', 'IOSurface', 'JSContext', 'JSManagedValue', 'JSValue', 'JSVirtualMachine', 'LAContext', 'LPLinkMetadata', 'LPLinkView', 'LPMetadataProvider', 'MCAdvertiserAssistant', 'MCBrowserViewController', 'MCNearbyServiceAdvertiser', 'MCNearbyServiceBrowser', 'MCPeerID', 'MCSession', 'MDLAnimatedMatrix4x4', 'MDLAnimatedQuaternion', 'MDLAnimatedQuaternio
nArray', 'MDLAnimatedScalar', 'MDLAnimatedScalarArray', 'MDLAnimatedValue', 'MDLAnimatedVector2', 'MDLAnimatedVector3', 'MDLAnimatedVector3Array', 'MDLAnimatedVector4', 'MDLAnimationBindComponent', 'MDLAreaLight', 'MDLAsset', 'MDLBundleAssetResolver', 'MDLCamera', 'MDLCheckerboardTexture', 'MDLColorSwatchTexture', 'MDLLight', 'MDLLightProbe', 'MDLMaterial', 'MDLMaterialProperty', 'MDLMaterialPropertyConnection', 'MDLMaterialPropertyGraph', 'MDLMaterialPropertyNode', 'MDLMatrix4x4Array', 'MDLMesh
', 'MDLMeshBufferData', 'MDLMeshBufferDataAllocator', 'MDLMeshBufferMap', 'MDLMeshBufferZoneDefault', 'MDLNoiseTexture', 'MDLNormalMapTexture', 'MDLObject', 'MDLObjectContainer', 'MDLPackedJointAnimation', 'MDLPathAssetResolver', 'MDLPhotometricLight', 'MDLPhysicallyPlausibleLight', 'MDLPhysicallyPlausibleScatteringFunction', 'MDLRelativeAssetResolver', 'MDLScatteringFunction', 'MDLSkeleton', 'MDLSkyCubeTexture', 'MDLStereoscopicCamera', 'MDLSubmesh', 'MDLSubmeshTopology', 'MDLTexture', 'MDLText
ureFilter', 'MDLTextureSampler', 'MDLTransform', 'MDLTransformMatrixOp', 'MDLTransformOrientOp', 'MDLTransformRotateOp', 'MDLTransformRotateXOp', 'MDLTransformRotateYOp', 'MDLTransformRotateZOp', 'MDLTransformScaleOp', 'MDLTransformStack', 'MDLTransformTranslateOp', 'MDLURLTexture', 'MDLVertexAttribute', 'MDLVertexAttributeData', 'MDLVertexBufferLayout', 'MDLVertexDescriptor', 'MDLVoxelArray', 'MFMailComposeViewController', 'MFMessageComposeViewController', 'MIDICIDeviceInfo', 'MIDICIDiscoveredN
ode', 'MIDICIDiscoveryManager', 'MIDICIProfile', 'MIDICIProfileState', 'MIDICIResponder', 'MIDICISession', 'MIDINetworkConnection', 'MIDINetworkHost', 'MIDINetworkSession', 'MKAnnotationView', 'MKCircle', 'MKCircleRenderer', 'MKCircleView', 'MKClusterAnnotation', 'MKCompassButton', 'MKDirections', 'MKDirectionsRequest', 'MKDirectionsResponse', 'MKDistanceFormatter', 'MKETAResponse', 'MKGeoJSONDecoder', 'MKGeoJSONFeature', 'MKGeodesicPolyline', 'MKGradientPolylineRenderer', 'MKLocalPointsOfIntere
stRequest', 'MKLocalSearch', 'MKLocalSearchCompleter', 'MKLocalSearchCompletion', 'MKLocalSearchRequest', 'MKLocalSearchResponse', 'MKMapCamera', 'MKMapCameraBoundary', 'MKMapCameraZoomRange', 'MKMapItem', 'MKMapSnapshot', 'MKMapSnapshotOptions', 'MKMapSnapshotter', 'MKMapView', 'MKMarkerAnnotationView', 'MKMultiPoint', 'MKMultiPolygon', 'MKMultiPolygonRenderer', 'MKMultiPolyline', 'MKMultiPolylineRenderer', 'MKOverlayPathRenderer', 'MKOverlayPathView', 'MKOverlayRenderer', 'MKOverlayView', 'MKP
inAnnotationView', 'MKPitchControl', 'MKPlacemark', 'MKPointAnnotation', 'MKPointOfInterestFilter', 'MKPolygon', 'MKPolygonRenderer', 'MKPolygonView', 'MKPolyline', 'MKPolylineRenderer', 'MKPolylineView', 'MKReverseGeocoder', 'MKRoute', 'MKRouteStep', 'MKScaleView', 'MKShape', 'MKTileOverlay', 'MKTileOverlayRenderer', 'MKUserLocation', 'MKUserLocationView', 'MKUserTrackingBarButtonItem', 'MKUserTrackingButton', 'MKZoomControl', 'MLArrayBatchProvider', 'MLCActivationDescriptor', 'MLCActivationLay
er', 'MLCArithmeticLayer', 'MLCBatchNormalizationLayer', 'MLCConcatenationLayer', 'MLCConvolutionDescriptor', 'MLCConvolutionLayer', 'MLCDevice', 'MLCDropoutLayer', 'MLCEmbeddingDescriptor', 'MLCEmbeddingLayer', 'MLCFullyConnectedLayer', 'MLCGramMatrixLayer', 'MLCGraph', 'MLCGroupNormalizationLayer', 'MLCInferenceGraph', 'MLCInstanceNormalizationLayer', 'MLCLSTMDescriptor', 'MLCLSTMLayer', 'MLCLayer', 'MLCLayerNormalizationLayer', 'MLCLossDescriptor', 'MLCLossLayer', 'MLCMatMulDescriptor', 'MLCM
atMulLayer', 'MLCMultiheadAttentionDescriptor', 'MLCMultiheadAttentionLayer', 'MLCPaddingLayer', 'MLCPoolingDescriptor', 'MLCPoolingLayer', 'MLCReductionLayer', 'MLCReshapeLayer', 'MLCSliceLayer', 'MLCSoftmaxLayer', 'MLCSplitLayer', 'MLCTensor', 'MLCTensorData', 'MLCTensorDescriptor', 'MLCTensorOptimizerDeviceData', 'MLCTensorParameter', 'MLCTrainingGraph', 'MLCTransposeLayer', 'MLCUpsampleLayer', 'MLCYOLOLossDescriptor', 'MLCYOLOLossLayer', 'MLDictionaryConstraint', 'MLDictionaryFeatureProvider
', 'MLFeatureDescription', 'MLFeatureValue', 'MLImageConstraint', 'MLImageSize', 'MLImageSizeConstraint', 'MLKey', 'MLMetricKey', 'MLModel', 'MLModelCollection', 'MLModelCollectionEntry', 'MLModelConfiguration', 'MLModelDescription', 'MLMultiArray', 'MLMultiArrayConstraint', 'MLMultiArrayShapeConstraint', 'MLNumericConstraint', 'MLParameterDescription', 'MLParameterKey', 'MLPredictionOptions', 'MLSequence', 'MLSequenceConstraint', 'MLTask', 'MLUpdateContext', 'MLUpdateProgressHandlers', 'MLUpdat
eTask', 'MPChangeLanguageOptionCommandEvent', 'MPChangePlaybackPositionCommand', 'MPChangePlaybackPositionCommandEvent', 'MPChangePlaybackRateCommand', 'MPChangePlaybackRateCommandEvent', 'MPChangeRepeatModeCommand', 'MPChangeRepeatModeCommandEvent', 'MPChangeShuffleModeCommand', 'MPChangeShuffleModeCommandEvent', 'MPContentItem', 'MPFeedbackCommand', 'MPFeedbackCommandEvent', 'MPMediaEntity', 'MPMediaItem', 'MPMediaItemArtwork', 'MPMediaItemCollection', 'MPMediaLibrary', 'MPMediaPickerControlle
r', 'MPMediaPlaylist', 'MPMediaPlaylistCreationMetadata', 'MPMediaPredicate', 'MPMediaPropertyPredicate', 'MPMediaQuery', 'MPMediaQuerySection', 'MPMovieAccessLog', 'MPMovieAccessLogEvent', 'MPMovieErrorLog', 'MPMovieErrorLogEvent', 'MPMoviePlayerController', 'MPMoviePlayerViewController', 'MPMusicPlayerApplicationController', 'MPMusicPlayerController', 'MPMusicPlayerControllerMutableQueue', 'MPMusicPlayerControllerQueue', 'MPMusicPlayerMediaItemQueueDescriptor', 'MPMusicPlayerPlayParameters', '
MPMusicPlayerPlayParametersQueueDescriptor', 'MPMusicPlayerQueueDescriptor', 'MPMusicPlayerStoreQueueDescriptor', 'MPNowPlayingInfoCenter', 'MPNowPlayingInfoLanguageOption', 'MPNowPlayingInfoLanguageOptionGroup', 'MPNowPlayingSession', 'MPPlayableContentManager', 'MPPlayableContentManagerContext', 'MPRatingCommand', 'MPRatingCommandEvent', 'MPRemoteCommand', 'MPRemoteCommandCenter', 'MPRemoteCommandEvent', 'MPSGraph', 'MPSGraphConvolution2DOpDescriptor', 'MPSGraphDepthwiseConvolution2DOpDescript
or', 'MPSGraphDevice', 'MPSGraphExecutionDescriptor', 'MPSGraphOperation', 'MPSGraphPooling2DOpDescriptor', 'MPSGraphShapedType', 'MPSGraphTensor', 'MPSGraphTensorData', 'MPSGraphVariableOp', 'MPSeekCommandEvent', 'MPSkipIntervalCommand', 'MPSkipIntervalCommandEvent', 'MPTimedMetadata', 'MPVolumeView', 'MSConversation', 'MSMessage', 'MSMessageLayout', 'MSMessageLiveLayout', 'MSMessageTemplateLayout', 'MSMessagesAppViewController', 'MSServiceAccount', 'MSSession', 'MSSetupSession', 'MSSticker', '
MSStickerBrowserView', 'MSStickerBrowserViewController', 'MSStickerView', 'MTKMesh', 'MTKMeshBuffer', 'MTKMeshBufferAllocator', 'MTKSubmesh', 'MTKTextureLoader', 'MTKView', 'MTLAccelerationStructureBoundingBoxGeometryDescriptor', 'MTLAccelerationStructureDescriptor', 'MTLAccelerationStructureGeometryDescriptor', 'MTLAccelerationStructureTriangleGeometryDescriptor', 'MTLArgument', 'MTLArgumentDescriptor', 'MTLArrayType', 'MTLAttribute', 'MTLAttributeDescriptor', 'MTLAttributeDescriptorArray', 'MT
LBinaryArchiveDescriptor', 'MTLBlitPassDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptorArray', 'MTLBufferLayoutDescriptor', 'MTLBufferLayoutDescriptorArray', 'MTLCaptureDescriptor', 'MTLCaptureManager', 'MTLCommandBufferDescriptor', 'MTLCompileOptions', 'MTLComputePassDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptorArray', 'MTLComputePipelineDescriptor', 'MTLComputePipelineReflec
tion', 'MTLCounterSampleBufferDescriptor', 'MTLDepthStencilDescriptor', 'MTLFunctionConstant', 'MTLFunctionConstantValues', 'MTLFunctionDescriptor', 'MTLHeapDescriptor', 'MTLIndirectCommandBufferDescriptor', 'MTLInstanceAccelerationStructureDescriptor', 'MTLIntersectionFunctionDescriptor', 'MTLIntersectionFunctionTableDescriptor', 'MTLLinkedFunctions', 'MTLPipelineBufferDescriptor', 'MTLPipelineBufferDescriptorArray', 'MTLPointerType', 'MTLPrimitiveAccelerationStructureDescriptor', 'MTLRasteriza
tionRateLayerArray', 'MTLRasterizationRateLayerDescriptor', 'MTLRasterizationRateMapDescriptor', 'MTLRasterizationRateSampleArray', 'MTLRenderPassAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptorArray', 'MTLRenderPassDepthAttachmentDescriptor', 'MTLRenderPassDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptorArray', 'MTLRenderPassStencilAttachmentDescriptor', 'MTLRenderPipelineColorAtt
achmentDescriptor', 'MTLRenderPipelineColorAttachmentDescriptorArray', 'MTLRenderPipelineDescriptor', 'MTLRenderPipelineReflection', 'MTLResourceStatePassDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptorArray', 'MTLSamplerDescriptor', 'MTLSharedEventHandle', 'MTLSharedEventListener', 'MTLSharedTextureHandle', 'MTLStageInputOutputDescriptor', 'MTLStencilDescriptor', 'MTLStructMember', 'MTLStructType', 'MTLTextureDescriptor',
 'MTLTextureReferenceType', 'MTLTileRenderPipelineColorAttachmentDescriptor', 'MTLTileRenderPipelineColorAttachmentDescriptorArray', 'MTLTileRenderPipelineDescriptor', 'MTLType', 'MTLVertexAttribute', 'MTLVertexAttributeDescriptor', 'MTLVertexAttributeDescriptorArray', 'MTLVertexBufferLayoutDescriptor', 'MTLVertexBufferLayoutDescriptorArray', 'MTLVertexDescriptor', 'MTLVisibleFunctionTableDescriptor', 'MXAnimationMetric', 'MXAppExitMetric', 'MXAppLaunchMetric', 'MXAppResponsivenessMetric', 'MXAp
pRunTimeMetric', 'MXAverage', 'MXBackgroundExitData', 'MXCPUExceptionDiagnostic', 'MXCPUMetric', 'MXCallStackTree', 'MXCellularConditionMetric', 'MXCrashDiagnostic', 'MXDiagnostic', 'MXDiagnosticPayload', 'MXDiskIOMetric', 'MXDiskWriteExceptionDiagnostic', 'MXDisplayMetric', 'MXForegroundExitData', 'MXGPUMetric', 'MXHangDiagnostic', 'MXHistogram', 'MXHistogramBucket', 'MXLocationActivityMetric', 'MXMemoryMetric', 'MXMetaData', 'MXMetric', 'MXMetricManager', 'MXMetricPayload', 'MXNetworkTransferM
etric', 'MXSignpostIntervalData', 'MXSignpostMetric', 'MXUnitAveragePixelLuminance', 'MXUnitSignalBars', 'MyClass', 'NCWidgetController', 'NEAppProxyFlow', 'NEAppProxyProvider', 'NEAppProxyProviderManager', 'NEAppProxyTCPFlow', 'NEAppProxyUDPFlow', 'NEAppPushManager', 'NEAppPushProvider', 'NEAppRule', 'NEDNSOverHTTPSSettings', 'NEDNSOverTLSSettings', 'NEDNSProxyManager', 'NEDNSProxyProvider', 'NEDNSProxyProviderProtocol', 'NEDNSSettings', 'NEDNSSettingsManager', 'NEEvaluateConnectionRule', 'NEFi
lterBrowserFlow', 'NEFilterControlProvider', 'NEFilterControlVerdict', 'NEFilterDataProvider', 'NEFilterDataVerdict', 'NEFilterFlow', 'NEFilterManager', 'NEFilterNewFlowVerdict', 'NEFilterPacketContext', 'NEFilterPacketProvider', 'NEFilterProvider', 'NEFilterProviderConfiguration', 'NEFilterRemediationVerdict', 'NEFilterReport', 'NEFilterRule', 'NEFilterSettings', 'NEFilterSocketFlow', 'NEFilterVerdict', 'NEFlowMetaData', 'NEHotspotConfiguration', 'NEHotspotConfigurationManager', 'NEHotspotEAPSe
ttings', 'NEHotspotHS20Settings', 'NEHotspotHelper', 'NEHotspotHelperCommand', 'NEHotspotHelperResponse', 'NEHotspotNetwork', 'NEIPv4Route', 'NEIPv4Settings', 'NEIPv6Route', 'NEIPv6Settings', 'NENetworkRule', 'NEOnDemandRule', 'NEOnDemandRuleConnect', 'NEOnDemandRuleDisconnect', 'NEOnDemandRuleEvaluateConnection', 'NEOnDemandRuleIgnore', 'NEPacket', 'NEPacketTunnelFlow', 'NEPacketTunnelNetworkSettings', 'NEPacketTunnelProvider', 'NEProvider', 'NEProxyServer', 'NEProxySettings', 'NETransparentPro
xyManager', 'NETransparentProxyNetworkSettings', 'NETransparentProxyProvider', 'NETunnelNetworkSettings', 'NETunnelProvider', 'NETunnelProviderManager', 'NETunnelProviderProtocol', 'NETunnelProviderSession', 'NEVPNConnection', 'NEVPNIKEv2SecurityAssociationParameters', 'NEVPNManager', 'NEVPNProtocol', 'NEVPNProtocolIKEv2', 'NEVPNProtocolIPSec', 'NFCISO15693CustomCommandConfiguration', 'NFCISO15693ReadMultipleBlocksConfiguration', 'NFCISO15693ReaderSession', 'NFCISO7816APDU', 'NFCNDEFMessage', 'N
FCNDEFPayload', 'NFCNDEFReaderSession', 'NFCReaderSession', 'NFCTagCommandConfiguration', 'NFCTagReaderSession', 'NFCVASCommandConfiguration', 'NFCVASReaderSession', 'NFCVASResponse', 'NIConfiguration', 'NIDiscoveryToken', 'NINearbyObject', 'NINearbyPeerConfiguration', 'NISession', 'NKAssetDownload', 'NKIssue', 'NKLibrary', 'NLEmbedding', 'NLGazetteer', 'NLLanguageRecognizer', 'NLModel', 'NLModelConfiguration', 'NLTagger', 'NLTokenizer', 'NSArray', 'NSAssertionHandler', 'NSAsynchronousFetchReque
st', 'NSAsynchronousFetchResult', 'NSAtomicStore', 'NSAtomicStoreCacheNode', 'NSAttributeDescription', 'NSAttributedString', 'NSAutoreleasePool', 'NSBatchDeleteRequest', 'NSBatchDeleteResult', 'NSBatchInsertRequest', 'NSBatchInsertResult', 'NSBatchUpdateRequest', 'NSBatchUpdateResult', 'NSBlockOperation', 'NSBundle', 'NSBundleResourceRequest', 'NSByteCountFormatter', 'NSCache', 'NSCachedURLResponse', 'NSCalendar', 'NSCharacterSet', 'NSCoder', 'NSCollectionLayoutAnchor', 'NSCollectionLayoutBounda
rySupplementaryItem', 'NSCollectionLayoutDecorationItem', 'NSCollectionLayoutDimension', 'NSCollectionLayoutEdgeSpacing', 'NSCollectionLayoutGroup', 'NSCollectionLayoutGroupCustomItem', 'NSCollectionLayoutItem', 'NSCollectionLayoutSection', 'NSCollectionLayoutSize', 'NSCollectionLayoutSpacing', 'NSCollectionLayoutSupplementaryItem', 'NSComparisonPredicate', 'NSCompoundPredicate', 'NSCondition', 'NSConditionLock', 'NSConstantString', 'NSConstraintConflict', 'NSCoreDataCoreSpotlightDelegate', 'NSC
ountedSet', 'NSData', 'NSDataAsset', 'NSDataDetector', 'NSDate', 'NSDateComponents', 'NSDateComponentsFormatter', 'NSDateFormatter', 'NSDateInterval', 'NSDateIntervalFormatter', 'NSDecimalNumber', 'NSDecimalNumberHandler', 'NSDerivedAttributeDescription', 'NSDictionary', 'NSDiffableDataSourceSectionSnapshot', 'NSDiffableDataSourceSectionTransaction', 'NSDiffableDataSourceSnapshot', 'NSDiffableDataSourceTransaction', 'NSDimension', 'NSDirectoryEnumerator', 'NSEnergyFormatter', 'NSEntityDescriptio
n', 'NSEntityMapping', 'NSEntityMigrationPolicy', 'NSEnumerator', 'NSError', 'NSEvent', 'NSException', 'NSExpression', 'NSExpressionDescription', 'NSExtensionContext', 'NSExtensionItem', 'NSFetchIndexDescription', 'NSFetchIndexElementDescription', 'NSFetchRequest', 'NSFetchRequestExpression', 'NSFetchedPropertyDescription', 'NSFetchedResultsController', 'NSFileAccessIntent', 'NSFileCoordinator', 'NSFileHandle', 'NSFileManager', 'NSFileProviderDomain', 'NSFileProviderExtension', 'NSFileProviderMa
nager', 'NSFileProviderService', 'NSFileSecurity', 'NSFileVersion', 'NSFileWrapper', 'NSFormatter', 'NSHTTPCookie', 'NSHTTPCookieStorage', 'NSHTTPURLResponse', 'NSHashTable', 'NSISO8601DateFormatter', 'NSIncrementalStore', 'NSIncrementalStoreNode', 'NSIndexPath', 'NSIndexSet', 'NSInputStream', 'NSInvocation', 'NSInvocationOperation', 'NSItemProvider', 'NSJSONSerialization', 'NSKeyedArchiver', 'NSKeyedUnarchiver', 'NSLayoutAnchor', 'NSLayoutConstraint', 'NSLayoutDimension', 'NSLayoutManager', 'NS
LayoutXAxisAnchor', 'NSLayoutYAxisAnchor', 'NSLengthFormatter', 'NSLinguisticTagger', 'NSListFormatter', 'NSLocale', 'NSLock', 'NSMachPort', 'NSManagedObject', 'NSManagedObjectContext', 'NSManagedObjectID', 'NSManagedObjectModel', 'NSMapTable', 'NSMappingModel', 'NSMassFormatter', 'NSMeasurement', 'NSMeasurementFormatter', 'NSMenuToolbarItem', 'NSMergeConflict', 'NSMergePolicy', 'NSMessagePort', 'NSMetadataItem', 'NSMetadataQuery', 'NSMetadataQueryAttributeValueTuple', 'NSMetadataQueryResultGrou
p', 'NSMethodSignature', 'NSMigrationManager', 'NSMutableArray', 'NSMutableAttributedString', 'NSMutableCharacterSet', 'NSMutableData', 'NSMutableDictionary', 'NSMutableIndexSet', 'NSMutableOrderedSet', 'NSMutableParagraphStyle', 'NSMutableSet', 'NSMutableString', 'NSMutableURLRequest', 'NSNetService', 'NSNetServiceBrowser', 'NSNotification', 'NSNotificationCenter', 'NSNotificationQueue', 'NSNull', 'NSNumber', 'NSNumberFormatter', 'NSObject', 'NSOperation', 'NSOperationQueue', 'NSOrderedCollecti
onChange', 'NSOrderedCollectionDifference', 'NSOrderedSet', 'NSOrthography', 'NSOutputStream', 'NSParagraphStyle', 'NSPersistentCloudKitContainer', 'NSPersistentCloudKitContainerEvent', 'NSPersistentCloudKitContainerEventRequest', 'NSPersistentCloudKitContainerEventResult', 'NSPersistentCloudKitContainerOptions', 'NSPersistentContainer', 'NSPersistentHistoryChange', 'NSPersistentHistoryChangeRequest', 'NSPersistentHistoryResult', 'NSPersistentHistoryToken', 'NSPersistentHistoryTransaction', 'NSP
ersistentStore', 'NSPersistentStoreAsynchronousResult', 'NSPersistentStoreCoordinator', 'NSPersistentStoreDescription', 'NSPersistentStoreRequest', 'NSPersistentStoreResult', 'NSPersonNameComponents', 'NSPersonNameComponentsFormatter', 'NSPipe', 'NSPointerArray', 'NSPointerFunctions', 'NSPort', 'NSPredicate', 'NSProcessInfo', 'NSProgress', 'NSPropertyDescription', 'NSPropertyListSerialization', 'NSPropertyMapping', 'NSProxy', 'NSPurgeableData', 'NSQueryGenerationToken', 'NSRecursiveLock', 'NSReg
ularExpression', 'NSRelationshipDescription', 'NSRelativeDateTimeFormatter', 'NSRunLoop', 'NSSaveChangesRequest', 'NSScanner', 'NSSecureUnarchiveFromDataTransformer', 'NSSet', 'NSShadow', 'NSSharingServicePickerToolbarItem', 'NSSharingServicePickerTouchBarItem', 'NSSimpleCString', 'NSSocketPort', 'NSSortDescriptor', 'NSStream', 'NSString', 'NSStringDrawingContext', 'NSTextAttachment', 'NSTextCheckingResult', 'NSTextContainer', 'NSTextStorage', 'NSTextTab', 'NSThread', 'NSTimeZone', 'NSTimer', 'N
SToolbarItem', 'NSURL', 'NSURLAuthenticationChallenge', 'NSURLCache', 'NSURLComponents', 'NSURLConnection', 'NSURLCredential', 'NSURLCredentialStorage', 'NSURLProtectionSpace', 'NSURLProtocol', 'NSURLQueryItem', 'NSURLRequest', 'NSURLResponse', 'NSURLSession', 'NSURLSessionConfiguration', 'NSURLSessionDataTask', 'NSURLSessionDownloadTask', 'NSURLSessionStreamTask', 'NSURLSessionTask', 'NSURLSessionTaskMetrics', 'NSURLSessionTaskTransactionMetrics', 'NSURLSessionUploadTask', 'NSURLSessionWebSocke
tMessage', 'NSURLSessionWebSocketTask', 'NSUUID', 'NSUbiquitousKeyValueStore', 'NSUndoManager', 'NSUnit', 'NSUnitAcceleration', 'NSUnitAngle', 'NSUnitArea', 'NSUnitConcentrationMass', 'NSUnitConverter', 'NSUnitConverterLinear', 'NSUnitDispersion', 'NSUnitDuration', 'NSUnitElectricCharge', 'NSUnitElectricCurrent', 'NSUnitElectricPotentialDifference', 'NSUnitElectricResistance', 'NSUnitEnergy', 'NSUnitFrequency', 'NSUnitFuelEfficiency', 'NSUnitIlluminance', 'NSUnitInformationStorage', 'NSUnitLengt
h', 'NSUnitMass', 'NSUnitPower', 'NSUnitPressure', 'NSUnitSpeed', 'NSUnitTemperature', 'NSUnitVolume', 'NSUserActivity', 'NSUserDefaults', 'NSValue', 'NSValueTransformer', 'NSXMLParser', 'NSXPCCoder', 'NSXPCConnection', 'NSXPCInterface', 'NSXPCListener', 'NSXPCListenerEndpoint', 'NWBonjourServiceEndpoint', 'NWEndpoint', 'NWHostEndpoint', 'NWPath', 'NWTCPConnection', 'NWTLSParameters', 'NWUDPSession', 'OSLogEntry', 'OSLogEntryActivity', 'OSLogEntryBoundary', 'OSLogEntryLog', 'OSLogEntrySignpost',
 'OSLogEnumerator', 'OSLogMessageComponent', 'OSLogPosition', 'OSLogStore', 'PDFAction', 'PDFActionGoTo', 'PDFActionNamed', 'PDFActionRemoteGoTo', 'PDFActionResetForm', 'PDFActionURL', 'PDFAnnotation', 'PDFAppearanceCharacteristics', 'PDFBorder', 'PDFDestination', 'PDFDocument', 'PDFOutline', 'PDFPage', 'PDFSelection', 'PDFThumbnailView', 'PDFView', 'PHAdjustmentData', 'PHAsset', 'PHAssetChangeRequest', 'PHAssetCollection', 'PHAssetCollectionChangeRequest', 'PHAssetCreationRequest', 'PHAssetReso
urce', 'PHAssetResourceCreationOptions', 'PHAssetResourceManager', 'PHAssetResourceRequestOptions', 'PHCachingImageManager', 'PHChange', 'PHChangeRequest', 'PHCloudIdentifier', 'PHCollection', 'PHCollectionList', 'PHCollectionListChangeRequest', 'PHContentEditingInput', 'PHContentEditingInputRequestOptions', 'PHContentEditingOutput', 'PHEditingExtensionContext', 'PHFetchOptions', 'PHFetchResult', 'PHFetchResultChangeDetails', 'PHImageManager', 'PHImageRequestOptions', 'PHLivePhoto', 'PHLivePhoto
EditingContext', 'PHLivePhotoRequestOptions', 'PHLivePhotoView', 'PHObject', 'PHObjectChangeDetails', 'PHObjectPlaceholder', 'PHPhotoLibrary', 'PHPickerConfiguration', 'PHPickerFilter', 'PHPickerResult', 'PHPickerViewController', 'PHProject', 'PHProjectChangeRequest', 'PHVideoRequestOptions', 'PKAddCarKeyPassConfiguration', 'PKAddPassButton', 'PKAddPassesViewController', 'PKAddPaymentPassRequest', 'PKAddPaymentPassRequestConfiguration', 'PKAddPaymentPassViewController', 'PKAddSecureElementPassCo
nfiguration', 'PKAddSecureElementPassViewController', 'PKAddShareablePassConfiguration', 'PKBarcodeEventConfigurationRequest', 'PKBarcodeEventMetadataRequest', 'PKBarcodeEventMetadataResponse', 'PKBarcodeEventSignatureRequest', 'PKBarcodeEventSignatureResponse', 'PKCanvasView', 'PKContact', 'PKDisbursementAuthorizationController', 'PKDisbursementRequest', 'PKDisbursementVoucher', 'PKDrawing', 'PKEraserTool', 'PKFloatRange', 'PKInk', 'PKInkingTool', 'PKIssuerProvisioningExtensionHandler', 'PKIssu
erProvisioningExtensionPassEntry', 'PKIssuerProvisioningExtensionPaymentPassEntry', 'PKIssuerProvisioningExtensionStatus', 'PKLabeledValue', 'PKLassoTool', 'PKObject', 'PKPass', 'PKPassLibrary', 'PKPayment', 'PKPaymentAuthorizationController', 'PKPaymentAuthorizationResult', 'PKPaymentAuthorizationViewController', 'PKPaymentButton', 'PKPaymentInformationEventExtension', 'PKPaymentMerchantSession', 'PKPaymentMethod', 'PKPaymentPass', 'PKPaymentRequest', 'PKPaymentRequestMerchantSessionUpdate', 'P
KPaymentRequestPaymentMethodUpdate', 'PKPaymentRequestShippingContactUpdate', 'PKPaymentRequestShippingMethodUpdate', 'PKPaymentRequestUpdate', 'PKPaymentSummaryItem', 'PKPaymentToken', 'PKPushCredentials', 'PKPushPayload', 'PKPushRegistry', 'PKSecureElementPass', 'PKShareablePassMetadata', 'PKShippingMethod', 'PKStroke', 'PKStrokePath', 'PKStrokePoint', 'PKSuicaPassProperties', 'PKTool', 'PKToolPicker', 'PKTransitPassProperties', 'QLFileThumbnailRequest', 'QLPreviewController', 'QLThumbnailGene
rationRequest', 'QLThumbnailGenerator', 'QLThumbnailProvider', 'QLThumbnailReply', 'QLThumbnailRepresentation', 'RPBroadcastActivityController', 'RPBroadcastActivityViewController', 'RPBroadcastConfiguration', 'RPBroadcastController', 'RPBroadcastHandler', 'RPBroadcastMP4ClipHandler', 'RPBroadcastSampleHandler', 'RPPreviewViewController', 'RPScreenRecorder', 'RPSystemBroadcastPickerView', 'SCNAccelerationConstraint', 'SCNAction', 'SCNAnimation', 'SCNAnimationEvent', 'SCNAnimationPlayer', 'SCNAud
ioPlayer', 'SCNAudioSource', 'SCNAvoidOccluderConstraint', 'SCNBillboardConstraint', 'SCNBox', 'SCNCamera', 'SCNCameraController', 'SCNCapsule', 'SCNCone', 'SCNConstraint', 'SCNCylinder', 'SCNDistanceConstraint', 'SCNFloor', 'SCNGeometry', 'SCNGeometryElement', 'SCNGeometrySource', 'SCNGeometryTessellator', 'SCNHitTestResult', 'SCNIKConstraint', 'SCNLevelOfDetail', 'SCNLight', 'SCNLookAtConstraint', 'SCNMaterial', 'SCNMaterialProperty', 'SCNMorpher', 'SCNNode', 'SCNParticlePropertyController', '
SCNParticleSystem', 'SCNPhysicsBallSocketJoint', 'SCNPhysicsBehavior', 'SCNPhysicsBody', 'SCNPhysicsConeTwistJoint', 'SCNPhysicsContact', 'SCNPhysicsField', 'SCNPhysicsHingeJoint', 'SCNPhysicsShape', 'SCNPhysicsSliderJoint', 'SCNPhysicsVehicle', 'SCNPhysicsVehicleWheel', 'SCNPhysicsWorld', 'SCNPlane', 'SCNProgram', 'SCNPyramid', 'SCNReferenceNode', 'SCNRenderer', 'SCNReplicatorConstraint', 'SCNScene', 'SCNSceneSource', 'SCNShape', 'SCNSkinner', 'SCNSliderConstraint', 'SCNSphere', 'SCNTechnique',
 'SCNText', 'SCNTimingFunction', 'SCNTorus', 'SCNTransaction', 'SCNTransformConstraint', 'SCNTube', 'SCNView', 'SFAcousticFeature', 'SFAuthenticationSession', 'SFContentBlockerManager', 'SFContentBlockerState', 'SFSafariViewController', 'SFSafariViewControllerConfiguration', 'SFSpeechAudioBufferRecognitionRequest', 'SFSpeechRecognitionRequest', 'SFSpeechRecognitionResult', 'SFSpeechRecognitionTask', 'SFSpeechRecognizer', 'SFSpeechURLRecognitionRequest', 'SFTranscription', 'SFTranscriptionSegment
', 'SFVoiceAnalytics', 'SK3DNode', 'SKAction', 'SKAdNetwork', 'SKArcadeService', 'SKAttribute', 'SKAttributeValue', 'SKAudioNode', 'SKCameraNode', 'SKCloudServiceController', 'SKCloudServiceSetupViewController', 'SKConstraint', 'SKCropNode', 'SKDownload', 'SKEffectNode', 'SKEmitterNode', 'SKFieldNode', 'SKKeyframeSequence', 'SKLabelNode', 'SKLightNode', 'SKMutablePayment', 'SKMutableTexture', 'SKNode', 'SKOverlay', 'SKOverlayAppClipConfiguration', 'SKOverlayAppConfiguration', 'SKOverlayConfigura
tion', 'SKOverlayTransitionContext', 'SKPayment', 'SKPaymentDiscount', 'SKPaymentQueue', 'SKPaymentTransaction', 'SKPhysicsBody', 'SKPhysicsContact', 'SKPhysicsJoint', 'SKPhysicsJointFixed', 'SKPhysicsJointLimit', 'SKPhysicsJointPin', 'SKPhysicsJointSliding', 'SKPhysicsJointSpring', 'SKPhysicsWorld', 'SKProduct', 'SKProductDiscount', 'SKProductStorePromotionController', 'SKProductSubscriptionPeriod', 'SKProductsRequest', 'SKProductsResponse', 'SKRange', 'SKReachConstraints', 'SKReceiptRefreshReq
uest', 'SKReferenceNode', 'SKRegion', 'SKRenderer', 'SKRequest', 'SKScene', 'SKShader', 'SKShapeNode', 'SKSpriteNode', 'SKStoreProductViewController', 'SKStoreReviewController', 'SKStorefront', 'SKTexture', 'SKTextureAtlas', 'SKTileDefinition', 'SKTileGroup', 'SKTileGroupRule', 'SKTileMapNode', 'SKTileSet', 'SKTransformNode', 'SKTransition', 'SKUniform', 'SKVideoNode', 'SKView', 'SKWarpGeometry', 'SKWarpGeometryGrid', 'SLComposeServiceViewController', 'SLComposeSheetConfigurationItem', 'SLCompos
eViewController', 'SLRequest', 'SNAudioFileAnalyzer', 'SNAudioStreamAnalyzer', 'SNClassification', 'SNClassificationResult', 'SNClassifySoundRequest', 'SRAmbientLightSample', 'SRApplicationUsage', 'SRDeletionRecord', 'SRDevice', 'SRDeviceUsageReport', 'SRFetchRequest', 'SRFetchResult', 'SRKeyboardMetrics', 'SRKeyboardProbabilityMetric', 'SRMessagesUsageReport', 'SRNotificationUsage', 'SRPhoneUsageReport', 'SRSensorReader', 'SRVisit', 'SRWebUsage', 'SRWristDetection', 'SSReadingList', 'STScreenTi
meConfiguration', 'STScreenTimeConfigurationObserver', 'STWebHistory', 'STWebpageController', 'TKBERTLVRecord', 'TKCompactTLVRecord', 'TKSimpleTLVRecord', 'TKSmartCard', 'TKSmartCardATR', 'TKSmartCardATRInterfaceGroup', 'TKSmartCardPINFormat', 'TKSmartCardSlot', 'TKSmartCardSlotManager', 'TKSmartCardToken', 'TKSmartCardTokenDriver', 'TKSmartCardTokenSession', 'TKSmartCardUserInteraction', 'TKSmartCardUserInteractionForPINOperation', 'TKSmartCardUserInteractionForSecurePINChange', 'TKSmartCardUse
rInteractionForSecurePINVerification', 'TKTLVRecord', 'TKToken', 'TKTokenAuthOperation', 'TKTokenConfiguration', 'TKTokenDriver', 'TKTokenDriverConfiguration', 'TKTokenKeyAlgorithm', 'TKTokenKeyExchangeParameters', 'TKTokenKeychainCertificate', 'TKTokenKeychainContents', 'TKTokenKeychainItem', 'TKTokenKeychainKey', 'TKTokenPasswordAuthOperation', 'TKTokenSession', 'TKTokenSmartCardPINAuthOperation', 'TKTokenWatcher', 'TWRequest', 'TWTweetComposeViewController', 'UIAcceleration', 'UIAccelerometer
', 'UIAccessibilityCustomAction', 'UIAccessibilityCustomRotor', 'UIAccessibilityCustomRotorItemResult', 'UIAccessibilityCustomRotorSearchPredicate', 'UIAccessibilityElement', 'UIAccessibilityLocationDescriptor', 'UIAction', 'UIActionSheet', 'UIActivity', 'UIActivityIndicatorView', 'UIActivityItemProvider', 'UIActivityItemsConfiguration', 'UIActivityViewController', 'UIAlertAction', 'UIAlertController', 'UIAlertView', 'UIApplication', 'UIApplicationShortcutIcon', 'UIApplicationShortcutItem', 'UIA
ttachmentBehavior', 'UIBackgroundConfiguration', 'UIBarAppearance', 'UIBarButtonItem', 'UIBarButtonItemAppearance', 'UIBarButtonItemGroup', 'UIBarButtonItemStateAppearance', 'UIBarItem', 'UIBezierPath', 'UIBlurEffect', 'UIButton', 'UICellAccessory', 'UICellAccessoryCheckmark', 'UICellAccessoryCustomView', 'UICellAccessoryDelete', 'UICellAccessoryDisclosureIndicator', 'UICellAccessoryInsert', 'UICellAccessoryLabel', 'UICellAccessoryMultiselect', 'UICellAccessoryOutlineDisclosure', 'UICellAccessor
yReorder', 'UICellConfigurationState', 'UICloudSharingController', 'UICollectionLayoutListConfiguration', 'UICollectionReusableView', 'UICollectionView', 'UICollectionViewCell', 'UICollectionViewCellRegistration', 'UICollectionViewCompositionalLayout', 'UICollectionViewCompositionalLayoutConfiguration', 'UICollectionViewController', 'UICollectionViewDiffableDataSource', 'UICollectionViewDiffableDataSourceReorderingHandlers', 'UICollectionViewDiffableDataSourceSectionSnapshotHandlers', 'UICollect
ionViewDropPlaceholder', 'UICollectionViewDropProposal', 'UICollectionViewFlowLayout', 'UICollectionViewFlowLayoutInvalidationContext', 'UICollectionViewFocusUpdateContext', 'UICollectionViewLayout', 'UICollectionViewLayoutAttributes', 'UICollectionViewLayoutInvalidationContext', 'UICollectionViewListCell', 'UICollectionViewPlaceholder', 'UICollectionViewSupplementaryRegistration', 'UICollectionViewTransitionLayout', 'UICollectionViewUpdateItem', 'UICollisionBehavior', 'UIColor', 'UIColorPickerV
iewController', 'UIColorWell', 'UICommand', 'UICommandAlternate', 'UIContextMenuConfiguration', 'UIContextMenuInteraction', 'UIContextualAction', 'UIControl', 'UICubicTimingParameters', 'UIDatePicker', 'UIDeferredMenuElement', 'UIDevice', 'UIDictationPhrase', 'UIDocument', 'UIDocumentBrowserAction', 'UIDocumentBrowserTransitionController', 'UIDocumentBrowserViewController', 'UIDocumentInteractionController', 'UIDocumentMenuViewController', 'UIDocumentPickerExtensionViewController', 'UIDocumentPi
ckerViewController', 'UIDragInteraction', 'UIDragItem', 'UIDragPreview', 'UIDragPreviewParameters', 'UIDragPreviewTarget', 'UIDropInteraction', 'UIDropProposal', 'UIDynamicAnimator', 'UIDynamicBehavior', 'UIDynamicItemBehavior', 'UIDynamicItemGroup', 'UIEvent', 'UIFeedbackGenerator', 'UIFieldBehavior', 'UIFocusAnimationCoordinator', 'UIFocusDebugger', 'UIFocusGuide', 'UIFocusMovementHint', 'UIFocusSystem', 'UIFocusUpdateContext', 'UIFont', 'UIFontDescriptor', 'UIFontMetrics', 'UIFontPickerViewCo
ntroller', 'UIFontPickerViewControllerConfiguration', 'UIGestureRecognizer', 'UIGraphicsImageRenderer', 'UIGraphicsImageRendererContext', 'UIGraphicsImageRendererFormat', 'UIGraphicsPDFRenderer', 'UIGraphicsPDFRendererContext', 'UIGraphicsPDFRendererFormat', 'UIGraphicsRenderer', 'UIGraphicsRendererContext', 'UIGraphicsRendererFormat', 'UIGravityBehavior', 'UIHoverGestureRecognizer', 'UIImage', 'UIImageAsset', 'UIImageConfiguration', 'UIImagePickerController', 'UIImageSymbolConfiguration', 'UIIm
ageView', 'UIImpactFeedbackGenerator', 'UIIndirectScribbleInteraction', 'UIInputView', 'UIInputViewController', 'UIInterpolatingMotionEffect', 'UIKey', 'UIKeyCommand', 'UILabel', 'UILargeContentViewerInteraction', 'UILayoutGuide', 'UILexicon', 'UILexiconEntry', 'UIListContentConfiguration', 'UIListContentImageProperties', 'UIListContentTextProperties', 'UIListContentView', 'UILocalNotification', 'UILocalizedIndexedCollation', 'UILongPressGestureRecognizer', 'UIManagedDocument', 'UIMarkupTextPrin
tFormatter', 'UIMenu', 'UIMenuController', 'UIMenuElement', 'UIMenuItem', 'UIMenuSystem', 'UIMotionEffect', 'UIMotionEffectGroup', 'UIMutableApplicationShortcutItem', 'UIMutableUserNotificationAction', 'UIMutableUserNotificationCategory', 'UINavigationBar', 'UINavigationBarAppearance', 'UINavigationController', 'UINavigationItem', 'UINib', 'UINotificationFeedbackGenerator', 'UIOpenURLContext', 'UIPageControl', 'UIPageViewController', 'UIPanGestureRecognizer', 'UIPasteConfiguration', 'UIPasteboar
d', 'UIPencilInteraction', 'UIPercentDrivenInteractiveTransition', 'UIPickerView', 'UIPinchGestureRecognizer', 'UIPointerEffect', 'UIPointerHighlightEffect', 'UIPointerHoverEffect', 'UIPointerInteraction', 'UIPointerLiftEffect', 'UIPointerLockState', 'UIPointerRegion', 'UIPointerRegionRequest', 'UIPointerShape', 'UIPointerStyle', 'UIPopoverBackgroundView', 'UIPopoverController', 'UIPopoverPresentationController', 'UIPresentationController', 'UIPress', 'UIPressesEvent', 'UIPreviewAction', 'UIPrev
iewActionGroup', 'UIPreviewInteraction', 'UIPreviewParameters', 'UIPreviewTarget', 'UIPrintFormatter', 'UIPrintInfo', 'UIPrintInteractionController', 'UIPrintPageRenderer', 'UIPrintPaper', 'UIPrinter', 'UIPrinterPickerController', 'UIProgressView', 'UIPushBehavior', 'UIReferenceLibraryViewController', 'UIRefreshControl', 'UIRegion', 'UIResponder', 'UIRotationGestureRecognizer', 'UIScene', 'UISceneActivationConditions', 'UISceneActivationRequestOptions', 'UISceneConfiguration', 'UISceneConnection
Options', 'UISceneDestructionRequestOptions', 'UISceneOpenExternalURLOptions', 'UISceneOpenURLOptions', 'UISceneSession', 'UISceneSizeRestrictions', 'UIScreen', 'UIScreenEdgePanGestureRecognizer', 'UIScreenMode', 'UIScreenshotService', 'UIScribbleInteraction', 'UIScrollView', 'UISearchBar', 'UISearchContainerViewController', 'UISearchController', 'UISearchDisplayController', 'UISearchSuggestionItem', 'UISearchTextField', 'UISearchToken', 'UISegmentedControl', 'UISelectionFeedbackGenerator', 'UIS
impleTextPrintFormatter', 'UISlider', 'UISnapBehavior', 'UISplitViewController', 'UISpringLoadedInteraction', 'UISpringTimingParameters', 'UIStackView', 'UIStatusBarManager', 'UIStepper', 'UIStoryboard', 'UIStoryboardPopoverSegue', 'UIStoryboardSegue', 'UIStoryboardUnwindSegueSource', 'UISwipeActionsConfiguration', 'UISwipeGestureRecognizer', 'UISwitch', 'UITabBar', 'UITabBarAppearance', 'UITabBarController', 'UITabBarItem', 'UITabBarItemAppearance', 'UITabBarItemStateAppearance', 'UITableView',
 'UITableViewCell', 'UITableViewController', 'UITableViewDiffableDataSource', 'UITableViewDropPlaceholder', 'UITableViewDropProposal', 'UITableViewFocusUpdateContext', 'UITableViewHeaderFooterView', 'UITableViewPlaceholder', 'UITableViewRowAction', 'UITapGestureRecognizer', 'UITargetedDragPreview', 'UITargetedPreview', 'UITextChecker', 'UITextDragPreviewRenderer', 'UITextDropProposal', 'UITextField', 'UITextFormattingCoordinator', 'UITextInputAssistantItem', 'UITextInputMode', 'UITextInputPasswo
rdRules', 'UITextInputStringTokenizer', 'UITextInteraction', 'UITextPlaceholder', 'UITextPosition', 'UITextRange', 'UITextSelectionRect', 'UITextView', 'UITitlebar', 'UIToolbar', 'UIToolbarAppearance', 'UITouch', 'UITraitCollection', 'UIUserNotificationAction', 'UIUserNotificationCategory', 'UIUserNotificationSettings', 'UIVibrancyEffect', 'UIVideoEditorController', 'UIView', 'UIViewConfigurationState', 'UIViewController', 'UIViewPrintFormatter', 'UIViewPropertyAnimator', 'UIVisualEffect', 'UIVi
sualEffectView', 'UIWebView', 'UIWindow', 'UIWindowScene', 'UIWindowSceneDestructionRequestOptions', 'UNCalendarNotificationTrigger', 'UNLocationNotificationTrigger', 'UNMutableNotificationContent', 'UNNotification', 'UNNotificationAction', 'UNNotificationAttachment', 'UNNotificationCategory', 'UNNotificationContent', 'UNNotificationRequest', 'UNNotificationResponse', 'UNNotificationServiceExtension', 'UNNotificationSettings', 'UNNotificationSound', 'UNNotificationTrigger', 'UNPushNotificationTr
igger', 'UNTextInputNotificationAction', 'UNTextInputNotificationResponse', 'UNTimeIntervalNotificationTrigger', 'UNUserNotificationCenter', 'UTType', 'VNBarcodeObservation', 'VNCircle', 'VNClassificationObservation', 'VNClassifyImageRequest', 'VNContour', 'VNContoursObservation', 'VNCoreMLFeatureValueObservation', 'VNCoreMLModel', 'VNCoreMLRequest', 'VNDetectBarcodesRequest', 'VNDetectContoursRequest', 'VNDetectFaceCaptureQualityRequest', 'VNDetectFaceLandmarksRequest', 'VNDetectFaceRectanglesR
equest', 'VNDetectHorizonRequest', 'VNDetectHumanBodyPoseRequest', 'VNDetectHumanHandPoseRequest', 'VNDetectHumanRectanglesRequest', 'VNDetectRectanglesRequest', 'VNDetectTextRectanglesRequest', 'VNDetectTrajectoriesRequest', 'VNDetectedObjectObservation', 'VNDetectedPoint', 'VNDocumentCameraScan', 'VNDocumentCameraViewController', 'VNFaceLandmarkRegion', 'VNFaceLandmarkRegion2D', 'VNFaceLandmarks', 'VNFaceLandmarks2D', 'VNFaceObservation', 'VNFeaturePrintObservation', 'VNGenerateAttentionBasedS
aliencyImageRequest', 'VNGenerateImageFeaturePrintRequest', 'VNGenerateObjectnessBasedSaliencyImageRequest', 'VNGenerateOpticalFlowRequest', 'VNGeometryUtils', 'VNHomographicImageRegistrationRequest', 'VNHorizonObservation', 'VNHumanBodyPoseObservation', 'VNHumanHandPoseObservation', 'VNImageAlignmentObservation', 'VNImageBasedRequest', 'VNImageHomographicAlignmentObservation', 'VNImageRegistrationRequest', 'VNImageRequestHandler', 'VNImageTranslationAlignmentObservation', 'VNObservation', 'VNPi
xelBufferObservation', 'VNPoint', 'VNRecognizeAnimalsRequest', 'VNRecognizeTextRequest', 'VNRecognizedObjectObservation', 'VNRecognizedPoint', 'VNRecognizedPointsObservation', 'VNRecognizedText', 'VNRecognizedTextObservation', 'VNRectangleObservation', 'VNRequest', 'VNSaliencyImageObservation', 'VNSequenceRequestHandler', 'VNStatefulRequest', 'VNTargetedImageRequest', 'VNTextObservation', 'VNTrackObjectRequest', 'VNTrackRectangleRequest', 'VNTrackingRequest', 'VNTrajectoryObservation', 'VNTransl
ationalImageRegistrationRequest', 'VNVector', 'VNVideoProcessor', 'VNVideoProcessorCadence', 'VNVideoProcessorFrameRateCadence', 'VNVideoProcessorRequestProcessingOptions', 'VNVideoProcessorTimeIntervalCadence', 'VSAccountApplicationProvider', 'VSAccountManager', 'VSAccountManagerResult', 'VSAccountMetadata', 'VSAccountMetadataRequest', 'VSAccountProviderResponse', 'VSSubscription', 'VSSubscriptionRegistrationCenter', 'WCSession', 'WCSessionFile', 'WCSessionFileTransfer', 'WCSessionUserInfoTrans
fer', 'WKBackForwardList', 'WKBackForwardListItem', 'WKContentRuleList', 'WKContentRuleListStore', 'WKContentWorld', 'WKContextMenuElementInfo', 'WKFindConfiguration', 'WKFindResult', 'WKFrameInfo', 'WKHTTPCookieStore', 'WKNavigation', 'WKNavigationAction', 'WKNavigationResponse', 'WKOpenPanelParameters', 'WKPDFConfiguration', 'WKPreferences', 'WKPreviewElementInfo', 'WKProcessPool', 'WKScriptMessage', 'WKSecurityOrigin', 'WKSnapshotConfiguration', 'WKUserContentController', 'WKUserScript', 'WKW
ebView', 'WKWebViewConfiguration', 'WKWebpagePreferences', 'WKWebsiteDataRecord', 'WKWebsiteDataStore', 'WKWindowFeatures', '__EntityAccessibilityWrapper'}
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_cocoa_builtins.py:16:COCOA_PRIMITIVES = {'ACErrorCode', 'ALCcontext_struct', 'ALCdevice_struct', 'ALMXGlyphEntry', 'ALMXHeader', 'API_UNAVAILABLE', 'AUChannelInfo', 'AUDependentParameter', 'AUDistanceAttenuationData', 'AUHostIdentifier', 'AUHostVersionIdentifier', 'AUInputSamplesInOutputCallbackStruct', 'AUMIDIEvent', 'AUMIDIOutputCallbackStruct', 'AUNodeInteraction', 'AUNodeRenderCallback', 'AUNumVersion', 'AUParameterAutomationEvent',
 'AUParameterEvent', 'AUParameterMIDIMapping', 'AUPreset', 'AUPresetEvent', 'AURecordedParameterEvent', 'AURenderCallbackStruct', 'AURenderEventHeader', 'AUSamplerBankPresetData', 'AUSamplerInstrumentData', 'AnchorPoint', 'AnchorPointTable', 'AnkrTable', 'AudioBalanceFade', 'AudioBuffer', 'AudioBufferList', 'AudioBytePacketTranslation', 'AudioChannelDescription', 'AudioChannelLayout', 'AudioClassDescription', 'AudioCodecMagicCookieInfo', 'AudioCodecPrimeInfo', 'AudioComponentDescription', 'Audio
ComponentPlugInInterface', 'AudioConverterPrimeInfo', 'AudioFileMarker', 'AudioFileMarkerList', 'AudioFilePacketTableInfo', 'AudioFileRegion', 'AudioFileRegionList', 'AudioFileTypeAndFormatID', 'AudioFile_SMPTE_Time', 'AudioFormatInfo', 'AudioFormatListItem', 'AudioFramePacketTranslation', 'AudioIndependentPacketTranslation', 'AudioOutputUnitMIDICallbacks', 'AudioOutputUnitStartAtTimeParams', 'AudioPacketDependencyInfoTranslation', 'AudioPacketRangeByteCountTranslation', 'AudioPacketRollDistance
Translation', 'AudioPanningInfo', 'AudioQueueBuffer', 'AudioQueueChannelAssignment', 'AudioQueueLevelMeterState', 'AudioQueueParameterEvent', 'AudioStreamBasicDescription', 'AudioStreamPacketDescription', 'AudioTimeStamp', 'AudioUnitCocoaViewInfo', 'AudioUnitConnection', 'AudioUnitExternalBuffer', 'AudioUnitFrequencyResponseBin', 'AudioUnitMIDIControlMapping', 'AudioUnitMeterClipping', 'AudioUnitNodeConnection', 'AudioUnitOtherPluginDesc', 'AudioUnitParameter', 'AudioUnitParameterEvent', 'AudioU
nitParameterHistoryInfo', 'AudioUnitParameterInfo', 'AudioUnitParameterNameInfo', 'AudioUnitParameterStringFromValue', 'AudioUnitParameterValueFromString', 'AudioUnitParameterValueName', 'AudioUnitParameterValueTranslation', 'AudioUnitPresetMAS_SettingData', 'AudioUnitPresetMAS_Settings', 'AudioUnitProperty', 'AudioUnitRenderContext', 'AudioValueRange', 'AudioValueTranslation', 'AuthorizationOpaqueRef', 'BslnFormat0Part', 'BslnFormat1Part', 'BslnFormat2Part', 'BslnFormat3Part', 'BslnTable', 'CAB
arBeatTime', 'CAFAudioDescription', 'CAFChunkHeader', 'CAFDataChunk', 'CAFFileHeader', 'CAFInfoStrings', 'CAFInstrumentChunk', 'CAFMarker', 'CAFMarkerChunk', 'CAFOverviewChunk', 'CAFOverviewSample', 'CAFPacketTableHeader', 'CAFPeakChunk', 'CAFPositionPeak', 'CAFRegion', 'CAFRegionChunk', 'CAFStringID', 'CAFStrings', 'CAFUMIDChunk', 'CAF_SMPTE_Time', 'CAF_UUID_ChunkHeader', 'CA_BOXABLE', 'CFHostClientContext', 'CFNetServiceClientContext', 'CF_BRIDGED_MUTABLE_TYPE', 'CF_BRIDGED_TYPE', 'CF_RELATED_
TYPE', 'CGAffineTransform', 'CGDataConsumerCallbacks', 'CGDataProviderDirectCallbacks', 'CGDataProviderSequentialCallbacks', 'CGFunctionCallbacks', 'CGPDFArray', 'CGPDFContentStream', 'CGPDFDictionary', 'CGPDFObject', 'CGPDFOperatorTable', 'CGPDFScanner', 'CGPDFStream', 'CGPDFString', 'CGPathElement', 'CGPatternCallbacks', 'CGVector', 'CG_BOXABLE', 'CLLocationCoordinate2D', 'CM_BRIDGED_TYPE', 'CTParagraphStyleSetting', 'CVPlanarComponentInfo', 'CVPlanarPixelBufferInfo', 'CVPlanarPixelBufferInfo_
YCbCrBiPlanar', 'CVPlanarPixelBufferInfo_YCbCrPlanar', 'CVSMPTETime', 'CV_BRIDGED_TYPE', 'ComponentInstanceRecord', 'ExtendedAudioFormatInfo', 'ExtendedControlEvent', 'ExtendedNoteOnEvent', 'ExtendedTempoEvent', 'FontVariation', 'GCQuaternion', 'GKBox', 'GKQuad', 'GKTriangle', 'GLKEffectPropertyPrv', 'HostCallbackInfo', 'IIO_BRIDGED_TYPE', 'IUnknownVTbl', 'JustDirectionTable', 'JustPCAction', 'JustPCActionSubrecord', 'JustPCConditionalAddAction', 'JustPCDecompositionAction', 'JustPCDuctilityActi
on', 'JustPCGlyphRepeatAddAction', 'JustPostcompTable', 'JustTable', 'JustWidthDeltaEntry', 'JustWidthDeltaGroup', 'KernIndexArrayHeader', 'KernKerningPair', 'KernOffsetTable', 'KernOrderedListEntry', 'KernOrderedListHeader', 'KernSimpleArrayHeader', 'KernStateEntry', 'KernStateHeader', 'KernSubtableHeader', 'KernTableHeader', 'KernVersion0Header', 'KernVersion0SubtableHeader', 'KerxAnchorPointAction', 'KerxControlPointAction', 'KerxControlPointEntry', 'KerxControlPointHeader', 'KerxCoordinateAc
tion', 'KerxIndexArrayHeader', 'KerxKerningPair', 'KerxOrderedListEntry', 'KerxOrderedListHeader', 'KerxSimpleArrayHeader', 'KerxStateEntry', 'KerxStateHeader', 'KerxSubtableHeader', 'KerxTableHeader', 'LcarCaretClassEntry', 'LcarCaretTable', 'LtagStringRange', 'LtagTable', 'MDL_CLASS_EXPORT', 'MIDICIDeviceIdentification', 'MIDIChannelMessage', 'MIDIControlTransform', 'MIDIDriverInterface', 'MIDIEventList', 'MIDIEventPacket', 'MIDIIOErrorNotification', 'MIDIMessage_128', 'MIDIMessage_64', 'MIDIM
essage_96', 'MIDIMetaEvent', 'MIDINoteMessage', 'MIDINotification', 'MIDIObjectAddRemoveNotification', 'MIDIObjectPropertyChangeNotification', 'MIDIPacket', 'MIDIPacketList', 'MIDIRawData', 'MIDISysexSendRequest', 'MIDIThruConnectionEndpoint', 'MIDIThruConnectionParams', 'MIDITransform', 'MIDIValueMap', 'MPSDeviceOptions', 'MixerDistanceParams', 'MortChain', 'MortContextualSubtable', 'MortFeatureEntry', 'MortInsertionSubtable', 'MortLigatureSubtable', 'MortRearrangementSubtable', 'MortSubtable',
 'MortSwashSubtable', 'MortTable', 'MorxChain', 'MorxContextualSubtable', 'MorxInsertionSubtable', 'MorxLigatureSubtable', 'MorxRearrangementSubtable', 'MorxSubtable', 'MorxTable', 'MusicDeviceNoteParams', 'MusicDeviceStdNoteParams', 'MusicEventUserData', 'MusicTrackLoopInfo', 'NoteParamsControlValue', 'OpaqueAudioComponent', 'OpaqueAudioComponentInstance', 'OpaqueAudioConverter', 'OpaqueAudioQueue', 'OpaqueAudioQueueProcessingTap', 'OpaqueAudioQueueTimeline', 'OpaqueExtAudioFile', 'OpaqueJSClas
s', 'OpaqueJSContext', 'OpaqueJSContextGroup', 'OpaqueJSPropertyNameAccumulator', 'OpaqueJSPropertyNameArray', 'OpaqueJSString', 'OpaqueJSValue', 'OpaqueMusicEventIterator', 'OpaqueMusicPlayer', 'OpaqueMusicSequence', 'OpaqueMusicTrack', 'OpbdSideValues', 'OpbdTable', 'ParameterEvent', 'PropLookupSegment', 'PropLookupSingle', 'PropTable', 'ROTAGlyphEntry', 'ROTAHeader', 'SCNMatrix4', 'SCNVector3', 'SCNVector4', 'SFNTLookupArrayHeader', 'SFNTLookupBinarySearchHeader', 'SFNTLookupSegment', 'SFNTLo
okupSegmentHeader', 'SFNTLookupSingle', 'SFNTLookupSingleHeader', 'SFNTLookupTable', 'SFNTLookupTrimmedArrayHeader', 'SFNTLookupVectorHeader', 'SMPTETime', 'STClassTable', 'STEntryOne', 'STEntryTwo', 'STEntryZero', 'STHeader', 'STXEntryOne', 'STXEntryTwo', 'STXEntryZero', 'STXHeader', 'ScheduledAudioFileRegion', 'ScheduledAudioSlice', 'SecKeychainAttribute', 'SecKeychainAttributeInfo', 'SecKeychainAttributeList', 'TrakTable', 'TrakTableData', 'TrakTableEntry', 'UIAccessibility', 'VTDecompression
OutputCallbackRecord', 'VTInt32Point', 'VTInt32Size', '_CFHTTPAuthentication', '_GLKMatrix2', '_GLKMatrix3', '_GLKMatrix4', '_GLKQuaternion', '_GLKVector2', '_GLKVector3', '_GLKVector4', '_GLKVertexAttributeParameters', '_MTLAxisAlignedBoundingBox', '_MTLPackedFloat3', '_MTLPackedFloat4x3', '_NSRange', '_NSZone', '__CFHTTPMessage', '__CFHost', '__CFNetDiagnostic', '__CFNetService', '__CFNetServiceBrowser', '__CFNetServiceMonitor', '__CFXMLNode', '__CFXMLParser', '__GLsync', '__SecAccess', '__Sec
Certificate', '__SecIdentity', '__SecKey', '__SecRandom', '__attribute__', 'gss_OID_desc_struct', 'gss_OID_set_desc_struct', 'gss_auth_identity', 'gss_buffer_desc_struct', 'gss_buffer_set_desc_struct', 'gss_channel_bindings_struct', 'gss_cred_id_t_desc_struct', 'gss_ctx_id_t_desc_struct', 'gss_iov_buffer_desc_struct', 'gss_krb5_cfx_keydata', 'gss_krb5_lucid_context_v1', 'gss_krb5_lucid_context_version', 'gss_krb5_lucid_key', 'gss_krb5_rfc1964_keydata', 'gss_name_t_desc_struct', 'opaqueCMBufferQu
eueTriggerToken', 'sfntCMapEncoding', 'sfntCMapExtendedSubHeader', 'sfntCMapHeader', 'sfntCMapSubHeader', 'sfntDescriptorHeader', 'sfntDirectory', 'sfntDirectoryEntry', 'sfntFeatureHeader', 'sfntFeatureName', 'sfntFontDescriptor', 'sfntFontFeatureSetting', 'sfntFontRunFeature', 'sfntInstance', 'sfntNameHeader', 'sfntNameRecord', 'sfntVariationAxis', 'sfntVariationHeader'}
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_csound_builtins.py:1333:schedule
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_csound_builtins.py:1334:schedulek
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:130:        'jobject',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:1938:        '_admin_refreshconnector',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:1939:        '_admin_refreshsecurity',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:2009:        'admin_refreshlicensing',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:2010:        'admin_refreshsecurity',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:2428:        'event_schedule',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:4101:        'jobjectisa',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:4459:        'refresh',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_mql_builtins.py:234:    'RefreshRates',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:1044:    'schedule',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_openedge_builtins.py:1953:    'REFRESH',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_openedge_builtins.py:1954:    'REFRESH-AUDIT-POLICY',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_openedge_builtins.py:1955:    'REFRESHABLE',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_php_builtins.py:1299:          'ldap_exop_refresh',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_php_builtins.py:2969:              'wincache_refresh_if_changed',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_postgres_builtins.py:330:    'REFRESH',
tradingbot-backend\.venv\Lib\site-packages\rich\console.py:1170:        refresh_per_second: float = 12.5,
tradingbot-backend\.venv\Lib\site-packages\rich\console.py:1179:            refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
tradingbot-backend\.venv\Lib\site-packages\rich\console.py:1192:            refresh_per_second=refresh_per_second,
tradingbot-backend\.venv\Lib\site-packages\rich\layout.py:328:    def refresh_screen(self, console: "Console", layout_name: str) -> None:
tradingbot-backend\.venv\Lib\site-packages\rich\layout.py:329:        """Refresh a sub-layout.
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:22:class _RefreshThread(Thread):
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:23:    """A thread that calls refresh() at regular intervals."""
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:25:    def __init__(self, live: "Live", refresh_per_second: float) -> None:
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:27:        self.refresh_per_second = refresh_per_second
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:35:        while not self.done.wait(1 / self.refresh_per_second):
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:38:                    self.live.refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:48:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()` or `update()` with refresh flag. Defaults to True
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:49:        refresh_per_second (float, optional): Number of times per second to refresh the live display. Defaults to 4.
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:63:        auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:64:        refresh_per_second: float = 4,
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:71:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:84:        self.auto_refresh = auto_refresh
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:88:        self._refresh_thread: Optional[_RefreshThread] = None
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:89:        self.refresh_per_second = refresh_per_second
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:111:    def start(self, refresh: bool = False) -> None:
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:115:            refresh (bool, optional): Also refresh. Defaults to False.
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:131:            if refresh:
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:133:                    self.refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:135:                    # If refresh fails, we want to stop the redirection of sys.stderr,
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:141:            if self.auto_refresh:
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:142:                self._refresh_thread = _RefreshThread(self, self.refresh_per_second)
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:143:                self._refresh_thread.start()
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:157:            if self.auto_refresh and self._refresh_thread is not None:
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:158:                self._refresh_thread.stop()
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:159:                self._refresh_thread = None
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:165:                        self.refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:180:        self.start(refresh=self._renderable is not None)
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:226:    def update(self, renderable: RenderableType, *, refresh: bool = False) -> None:
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:231:            refresh (bool, optional): Refresh the display. Defaults to False.
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:237:            if refresh:
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:238:                self.refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:240:    def refresh(self) -> None:
tradingbot-backend\.venv\Lib\site-packages\rich\live.py:246:                    self.console._live_stack[0].refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:88:        self.progress.update(self.task_id, completed=self.completed, refresh=True)
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:109:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:113:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:131:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:134:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:164:        auto_refresh=auto_refresh,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:168:        refresh_per_second=refresh_per_second or 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:311:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:315:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:328:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:331:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:359:        auto_refresh=auto_refresh,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:363:        refresh_per_second=refresh_per_second or 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:382:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:386:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:407:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:411:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:431:    auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:435:    refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:453:        auto_refresh (bool, optional): Automatic refresh, disable to force a refresh after each iteration. Default is True.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:456:        refresh_per_second (float): Number of times per second to refresh the progress information. Defaults to 10.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:486:        auto_refresh=auto_refresh,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:490:        refresh_per_second=refresh_per_second or 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:510:    max_refresh: Optional[float] = None
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:531:        if self.max_refresh is not None and not task.completed:
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:537:                if timestamp + self.max_refresh > current_time:
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:780:    # Only refresh twice a second to prevent jitter
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:781:    max_refresh = 0.5
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1066:        auto_refresh (bool, optional): Enable auto refresh. If disabled, you will need to call `refresh()`.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1067:        refresh_per_second (Optional[float], optional): Number of times per second to refresh the progress information or None to use default (10). Defaults to None.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1081:        auto_refresh: bool = True,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1082:        refresh_per_second: float = 10,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1091:        assert refresh_per_second > 0, "refresh_per_second must be > 0"
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1102:            auto_refresh=auto_refresh,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1103:            refresh_per_second=refresh_per_second,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1171:            self.live.start(refresh=True)
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1223:        if self.live.auto_refresh:
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1230:            refresh = self.refresh
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1234:                refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1425:        refresh: bool = False,
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1437:            refresh (bool): Force a refresh of progress information. Default is False.
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1474:        if refresh:
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1475:            self.refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1514:        self.refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1546:    def refresh(self) -> None:
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1547:        """Refresh (render) the progress information."""
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1549:            self.live.refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\progress.py:1639:        self.refresh()
tradingbot-backend\.venv\Lib\site-packages\rich\prompt.py:345:                run_job()
tradingbot-backend\.venv\Lib\site-packages\rich\spinner.py:130:    with Live(all_spinners, refresh_per_second=20) as live:
tradingbot-backend\.venv\Lib\site-packages\rich\status.py:20:        refresh_per_second (float, optional): Number of refreshes per second. Defaults to 12.5.
tradingbot-backend\.venv\Lib\site-packages\rich\status.py:31:        refresh_per_second: float = 12.5,
tradingbot-backend\.venv\Lib\site-packages\rich\status.py:40:            refresh_per_second=refresh_per_second,
tradingbot-backend\.venv\Lib\site-packages\rich\status.py:79:            self._live.update(self.renderable, refresh=True)
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:193:    "micronesia": "🇫🇲",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:3147:    "flag_for_micronesia": "🇫🇲",
tradingbot-backend\.venv\Lib\site-packages\setuptools\warnings.py:93:    most appropriate tool for the job...
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\text_file.py:199:                    # the job of a later step (rstrip_ws) to remove it --
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\command\build.py:39:        ('parallel=', 'j', "number of parallel build jobs"),
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\command\build_ext.py:93:        ('parallel=', 'j', "number of parallel build jobs"),
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\base.py:543:        language_map, and language_order to do the job.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\msvc.py:10:# hacked by Robin Becker and Thomas Heller to do a better job of
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\tests\test_build_ext.py:87:    # TODO: can the file be scheduled for deletion?
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\autocommand\autoasync.py:30:    - The function is a coroutine, which needs to be scheduled in the event
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\autocommand\autoasync.py:35:    The function is therefore called unconditionally and scheduled in the event
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\jaraco\text\__init__.py:269:    Acronyms should be retained
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\packaging\licenses\_spdx.py:216:    'cronyx': {'id': 'Cronyx', 'deprecated': False},
tradingbot-backend\.venv\Lib\site-packages\supabase\lib\client_options.py:25:    auto_refresh_token: bool = True
tradingbot-backend\.venv\Lib\site-packages\supabase\lib\client_options.py:26:    """Automatically refreshes the token for logged in users."""
tradingbot-backend\.venv\Lib\site-packages\supabase\lib\client_options.py:52:        auto_refresh_token: Optional[bool] = None,
tradingbot-backend\.venv\Lib\site-packages\supabase\lib\client_options.py:68:        client_options.auto_refresh_token = (
tradingbot-backend\.venv\Lib\site-packages\supabase\lib\client_options.py:69:            auto_refresh_token or self.auto_refresh_token
tradingbot-backend\.venv\Lib\site-packages\supabase\_async\auth_client.py:21:        auto_refresh_token: bool = True,
tradingbot-backend\.venv\Lib\site-packages\supabase\_async\auth_client.py:36:            auto_refresh_token=auto_refresh_token,
tradingbot-backend\.venv\Lib\site-packages\supabase\_async\client.py:224:            auto_refresh_token=client_options.auto_refresh_token,
tradingbot-backend\.venv\Lib\site-packages\supabase\_async\client.py:268:        if event in ["SIGNED_IN", "TOKEN_REFRESHED", "SIGNED_OUT"]:
tradingbot-backend\.venv\Lib\site-packages\supabase\_sync\auth_client.py:21:        auto_refresh_token: bool = True,
tradingbot-backend\.venv\Lib\site-packages\supabase\_sync\auth_client.py:36:            auto_refresh_token=auto_refresh_token,
tradingbot-backend\.venv\Lib\site-packages\supabase\_sync\client.py:220:            auto_refresh_token=client_options.auto_refresh_token,
tradingbot-backend\.venv\Lib\site-packages\supabase\_sync\client.py:264:        if event in ["SIGNED_IN", "TOKEN_REFRESHED", "SIGNED_OUT"]:
tradingbot-backend\.venv\Lib\site-packages\virtualenv\create\pyenv_cfg.py:45:    def refresh(self):
tradingbot-backend\.venv\Lib\site-packages\virtualenv\create\via_global_ref\venv.py:89:        venv_content = copy(self.pyenv_cfg.refresh())
tradingbot-backend\.venv\Lib\site-packages\websockets\protocol.py:488:        If it returns :obj:`True`, schedule closing the TCP connection after a
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:83:    """Schedule the timeout at absolute time.
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:122:    # TimeoutError is raised immediately when scheduled
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:182:        """Reject scheduled timeout if any."""
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:199:        Raise RuntimeError if shift is called when deadline is not scheduled
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:203:            raise RuntimeError("cannot shift timeout if deadline is not scheduled")
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:218:            raise RuntimeError("cannot reschedule after exit from context manager")
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:220:            raise RuntimeError("cannot reschedule expired timeout")
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:225:            self._reschedule()
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:227:    def _reschedule(self) -> None:
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\async_timeout.py:247:        self._reschedule()
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\server.py:151:        # schedules its execution, and the moment the handler starts running.
tradingbot-backend\.venv\Lib\site-packages\_pytest\fixtures.py:680:            self._schedule_finalizers(fixturedef, subrequest)
tradingbot-backend\.venv\Lib\site-packages\_pytest\fixtures.py:682:    def _schedule_finalizers(
tradingbot-backend\.venv\Lib\site-packages\_pytest\fixtures.py:782:    def _schedule_finalizers(
tradingbot-backend\.venv\Lib\site-packages\_pytest\fixtures.py:792:        super()._schedule_finalizers(fixturedef, subrequest)
tradingbot-backend\.venv\Lib\site-packages\_pytest\hookspec.py:493:    :param nextitem: The scheduled-to-be-next test item (or None if this is the end my friend).
tradingbot-backend\.venv\Lib\site-packages\_pytest\hookspec.py:562:        The scheduled-to-be-next test item (None if no further test item is
tradingbot-backend\.venv\Lib\site-packages\_pytest\hookspec.py:563:        scheduled). This argument is used to perform exact teardowns, i.e.
tradingbot-backend\.venv\Lib\site-packages\_pytest\skipping.py:231:# Saves the xfail mark evaluation. Can be refreshed during call if None.
tradingbot-backend\.venv\Lib\site-packages\_pytest\_py\path.py:1354:                # https://ci.appveyor.com/project/pytestbot/py/build/1.0.21/job/ffi85j4c0lqwsfwa
tradingbot-backend\.venv\Lib\site-packages\_pytest\_py\path.py:1371:            """Check if path denotes directory scheduled for removal"""
tradingbot-backend\.venv\Lib\site-packages\_pytest\_py\path.py:1396:                    # and scheduled for removal to avoid another thread/process
tradingbot-backend\models\signal_models.py:55:    force_refresh: bool = Field(False, description="Tvinga ny signal generation")
tradingbot-backend\rest\margin.py:353:                await svc.refresh()
tradingbot-backend\rest\margin.py:427:                    await svc.refresh()
tradingbot-backend\rest\order_validator.py:148:            # Använd befintlig cache istället för att köra refresh synkront
tradingbot-backend\rest\routes.py:600:                await _svc.refresh()
tradingbot-backend\rest\routes.py:2427:        # Aggregat hanteras av scheduler/metrics-moduler
tradingbot-backend\rest\routes.py:2453:        await sym_svc.refresh()
tradingbot-backend\rest\routes.py:2718:            await svc.refresh()
tradingbot-backend\rest\routes.py:3805:        await svc.refresh()
tradingbot-backend\rest\routes.py:4014:            "scheduler_running": False,
tradingbot-backend\rest\routes.py:4021:            from services.scheduler import scheduler
tradingbot-backend\rest\routes.py:4023:            caps["scheduler_running"] = bool(scheduler.is_running())
tradingbot-backend\rest\routes.py:4089:        # Enforce retention efter clear (kan även köras via scheduler)
tradingbot-backend\rest\routes.py:4502:# --- Refresh Manager endpoints ---
tradingbot-backend\rest\routes.py:4503:@router.get("/refresh-manager/status")
tradingbot-backend\rest\routes.py:4504:async def get_refresh_manager_status(_: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4505:    """Hämta status för RefreshManager."""
tradingbot-backend\rest\routes.py:4507:        from services.refresh_manager import get_refresh_manager
tradingbot-backend\rest\routes.py:4509:        manager = get_refresh_manager()
tradingbot-backend\rest\routes.py:4511:        intervals = manager.get_refresh_intervals_summary()
tradingbot-backend\rest\routes.py:4519:        logger.exception(f"Fel vid hämtning av refresh manager status: {e}")
tradingbot-backend\rest\routes.py:4523:@router.post("/refresh-manager/force-refresh")
tradingbot-backend\rest\routes.py:4524:async def force_refresh_panel(request: dict[str, Any], _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4525:    """Tvinga refresh för en specifik panel eller alla."""
tradingbot-backend\rest\routes.py:4528:        from services.refresh_manager import get_refresh_manager
tradingbot-backend\rest\routes.py:4530:        manager = get_refresh_manager()
tradingbot-backend\rest\routes.py:4531:        await manager.force_refresh(panel_id)
tradingbot-backend\rest\routes.py:4534:        return {"success": True, "message": f"Refresh tvingad för {target}"}
tradingbot-backend\rest\routes.py:4536:        logger.exception(f"Fel vid force refresh: {e}")
tradingbot-backend\rest\routes.py:4540:@router.post("/refresh-manager/start")
tradingbot-backend\rest\routes.py:4541:async def start_refresh_manager(_: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4542:    """Starta RefreshManager."""
tradingbot-backend\rest\routes.py:4544:        from services.refresh_manager import start_refresh_manager
tradingbot-backend\rest\routes.py:4546:        await start_refresh_manager()
tradingbot-backend\rest\routes.py:4547:        return {"success": True, "message": "RefreshManager startad"}
tradingbot-backend\rest\routes.py:4549:        logger.exception(f"Fel vid start av refresh manager: {e}")
tradingbot-backend\rest\routes.py:4553:@router.post("/refresh-manager/stop")
tradingbot-backend\rest\routes.py:4554:async def stop_refresh_manager(_: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4555:    """Stoppa RefreshManager."""
tradingbot-backend\rest\routes.py:4557:        from services.refresh_manager import stop_refresh_manager
tradingbot-backend\rest\routes.py:4559:        await stop_refresh_manager()
tradingbot-backend\rest\routes.py:4560:        return {"success": True, "message": "RefreshManager stoppad"}
tradingbot-backend\rest\routes.py:4562:        logger.exception(f"Fel vid stopp av refresh manager: {e}")
tradingbot-backend\rest\routes.py:4566:# --- Runtime toggles: Scheduler ---
tradingbot-backend\rest\routes.py:4567:@router.get("/mode/scheduler")
tradingbot-backend\rest\routes.py:4568:async def get_scheduler(_: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4570:        from services.scheduler import scheduler
tradingbot-backend\rest\routes.py:4573:        is_running = bool(scheduler.is_running())
tradingbot-backend\rest\routes.py:4575:        return {"scheduler_running": is_running}
tradingbot-backend\rest\routes.py:4577:        logger.exception(f"Fel vid get scheduler: {e}")
tradingbot-backend\rest\routes.py:4581:@router.post("/mode/scheduler")
tradingbot-backend\rest\routes.py:4582:async def set_scheduler(payload: CoreModeRequest, _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4584:        from services.scheduler import scheduler
tradingbot-backend\rest\routes.py:4587:            scheduler.start()
tradingbot-backend\rest\routes.py:4590:                await scheduler.stop()
tradingbot-backend\rest\routes.py:4594:        _emit_notification("info", "Scheduler", {"enabled": bool(payload.enabled)})
tradingbot-backend\rest\routes.py:4595:        return {"scheduler_running": bool(scheduler.is_running())}
tradingbot-backend\rest\routes.py:4597:        logger.exception(f"Fel vid set scheduler: {e}")
tradingbot-backend\rest\routes.py:5220:    force_refresh: bool = False,
tradingbot-backend\rest\routes.py:5234:            force_refresh=force_refresh,
tradingbot-backend\rest\routes.py:5244:    symbol: str | None = None, limit: int = 100, force_refresh: bool = False, _: bool = Depends(require_auth)
tradingbot-backend\rest\routes.py:5250:        trades = await history_service.get_trade_history(symbol=symbol, limit=limit, force_refresh=force_refresh)
tradingbot-backend\rest\routes.py:5268:    force_refresh: bool = False,
tradingbot-backend\rest\routes.py:5276:            wallet_type=wallet_type, currency=currency, limit=limit, force_refresh=force_refresh
tradingbot-backend\rest\routes.py:5292:async def get_equity_history(limit: int = 1000, force_refresh: bool = False, _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:5297:        equity_history = await history_service.get_equity_history(limit=limit, force_refresh=force_refresh)
tradingbot-backend\rest\routes.py:5317:    force_refresh = request.get("force_refresh", False)
tradingbot-backend\rest\routes.py:5322:            symbol=symbol, timeframe=timeframe, limit=limit, max_samples=max_samples, force_refresh=force_refresh
tradingbot-backend\rest\routes.py:5347:    force_refresh = request.get("force_refresh", False)
tradingbot-backend\rest\routes.py:5356:            force_refresh=force_refresh,
tradingbot-backend\rest\routes.py:5383:    force_refresh = request.get("force_refresh", False)
tradingbot-backend\rest\routes.py:5394:            force_refresh=force_refresh,
tradingbot-backend\rest\routes.py:5733:@router.post("/signals/refresh")
tradingbot-backend\rest\routes.py:5734:async def refresh_signals(request: dict, _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:5736:    Genererar nya signals (force refresh).
tradingbot-backend\rest\routes.py:5742:        force_refresh = request.get("force_refresh", True)
tradingbot-backend\rest\routes.py:5745:        signals = await signal_service.generate_live_signals(symbols, force_refresh)
tradingbot-backend\rest\routes.py:5751:        logger.error(f"❌ Fel vid refresh av signals: {e}")
tradingbot-backend\services\bitfinex_data.py:77:                await sym_svc.refresh()
tradingbot-backend\services\bitfinex_data.py:242:            await sym_svc.refresh()
tradingbot-backend\services\bitfinex_websocket.py:70:        # Periodisk symbol-refresh (configs) loop-task
tradingbot-backend\services\bitfinex_websocket.py:71:        self._symbol_refresh_task = None
tradingbot-backend\services\bitfinex_websocket.py:72:        self._symbol_refresh_interval = 3600.0
tradingbot-backend\services\bitfinex_websocket.py:414:            # Starta symbol-refresh i bakgrunden (ej under pytest)
tradingbot-backend\services\bitfinex_websocket.py:418:                if not _os.environ.get("PYTEST_CURRENT_TEST") and not self._symbol_refresh_task:
tradingbot-backend\services\bitfinex_websocket.py:419:                    self._symbol_refresh_task = self._asyncio.create_task(
tradingbot-backend\services\bitfinex_websocket.py:420:                        self._symbol_refresh_loop(), name="ws-symbol-refresh"
tradingbot-backend\services\bitfinex_websocket.py:609:        # Stoppa symbol-refresh loop först
tradingbot-backend\services\bitfinex_websocket.py:611:            if self._symbol_refresh_task and not self._symbol_refresh_task.done():
tradingbot-backend\services\bitfinex_websocket.py:612:                self._symbol_refresh_task.cancel()
tradingbot-backend\services\bitfinex_websocket.py:613:                logger.info("✅ Symbol refresh task avbruten")
tradingbot-backend\services\bitfinex_websocket.py:615:            logger.warning(f"⚠️ Fel vid avbrytning av symbol refresh: {e}")
tradingbot-backend\services\bitfinex_websocket.py:617:            self._symbol_refresh_task = None
tradingbot-backend\services\bitfinex_websocket.py:700:                        await self._schedule_reconnect()
tradingbot-backend\services\bitfinex_websocket.py:706:    async def _schedule_reconnect(self):
tradingbot-backend\services\bitfinex_websocket.py:775:                await sym_svc.refresh()
tradingbot-backend\services\bitfinex_websocket.py:792:            # Registrera önskad symbol (rå) för framtida refresh/resubscribe
tradingbot-backend\services\bitfinex_websocket.py:866:    async def _symbol_refresh_loop(self):
tradingbot-backend\services\bitfinex_websocket.py:867:        """Refreshar configs periodiskt och resubscribe:ar saknade listade par för önskade symboler."""
tradingbot-backend\services\bitfinex_websocket.py:874:                    await sym_svc.refresh()
tradingbot-backend\services\bitfinex_websocket.py:888:                    logger.warning("Symbol refresh loop fel: %s", ie)
tradingbot-backend\services\bitfinex_websocket.py:889:                await self._asyncio.sleep(float(self._symbol_refresh_interval))
tradingbot-backend\services\bitfinex_websocket.py:909:                await sym_svc.refresh()
tradingbot-backend\services\bitfinex_websocket.py:987:                await sym_svc.refresh()
tradingbot-backend\services\bitfinex_websocket.py:1061:                await sym_svc.refresh()
tradingbot-backend\services\bitfinex_websocket.py:1271:            await self._schedule_reconnect()
tradingbot-backend\services\bitfinex_websocket.py:1274:            await self._schedule_reconnect()
tradingbot-backend\services\bitfinex_websocket.py:1610:                await svc.refresh()
tradingbot-backend\services\bitfinex_websocket.py:1673:                    await svc.refresh()
tradingbot-backend\services\bitfinex_websocket.py:1743:                await svc.refresh()
tradingbot-backend\services\enhanced_observability_service.py:16:- Olika refresh-intervall för metrics
tradingbot-backend\services\feature_flags_service.py:12:- Scheduler Running
tradingbot-backend\services\feature_flags_service.py:19:- Olika refresh-intervall för toggle-data
tradingbot-backend\services\feature_flags_service.py:149:        # Scheduler Flags
tradingbot-backend\services\feature_flags_service.py:150:        self.flags["scheduler_running"] = FeatureFlag(
tradingbot-backend\services\feature_flags_service.py:151:            "scheduler_running",
tradingbot-backend\services\feature_flags_service.py:152:            self._get_scheduler_running(),
tradingbot-backend\services\feature_flags_service.py:153:            "Scheduler Running - Aktiverar schemalagda uppgifter",
tradingbot-backend\services\feature_flags_service.py:154:            "scheduler",
tradingbot-backend\services\feature_flags_service.py:221:    def _get_scheduler_running(self) -> bool:
tradingbot-backend\services\feature_flags_service.py:222:        """Hämta scheduler running från runtime."""
tradingbot-backend\services\feature_flags_service.py:224:            from services.scheduler import scheduler
tradingbot-backend\services\feature_flags_service.py:226:            return bool(scheduler.is_running())
tradingbot-backend\services\feature_flags_service.py:390:            "scheduler_running": self.get_flag("scheduler_running"),
tradingbot-backend\services\feature_flags_service.py:398:    def refresh_runtime_flags(self) -> None:
tradingbot-backend\services\feature_flags_service.py:406:            # Uppdatera scheduler flag
tradingbot-backend\services\feature_flags_service.py:407:            self.flags["scheduler_running"].current_value = self._get_scheduler_running()
tradingbot-backend\services\feature_flags_service.py:417:            self.refresh_runtime_flags()
tradingbot-backend\services\history_service.py:14:- Olika refresh-intervall för historik-data
tradingbot-backend\services\history_service.py:74:        self, symbol: str | None = None, limit: int = 100, force_refresh: bool = False
tradingbot-backend\services\history_service.py:82:                not force_refresh
tradingbot-backend\services\history_service.py:111:        self, wallet_type: str | None = None, currency: str | None = None, limit: int = 100, force_refresh: bool = False
tradingbot-backend\services\history_service.py:119:                not force_refresh
tradingbot-backend\services\history_service.py:149:    async def get_equity_history(self, limit: int = 1000, force_refresh: bool = False) -> list[dict[str, Any]]:
tradingbot-backend\services\history_service.py:156:                not force_refresh
tradingbot-backend\services\history_service.py:190:    async def get_performance_snapshot(self, force_refresh: bool = False) -> dict[str, Any] | None:
tradingbot-backend\services\history_service.py:197:                not force_refresh
tradingbot-backend\services\history_service.py:229:        force_refresh: bool = False,
tradingbot-backend\services\history_service.py:234:            trades_task = asyncio.create_task(self.get_trade_history(symbol, trades_limit, force_refresh))
tradingbot-backend\services\history_service.py:236:                self.get_ledger_history(wallet_type, currency, ledgers_limit, force_refresh)
tradingbot-backend\services\history_service.py:238:            equity_task = asyncio.create_task(self.get_equity_history(equity_limit, force_refresh))
tradingbot-backend\services\history_service.py:239:            performance_task = asyncio.create_task(self.get_performance_snapshot(force_refresh))
tradingbot-backend\services\metrics.py:368:                    # Enkelt medel av senaste N (redan trimmas i scheduler)
tradingbot-backend\services\refresh_manager.py:2:Refresh Manager - Centraliserad hantering av panel-refresh för dashboard.
tradingbot-backend\services\refresh_manager.py:7:- Inkonsistenta refresh-intervall
tradingbot-backend\services\refresh_manager.py:8:- Svår att debugga refresh-problem
tradingbot-backend\services\refresh_manager.py:24:class RefreshPriority(Enum):
tradingbot-backend\services\refresh_manager.py:25:    """Refresh prioritet för olika typer av data."""
tradingbot-backend\services\refresh_manager.py:34:class RefreshTask:
tradingbot-backend\services\refresh_manager.py:35:    """En refresh-uppgift för en specifik panel."""
tradingbot-backend\services\refresh_manager.py:38:    priority: RefreshPriority
tradingbot-backend\services\refresh_manager.py:65:class RefreshManager:
tradingbot-backend\services\refresh_manager.py:66:    """Centraliserad refresh-hantering för dashboard paneler."""
tradingbot-backend\services\refresh_manager.py:69:        self.tasks: dict[str, RefreshTask] = {}
tradingbot-backend\services\refresh_manager.py:73:        self._refresh_lock = asyncio.Lock()
tradingbot-backend\services\refresh_manager.py:75:        # Standard refresh-intervall baserat på prioritet
tradingbot-backend\services\refresh_manager.py:77:            RefreshPriority.CRITICAL: 30,  # Risk guards, circuit breakers
tradingbot-backend\services\refresh_manager.py:78:            RefreshPriority.HIGH: 60,  # Positions, wallets, orders
tradingbot-backend\services\refresh_manager.py:79:            RefreshPriority.MEDIUM: 120,  # Market data, signals
tradingbot-backend\services\refresh_manager.py:80:            RefreshPriority.LOW: 300,  # History, performance stats
tradingbot-backend\services\refresh_manager.py:83:        logger.info("🔄 RefreshManager initialiserad")
tradingbot-backend\services\refresh_manager.py:88:        priority: RefreshPriority,
tradingbot-backend\services\refresh_manager.py:93:        """Registrera en panel för automatisk refresh."""
tradingbot-backend\services\refresh_manager.py:99:        self.tasks[panel_id] = RefreshTask(
tradingbot-backend\services\refresh_manager.py:154:        """Starta refresh-managern."""
tradingbot-backend\services\refresh_manager.py:156:            logger.warning("RefreshManager redan igång")
tradingbot-backend\services\refresh_manager.py:162:        logger.info("🚀 RefreshManager startad")
tradingbot-backend\services\refresh_manager.py:166:            await self._refresh_loop()
tradingbot-backend\services\refresh_manager.py:168:            logger.error(f"❌ RefreshManager fel: {e}")
tradingbot-backend\services\refresh_manager.py:173:        """Stoppa refresh-managern."""
tradingbot-backend\services\refresh_manager.py:177:        logger.info("🛑 Stoppar RefreshManager...")
tradingbot-backend\services\refresh_manager.py:180:        # Vänta på att alla pågående refresh-operationer slutförs
tradingbot-backend\services\refresh_manager.py:184:        logger.info("✅ RefreshManager stoppad")
tradingbot-backend\services\refresh_manager.py:186:    async def force_refresh(self, panel_id: str | None = None) -> None:
tradingbot-backend\services\refresh_manager.py:187:        """Tvinga refresh för en specifik panel eller alla."""
tradingbot-backend\services\refresh_manager.py:188:        async with self._refresh_lock:
tradingbot-backend\services\refresh_manager.py:191:                    await self._run_panel_refresh(self.tasks[panel_id])
tradingbot-backend\services\refresh_manager.py:195:                # Refresh alla paneler
tradingbot-backend\services\refresh_manager.py:197:                    await self._run_panel_refresh(task)
tradingbot-backend\services\refresh_manager.py:199:    async def _refresh_loop(self) -> None:
tradingbot-backend\services\refresh_manager.py:200:        """Huvudloop för refresh-hantering."""
tradingbot-backend\services\refresh_manager.py:203:                await self._process_refresh_cycle()
tradingbot-backend\services\refresh_manager.py:206:                logger.error(f"❌ Refresh loop fel: {e}")
tradingbot-backend\services\refresh_manager.py:209:    async def _process_refresh_cycle(self) -> None:
tradingbot-backend\services\refresh_manager.py:210:        """Processera en refresh-cykel."""
tradingbot-backend\services\refresh_manager.py:214:        # Hitta paneler som behöver refresh
tradingbot-backend\services\refresh_manager.py:222:        # Kör refresh för alla berättigade paneler
tradingbot-backend\services\refresh_manager.py:224:            await asyncio.gather(*[self._run_panel_refresh(task) for task in tasks_to_run], return_exceptions=True)
tradingbot-backend\services\refresh_manager.py:226:    def _check_dependencies(self, task: RefreshTask) -> bool:
tradingbot-backend\services\refresh_manager.py:238:    async def _run_panel_refresh(self, task: RefreshTask) -> None:
tradingbot-backend\services\refresh_manager.py:239:        """Kör refresh för en specifik panel."""
tradingbot-backend\services\refresh_manager.py:244:            logger.debug(f"🔄 Refreshar panel: {task.panel_id}")
tradingbot-backend\services\refresh_manager.py:252:            # Återställ error count vid lyckad refresh
tradingbot-backend\services\refresh_manager.py:255:            logger.debug(f"✅ Panel {task.panel_id} refreshad")
tradingbot-backend\services\refresh_manager.py:259:            logger.error(f"❌ Panel {task.panel_id} refresh fel: {e}")
tradingbot-backend\services\refresh_manager.py:269:    def get_refresh_intervals_summary(self) -> dict[str, int]:
tradingbot-backend\services\refresh_manager.py:270:        """Hämta sammanfattning av refresh-intervall."""
tradingbot-backend\services\refresh_manager.py:278:_refresh_manager: RefreshManager | None = None
tradingbot-backend\services\refresh_manager.py:281:def get_refresh_manager() -> RefreshManager:
tradingbot-backend\services\refresh_manager.py:282:    """Hämta global RefreshManager instans."""
tradingbot-backend\services\refresh_manager.py:283:    global _refresh_manager
tradingbot-backend\services\refresh_manager.py:284:    if _refresh_manager is None:
tradingbot-backend\services\refresh_manager.py:285:        _refresh_manager = RefreshManager()
tradingbot-backend\services\refresh_manager.py:286:    return _refresh_manager
tradingbot-backend\services\refresh_manager.py:289:async def start_refresh_manager() -> None:
tradingbot-backend\services\refresh_manager.py:290:    """Starta global RefreshManager."""
tradingbot-backend\services\refresh_manager.py:291:    manager = get_refresh_manager()
tradingbot-backend\services\refresh_manager.py:295:async def stop_refresh_manager() -> None:
tradingbot-backend\services\refresh_manager.py:296:    """Stoppa global RefreshManager."""
tradingbot-backend\services\refresh_manager.py:297:    manager = get_refresh_manager()
tradingbot-backend\services\scheduler.py:2:Scheduler Service - TradingBot Backend
tradingbot-backend\services\scheduler.py:7:Nuvarande jobb:
tradingbot-backend\services\scheduler.py:24:class SchedulerService:
tradingbot-backend\services\scheduler.py:27:    - Använder en enda bakgrunds-Task som loopar och kör definierade jobb
tradingbot-backend\services\scheduler.py:29:    - Undviker tredjepartsbibliotek (t.ex. aioschedule) för att minska
tradingbot-backend\services\scheduler.py:49:        self._task = asyncio.create_task(self._run_loop(), name="scheduler-loop")
tradingbot-backend\services\scheduler.py:50:        logger.info("🗓️ Scheduler startad")
tradingbot-backend\services\scheduler.py:62:        logger.info("🛑 Scheduler stoppad")
tradingbot-backend\services\scheduler.py:95:        """Huvudloop för periodiska jobb."""
tradingbot-backend\services\scheduler.py:127:                logger.error("%s", f"Scheduler-loop fel: {e}")
tradingbot-backend\services\scheduler.py:338:            await sym_svc.refresh()
tradingbot-backend\services\scheduler.py:413:            await sym_svc.refresh()
tradingbot-backend\services\scheduler.py:458:scheduler = SchedulerService()
tradingbot-backend\services\signal_generator.py:43:        self, symbols: list[str] | None = None, force_refresh: bool = False
tradingbot-backend\services\signal_generator.py:55:            # Kontrollera cache om inte force refresh
tradingbot-backend\services\signal_generator.py:56:            if not force_refresh and self._is_cache_valid():
tradingbot-backend\services\symbols.py:30:_REFRESH_LOCK: asyncio.Lock = asyncio.Lock()
tradingbot-backend\services\symbols.py:43:        self._last_refresh_ts: float = _CACHE["ts"]
tradingbot-backend\services\symbols.py:84:    async def refresh(self) -> None:
tradingbot-backend\services\symbols.py:96:                self._last_refresh_ts = _CACHE["ts"]
tradingbot-backend\services\symbols.py:99:            async with _REFRESH_LOCK:
tradingbot-backend\services\symbols.py:106:                    self._last_refresh_ts = _CACHE["ts"]
tradingbot-backend\services\symbols.py:123:                self._last_refresh_ts = _CACHE["ts"]
tradingbot-backend\services\symbols.py:125:                    "SymbolService refresh: pairs=%s aliases=%s",
tradingbot-backend\services\symbols.py:130:            logger.warning("SymbolService refresh misslyckades: %s", e)
tradingbot-backend\services\unified_risk_service.py:14:- Olika refresh-intervall för risk-data
tradingbot-backend\services\unified_signal_service.py:8:- Olika refresh-intervall för samma data
tradingbot-backend\services\unified_signal_service.py:75:    async def get_regime_data(self, symbol: str, force_refresh: bool = False) -> dict[str, Any] | None:
tradingbot-backend\services\unified_signal_service.py:84:        if not force_refresh and cache_key in self._regime_cache:
tradingbot-backend\services\unified_signal_service.py:136:    async def generate_signal(self, symbol: str, force_refresh: bool = False) -> SignalResponse | None:
tradingbot-backend\services\unified_signal_service.py:145:        if not force_refresh and cache_key in self._signal_cache:
tradingbot-backend\services\unified_signal_service.py:153:            regime_data = await self.get_regime_data(symbol, force_refresh)
tradingbot-backend\services\unified_signal_service.py:193:    async def generate_all_signals(self, force_refresh: bool = False) -> LiveSignalsResponse:
tradingbot-backend\services\unified_signal_service.py:204:            signal_tasks = [self.generate_signal(symbol, force_refresh) for symbol in symbols]
tradingbot-backend\services\unified_signal_service.py:251:    async def get_regime_summary(self, force_refresh: bool = False) -> dict[str, Any]:
tradingbot-backend\services\unified_signal_service.py:262:            regime_tasks = [self.get_regime_data(symbol, force_refresh) for symbol in symbols]
tradingbot-backend\services\validation_service.py:82:        force_refresh: bool = False,
tradingbot-backend\services\validation_service.py:90:                not force_refresh
tradingbot-backend\services\validation_service.py:175:        force_refresh: bool = False,
tradingbot-backend\services\validation_service.py:183:                not force_refresh
tradingbot-backend\services\validation_service.py:241:        force_refresh: bool = False,
tradingbot-backend\services\validation_service.py:251:                not force_refresh
tradingbot-backend\services\watchlist_service.py:48:            await svc.refresh()
tradingbot-backend\tests\test_prob_retrain_flow.py:7:async def test_scheduler_prob_retrain_mocks_and_reload(monkeypatch, tmp_path):
tradingbot-backend\tests\test_prob_retrain_flow.py:16:    from services.scheduler import SchedulerService
tradingbot-backend\tests\test_prob_retrain_flow.py:29:    sch = SchedulerService()
tradingbot-backend\tests\test_scheduler_prob_validation.py:11:async def test_scheduler_prob_validation_updates_metrics(monkeypatch):
tradingbot-backend\tests\test_scheduler_prob_validation.py:12:    from services.scheduler import SchedulerService
tradingbot-backend\tests\test_scheduler_prob_validation.py:27:    sch = SchedulerService()
tradingbot-backend\tests\test_scheduler_prob_windows.py:6:async def test_scheduler_prob_rolling_windows_retention(monkeypatch):
tradingbot-backend\tests\test_scheduler_prob_windows.py:12:    from services.scheduler import SchedulerService
tradingbot-backend\tests\test_scheduler_prob_windows.py:22:    sch = SchedulerService()
tradingbot-backend\utils\logger.py:30:        (re.compile(r"(?i)(refresh_token\"?\s*:\s*)(\"?)[^\",\s]+\2"), r"\1[REDACTED]"),
tradingbot-backend\ws\auth.py:37:    Genererar JWT-token med kortare livstid och refresh token för Socket.IO-autentisering.
tradingbot-backend\ws\auth.py:45:        dict: JWT access_token, refresh_token och metadata
tradingbot-backend\ws\auth.py:52:    refresh_expiry = now + (24 * 60 * 60)  # Refresh token varar 24 timmar
tradingbot-backend\ws\auth.py:67:    # Refresh token payload
tradingbot-backend\ws\auth.py:68:    refresh_payload = {
tradingbot-backend\ws\auth.py:71:        "type": "refresh",
tradingbot-backend\ws\auth.py:74:        "exp": refresh_expiry,
tradingbot-backend\ws\auth.py:79:        refresh_token = jwt.encode(refresh_payload, JWT_SECRET, algorithm="HS256")
tradingbot-backend\ws\auth.py:83:            "refresh_token": refresh_token,
tradingbot-backend\ws\auth.py:139:def refresh_access_token(refresh_token: str) -> dict:
tradingbot-backend\ws\auth.py:141:    Förnyar en access token med hjälp av en giltig refresh token.
tradingbot-backend\ws\auth.py:144:        refresh_token: JWT refresh token
tradingbot-backend\ws\auth.py:150:        # Validera refresh token
tradingbot-backend\ws\auth.py:151:        payload = validate_token(refresh_token)
tradingbot-backend\ws\auth.py:154:            logger.warning("❌ Ogiltig refresh token")
tradingbot-backend\ws\auth.py:157:        # Kontrollera att det är en refresh token
tradingbot-backend\ws\auth.py:158:        if payload.get("type") != "refresh":
tradingbot-backend\ws\manager.py:108:    """Generera och skicka en token med refresh token till klienten."""
tradingbot-backend\ws\manager.py:114:        # Använd ny token-generation med refresh tokens
tradingbot-backend\ws\manager.py:130:async def refresh_token(sid, data):
tradingbot-backend\ws\manager.py:131:    """Förnya en access token med hjälp av refresh token."""
tradingbot-backend\ws\manager.py:133:        refresh_token = data.get("refresh_token")
tradingbot-backend\ws\manager.py:135:        if not refresh_token:
tradingbot-backend\ws\manager.py:136:            await socket_app.emit("token_error", {"error": "Refresh token saknas"}, room=sid)
tradingbot-backend\ws\manager.py:137:            logger.warning("❌ Refresh token saknas i begäran")
tradingbot-backend\ws\manager.py:140:        # Använd refresh_access_token för att generera ny access token
tradingbot-backend\ws\manager.py:141:        token_response = refresh_access_token(refresh_token)
tradingbot-backend\ws\manager.py:144:            await socket_app.emit("token_refreshed", token_response, room=sid)
