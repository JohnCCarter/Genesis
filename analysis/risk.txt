
.venv\Lib\site-packages\pip_requirements_parser.py:202:    nested requirements and constraints files content.
.venv\Lib\site-packages\pip_requirements_parser.py:227:        -r/--requirement adn -c--constraint requirements and constraints files
.venv\Lib\site-packages\pip_requirements_parser.py:283:        is_constraint=False,
.venv\Lib\site-packages\pip_requirements_parser.py:294:        -r/--requirement adn -c--constraint requirements and constraints files
.venv\Lib\site-packages\pip_requirements_parser.py:301:            is_constraint=is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:800:def constraints() -> Option:
.venv\Lib\site-packages\pip_requirements_parser.py:803:        "--constraint",
.venv\Lib\site-packages\pip_requirements_parser.py:804:        dest="constraints",
.venv\Lib\site-packages\pip_requirements_parser.py:808:        help="Constrain versions using the given constraints file. "
.venv\Lib\site-packages\pip_requirements_parser.py:1064:    constraints,
.venv\Lib\site-packages\pip_requirements_parser.py:1107:        is_constraint: bool,
.venv\Lib\site-packages\pip_requirements_parser.py:1114:        self.is_constraint = is_constraint
.venv\Lib\site-packages\pip_requirements_parser.py:1126:        is_constraint: bool,
.venv\Lib\site-packages\pip_requirements_parser.py:1132:        self.is_constraint = is_constraint
.venv\Lib\site-packages\pip_requirements_parser.py:1152:    is_constraint: bool = False,
.venv\Lib\site-packages\pip_requirements_parser.py:1164:    :param is_constraint:  If true, parsing a constraint file rather than
.venv\Lib\site-packages\pip_requirements_parser.py:1167:        and -c/--constraints nested files.
.venv\Lib\site-packages\pip_requirements_parser.py:1174:        is_constraint=is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:1233:            is_constraint=parsed_line.is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:1257:            is_constraint=parsed_line.is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:1336:        is_constraint: bool, 
.venv\Lib\site-packages\pip_requirements_parser.py:1344:        constraints files -r/--requirements and -c/--constraints recursively.
.venv\Lib\site-packages\pip_requirements_parser.py:1346:        If ``is_constraint`` is True, tag the ParsedLine as being "constraint"
.venv\Lib\site-packages\pip_requirements_parser.py:1347:        originating from a "constraint" file rather than a requirements file.
.venv\Lib\site-packages\pip_requirements_parser.py:1351:            is_constraint=is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:1358:        is_constraint: bool, 
.venv\Lib\site-packages\pip_requirements_parser.py:1366:        constraints files -r/--requirements and -c/--constraints recursively.
.venv\Lib\site-packages\pip_requirements_parser.py:1368:        If ``is_constraint`` is True, tag the ParsedLine as being "constraint"
.venv\Lib\site-packages\pip_requirements_parser.py:1369:        originating from a "constraint" file rather than a requirements file.
.venv\Lib\site-packages\pip_requirements_parser.py:1371:        for line in self._parse_file(filename=filename, is_constraint=is_constraint):
.venv\Lib\site-packages\pip_requirements_parser.py:1376:                (line.options.requirements or line.options.constraints)
.venv\Lib\site-packages\pip_requirements_parser.py:1384:                    is_nested_constraint = False
.venv\Lib\site-packages\pip_requirements_parser.py:1387:                    if len(line.options.constraints) !=1:
.venv\Lib\site-packages\pip_requirements_parser.py:1390:                    req_path = line.options.constraints[0]
.venv\Lib\site-packages\pip_requirements_parser.py:1391:                    is_nested_constraint = True
.venv\Lib\site-packages\pip_requirements_parser.py:1408:                    is_constraint=is_nested_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:1412:            # nested requirements or constraints files
.venv\Lib\site-packages\pip_requirements_parser.py:1415:    def _parse_file(self, filename: str, is_constraint: bool
.venv\Lib\site-packages\pip_requirements_parser.py:1421:        If ``is_constraint`` is True, tag the ParsedLine as being "constraint"
.venv\Lib\site-packages\pip_requirements_parser.py:1422:        originating from a "constraint" file rather than a requirements file.
.venv\Lib\site-packages\pip_requirements_parser.py:1449:                    is_constraint=is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:1949:        is_constraint: bool = False,
.venv\Lib\site-packages\pip_requirements_parser.py:1963:        - ``is_constraint`` is True if this requirement came from loading a
.venv\Lib\site-packages\pip_requirements_parser.py:1964:           nested ``-c/--constraint`` file.
.venv\Lib\site-packages\pip_requirements_parser.py:1973:        self.is_constraint = is_constraint
.venv\Lib\site-packages\pip_requirements_parser.py:2145:            is_constraint=self.is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:2598:    is_constraint: bool = False,
.venv\Lib\site-packages\pip_requirements_parser.py:2607:        is_constraint=is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:2816:    is_constraint: bool=False,
.venv\Lib\site-packages\pip_requirements_parser.py:2834:        is_constraint=is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:2848:    is_constraint = parsed_req.is_constraint
.venv\Lib\site-packages\pip_requirements_parser.py:2855:            is_constraint=is_constraint,
.venv\Lib\site-packages\pip_requirements_parser.py:2863:        is_constraint=is_constraint,
.venv\Lib\site-packages\typing_extensions.py:102:    'TypeGuard',
.venv\Lib\site-packages\typing_extensions.py:1680:        def __new__(cls, name, *constraints, bound=None,
.venv\Lib\site-packages\typing_extensions.py:1685:                typevar = typing.TypeVar(name, *constraints, bound=bound,
.venv\Lib\site-packages\typing_extensions.py:1689:                typevar = typing.TypeVar(name, *constraints, bound=bound,
.venv\Lib\site-packages\typing_extensions.py:2163:if hasattr(typing, 'TypeGuard'):
.venv\Lib\site-packages\typing_extensions.py:2164:    TypeGuard = typing.TypeGuard
.venv\Lib\site-packages\typing_extensions.py:2168:    def TypeGuard(self, parameters):
.venv\Lib\site-packages\typing_extensions.py:2170:        type guard function.  ``TypeGuard`` only accepts a single type argument.
.venv\Lib\site-packages\typing_extensions.py:2173:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
.venv\Lib\site-packages\typing_extensions.py:2177:        conditional expression here is sometimes referred to as a "type guard".
.venv\Lib\site-packages\typing_extensions.py:2180:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
.venv\Lib\site-packages\typing_extensions.py:2183:        Using  ``-> TypeGuard`` tells the static type checker that for a given
.venv\Lib\site-packages\typing_extensions.py:2188:        is the type inside ``TypeGuard``.
.venv\Lib\site-packages\typing_extensions.py:2193:                # "isinstance" type guard
.venv\Lib\site-packages\typing_extensions.py:2206:        writing type-safe type guards is left to the user.
.venv\Lib\site-packages\typing_extensions.py:2208:        ``TypeGuard`` also works with type variables.  For more information, see
.venv\Lib\site-packages\typing_extensions.py:2209:        PEP 647 (User-Defined Type Guards).
.venv\Lib\site-packages\typing_extensions.py:2230:        conditional expression here is sometimes referred to as a "type guard".
.venv\Lib\site-packages\typing_extensions.py:2233:        as a type guard.  Such a function should use ``TypeIs[...]`` as its
.venv\Lib\site-packages\typing_extensions.py:4129:        _recursive_guard=frozenset(),
.venv\Lib\site-packages\typing_extensions.py:4155:        if forward_ref.__forward_arg__ in _recursive_guard:
.venv\Lib\site-packages\typing_extensions.py:4185:                _recursive_guard=_recursive_guard, format=format
.venv\Lib\site-packages\typing_extensions.py:4198:                recursive_guard=_recursive_guard | {forward_ref.__forward_arg__},
.venv\Lib\site-packages\typing_extensions.py:4206:                recursive_guard=_recursive_guard | {forward_ref.__forward_arg__},
.venv\Lib\site-packages\annotated_types\__init__.py:157:    All of the constraints and metadata should be fully expressable
.venv\Lib\site-packages\annotated_types\__init__.py:209:    are interpreted the same way as the single-bound constraints.
.venv\Lib\site-packages\annotated_types\__init__.py:329:    We provide a few predefined predicates for common string constraints:
.venv\Lib\site-packages\annotated_types\__init__.py:340:    skip invalid constraints, or statically raise an error; or it might try calling it
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:65:from .._core._synchronization import ResourceGuard
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1186:        self._receive_guard = ResourceGuard("reading from")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1187:        self._send_guard = ResourceGuard("writing to")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1195:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1229:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1274:        self._receive_guard = ResourceGuard("reading from")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1275:        self._send_guard = ResourceGuard("writing to")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1302:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1308:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1328:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1352:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1398:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1434:        self._accept_guard = ResourceGuard("accepting connections from")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1444:        with self._accept_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1491:        self._accept_guard = ResourceGuard("accepting connections from")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1496:        with self._accept_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1530:        self._receive_guard = ResourceGuard("reading from")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1531:        self._send_guard = ResourceGuard("writing to")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1544:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1561:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1578:        self._receive_guard = ResourceGuard("reading from")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1579:        self._send_guard = ResourceGuard("writing to")
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1592:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1611:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:52:from .._core._synchronization import ResourceGuard
.venv\Lib\site-packages\anyio\_backends\_trio.py:480:        self._receive_guard = ResourceGuard("reading from")
.venv\Lib\site-packages\anyio\_backends\_trio.py:481:        self._send_guard = ResourceGuard("writing to")
.venv\Lib\site-packages\anyio\_backends\_trio.py:484:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:496:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:519:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:559:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:580:        self._accept_guard = ResourceGuard("accepting connections from")
.venv\Lib\site-packages\anyio\_backends\_trio.py:583:        with self._accept_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:596:        self._accept_guard = ResourceGuard("accepting connections from")
.venv\Lib\site-packages\anyio\_backends\_trio.py:599:        with self._accept_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:611:        self._receive_guard = ResourceGuard("reading from")
.venv\Lib\site-packages\anyio\_backends\_trio.py:612:        self._send_guard = ResourceGuard("writing to")
.venv\Lib\site-packages\anyio\_backends\_trio.py:615:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:623:        with self._send_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:633:        self._receive_guard = ResourceGuard("reading from")
.venv\Lib\site-packages\anyio\_backends\_trio.py:634:        self._send_guard = ResourceGuard("writing to")
.venv\Lib\site-packages\anyio\_backends\_trio.py:637:        with self._receive_guard:
.venv\Lib\site-packages\anyio\_backends\_trio.py:644:        with self._send_guard:
.venv\Lib\site-packages\anyio\_core\_synchronization.py:576:class ResourceGuard:
.venv\Lib\site-packages\anyio\_core\_synchronization.py:577:    __slots__ = "action", "_guarded"
.venv\Lib\site-packages\anyio\_core\_synchronization.py:581:        self._guarded = False
.venv\Lib\site-packages\anyio\_core\_synchronization.py:584:        if self._guarded:
.venv\Lib\site-packages\anyio\_core\_synchronization.py:587:        self._guarded = True
.venv\Lib\site-packages\anyio\_core\_synchronization.py:595:        self._guarded = False
.venv\Lib\site-packages\astroid\bases.py:38:    from astroid.constraint import Constraint
.venv\Lib\site-packages\astroid\bases.py:160:    constraint_failed = False
.venv\Lib\site-packages\astroid\bases.py:165:            constraints = context.constraints.get(name, {})
.venv\Lib\site-packages\astroid\bases.py:167:            constraints = {}
.venv\Lib\site-packages\astroid\bases.py:170:        constraints = {}
.venv\Lib\site-packages\astroid\bases.py:180:            stmt_constraints: set[Constraint] = set()
.venv\Lib\site-packages\astroid\bases.py:181:            for constraint_stmt, potential_constraints in constraints.items():
.venv\Lib\site-packages\astroid\bases.py:182:                if not constraint_stmt.parent_of(stmt):
.venv\Lib\site-packages\astroid\bases.py:183:                    stmt_constraints.update(potential_constraints)
.venv\Lib\site-packages\astroid\bases.py:185:                if all(constraint.satisfied_by(inf) for constraint in stmt_constraints):
.venv\Lib\site-packages\astroid\bases.py:189:                    constraint_failed = True
.venv\Lib\site-packages\astroid\bases.py:196:    if not inferred and constraint_failed:
.venv\Lib\site-packages\astroid\constraint.py:5:"""Classes representing different types of constraints on inference values."""
.venv\Lib\site-packages\astroid\constraint.py:27:class Constraint(ABC):
.venv\Lib\site-packages\astroid\constraint.py:28:    """Represents a single constraint on a variable."""
.venv\Lib\site-packages\astroid\constraint.py:32:        """The node that this constraint applies to."""
.venv\Lib\site-packages\astroid\constraint.py:34:        """True if this constraint is negated. E.g., "is not" instead of "is"."""
.venv\Lib\site-packages\astroid\constraint.py:41:        """Return a new constraint for node matched from expr, if expr matches
.venv\Lib\site-packages\astroid\constraint.py:42:        the constraint pattern.
.venv\Lib\site-packages\astroid\constraint.py:44:        If negate is True, negate the constraint.
.venv\Lib\site-packages\astroid\constraint.py:49:        """Return True if this constraint is satisfied by the given inferred value."""
.venv\Lib\site-packages\astroid\constraint.py:52:class NoneConstraint(Constraint):
.venv\Lib\site-packages\astroid\constraint.py:53:    """Represents an "is None" or "is not None" constraint."""
.venv\Lib\site-packages\astroid\constraint.py:61:        """Return a new constraint for node matched from expr, if expr matches
.venv\Lib\site-packages\astroid\constraint.py:62:        the constraint pattern.
.venv\Lib\site-packages\astroid\constraint.py:64:        Negate the constraint based on the value of negate.
.venv\Lib\site-packages\astroid\constraint.py:78:        """Return True if this constraint is satisfied by the given inferred value."""
.venv\Lib\site-packages\astroid\constraint.py:87:def get_constraints(
.venv\Lib\site-packages\astroid\constraint.py:89:) -> dict[nodes.If, set[Constraint]]:
.venv\Lib\site-packages\astroid\constraint.py:90:    """Returns the constraints for the given expression.
.venv\Lib\site-packages\astroid\constraint.py:92:    The returned dictionary maps the node where the constraint was generated to the
.venv\Lib\site-packages\astroid\constraint.py:93:    corresponding constraint(s).
.venv\Lib\site-packages\astroid\constraint.py:95:    Constraints are computed statically by analysing the code surrounding expr.
.venv\Lib\site-packages\astroid\constraint.py:96:    Currently this only supports constraints generated from if conditions.
.venv\Lib\site-packages\astroid\constraint.py:99:    constraints_mapping: dict[nodes.If, set[Constraint]] = {}
.venv\Lib\site-packages\astroid\constraint.py:104:            constraints: set[Constraint] | None = None
.venv\Lib\site-packages\astroid\constraint.py:106:                constraints = set(_match_constraint(expr, parent.test))
.venv\Lib\site-packages\astroid\constraint.py:108:                constraints = set(_match_constraint(expr, parent.test, invert=True))
.venv\Lib\site-packages\astroid\constraint.py:110:            if constraints:
.venv\Lib\site-packages\astroid\constraint.py:111:                constraints_mapping[parent] = constraints
.venv\Lib\site-packages\astroid\constraint.py:114:    return constraints_mapping
.venv\Lib\site-packages\astroid\constraint.py:117:ALL_CONSTRAINT_CLASSES = frozenset((NoneConstraint,))
.venv\Lib\site-packages\astroid\constraint.py:118:"""All supported constraint types."""
.venv\Lib\site-packages\astroid\constraint.py:133:def _match_constraint(
.venv\Lib\site-packages\astroid\constraint.py:135:) -> Iterator[Constraint]:
.venv\Lib\site-packages\astroid\constraint.py:136:    """Yields all constraint patterns for node that match."""
.venv\Lib\site-packages\astroid\constraint.py:137:    for constraint_cls in ALL_CONSTRAINT_CLASSES:
.venv\Lib\site-packages\astroid\constraint.py:138:        constraint = constraint_cls.match(node, expr, invert)
.venv\Lib\site-packages\astroid\constraint.py:139:        if constraint:
.venv\Lib\site-packages\astroid\constraint.py:140:            yield constraint
.venv\Lib\site-packages\astroid\context.py:17:    from astroid import constraint, nodes
.venv\Lib\site-packages\astroid\context.py:42:        "constraints",
.venv\Lib\site-packages\astroid\context.py:82:        self.constraints: dict[str, dict[nodes.If, set[constraint.Constraint]]] = {}
.venv\Lib\site-packages\astroid\context.py:83:        """The constraints on nodes."""
.venv\Lib\site-packages\astroid\context.py:134:        clone.constraints = self.constraints.copy()
.venv\Lib\site-packages\astroid\context.py:152:            and not self.constraints
.venv\Lib\site-packages\astroid\inference_tip.py:57:            # Recursion guard with a partial cache key.
.venv\Lib\site-packages\astroid\inference_tip.py:72:                # Remove recursion guard.
.venv\Lib\site-packages\astroid\rebuilder.py:1741:                guard=self.visit(node.guard, newnode),
.venv\Lib\site-packages\astroid\nodes\as_string.py:602:        guard_str = f" if {node.guard.accept(self)}" if node.guard else ""
.venv\Lib\site-packages\astroid\nodes\as_string.py:604:            f"case {node.pattern.accept(self)}{guard_str}:\n"
.venv\Lib\site-packages\astroid\nodes\node_classes.py:467:        from astroid.constraint import get_constraints
.venv\Lib\site-packages\astroid\nodes\node_classes.py:484:        context.constraints[self.name] = get_constraints(self, frame)
.venv\Lib\site-packages\astroid\nodes\node_classes.py:582:        from astroid.constraint import get_constraints
.venv\Lib\site-packages\astroid\nodes\node_classes.py:599:        context.constraints[self.name] = get_constraints(self, frame)
.venv\Lib\site-packages\astroid\nodes\node_classes.py:1088:    from astroid.constraint import get_constraints
.venv\Lib\site-packages\astroid\nodes\node_classes.py:1102:                context.constraints[node.attrname] = get_constraints(node, frame=frame)
.venv\Lib\site-packages\astroid\nodes\node_classes.py:5064:    _astroid_fields = ("pattern", "guard", "body")
.venv\Lib\site-packages\astroid\nodes\node_classes.py:5074:        self.guard: NodeNG | None
.venv\Lib\site-packages\astroid\nodes\node_classes.py:5088:        guard: NodeNG | None,
.venv\Lib\site-packages\astroid\nodes\node_classes.py:5092:        self.guard = guard
.venv\Lib\site-packages\bandit\plugins\asserts.py:11:discovered that some projects used assert to enforce interface constraints.
.venv\Lib\site-packages\bandit\plugins\django_xss.py:187:def check_risk(node):
.venv\Lib\site-packages\bandit\plugins\django_xss.py:276:                return check_risk(context.node)
.venv\Lib\site-packages\bandit\plugins\exec.py:11:Python docs succinctly describe why the use of `exec` is risky.
.venv\Lib\site-packages\bandit\plugins\injection_shell.py:116:    mitigate this risk. Calls of this type are identified by a parameter of
.venv\Lib\site-packages\bandit\plugins\injection_shell.py:414:    mitigate this risk. Calls of this type are identified by the use of certain
.venv\Lib\site-packages\bandit\plugins\injection_shell.py:604:    root then this may present a potential security risk.
.venv\Lib\site-packages\bandit\plugins\logging_config_insecure_listen.py:14:may open its users to a security risk. While the function only
.venv\Lib\site-packages\bidict\_base.py:138:        # Works with the guard in BidictBase._ensure_inv_cls() to prevent infinite recursion.
.venv\Lib\site-packages\black\handle_ipynb_magics.py:14:    from typing import TypeGuard
.venv\Lib\site-packages\black\handle_ipynb_magics.py:16:    from typing_extensions import TypeGuard
.venv\Lib\site-packages\black\handle_ipynb_magics.py:335:def _is_ipython_magic(node: ast.expr) -> TypeGuard[ast.Attribute]:
.venv\Lib\site-packages\black\linegen.py:598:        self.visit_guard = partial(v, keywords=Ø, parens={"if"})
.venv\Lib\site-packages\black\linegen.py:1410:        # Add parentheses around if guards in case blocks
.venv\Lib\site-packages\black\linegen.py:1411:        if isinstance(child, Node) and child.type == syms.guard:
.venv\Lib\site-packages\black\nodes.py:10:    from typing import TypeGuard
.venv\Lib\site-packages\black\nodes.py:12:    from typing_extensions import TypeGuard
.venv\Lib\site-packages\black\nodes.py:990:def is_name_token(nl: NL) -> TypeGuard[Leaf]:
.venv\Lib\site-packages\black\nodes.py:994:def is_lpar_token(nl: NL) -> TypeGuard[Leaf]:
.venv\Lib\site-packages\black\nodes.py:998:def is_rpar_token(nl: NL) -> TypeGuard[Leaf]:
.venv\Lib\site-packages\black\nodes.py:1002:def is_number_token(nl: NL) -> TypeGuard[Leaf]:
.venv\Lib\site-packages\black\trans.py:1667:        # line is actually necessary, but it seems to be. Otherwise we risk
.venv\Lib\site-packages\blib2to3\pygram.py:79:    guard: int
.venv\Lib\site-packages\click\types.py:760:def _is_file_like(value: t.Any) -> "te.TypeGuard[t.IO[t.Any]]":
.venv\Lib\site-packages\coverage\debug.py:636:    TMP), and also cloak sensitive values with asterisks.
.venv\Lib\site-packages\coverage\parser.py:1218:                isinstance(pattern, ast.MatchAs) and pattern.pattern is None and case.guard is None  # pylint: disable=undefined-loop-variable
.venv\Lib\site-packages\cyclonedx\model\vulnerability.py:546:            return 'OWASP Risk'
.venv\Lib\site-packages\cyclonedx\model\vulnerability.py:688:        The risk scoring methodology/standard used.
.venv\Lib\site-packages\distlib\database.py:902:                if not r.constraints:
.venv\Lib\site-packages\distlib\database.py:905:                    cons = ', '.join('%s%s' % c for c in r.constraints)
.venv\Lib\site-packages\distlib\locators.py:1020:                    # for specific constraints, we only return something if
.venv\Lib\site-packages\distlib\metadata.py:445:                if not scheme.is_valid_constraint_list(value):
.venv\Lib\site-packages\distlib\metadata.py:512:        def are_valid_constraints(value):
.venv\Lib\site-packages\distlib\metadata.py:518:        for fields, controller in ((_PREDICATE_FIELDS, are_valid_constraints),
.venv\Lib\site-packages\distlib\metadata.py:519:                                   (_VERSIONS_FIELDS, scheme.is_valid_constraint_list), (_VERSION_FIELDS,
.venv\Lib\site-packages\distlib\util.py:223:                            raise SyntaxError('invalid constraint: %s' % ver_remaining)
.venv\Lib\site-packages\distlib\util.py:244:                        raise SyntaxError('invalid constraint: %s' % s)
.venv\Lib\site-packages\distlib\util.py:248:                        raise SyntaxError('invalid constraint: %s' % s)
.venv\Lib\site-packages\distlib\util.py:265:    return Container(name=distname, extras=extras, constraints=versions, marker=mark_expr, url=uri, requirement=rs)
.venv\Lib\site-packages\distlib\version.py:110:        if r.constraints:
.venv\Lib\site-packages\distlib\version.py:112:            for op, s in r.constraints:
.venv\Lib\site-packages\distlib\version.py:116:                                         '%r constraints' % op)
.venv\Lib\site-packages\distlib\version.py:131:        Check if the provided version matches the constraints.
.venv\Lib\site-packages\distlib\version.py:138:        for operator, constraint, prefix in self._parts:
.venv\Lib\site-packages\distlib\version.py:146:            if not f(version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:318:    def _adjust_local(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:320:            strip_local = '+' not in constraint and version._parts[-1]
.venv\Lib\site-packages\distlib\version.py:322:            # both constraint and version are
.venv\Lib\site-packages\distlib\version.py:324:            # If constraint does not have a local component,
.venv\Lib\site-packages\distlib\version.py:326:            strip_local = not constraint._parts[-1] and version._parts[-1]
.venv\Lib\site-packages\distlib\version.py:330:        return version, constraint
.venv\Lib\site-packages\distlib\version.py:332:    def _match_lt(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:333:        version, constraint = self._adjust_local(version, constraint, prefix)
.venv\Lib\site-packages\distlib\version.py:334:        if version >= constraint:
.venv\Lib\site-packages\distlib\version.py:336:        release_clause = constraint._release_clause
.venv\Lib\site-packages\distlib\version.py:340:    def _match_gt(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:341:        version, constraint = self._adjust_local(version, constraint, prefix)
.venv\Lib\site-packages\distlib\version.py:342:        if version <= constraint:
.venv\Lib\site-packages\distlib\version.py:344:        release_clause = constraint._release_clause
.venv\Lib\site-packages\distlib\version.py:348:    def _match_le(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:349:        version, constraint = self._adjust_local(version, constraint, prefix)
.venv\Lib\site-packages\distlib\version.py:350:        return version <= constraint
.venv\Lib\site-packages\distlib\version.py:352:    def _match_ge(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:353:        version, constraint = self._adjust_local(version, constraint, prefix)
.venv\Lib\site-packages\distlib\version.py:354:        return version >= constraint
.venv\Lib\site-packages\distlib\version.py:356:    def _match_eq(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:357:        version, constraint = self._adjust_local(version, constraint, prefix)
.venv\Lib\site-packages\distlib\version.py:359:            result = (version == constraint)
.venv\Lib\site-packages\distlib\version.py:361:            result = _match_prefix(version, constraint)
.venv\Lib\site-packages\distlib\version.py:364:    def _match_arbitrary(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:365:        return str(version) == str(constraint)
.venv\Lib\site-packages\distlib\version.py:367:    def _match_ne(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:368:        version, constraint = self._adjust_local(version, constraint, prefix)
.venv\Lib\site-packages\distlib\version.py:370:            result = (version != constraint)
.venv\Lib\site-packages\distlib\version.py:372:            result = not _match_prefix(version, constraint)
.venv\Lib\site-packages\distlib\version.py:375:    def _match_compatible(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:376:        version, constraint = self._adjust_local(version, constraint, prefix)
.venv\Lib\site-packages\distlib\version.py:377:        if version == constraint:
.venv\Lib\site-packages\distlib\version.py:379:        if version < constraint:
.venv\Lib\site-packages\distlib\version.py:383:        release_clause = constraint._release_clause
.venv\Lib\site-packages\distlib\version.py:636:    def _match_compatible(self, version, constraint, prefix):
.venv\Lib\site-packages\distlib\version.py:637:        if version < constraint:
.venv\Lib\site-packages\distlib\version.py:639:        m = self.numeric_re.match(str(constraint))
.venv\Lib\site-packages\distlib\version.py:642:                           ' and constraint %s', version, constraint)
.venv\Lib\site-packages\distlib\version.py:719:    def is_valid_constraint_list(self, s):
.venv\Lib\site-packages\dotenv\main.py:158:    If the .env path given doesn't exist, fails instead of risking creating
.venv\Lib\site-packages\git\cmd.py:510:            # END handle size constraint
.venv\Lib\site-packages\git\cmd.py:1295:            # Replace with a typeguard for Popen[bytes]?
.venv\Lib\site-packages\git\config.py:8:__all__ = ["GitConfigParser", "SectionConstraint"]
.venv\Lib\site-packages\git\config.py:138:class SectionConstraint(Generic[T_ConfigParser]):
.venv\Lib\site-packages\git\config.py:194:    def __enter__(self) -> "SectionConstraint[T_ConfigParser]":
.venv\Lib\site-packages\git\remote.py:16:from git.config import GitConfigParser, SectionConstraint, cp
.venv\Lib\site-packages\git\remote.py:588:            self._config_reader = SectionConstraint(
.venv\Lib\site-packages\git\remote.py:1213:    def config_reader(self) -> SectionConstraint[GitConfigParser]:
.venv\Lib\site-packages\git\remote.py:1230:    def config_writer(self) -> SectionConstraint:
.venv\Lib\site-packages\git\remote.py:1248:        return SectionConstraint(writer, self._config_section_name())
.venv\Lib\site-packages\git\util.py:91:    from git.config import GitConfigParser, SectionConstraint
.venv\Lib\site-packages\git\util.py:846:        config_reader: Union[None, "GitConfigParser", "SectionConstraint"] = None,
.venv\Lib\site-packages\git\util.py:882:    def committer(cls, config_reader: Union[None, "GitConfigParser", "SectionConstraint"] = None) -> "Actor":
.venv\Lib\site-packages\git\util.py:897:    def author(cls, config_reader: Union[None, "GitConfigParser", "SectionConstraint"] = None) -> "Actor":
.venv\Lib\site-packages\git\index\fun.py:224:    # def is_entry_key_tup(entry_key: Tuple) -> TypeGuard[Tuple[PathLike, int]]:
.venv\Lib\site-packages\git\objects\commit.py:526:        # def is_proc(inp) -> TypeGuard[Popen]:
.venv\Lib\site-packages\git\objects\commit.py:529:        # def is_stream(inp) -> TypeGuard[IO]:
.venv\Lib\site-packages\git\objects\tree.py:322:        # def is_tree_traversed(inp: Tuple) -> TypeGuard[Tuple[Iterator[Union['Tree', 'Blob', 'Submodule']]]]:
.venv\Lib\site-packages\git\objects\util.py:241:            utcoffset = cast(timedelta, string_date.utcoffset())  # typeguard, if tzinfoand is not None
.venv\Lib\site-packages\git\objects\util.py:676:        # from git.types import TypeGuard
.venv\Lib\site-packages\git\objects\util.py:677:        # def is_commit_traversed(inp: Tuple) -> TypeGuard[Tuple[Iterator[Tuple['Commit', 'Commit']]]]:
.venv\Lib\site-packages\git\objects\submodule\base.py:19:from git.config import GitConfigParser, SectionConstraint, cp
.venv\Lib\site-packages\git\objects\submodule\base.py:170:            reader: SectionConstraint = self.config_reader()
.venv\Lib\site-packages\git\objects\submodule\base.py:293:    def _config_parser_constrained(self, read_only: bool) -> SectionConstraint:
.venv\Lib\site-packages\git\objects\submodule\base.py:302:        return SectionConstraint(parser, sm_section(self.name))
.venv\Lib\site-packages\git\objects\submodule\base.py:616:        writer: Union[GitConfigParser, SectionConstraint]
.venv\Lib\site-packages\git\objects\submodule\base.py:1326:    ) -> SectionConstraint["SubmoduleConfigParser"]:
.venv\Lib\site-packages\git\objects\submodule\base.py:1550:    def config_reader(self) -> SectionConstraint[SubmoduleConfigParser]:
.venv\Lib\site-packages\git\refs\head.py:11:from git.config import GitConfigParser, SectionConstraint
.venv\Lib\site-packages\git\refs\head.py:279:    def _config_parser(self, read_only: bool) -> SectionConstraint[GitConfigParser]:
.venv\Lib\site-packages\git\refs\head.py:286:        return SectionConstraint(parser, 'branch "%s"' % self.name)
.venv\Lib\site-packages\git\refs\head.py:288:    def config_reader(self) -> SectionConstraint[GitConfigParser]:
.venv\Lib\site-packages\git\refs\head.py:296:    def config_writer(self) -> SectionConstraint[GitConfigParser]:
.venv\Lib\site-packages\git\refs\log.py:36:    from git.config import GitConfigParser, SectionConstraint
.venv\Lib\site-packages\git\refs\log.py:301:        config_reader: Union[Actor, "GitConfigParser", "SectionConstraint", None],
.venv\Lib\site-packages\git\refs\remote.py:45:        # END handle remote constraint
.venv\Lib\site-packages\git\refs\symbolic.py:184:                    f" colons (:), question marks (?), asterisks (*), open brackets ([) or backslashes (\\)"
.venv\Lib\site-packages\gitdb\stream.py:52:    A constraint on the total size of bytes is activated, simulating
.venv\Lib\site-packages\h2\config.py:204:        Enforces constraints on the value of header encoding.
.venv\Lib\site-packages\h2\connection.py:65:from .utilities import SizeLimitDict, guard_increment_window
.venv\Lib\site-packages\h2\connection.py:283:    constraints of those state machines are met as well. Attempts to create
.venv\Lib\site-packages\h2\connection.py:1477:            stream.outbound_flow_control_window = guard_increment_window(
.venv\Lib\site-packages\h2\connection.py:1805:            self.outbound_flow_control_window = guard_increment_window(
.venv\Lib\site-packages\h2\exceptions.py:57:    An attempted action violates flow control constraints.
.venv\Lib\site-packages\h2\stream.py:38:    guard_increment_window,
.venv\Lib\site-packages\h2\stream.py:1149:                self.outbound_flow_control_window = guard_increment_window(
.venv\Lib\site-packages\h2\utilities.py:73:    Certain headers are at risk of being attacked during the header compression
.venv\Lib\site-packages\h2\utilities.py:86:    These fields are the most at-risk. These rules are inspired by Firefox
.venv\Lib\site-packages\h2\utilities.py:131:def guard_increment_window(current: int, increment: int) -> int:
.venv\Lib\site-packages\h2\utilities.py:133:    Increments a flow control window, guarding against that window becoming too
.venv\Lib\site-packages\h2\utilities.py:184:    Validates a header sequence against a set of constraints from RFC 7540.
.venv\Lib\site-packages\h2\utilities.py:421:    # TODO: We should also guard against receiving duplicate Host headers,
.venv\Lib\site-packages\h2\windows.py:104:           the risk of blocking a stream altogether.
.venv\Lib\site-packages\httpcore\_async\http2.py:89:            # It's in place simply for resilience as a guard against incorrect
.venv\Lib\site-packages\httpcore\_sync\http2.py:89:            # It's in place simply for resilience as a guard against incorrect
.venv\Lib\site-packages\hyperframe\frame.py:411:    endpoints communicate. The parameters are either constraints on peer
.venv\Lib\site-packages\identify\vendor\licenses.py:105:a particular purpose. THE ENTIRE RISK AS TO THE QUALITY OF THE ORIGINAL WORK
.venv\Lib\site-packages\identify\vendor\licenses.py:791:PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
.venv\Lib\site-packages\identify\vendor\licenses.py:1014:      risks associated with Your exercise of permissions under this License.
.venv\Lib\site-packages\identify\vendor\licenses.py:2512:redistributing the Work and assume any risks associated with Your exercise of
.venv\Lib\site-packages\identify\vendor\licenses.py:2708:and distributing the Program and assumes all risks associated with its
.venv\Lib\site-packages\identify\vendor\licenses.py:2710:risks and costs of program errors, compliance with applicable laws, damage to
.venv\Lib\site-packages\identify\vendor\licenses.py:2972:risks associated with its exercise of rights under this Agreement,
.venv\Lib\site-packages\identify\vendor\licenses.py:2973:including but not limited to the risks and costs of program errors,
.venv\Lib\site-packages\identify\vendor\licenses.py:3914:MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
.venv\Lib\site-packages\identify\vendor\licenses.py:4589:PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
.venv\Lib\site-packages\identify\vendor\licenses.py:5135:PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
.venv\Lib\site-packages\identify\vendor\licenses.py:5583:particular purpose.  The entire risk as to the quality and performance
.venv\Lib\site-packages\identify\vendor\licenses.py:6087:*  particular purpose or non-infringing. The entire risk as to the     *
.venv\Lib\site-packages\identify\vendor\licenses.py:6242:     (E) The software is licensed "as-is." You bear the risk of using it. The
.venv\Lib\site-packages\identify\vendor\licenses.py:6311:     (F) The software is licensed "as-is." You bear the risk of using it. The
.venv\Lib\site-packages\identify\vendor\licenses.py:6522:a particular purpose. THE ENTIRE RISK AS TO THE QUALITY OF THE ORIGINAL WORK
.venv\Lib\site-packages\isort\main.py:1232:                continue  # pragma: no cover - shouldn't happen, satisfies type constraint
.venv\Lib\site-packages\lxml\ElementInclude.py:148:#     Limited to reduce the risk of malicious content explosion.
.venv\Lib\site-packages\mypy\applytype.py:93:    bound or constraints, instead of giving an error.
.venv\Lib\site-packages\mypy\applytype.py:139:    # Apply arguments to TypeGuard if any.
.venv\Lib\site-packages\mypy\applytype.py:140:    if callable.type_guard is not None:
.venv\Lib\site-packages\mypy\applytype.py:141:        type_guard = expand_type(callable.type_guard, id_to_type)
.venv\Lib\site-packages\mypy\applytype.py:143:        type_guard = None
.venv\Lib\site-packages\mypy\applytype.py:154:        type_guard=type_guard,
.venv\Lib\site-packages\mypy\checker.py:39:from mypy.constraints import SUPERTYPE_OF
.venv\Lib\site-packages\mypy\checker.py:203:    TypeGuardedType,
.venv\Lib\site-packages\mypy\checker.py:788:                        return_constraint_direction=SUPERTYPE_OF,
.venv\Lib\site-packages\mypy\checker.py:2175:                if original.type_guard is not None and override.type_guard is None:
.venv\Lib\site-packages\mypy\checker.py:5044:            # guard expressions.
.venv\Lib\site-packages\mypy\checker.py:5050:            for p, g, b in zip(s.patterns, s.guards, s.bodies):
.venv\Lib\site-packages\mypy\checker.py:5075:                            guard_map, guard_else_map = self.find_isinstance_check(g)
.venv\Lib\site-packages\mypy\checker.py:5076:                            else_map = or_conditional_maps(else_map, guard_else_map)
.venv\Lib\site-packages\mypy\checker.py:5078:                            # If the guard narrowed the subject, copy the narrowed types over
.venv\Lib\site-packages\mypy\checker.py:5082:                                    for type_map in (guard_map, else_map):
.venv\Lib\site-packages\mypy\checker.py:5093:                            self.push_type_map(guard_map)
.venv\Lib\site-packages\mypy\checker.py:5601:        Also includes TypeGuard functions.
.venv\Lib\site-packages\mypy\checker.py:5653:                if node.callee.type_guard is not None:
.venv\Lib\site-packages\mypy\checker.py:5672:                            self.fail(message_registry.TYPE_GUARD_POS_ARG_REQUIRED, node)
.venv\Lib\site-packages\mypy\checker.py:5676:                        # Namely, for isinstance() we use a normal meet, while TypeGuard is
.venv\Lib\site-packages\mypy\checker.py:5680:                        return {expr: TypeGuardedType(node.callee.type_guard)}, {}
.venv\Lib\site-packages\mypy\checkexpr.py:1454:            and proper_callee.type_guard is not None
.venv\Lib\site-packages\mypy\checkexpr.py:1457:            e.callee.type_guard = proper_callee.type_guard
.venv\Lib\site-packages\mypy\checkexpr.py:1912:                    # we solve type constraints inferred from arguments using unions instead
.venv\Lib\site-packages\mypy\checkexpr.py:1960:            #   * We need to support constraints like [1 <: 2, 2 <: X], i.e. with variables
.venv\Lib\site-packages\mypy\checkexpr.py:2231:                    # likely to infer good constraints, for example if we have:
.venv\Lib\site-packages\mypy\checkexpr.py:5246:            # are generic, since new inference algorithm can handle constraints
.venv\Lib\site-packages\mypy\checkexpr.py:5265:        if callable_ctx.type_guard is not None:
.venv\Lib\site-packages\mypy\checkexpr.py:5266:            # Lambda's return type cannot be treated as a `TypeGuard`,
.venv\Lib\site-packages\mypy\checkexpr.py:5267:            # because it is implicit. And `TypeGuard`s must be explicit.
.venv\Lib\site-packages\mypy\checkexpr.py:5974:                self.chk.fail("TypeVar default must be one of the constraint types", e)
.venv\Lib\site-packages\mypy\checkexpr.py:6268:        # without risking an infinite recursion, just give up for now.
.venv\Lib\site-packages\mypy\checkmember.py:554:                # the guard this search will always find object.__getattribute__ and conclude
.venv\Lib\site-packages\mypy\constraints.py:1:"""Type inference constraints."""
.venv\Lib\site-packages\mypy\constraints.py:70:class Constraint:
.venv\Lib\site-packages\mypy\constraints.py:71:    """A representation of a type constraint.
.venv\Lib\site-packages\mypy\constraints.py:84:        # UnpackType is a synthetic type, and is never valid as a constraint target.
.venv\Lib\site-packages\mypy\constraints.py:88:        # TODO: A cleaner solution may be to modify the return type of infer_constraints()
.venv\Lib\site-packages\mypy\constraints.py:102:        if not isinstance(other, Constraint):
.venv\Lib\site-packages\mypy\constraints.py:107:def infer_constraints_for_callable(
.venv\Lib\site-packages\mypy\constraints.py:114:) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:115:    """Infer type variable constraints for a callable and actual arguments.
.venv\Lib\site-packages\mypy\constraints.py:117:    Return a list of constraints.
.venv\Lib\site-packages\mypy\constraints.py:119:    constraints: list[Constraint] = []
.venv\Lib\site-packages\mypy\constraints.py:131:                # We can't use arguments to infer ParamSpec constraint, if only some
.venv\Lib\site-packages\mypy\constraints.py:142:            # and we want a constraint that the typevar tuple being unpacked
.venv\Lib\site-packages\mypy\constraints.py:152:                assert False, "mypy bug: unhandled constraint inference case"
.venv\Lib\site-packages\mypy\constraints.py:178:                constraints.append(
.venv\Lib\site-packages\mypy\constraints.py:179:                    Constraint(
.venv\Lib\site-packages\mypy\constraints.py:195:                    constraints.append(
.venv\Lib\site-packages\mypy\constraints.py:196:                        Constraint(
.venv\Lib\site-packages\mypy\constraints.py:211:                        constraints.extend(
.venv\Lib\site-packages\mypy\constraints.py:212:                            infer_constraints(inner_unpacked_type.args[0], at, SUPERTYPE_OF)
.venv\Lib\site-packages\mypy\constraints.py:217:                        constraints.extend(infer_constraints(tt, at, SUPERTYPE_OF))
.venv\Lib\site-packages\mypy\constraints.py:219:                assert False, "mypy bug: unhandled constraint inference case"
.venv\Lib\site-packages\mypy\constraints.py:235:                    # constraints, instead store them and infer single constraint at the end.
.venv\Lib\site-packages\mypy\constraints.py:249:                    c = infer_constraints(callee.arg_types[i], actual_type, SUPERTYPE_OF)
.venv\Lib\site-packages\mypy\constraints.py:250:                    constraints.extend(c)
.venv\Lib\site-packages\mypy\constraints.py:253:        and not any(c.type_var == param_spec.id for c in constraints)
.venv\Lib\site-packages\mypy\constraints.py:256:        # Use ParamSpec constraint from arguments only if there are no other constraints,
.venv\Lib\site-packages\mypy\constraints.py:258:        constraints.append(
.venv\Lib\site-packages\mypy\constraints.py:259:            Constraint(
.venv\Lib\site-packages\mypy\constraints.py:270:    return constraints
.venv\Lib\site-packages\mypy\constraints.py:273:def infer_constraints(
.venv\Lib\site-packages\mypy\constraints.py:275:) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:276:    """Infer type constraints.
.venv\Lib\site-packages\mypy\constraints.py:294:    The constraints are represented as Constraint objects. If skip_neg_op == True,
.venv\Lib\site-packages\mypy\constraints.py:295:    then skip adding reverse (polymorphic) constraints (since this is already a call
.venv\Lib\site-packages\mypy\constraints.py:296:    to infer such constraints).
.venv\Lib\site-packages\mypy\constraints.py:311:        res = _infer_constraints(template, actual, direction, skip_neg_op)
.venv\Lib\site-packages\mypy\constraints.py:314:    return _infer_constraints(template, actual, direction, skip_neg_op)
.venv\Lib\site-packages\mypy\constraints.py:317:def _infer_constraints(
.venv\Lib\site-packages\mypy\constraints.py:319:) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:339:    # If the template is simply a type variable, emit a Constraint directly.
.venv\Lib\site-packages\mypy\constraints.py:344:    #     T :> U2", but they are not equivalent to the constraint solver,
.venv\Lib\site-packages\mypy\constraints.py:347:        return [Constraint(template, direction, actual)]
.venv\Lib\site-packages\mypy\constraints.py:363:    # must be a subtype of that type, so concatenate the constraints.
.venv\Lib\site-packages\mypy\constraints.py:367:            res.extend(infer_constraints(t_item, actual, direction))
.venv\Lib\site-packages\mypy\constraints.py:372:            res.extend(infer_constraints(orig_template, a_item, direction))
.venv\Lib\site-packages\mypy\constraints.py:382:        # We infer constraints eagerly -- try to find constraints for a type
.venv\Lib\site-packages\mypy\constraints.py:385:        return any_constraints(
.venv\Lib\site-packages\mypy\constraints.py:386:            [infer_constraints_if_possible(template, a_item, direction) for a_item in items],
.venv\Lib\site-packages\mypy\constraints.py:393:        result = any_constraints(
.venv\Lib\site-packages\mypy\constraints.py:395:                infer_constraints_if_possible(t_item, actual, direction)
.venv\Lib\site-packages\mypy\constraints.py:406:    # Remaining cases are handled by ConstraintBuilderVisitor.
.venv\Lib\site-packages\mypy\constraints.py:407:    return template.accept(ConstraintBuilderVisitor(actual, direction, skip_neg_op))
.venv\Lib\site-packages\mypy\constraints.py:410:def infer_constraints_if_possible(
.venv\Lib\site-packages\mypy\constraints.py:412:) -> list[Constraint] | None:
.venv\Lib\site-packages\mypy\constraints.py:413:    """Like infer_constraints, but return None if the input relation is
.venv\Lib\site-packages\mypy\constraints.py:415:    (In this case infer_constraints would return [], just like it would for
.venv\Lib\site-packages\mypy\constraints.py:432:    return infer_constraints(template, actual, direction)
.venv\Lib\site-packages\mypy\constraints.py:435:def select_trivial(options: Sequence[list[Constraint] | None]) -> list[list[Constraint]]:
.venv\Lib\site-packages\mypy\constraints.py:436:    """Select only those lists where each item is a constraint against Any."""
.venv\Lib\site-packages\mypy\constraints.py:446:def merge_with_any(constraint: Constraint) -> Constraint:
.venv\Lib\site-packages\mypy\constraints.py:447:    """Transform a constraint target into a union with given Any type."""
.venv\Lib\site-packages\mypy\constraints.py:448:    target = constraint.target
.venv\Lib\site-packages\mypy\constraints.py:451:        return constraint
.venv\Lib\site-packages\mypy\constraints.py:454:    return Constraint(
.venv\Lib\site-packages\mypy\constraints.py:455:        constraint.origin_type_var,
.venv\Lib\site-packages\mypy\constraints.py:456:        constraint.op,
.venv\Lib\site-packages\mypy\constraints.py:461:def handle_recursive_union(template: UnionType, actual: Type, direction: int) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:465:    # constraints for each item. Normally we give up in such case, but here we instead split
.venv\Lib\site-packages\mypy\constraints.py:469:    return infer_constraints(
.venv\Lib\site-packages\mypy\constraints.py:471:    ) or infer_constraints(UnionType.make_union(type_var_items), actual, direction)
.venv\Lib\site-packages\mypy\constraints.py:474:def any_constraints(options: list[list[Constraint] | None], eager: bool) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:475:    """Deduce what we can from a collection of constraint lists.
.venv\Lib\site-packages\mypy\constraints.py:479:    constraint and is ignored.  Ignore empty constraint lists if eager
.venv\Lib\site-packages\mypy\constraints.py:493:    if all(is_same_constraints(valid_options[0], c) for c in valid_options[1:]):
.venv\Lib\site-packages\mypy\constraints.py:494:        # Multiple sets of constraints that are all the same. Just pick any one of them.
.venv\Lib\site-packages\mypy\constraints.py:497:    if all(is_similar_constraints(valid_options[0], c) for c in valid_options[1:]):
.venv\Lib\site-packages\mypy\constraints.py:509:                    merged_option: list[Constraint] | None = [merge_with_any(c) for c in option]
.venv\Lib\site-packages\mypy\constraints.py:513:            return any_constraints(list(merged_options), eager)
.venv\Lib\site-packages\mypy\constraints.py:515:    # If normal logic didn't work, try excluding trivially unsatisfiable constraint (due to
.venv\Lib\site-packages\mypy\constraints.py:519:        return any_constraints(filtered_options, eager=eager)
.venv\Lib\site-packages\mypy\constraints.py:526:def filter_satisfiable(option: list[Constraint] | None) -> list[Constraint] | None:
.venv\Lib\site-packages\mypy\constraints.py:527:    """Keep only constraints that can possibly be satisfied.
.venv\Lib\site-packages\mypy\constraints.py:529:    Currently, we filter out constraints where target is not a subtype of the upper bound.
.venv\Lib\site-packages\mypy\constraints.py:549:def is_same_constraints(x: list[Constraint], y: list[Constraint]) -> bool:
.venv\Lib\site-packages\mypy\constraints.py:551:        if not any(is_same_constraint(c1, c2) for c2 in y):
.venv\Lib\site-packages\mypy\constraints.py:554:        if not any(is_same_constraint(c1, c2) for c2 in x):
.venv\Lib\site-packages\mypy\constraints.py:559:def is_same_constraint(c1: Constraint, c2: Constraint) -> bool:
.venv\Lib\site-packages\mypy\constraints.py:560:    # Ignore direction when comparing constraints against Any.
.venv\Lib\site-packages\mypy\constraints.py:571:def is_similar_constraints(x: list[Constraint], y: list[Constraint]) -> bool:
.venv\Lib\site-packages\mypy\constraints.py:572:    """Check that two lists of constraints have similar structure.
.venv\Lib\site-packages\mypy\constraints.py:575:    ignore the target). Except for constraints where target is Any type, there
.venv\Lib\site-packages\mypy\constraints.py:578:    return _is_similar_constraints(x, y) and _is_similar_constraints(y, x)
.venv\Lib\site-packages\mypy\constraints.py:581:def _is_similar_constraints(x: list[Constraint], y: list[Constraint]) -> bool:
.venv\Lib\site-packages\mypy\constraints.py:582:    """Check that every constraint in the first list has a similar one in the second.
.venv\Lib\site-packages\mypy\constraints.py:589:            # Ignore direction when either constraint is against Any.
.venv\Lib\site-packages\mypy\constraints.py:626:class ConstraintBuilderVisitor(TypeVisitor[List[Constraint]]):
.venv\Lib\site-packages\mypy\constraints.py:627:    """Visitor class for inferring type constraints."""
.venv\Lib\site-packages\mypy\constraints.py:644:    def visit_unbound_type(self, template: UnboundType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:647:    def visit_any(self, template: AnyType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:650:    def visit_none_type(self, template: NoneType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:653:    def visit_uninhabited_type(self, template: UninhabitedType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:656:    def visit_erased_type(self, template: ErasedType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:659:    def visit_deleted_type(self, template: DeletedType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:662:    def visit_literal_type(self, template: LiteralType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:667:    def visit_partial_type(self, template: PartialType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:673:    def visit_type_var(self, template: TypeVarType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:675:            "Unexpected TypeVarType in ConstraintBuilderVisitor"
.venv\Lib\site-packages\mypy\constraints.py:676:            " (should have been handled in infer_constraints)"
.venv\Lib\site-packages\mypy\constraints.py:679:    def visit_param_spec(self, template: ParamSpecType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:683:    def visit_type_var_tuple(self, template: TypeVarTupleType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:686:    def visit_unpack_type(self, template: UnpackType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:689:    def visit_parameters(self, template: Parameters) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:695:            # For polymorphic inference we need to be able to infer secondary constraints
.venv\Lib\site-packages\mypy\constraints.py:697:            return infer_callable_arguments_constraints(template, self.actual, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:702:    def visit_instance(self, template: Instance) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:704:        res: list[Constraint] = []
.venv\Lib\site-packages\mypy\constraints.py:715:                        subres = infer_constraints(call, actual, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:729:                        self.infer_constraints_from_protocol_members(
.venv\Lib\site-packages\mypy\constraints.py:741:                    self.infer_constraints_from_protocol_members(
.venv\Lib\site-packages\mypy\constraints.py:746:                # Infer constraints for Type[T] via metaclass of T when it makes sense.
.venv\Lib\site-packages\mypy\constraints.py:752:                        self.infer_constraints_from_protocol_members(
.venv\Lib\site-packages\mypy\constraints.py:799:                        # The constraints for generic type parameters depend on variance.
.venv\Lib\site-packages\mypy\constraints.py:800:                        # Include constraints from both directions if invariant.
.venv\Lib\site-packages\mypy\constraints.py:802:                            res.extend(infer_constraints(mapped_arg, instance_arg, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:805:                                infer_constraints(mapped_arg, instance_arg, neg_op(self.direction))
.venv\Lib\site-packages\mypy\constraints.py:811:                            # TODO: constraints between prefixes using
.venv\Lib\site-packages\mypy\constraints.py:812:                            # infer_callable_arguments_constraints()
.venv\Lib\site-packages\mypy\constraints.py:818:                            res.append(Constraint(mapped_arg, SUBTYPE_OF, suffix))
.venv\Lib\site-packages\mypy\constraints.py:819:                            res.append(Constraint(mapped_arg, SUPERTYPE_OF, suffix))
.venv\Lib\site-packages\mypy\constraints.py:828:                            res.append(Constraint(mapped_arg, SUBTYPE_OF, suffix))
.venv\Lib\site-packages\mypy\constraints.py:829:                            res.append(Constraint(mapped_arg, SUPERTYPE_OF, suffix))
.venv\Lib\site-packages\mypy\constraints.py:832:                        res.extend(infer_constraints(mapped_arg, instance_arg, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:863:                        # The constraints for generic type parameters depend on variance.
.venv\Lib\site-packages\mypy\constraints.py:864:                        # Include constraints from both directions if invariant.
.venv\Lib\site-packages\mypy\constraints.py:866:                            res.extend(infer_constraints(template_arg, mapped_arg, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:869:                                infer_constraints(template_arg, mapped_arg, neg_op(self.direction))
.venv\Lib\site-packages\mypy\constraints.py:877:                            # TODO: constraints between prefixes using
.venv\Lib\site-packages\mypy\constraints.py:878:                            # infer_callable_arguments_constraints()
.venv\Lib\site-packages\mypy\constraints.py:884:                            res.append(Constraint(template_arg, SUBTYPE_OF, suffix))
.venv\Lib\site-packages\mypy\constraints.py:885:                            res.append(Constraint(template_arg, SUPERTYPE_OF, suffix))
.venv\Lib\site-packages\mypy\constraints.py:894:                            res.append(Constraint(template_arg, SUBTYPE_OF, suffix))
.venv\Lib\site-packages\mypy\constraints.py:895:                            res.append(Constraint(template_arg, SUPERTYPE_OF, suffix))
.venv\Lib\site-packages\mypy\constraints.py:898:                        res.extend(infer_constraints(template_arg, mapped_arg, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:907:                # It never produces any "false" constraints but gives up soon
.venv\Lib\site-packages\mypy\constraints.py:917:                    self.infer_constraints_from_protocol_members(
.venv\Lib\site-packages\mypy\constraints.py:933:                    self.infer_constraints_from_protocol_members(
.venv\Lib\site-packages\mypy\constraints.py:960:                cb = infer_constraints(template.args[0], item, SUPERTYPE_OF)
.venv\Lib\site-packages\mypy\constraints.py:964:            return infer_constraints(template, mypy.typeops.tuple_fallback(actual), self.direction)
.venv\Lib\site-packages\mypy\constraints.py:967:                return infer_constraints(template, actual.upper_bound, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:970:            return infer_constraints(template, actual.upper_bound, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:976:    def infer_constraints_from_protocol_members(
.venv\Lib\site-packages\mypy\constraints.py:983:    ) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:984:        """Infer constraints for situations where either 'template' or 'instance' is a protocol.
.venv\Lib\site-packages\mypy\constraints.py:1000:            res.extend(infer_constraints(temp, inst, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:1002:                # Settable members are invariant, add opposite constraints
.venv\Lib\site-packages\mypy\constraints.py:1003:                res.extend(infer_constraints(temp, inst, neg_op(self.direction)))
.venv\Lib\site-packages\mypy\constraints.py:1006:    def visit_callable_type(self, template: CallableType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1010:        # TODO: check that callables match? Ideally we should not infer constraints
.venv\Lib\site-packages\mypy\constraints.py:1015:            res: list[Constraint] = []
.venv\Lib\site-packages\mypy\constraints.py:1020:            if template.type_guard is not None:
.venv\Lib\site-packages\mypy\constraints.py:1021:                template_ret_type = template.type_guard
.venv\Lib\site-packages\mypy\constraints.py:1022:            if cactual.type_guard is not None:
.venv\Lib\site-packages\mypy\constraints.py:1023:                cactual_ret_type = cactual.type_guard
.venv\Lib\site-packages\mypy\constraints.py:1024:            res.extend(infer_constraints(template_ret_type, cactual_ret_type, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:1039:                    # If the actual callable is generic, infer constraints in the opposite
.venv\Lib\site-packages\mypy\constraints.py:1043:                        infer_constraints(
.venv\Lib\site-packages\mypy\constraints.py:1049:                # We can't infer constraints from arguments if the template is Callable[..., T]
.venv\Lib\site-packages\mypy\constraints.py:1062:                        unpack_constraints = build_constraints_for_simple_unpack(
.venv\Lib\site-packages\mypy\constraints.py:1065:                        res.extend(unpack_constraints)
.venv\Lib\site-packages\mypy\constraints.py:1070:                            infer_callable_arguments_constraints(template, cactual, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1080:                        infer_constraints(
.venv\Lib\site-packages\mypy\constraints.py:1093:                    infer_callable_arguments_constraints(prefix, cactual_prefix, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1103:                    # This logic matches top-level callable constraint exception, if we managed
.venv\Lib\site-packages\mypy\constraints.py:1104:                    # to get other constraints for ParamSpec, don't infer one with imprecise kinds
.venv\Lib\site-packages\mypy\constraints.py:1129:                    res.append(Constraint(param_spec, self.direction, param_spec_target))
.venv\Lib\site-packages\mypy\constraints.py:1142:                    Constraint(
.venv\Lib\site-packages\mypy\constraints.py:1148:            res.extend(infer_constraints(template.ret_type, any_type, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:1153:            return infer_constraints(template.ret_type, self.actual.item, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1161:                return infer_constraints(template, call, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1169:    ) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1170:        # Create constraints by matching an overloaded type against a template.
.venv\Lib\site-packages\mypy\constraints.py:1176:        return infer_constraints(template, item, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1178:    def visit_tuple_type(self, template: TupleType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1186:            res: list[Constraint] = []
.venv\Lib\site-packages\mypy\constraints.py:1196:                            Constraint(type_var=unpacked_type, op=self.direction, target=actual)
.venv\Lib\site-packages\mypy\constraints.py:1203:                        res = infer_constraints(unpacked_type, actual, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1210:                        res.extend(infer_constraints(ti, actual.args[0], self.direction))
.venv\Lib\site-packages\mypy\constraints.py:1214:                    unpack_constraints = build_constraints_for_simple_unpack(
.venv\Lib\site-packages\mypy\constraints.py:1219:                    res.extend(unpack_constraints)
.venv\Lib\site-packages\mypy\constraints.py:1243:                                    infer_constraints(tm, a_unpacked.args[0], self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1262:                    return res + infer_constraints(
.venv\Lib\site-packages\mypy\constraints.py:1267:                        infer_constraints(template_items[i], actual_items[i], self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1275:    def visit_typeddict_type(self, template: TypedDictType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1278:            res: list[Constraint] = []
.venv\Lib\site-packages\mypy\constraints.py:1282:                res.extend(infer_constraints(template_item_type, actual_item_type, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:1289:    def visit_union_type(self, template: UnionType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1291:            "Unexpected UnionType in ConstraintBuilderVisitor"
.venv\Lib\site-packages\mypy\constraints.py:1292:            " (should have been handled in infer_constraints)"
.venv\Lib\site-packages\mypy\constraints.py:1295:    def visit_type_alias_type(self, template: TypeAliasType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1298:    def infer_against_any(self, types: Iterable[Type], any_type: AnyType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1299:        res: list[Constraint] = []
.venv\Lib\site-packages\mypy\constraints.py:1303:                    res.append(Constraint(t.type, self.direction, any_type))
.venv\Lib\site-packages\mypy\constraints.py:1307:                    res.extend(infer_constraints(unpacked, any_type, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:1311:                # irrelevant in most cases, see e.g. is_same_constraint().
.venv\Lib\site-packages\mypy\constraints.py:1312:                res.extend(infer_constraints(t, any_type, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:1315:    def visit_overloaded(self, template: Overloaded) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1320:        res: list[Constraint] = []
.venv\Lib\site-packages\mypy\constraints.py:1322:            res.extend(infer_constraints(t, self.actual, self.direction))
.venv\Lib\site-packages\mypy\constraints.py:1325:    def visit_type_type(self, template: TypeType) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1327:            return infer_constraints(template.item, self.actual.ret_type, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1329:            return infer_constraints(template.item, self.actual.items[0].ret_type, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1331:            return infer_constraints(template.item, self.actual.item, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1333:            return infer_constraints(template.item, self.actual, self.direction)
.venv\Lib\site-packages\mypy\constraints.py:1432:def build_constraints_for_simple_unpack(
.venv\Lib\site-packages\mypy\constraints.py:1434:) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1435:    """Infer constraints between two lists of types with variadic items.
.venv\Lib\site-packages\mypy\constraints.py:1441:    constraints, also we can only infer constraints for variadic template item, if template
.venv\Lib\site-packages\mypy\constraints.py:1468:                    Constraint(
.venv\Lib\site-packages\mypy\constraints.py:1486:    # Handle constraints from prefixes/suffixes first.
.venv\Lib\site-packages\mypy\constraints.py:1491:        res.extend(infer_constraints(t, a, direction))
.venv\Lib\site-packages\mypy\constraints.py:1494:            res.extend(infer_constraints(t, a, direction))
.venv\Lib\site-packages\mypy\constraints.py:1497:        # Add constraint(s) for variadic item when possible.
.venv\Lib\site-packages\mypy\constraints.py:1505:                    res.extend(infer_constraints(tp.args[0], a, direction))
.venv\Lib\site-packages\mypy\constraints.py:1510:                        res.extend(infer_constraints(tp.args[0], a_tp.args[0], direction))
.venv\Lib\site-packages\mypy\constraints.py:1512:            res.append(Constraint(tp, direction, TupleType(list(middle), tp.tuple_fallback)))
.venv\Lib\site-packages\mypy\constraints.py:1524:                res.extend(infer_constraints(tp.args[0], a_unpacked.args[0], direction))
.venv\Lib\site-packages\mypy\constraints.py:1528:def infer_directed_arg_constraints(left: Type, right: Type, direction: int) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1529:    """Infer constraints between two arguments using direction between original callables."""
.venv\Lib\site-packages\mypy\constraints.py:1533:        # This avoids bogus constraints like T <: P.args
.venv\Lib\site-packages\mypy\constraints.py:1538:        return infer_constraints(left, right, neg_op(direction))
.venv\Lib\site-packages\mypy\constraints.py:1540:        return infer_constraints(right, left, neg_op(direction))
.venv\Lib\site-packages\mypy\constraints.py:1543:def infer_callable_arguments_constraints(
.venv\Lib\site-packages\mypy\constraints.py:1547:) -> list[Constraint]:
.venv\Lib\site-packages\mypy\constraints.py:1548:    """Infer constraints between argument types of two callables.
.venv\Lib\site-packages\mypy\constraints.py:1553:    do not involve subtyping. Then in place of every subtype check we put an infer_constraints()
.venv\Lib\site-packages\mypy\constraints.py:1569:        res.extend(infer_directed_arg_constraints(left_star.typ, right_star.typ, direction))
.venv\Lib\site-packages\mypy\constraints.py:1571:        res.extend(infer_directed_arg_constraints(left_star2.typ, right_star2.typ, direction))
.venv\Lib\site-packages\mypy\constraints.py:1578:        res.extend(infer_directed_arg_constraints(left_arg.typ, right_arg.typ, direction))
.venv\Lib\site-packages\mypy\constraints.py:1590:                infer_directed_arg_constraints(
.venv\Lib\site-packages\mypy\constraints.py:1611:                infer_directed_arg_constraints(left_by_name.typ, right_by_name.typ, direction)
.venv\Lib\site-packages\mypy\expandtype.py:207:        # constraints, then solver may check subtyping between them, which will trigger
.venv\Lib\site-packages\mypy\expandtype.py:341:                    type_guard=(t.type_guard.accept(self) if t.type_guard is not None else None),
.venv\Lib\site-packages\mypy\expandtype.py:374:            type_guard=(t.type_guard.accept(self) if t.type_guard is not None else None),
.venv\Lib\site-packages\mypy\fastparse.py:1674:            [self.visit(c.guard) for c in n.cases],
.venv\Lib\site-packages\mypy\fixup.py:271:        if ct.type_guard is not None:
.venv\Lib\site-packages\mypy\fixup.py:272:            ct.type_guard.accept(self)
.venv\Lib\site-packages\mypy\infer.py:7:from mypy.constraints import (
.venv\Lib\site-packages\mypy\infer.py:10:    infer_constraints,
.venv\Lib\site-packages\mypy\infer.py:11:    infer_constraints_for_callable,
.venv\Lib\site-packages\mypy\infer.py:14:from mypy.solve import solve_constraints
.venv\Lib\site-packages\mypy\infer.py:55:    # Infer constraints.
.venv\Lib\site-packages\mypy\infer.py:56:    constraints = infer_constraints_for_callable(
.venv\Lib\site-packages\mypy\infer.py:60:    # Solve constraints.
.venv\Lib\site-packages\mypy\infer.py:62:    return solve_constraints(type_vars, constraints, strict, allow_polymorphic)
.venv\Lib\site-packages\mypy\infer.py:74:    constraints = infer_constraints(template, actual, SUPERTYPE_OF if is_supertype else SUBTYPE_OF)
.venv\Lib\site-packages\mypy\infer.py:75:    return solve_constraints(type_vars, constraints, skip_unsatisfied=skip_unsatisfied)[0]
.venv\Lib\site-packages\mypy\meet.py:37:    TypeGuardedType,
.venv\Lib\site-packages\mypy\meet.py:115:    if isinstance(narrowed, TypeGuardedType):  # type: ignore[misc]
.venv\Lib\site-packages\mypy\meet.py:116:        # A type guard forces the new type even if it doesn't overlap the old.
.venv\Lib\site-packages\mypy\meet.py:117:        return narrowed.type_guard
.venv\Lib\site-packages\mypy\meet.py:273:    if isinstance(left, TypeGuardedType) or isinstance(  # type: ignore[misc]
.venv\Lib\site-packages\mypy\meet.py:274:        right, TypeGuardedType
.venv\Lib\site-packages\mypy\meet.py:276:        # A type guard forces the new type even if it doesn't overlap the old.
.venv\Lib\site-packages\mypy\messages.py:2625:            if func.type_guard is not None:
.venv\Lib\site-packages\mypy\messages.py:2626:                return_type = f"TypeGuard[{format(func.type_guard)}]"
.venv\Lib\site-packages\mypy\messages.py:2780:    asterisk = False
.venv\Lib\site-packages\mypy\messages.py:2785:        if tp.arg_kinds[i].is_named() and not asterisk:
.venv\Lib\site-packages\mypy\messages.py:2787:            asterisk = True
.venv\Lib\site-packages\mypy\messages.py:2790:            asterisk = True
.venv\Lib\site-packages\mypy\messages.py:2841:    if tp.type_guard is not None:
.venv\Lib\site-packages\mypy\messages.py:2842:        s += f"TypeGuard[{format_type_bare(tp.type_guard, options)}]"
.venv\Lib\site-packages\mypy\message_registry.py:262:TYPE_GUARD_POS_ARG_REQUIRED: Final = ErrorMessage("Type guard requires positional argument")
.venv\Lib\site-packages\mypy\nodes.py:24:from typing_extensions import TypeAlias as _TypeAlias, TypeGuard
.venv\Lib\site-packages\mypy\nodes.py:1581:    __slots__ = ("subject", "patterns", "guards", "bodies")
.venv\Lib\site-packages\mypy\nodes.py:1583:    __match_args__ = ("subject", "patterns", "guards", "bodies")
.venv\Lib\site-packages\mypy\nodes.py:1587:    guards: list[Expression | None]
.venv\Lib\site-packages\mypy\nodes.py:1594:        guards: list[Expression | None],
.venv\Lib\site-packages\mypy\nodes.py:1598:        assert len(patterns) == len(guards) == len(bodies)
.venv\Lib\site-packages\mypy\nodes.py:1601:        self.guards = guards
.venv\Lib\site-packages\mypy\nodes.py:1651:def is_StrExpr_list(seq: list[Expression]) -> TypeGuard[list[StrExpr]]:
.venv\Lib\site-packages\mypy\nodes.py:1755:        "type_guard",
.venv\Lib\site-packages\mypy\nodes.py:1775:        # Cache type guard from callable_type.type_guard
.venv\Lib\site-packages\mypy\nodes.py:1776:        self.type_guard: mypy.types.Type | None = None
.venv\Lib\site-packages\mypy\nodes.py:2924:    # Ditto for temporary 'inferring' stack of recursive constraint inference.
.venv\Lib\site-packages\mypy\nodes.py:2926:    # constraints.infer_constraints(). We need 'inferring' to avoid infinite recursion for
.venv\Lib\site-packages\mypy\nodes.py:2931:    # there is a dependency infer_constraint -> is_subtype -> is_callable_subtype ->
.venv\Lib\site-packages\mypy\nodes.py:2932:    # -> infer_constraints.
.venv\Lib\site-packages\mypy\partially_defined.py:410:            guard = o.guards[i]
.venv\Lib\site-packages\mypy\partially_defined.py:411:            if guard is not None:
.venv\Lib\site-packages\mypy\partially_defined.py:412:                guard.accept(self)
.venv\Lib\site-packages\mypy\reachability.py:80:    for i, guard in enumerate(s.guards):
.venv\Lib\site-packages\mypy\reachability.py:83:        if guard is not None:
.venv\Lib\site-packages\mypy\reachability.py:84:            guard_value = infer_condition_value(guard, options)
.venv\Lib\site-packages\mypy\reachability.py:86:            guard_value = ALWAYS_TRUE
.venv\Lib\site-packages\mypy\reachability.py:88:        if pattern_value in (ALWAYS_FALSE, MYPY_FALSE) or guard_value in (
.venv\Lib\site-packages\mypy\reachability.py:94:        elif pattern_value in (ALWAYS_FALSE, MYPY_TRUE) and guard_value in (
.venv\Lib\site-packages\mypy\reachability.py:101:        if guard_value == MYPY_TRUE:
.venv\Lib\site-packages\mypy\reachability.py:321:            # TODO: Guard against a local named sys, etc.
.venv\Lib\site-packages\mypy\renaming.py:188:                guard = s.guards[i]
.venv\Lib\site-packages\mypy\renaming.py:189:                if guard is not None:
.venv\Lib\site-packages\mypy\renaming.py:190:                    guard.accept(self)
.venv\Lib\site-packages\mypy\semanal.py:871:                    # type guards need to have a positional argument, to spec
.venv\Lib\site-packages\mypy\semanal.py:873:                    if result.type_guard and ARG_POS not in result.arg_kinds[skip_self:]:
.venv\Lib\site-packages\mypy\semanal.py:875:                            "TypeGuard functions must have a positional argument",
.venv\Lib\site-packages\mypy\semanal.py:879:                        # in this case, we just kind of just ... remove the type guard.
.venv\Lib\site-packages\mypy\semanal.py:880:                        result = result.copy_modified(type_guard=None)
.venv\Lib\site-packages\mypy\semanal.py:4079:            for idx, constraint in enumerate(values, start=1):
.venv\Lib\site-packages\mypy\semanal.py:4080:                if has_any_from_unimported_type(constraint):
.venv\Lib\site-packages\mypy\semanal.py:4081:                    prefix = f"Constraint {idx}"
.venv\Lib\site-packages\mypy\semanal.py:4082:                    self.msg.unimported_type_becomes_any(prefix, constraint, s)
.venv\Lib\site-packages\mypy\semanal.py:4225:            self.fail("TypeVar cannot have only a single constraint", context)
.venv\Lib\site-packages\mypy\semanal.py:4424:        # PEP 646 does not specify the behavior of variance, constraints, or bounds.
.venv\Lib\site-packages\mypy\semanal.py:4928:            guard = s.guards[i]
.venv\Lib\site-packages\mypy\semanal.py:4929:            if guard is not None:
.venv\Lib\site-packages\mypy\semanal.py:4930:                guard.accept(self)
.venv\Lib\site-packages\mypy\semanal_pass1.py:135:        for guard in s.guards:
.venv\Lib\site-packages\mypy\semanal_pass1.py:136:            if guard is not None:
.venv\Lib\site-packages\mypy\semanal_pass1.py:137:                guard.accept(self)
.venv\Lib\site-packages\mypy\solve.py:1:"""Type inference constraint solving"""
.venv\Lib\site-packages\mypy\solve.py:9:from mypy.constraints import SUBTYPE_OF, SUPERTYPE_OF, Constraint, infer_constraints, neg_op
.venv\Lib\site-packages\mypy\solve.py:41:def solve_constraints(
.venv\Lib\site-packages\mypy\solve.py:43:    constraints: list[Constraint],
.venv\Lib\site-packages\mypy\solve.py:48:    """Solve type constraints.
.venv\Lib\site-packages\mypy\solve.py:53:    If a variable has no constraints, if strict=True then arbitrarily
.venv\Lib\site-packages\mypy\solve.py:68:    for c in constraints:
.venv\Lib\site-packages\mypy\solve.py:73:        # Constraints inferred from unions require special handling in polymorphic inference.
.venv\Lib\site-packages\mypy\solve.py:74:        constraints = skip_reverse_union_constraints(constraints)
.venv\Lib\site-packages\mypy\solve.py:76:    # Collect a list of constraints for each type variable.
.venv\Lib\site-packages\mypy\solve.py:77:    cmap: dict[TypeVarId, list[Constraint]] = {tv: [] for tv in vars + extra_vars}
.venv\Lib\site-packages\mypy\solve.py:78:    for con in constraints:
.venv\Lib\site-packages\mypy\solve.py:83:        if constraints:
.venv\Lib\site-packages\mypy\solve.py:85:                vars + extra_vars, constraints, vars, originals
.venv\Lib\site-packages\mypy\solve.py:111:            # No constraints for type variable -- 'UninhabitedType' is the most specific type.
.venv\Lib\site-packages\mypy\solve.py:124:        res = pre_validate_solutions(res, original_vars, constraints)
.venv\Lib\site-packages\mypy\solve.py:131:    constraints: list[Constraint],
.venv\Lib\site-packages\mypy\solve.py:135:    """Solve set of constraints that may depend on each other, like T <: List[S].
.venv\Lib\site-packages\mypy\solve.py:138:      * Propagate via linear constraints and use secondary constraints to get transitive closure
.venv\Lib\site-packages\mypy\solve.py:142:      * Solve constraints iteratively starting from leafs, updating bounds after each step.
.venv\Lib\site-packages\mypy\solve.py:144:    graph, lowers, uppers = transitive_closure(vars, constraints)
.venv\Lib\site-packages\mypy\solve.py:226:        # constraints. For example, consider {T <: S, T <: A, S :> B} with A :> B.
.venv\Lib\site-packages\mypy\solve.py:251:    """Solve constraints by finding by using meets of upper bounds, and joins of lower bounds."""
.venv\Lib\site-packages\mypy\solve.py:271:    # bounds based on constraints. Note that we assume that the constraint
.venv\Lib\site-packages\mypy\solve.py:272:    # targets do not have constraint references.
.venv\Lib\site-packages\mypy\solve.py:300:            # No constraints for type variable
.venv\Lib\site-packages\mypy\solve.py:368:def find_linear(c: Constraint) -> tuple[bool, TypeVarId | None]:
.venv\Lib\site-packages\mypy\solve.py:369:    """Find out if this constraint represent a linear relationship, return target id if yes."""
.venv\Lib\site-packages\mypy\solve.py:386:    tvars: list[TypeVarId], constraints: list[Constraint]
.venv\Lib\site-packages\mypy\solve.py:388:    """Find transitive closure for given constraints on type variables.
.venv\Lib\site-packages\mypy\solve.py:396:      * A graph of linear constraints between type variables (represented as a set of pairs)
.venv\Lib\site-packages\mypy\solve.py:400:    For example if we have initial constraints [T <: S, S <: U, U <: int], the transitive
.venv\Lib\site-packages\mypy\solve.py:411:    remaining = set(constraints)
.venv\Lib\site-packages\mypy\solve.py:414:        # Note that ParamSpec constraint P <: Q may be considered linear only if Q has no prefix,
.venv\Lib\site-packages\mypy\solve.py:438:                    add_secondary_constraints(remaining, lt, ut)
.venv\Lib\site-packages\mypy\solve.py:446:                add_secondary_constraints(remaining, lt, c.target)
.venv\Lib\site-packages\mypy\solve.py:455:                add_secondary_constraints(remaining, c.target, ut)
.venv\Lib\site-packages\mypy\solve.py:459:def add_secondary_constraints(cs: set[Constraint], lower: Type, upper: Type) -> None:
.venv\Lib\site-packages\mypy\solve.py:460:    """Add secondary constraints inferred between lower and upper (in place)."""
.venv\Lib\site-packages\mypy\solve.py:464:        # When both types are unions, this can lead to inferring spurious constraints,
.venv\Lib\site-packages\mypy\solve.py:468:    # TODO: what if secondary constraints result in inference against polymorphic actual?
.venv\Lib\site-packages\mypy\solve.py:469:    cs.update(set(infer_constraints(lower, upper, SUBTYPE_OF)))
.venv\Lib\site-packages\mypy\solve.py:470:    cs.update(set(infer_constraints(upper, lower, SUPERTYPE_OF)))
.venv\Lib\site-packages\mypy\solve.py:476:    """Compute dependencies between type variables induced by constraints.
.venv\Lib\site-packages\mypy\solve.py:478:    If we have a constraint like T <: List[S], we say that T depends on S, since
.venv\Lib\site-packages\mypy\solve.py:498:    """Check there are only linear constraints between type variables in SCC.
.venv\Lib\site-packages\mypy\solve.py:500:    Linear are constraints like T <: S (while T <: F[S] are non-linear).
.venv\Lib\site-packages\mypy\solve.py:510:def skip_reverse_union_constraints(cs: list[Constraint]) -> list[Constraint]:
.venv\Lib\site-packages\mypy\solve.py:511:    """Avoid ambiguities for constraints inferred from unions during polymorphic inference.
.venv\Lib\site-packages\mypy\solve.py:513:    Polymorphic inference implicitly relies on assumption that a reverse of a linear constraint
.venv\Lib\site-packages\mypy\solve.py:514:    is a linear constraint. This is however not true in presence of union types, for example
.venv\Lib\site-packages\mypy\solve.py:515:    T :> Union[S, int] vs S <: T. Trying to solve such constraints would be detected ambiguous
.venv\Lib\site-packages\mypy\solve.py:519:    TODO: a cleaner solution may be to avoid inferring such constraints in first place, but
.venv\Lib\site-packages\mypy\solve.py:520:    this would require passing around a flag through all infer_constraints() calls.
.venv\Lib\site-packages\mypy\solve.py:528:                    reverse_union_cs.add(Constraint(item, neg_op(c.op), c.origin_type_var))
.venv\Lib\site-packages\mypy\solve.py:540:    constraints: list[Constraint],
.venv\Lib\site-packages\mypy\solve.py:544:    If it doesn't satisfy the bound, check if bound itself satisfies all constraints, and
.venv\Lib\site-packages\mypy\solve.py:551:            for c in constraints:
.venv\Lib\site-packages\mypy\strconv.py:321:            if o.guards[i] is not None:
.venv\Lib\site-packages\mypy\strconv.py:322:                a.append(("Guard", [o.guards[i]]))
.venv\Lib\site-packages\mypy\stubgen.py:121:    generate_guarded,
.venv\Lib\site-packages\mypy\stubgen.py:1603:        with generate_guarded(mod.module, target, options.ignore_errors, options.verbose):
.venv\Lib\site-packages\mypy\stubgen.py:1624:        with generate_guarded(mod.module, target, options.ignore_errors, options.verbose):
.venv\Lib\site-packages\mypy\stubutil.py:104:def generate_guarded(
.venv\Lib\site-packages\mypy\subtypes.py:8:import mypy.constraints
.venv\Lib\site-packages\mypy\subtypes.py:683:            if left.type_guard is not None and right.type_guard is not None:
.venv\Lib\site-packages\mypy\subtypes.py:684:                if not self._is_subtype(left.type_guard, right.type_guard):
.venv\Lib\site-packages\mypy\subtypes.py:686:            elif right.type_guard is not None and left.type_guard is None:
.venv\Lib\site-packages\mypy\subtypes.py:687:                # This means that one function has `TypeGuard` and other does not.
.venv\Lib\site-packages\mypy\subtypes.py:1502:    # constraints for the variables of L to make L a subtype of R
.venv\Lib\site-packages\mypy\subtypes.py:1823:    return_constraint_direction: int | None = None,
.venv\Lib\site-packages\mypy\subtypes.py:1833:    if return_constraint_direction is None:
.venv\Lib\site-packages\mypy\subtypes.py:1834:        return_constraint_direction = mypy.constraints.SUBTYPE_OF
.venv\Lib\site-packages\mypy\subtypes.py:1836:    constraints: list[mypy.constraints.Constraint] = []
.venv\Lib\site-packages\mypy\subtypes.py:1839:    cs = mypy.constraints.infer_constraints(
.venv\Lib\site-packages\mypy\subtypes.py:1842:        mypy.constraints.SUBTYPE_OF,
.venv\Lib\site-packages\mypy\subtypes.py:1845:    constraints.extend(cs)
.venv\Lib\site-packages\mypy\subtypes.py:1847:        c = mypy.constraints.infer_constraints(
.venv\Lib\site-packages\mypy\subtypes.py:1848:            type.ret_type, target.ret_type, return_constraint_direction
.venv\Lib\site-packages\mypy\subtypes.py:1850:        constraints.extend(c)
.venv\Lib\site-packages\mypy\subtypes.py:1852:        constraints = [
.venv\Lib\site-packages\mypy\subtypes.py:1853:            c for c in constraints if not isinstance(get_proper_type(c.target), NoneType)
.venv\Lib\site-packages\mypy\subtypes.py:1855:    inferred_vars, _ = mypy.solve.solve_constraints(type.variables, constraints)
.venv\Lib\site-packages\mypy\suggestions.py:21: * Like something with tracking constraints/unification variables?
.venv\Lib\site-packages\mypy\suggestions.py:317:        # constraint generation ignores them.)
.venv\Lib\site-packages\mypy\suggestions.py:897:    This keeps those Anys from influencing constraint generation,
.venv\Lib\site-packages\mypy\traverser.py:241:            guard = o.guards[i]
.venv\Lib\site-packages\mypy\traverser.py:242:            if guard is not None:
.venv\Lib\site-packages\mypy\traverser.py:243:                guard.accept(self)
.venv\Lib\site-packages\mypy\treetransform.py:443:            guards=self.optional_expressions(o.guards),
.venv\Lib\site-packages\mypy\typeanal.py:663:        elif self.anal_type_guard_arg(t, fullname) is not None:
.venv\Lib\site-packages\mypy\typeanal.py:664:            # In most contexts, TypeGuard[...] acts as an alias for bool (ignoring its args)
.venv\Lib\site-packages\mypy\typeanal.py:981:            special = self.anal_type_guard(t.ret_type)
.venv\Lib\site-packages\mypy\typeanal.py:1036:                type_guard=special,
.venv\Lib\site-packages\mypy\typeanal.py:1041:    def anal_type_guard(self, t: Type) -> Type | None:
.venv\Lib\site-packages\mypy\typeanal.py:1045:                return self.anal_type_guard_arg(t, sym.node.fullname)
.venv\Lib\site-packages\mypy\typeanal.py:1049:    def anal_type_guard_arg(self, t: UnboundType, fullname: str) -> Type | None:
.venv\Lib\site-packages\mypy\typeanal.py:1050:        if fullname in ("typing_extensions.TypeGuard", "typing.TypeGuard"):
.venv\Lib\site-packages\mypy\typeanal.py:1053:                    "TypeGuard must have exactly one type argument", t, code=codes.VALID_TYPE
.venv\Lib\site-packages\mypy\typeops.py:340:        # Technically, some constraints might be unsolvable, make them Never.
.venv\Lib\site-packages\mypy\types.py:21:from typing_extensions import Self, TypeAlias as _TypeAlias, TypeGuard, overload
.venv\Lib\site-packages\mypy\types.py:199:    # generating constraints.
.venv\Lib\site-packages\mypy\types.py:433:class TypeGuardedType(Type):
.venv\Lib\site-packages\mypy\types.py:436:    __slots__ = ("type_guard",)
.venv\Lib\site-packages\mypy\types.py:438:    def __init__(self, type_guard: Type):
.venv\Lib\site-packages\mypy\types.py:439:        super().__init__(line=type_guard.line, column=type_guard.column)
.venv\Lib\site-packages\mypy\types.py:440:        self.type_guard = type_guard
.venv\Lib\site-packages\mypy\types.py:443:        return f"TypeGuard({self.type_guard})"
.venv\Lib\site-packages\mypy\types.py:1197:    ambiguous: bool  # Is this a result of inference for a variable without constraints?
.venv\Lib\site-packages\mypy\types.py:1787:        "type_guard",  # T, if -> TypeGuard[T] (ret_type is bool in this case).
.venv\Lib\site-packages\mypy\types.py:1813:        type_guard: Type | None = None,
.venv\Lib\site-packages\mypy\types.py:1862:        self.type_guard = type_guard
.venv\Lib\site-packages\mypy\types.py:1883:        type_guard: Bogus[Type | None] = _dummy,
.venv\Lib\site-packages\mypy\types.py:1907:            type_guard=type_guard if type_guard is not _dummy else self.type_guard,
.venv\Lib\site-packages\mypy\types.py:2220:            "type_guard": self.type_guard.serialize() if self.type_guard is not None else None,
.venv\Lib\site-packages\mypy\types.py:2242:            type_guard=(
.venv\Lib\site-packages\mypy\types.py:2243:                deserialize_type(data["type_guard"]) if data["type_guard"] is not None else None
.venv\Lib\site-packages\mypy\types.py:3069:    if isinstance(typ, TypeGuardedType):  # type: ignore[misc]
.venv\Lib\site-packages\mypy\types.py:3070:        typ = typ.type_guard
.venv\Lib\site-packages\mypy\types.py:3096:            isinstance(t, (TypeAliasType, TypeGuardedType)) for t in typelist  # type: ignore[misc]
.venv\Lib\site-packages\mypy\types.py:3229:        bare_asterisk = False
.venv\Lib\site-packages\mypy\types.py:3233:            if t.arg_kinds[i].is_named() and not bare_asterisk:
.venv\Lib\site-packages\mypy\types.py:3235:                bare_asterisk = True
.venv\Lib\site-packages\mypy\types.py:3271:        asterisk = False
.venv\Lib\site-packages\mypy\types.py:3275:            if t.arg_kinds[i].is_named() and not asterisk:
.venv\Lib\site-packages\mypy\types.py:3277:                asterisk = True
.venv\Lib\site-packages\mypy\types.py:3280:                asterisk = True
.venv\Lib\site-packages\mypy\types.py:3304:            if t.type_guard is not None:
.venv\Lib\site-packages\mypy\types.py:3305:                s += f" -> TypeGuard[{t.type_guard.accept(self)}]"
.venv\Lib\site-packages\mypy\types.py:3453:def is_named_instance(t: Type, fullnames: str | tuple[str, ...]) -> TypeGuard[Instance]:
.venv\Lib\site-packages\mypy\typestate.py:92:    # Ditto for inference of generic constraints against recursive type aliases.
.venv\Lib\site-packages\mypy\typestate.py:94:    # Whether to use joins or unions when solving constraints, see checkexpr.py for details.
.venv\Lib\site-packages\mypy\test\testconstraints.py:3:from mypy.constraints import SUBTYPE_OF, SUPERTYPE_OF, Constraint, infer_constraints
.venv\Lib\site-packages\mypy\test\testconstraints.py:9:class ConstraintsSuite(Suite):
.venv\Lib\site-packages\mypy\test\testconstraints.py:14:        assert not infer_constraints(self.fx.o, self.fx.o, SUBTYPE_OF)
.venv\Lib\site-packages\mypy\test\testconstraints.py:19:            assert infer_constraints(fx.gt, fx.ga, direction) == [
.venv\Lib\site-packages\mypy\test\testconstraints.py:20:                Constraint(type_var=fx.t, op=direction, target=fx.a)
.venv\Lib\site-packages\mypy\test\testconstraints.py:25:        assert infer_constraints(
.venv\Lib\site-packages\mypy\test\testconstraints.py:28:            Constraint(type_var=fx.ts, op=SUBTYPE_OF, target=TupleType([fx.a, fx.b], fx.std_tuple))
.venv\Lib\site-packages\mypy\test\testconstraints.py:33:        assert infer_constraints(
.venv\Lib\site-packages\mypy\test\testconstraints.py:36:            Constraint(
.venv\Lib\site-packages\mypy\test\testconstraints.py:44:            infer_constraints(
.venv\Lib\site-packages\mypy\test\testconstraints.py:50:            Constraint(type_var=fx.t, op=SUPERTYPE_OF, target=fx.a),
.venv\Lib\site-packages\mypy\test\testconstraints.py:51:            Constraint(
.venv\Lib\site-packages\mypy\test\testconstraints.py:54:            Constraint(type_var=fx.s, op=SUPERTYPE_OF, target=fx.d),
.venv\Lib\site-packages\mypy\test\testconstraints.py:60:            infer_constraints(
.venv\Lib\site-packages\mypy\test\testconstraints.py:66:            Constraint(type_var=fx.t, op=SUPERTYPE_OF, target=fx.a),
.venv\Lib\site-packages\mypy\test\testconstraints.py:67:            Constraint(type_var=fx.t, op=SUPERTYPE_OF, target=fx.b),
.venv\Lib\site-packages\mypy\test\testconstraints.py:73:            infer_constraints(
.venv\Lib\site-packages\mypy\test\testconstraints.py:79:            Constraint(type_var=fx.t, op=SUPERTYPE_OF, target=fx.a),
.venv\Lib\site-packages\mypy\test\testconstraints.py:80:            Constraint(type_var=fx.s, op=SUPERTYPE_OF, target=fx.b),
.venv\Lib\site-packages\mypy\test\testconstraints.py:81:            Constraint(type_var=fx.s, op=SUPERTYPE_OF, target=fx.c),
.venv\Lib\site-packages\mypy\test\testconstraints.py:82:            Constraint(type_var=fx.u, op=SUPERTYPE_OF, target=fx.d),
.venv\Lib\site-packages\mypy\test\testconstraints.py:88:            infer_constraints(
.venv\Lib\site-packages\mypy\test\testconstraints.py:94:            Constraint(type_var=fx.u, op=SUPERTYPE_OF, target=fx.a),
.venv\Lib\site-packages\mypy\test\testconstraints.py:95:            Constraint(type_var=fx.t, op=SUPERTYPE_OF, target=fx.b),
.venv\Lib\site-packages\mypy\test\testconstraints.py:96:            Constraint(type_var=fx.s, op=SUPERTYPE_OF, target=fx.c),
.venv\Lib\site-packages\mypy\test\testconstraints.py:97:            Constraint(type_var=fx.u, op=SUPERTYPE_OF, target=fx.d),
.venv\Lib\site-packages\mypy\test\testconstraints.py:103:            infer_constraints(
.venv\Lib\site-packages\mypy\test\testconstraints.py:108:            # We still get constraints on the prefix/suffix in this case.
.venv\Lib\site-packages\mypy\test\testconstraints.py:110:            Constraint(type_var=fx.u, op=SUPERTYPE_OF, target=fx.a),
.venv\Lib\site-packages\mypy\test\testconstraints.py:111:            Constraint(type_var=fx.u, op=SUPERTYPE_OF, target=fx.d),
.venv\Lib\site-packages\mypy\test\testconstraints.py:116:        assert not infer_constraints(
.venv\Lib\site-packages\mypy\test\testinfer.py:74:    def test_varargs_and_bare_asterisk(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:1:"""Test cases for the constraint solver used in type inference."""
.venv\Lib\site-packages\mypy\test\testsolve.py:5:from mypy.constraints import SUBTYPE_OF, SUPERTYPE_OF, Constraint
.venv\Lib\site-packages\mypy\test\testsolve.py:6:from mypy.solve import Bounds, Graph, solve_constraints, transitive_closure
.venv\Lib\site-packages\mypy\test\testsolve.py:19:    def test_simple_supertype_constraints(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:27:    def test_simple_subtype_constraints(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:35:    def test_both_kinds_of_constraints(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:42:    def test_unsatisfiable_constraints(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:43:        # The constraints are impossible to satisfy.
.venv\Lib\site-packages\mypy\test\testsolve.py:66:    def test_no_constraints_for_var(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:75:    def test_simple_constraints_with_dynamic_type(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:115:    def test_poly_no_constraints(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:240:    def test_secondary_constraint_closure(self) -> None:
.venv\Lib\site-packages\mypy\test\testsolve.py:252:        constraints: list[Constraint],
.venv\Lib\site-packages\mypy\test\testsolve.py:259:        actual, actual_free = solve_constraints(
.venv\Lib\site-packages\mypy\test\testsolve.py:260:            vars, constraints, allow_polymorphic=allow_polymorphic
.venv\Lib\site-packages\mypy\test\testsolve.py:268:        constraints: list[Constraint],
.venv\Lib\site-packages\mypy\test\testsolve.py:273:        actual_graph, actual_lowers, actual_uppers = transitive_closure(vars, constraints)
.venv\Lib\site-packages\mypy\test\testsolve.py:281:    def supc(self, type_var: TypeVarType, bound: Type) -> Constraint:
.venv\Lib\site-packages\mypy\test\testsolve.py:282:        return Constraint(type_var, SUPERTYPE_OF, bound)
.venv\Lib\site-packages\mypy\test\testsolve.py:284:    def subc(self, type_var: TypeVarType, bound: Type) -> Constraint:
.venv\Lib\site-packages\mypy\test\testsolve.py:285:        return Constraint(type_var, SUBTYPE_OF, bound)
.venv\Lib\site-packages\mypy\test\testtypes.py:274:        # Remove erased tags (asterisks).
.venv\Lib\site-packages\mypyc\codegen\literals.py:4:from typing_extensions import TypeGuard
.venv\Lib\site-packages\mypyc\codegen\literals.py:13:def _is_literal_value(obj: object) -> TypeGuard[LiteralValue]:
.venv\Lib\site-packages\mypyc\ir\rtypes.py:27:from typing_extensions import TypeGuard
.venv\Lib\site-packages\mypyc\ir\rtypes.py:472:def is_int16_rprimitive(rtype: RType) -> TypeGuard[RPrimitive]:
.venv\Lib\site-packages\mypyc\ir\rtypes.py:476:def is_int32_rprimitive(rtype: RType) -> TypeGuard[RPrimitive]:
.venv\Lib\site-packages\mypyc\ir\rtypes.py:488:def is_fixed_width_rtype(rtype: RType) -> TypeGuard[RPrimitive]:
.venv\Lib\site-packages\mypyc\ir\rtypes.py:497:def is_uint8_rprimitive(rtype: RType) -> TypeGuard[RPrimitive]:
.venv\Lib\site-packages\mypyc\irbuild\ll_builder.py:1943:            # immediately freed, at the risk of a dangling pointer.
.venv\Lib\site-packages\mypyc\irbuild\match.py:74:        guard = self.match.guards[index]
.venv\Lib\site-packages\mypyc\irbuild\match.py:76:        if guard:
.venv\Lib\site-packages\mypyc\irbuild\match.py:79:            cond = self.builder.accept(guard)
.venv\Lib\site-packages\numpy\__init__.py:453:    core.multiarray._multiarray_umath._reload_guard()
.venv\Lib\site-packages\numpy\core\arrayprint.py:493:def _recursive_guard(fillvalue='...'):
.venv\Lib\site-packages\numpy\core\arrayprint.py:523:@_recursive_guard()
.venv\Lib\site-packages\numpy\core\arrayprint.py:1588:@_recursive_guard()
.venv\Lib\site-packages\numpy\core\arrayprint.py:1589:def _guarded_repr_or_str(v):
.venv\Lib\site-packages\numpy\core\arrayprint.py:1609:        # ndarray's getindex. Also guard against recursive 0d object arrays.
.venv\Lib\site-packages\numpy\core\arrayprint.py:1610:        return _guarded_repr_or_str(np.ndarray.__getitem__(a, ()))
.venv\Lib\site-packages\numpy\core\einsumfunc.py:165:        The optimal contraction order within the memory limit constraint.
.venv\Lib\site-packages\numpy\core\einsumfunc.py:336:        The greedy contraction order within the memory limit constraint.
.venv\Lib\site-packages\numpy\core\_machar.py:54:        Number of 'guard digits' used when truncating the product
.venv\Lib\site-packages\numpy\core\_methods.py:83:        # guarded to protect circular imports
.venv\Lib\site-packages\numpy\core\tests\test_einsum.py:1103:        # Ensure memory constraints are satisfied
.venv\Lib\site-packages\numpy\core\tests\test_regression.py:1744:            # expectation to guard against regression
.venv\Lib\site-packages\numpy\distutils\ccompiler_opt.py:1378:                    # infinity recursive guard since
.venv\Lib\site-packages\numpy\distutils\ccompiler_opt.py:1699:            # Guard extra definitions in case of duplicate with
.venv\Lib\site-packages\numpy\distutils\cpuinfo.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\distutils\mingw32ccompiler.py:508:    # divisible by 4, most likely for alignment constraints when the xml is
.venv\Lib\site-packages\numpy\distutils\system_info.py:169:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\distutils\_shell_utils.py:49:        import ctypes  # guarded import for systems without ctypes
.venv\Lib\site-packages\numpy\f2py\auxfuncs.py:12:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\capi_maps.py:9:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\cb_rules.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\cfuncs.py:12:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\common_rules.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\crackfortran.py:10:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\f2py2e.py:12:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\f90mod_rules.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\func2subr.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\rules.py:48:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\setup.py:13:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\use_rules.py:13:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
.venv\Lib\site-packages\numpy\f2py\tests\test_docs.py:29:    sources = [_path('asterisk1.f90'), _path('asterisk2.f90'),
.venv\Lib\site-packages\numpy\f2py\tests\test_docs.py:32:    def test_asterisk1(self):
.venv\Lib\site-packages\numpy\f2py\tests\test_docs.py:36:    def test_asterisk2(self):
.venv\Lib\site-packages\numpy\lib\arraysetops.py:598:    manually set ``kind='table'`` if memory constraints can be relaxed.
.venv\Lib\site-packages\numpy\lib\arraysetops.py:651:        # Constraints on whether we can actually use the table method:
.venv\Lib\site-packages\numpy\lib\arraysetops.py:653:        below_memory_constraint = ar2_range <= 6 * (ar1.size + ar2.size)
.venv\Lib\site-packages\numpy\lib\arraysetops.py:681:            (below_memory_constraint or kind == 'table')
.venv\Lib\site-packages\numpy\lib\arraysetops.py:843:    manually set ``kind='table'`` if memory constraints can be relaxed.
.venv\Lib\site-packages\numpy\lib\function_base.py:429:        The only constraint on `weights` is that `sum(weights)` must not be 0.
.venv\Lib\site-packages\numpy\lib\nanfunctions.py:160:        True if `res` can be modified in place, given the constraint on the
.venv\Lib\site-packages\numpy\lib\shape_base.py:1263:        # have no data there is no risk of an inadvertent overwrite.
.venv\Lib\site-packages\numpy\ma\core.py:3115:                        # Don't modify inplace, we risk back-propagation
.venv\Lib\site-packages\numpy\ma\extras.py:549:        The only constraint on `weights` is that `sum(weights)` must not be 0.
.venv\Lib\site-packages\numpy\ma\tests\test_core.py:4317:    def test_masked_where_shape_constraint(self):
.venv\Lib\site-packages\numpy\random\tests\test_randomstate.py:1270:        # guard against changes in RandomState when Generator is fixed
.venv\Lib\site-packages\numpy\random\_examples\cffi\parse.py:26:            # check for and remove extern "C" guards
.venv\Lib\site-packages\numpy\tests\test_lazyloading.py:7:# Warning raised by _reload_guard() in numpy/__init__.py
.venv\Lib\site-packages\packaging\licenses\_spdx.py:688:    'asterisk-exception': {'id': 'Asterisk-exception', 'deprecated': False},
.venv\Lib\site-packages\packaging\licenses\_spdx.py:689:    'asterisk-linking-protocols-exception': {'id': 'Asterisk-linking-protocols-exception', 'deprecated': False},
.venv\Lib\site-packages\pandas\_typing.py:89:        from typing import TypeGuard  # pyright: ignore[reportUnusedImport]
.venv\Lib\site-packages\pandas\_typing.py:91:        from typing_extensions import TypeGuard  # pyright: ignore[reportUnusedImport]
.venv\Lib\site-packages\pandas\_typing.py:100:    TypeGuard: Any = None
.venv\Lib\site-packages\pandas\compat\compressors.py:58:                # `b` into something that meets that constraint with
.venv\Lib\site-packages\pandas\compat\compressors.py:73:                # `b` into something that meets that constraint with
.venv\Lib\site-packages\pandas\core\algorithms.py:1387:        # same dtype as `arr`, while guarding against integer overflows.
.venv\Lib\site-packages\pandas\core\nanops.py:178:            #  result.ndim == 1, so there is no risk of this ravel making a copy.
.venv\Lib\site-packages\pandas\core\arrays\_ranges.py:188:            # with endpoint negative and addend positive we risk
.venv\Lib\site-packages\pandas\core\arrays\_ranges.py:189:            #  FloatingPointError; with reversed signed we risk OverflowError
.venv\Lib\site-packages\pandas\core\dtypes\cast.py:206:    into a numpy array.  Failing to unbox would risk dropping nanoseconds.
.venv\Lib\site-packages\pandas\core\dtypes\common.py:1644:    # which we safeguard against by catching them earlier and returning
.venv\Lib\site-packages\pandas\core\dtypes\inference.py:18:    from pandas._typing import TypeGuard
.venv\Lib\site-packages\pandas\core\dtypes\inference.py:39:def is_number(obj) -> TypeGuard[Number | np.number]:
.venv\Lib\site-packages\pandas\core\dtypes\inference.py:141:def is_re(obj) -> TypeGuard[Pattern]:
.venv\Lib\site-packages\pandas\core\dtypes\inference.py:334:def is_hashable(obj) -> TypeGuard[Hashable]:
.venv\Lib\site-packages\pandas\core\indexers\objects.py:254:            # within the constraint
.venv\Lib\site-packages\pandas\core\internals\array_manager.py:1216:        Use at your own risk! This does not check if the passed values are
.venv\Lib\site-packages\pandas\core\internals\blocks.py:2590:    This has some historical constraints, and is overridden in block
.venv\Lib\site-packages\pandas\core\internals\managers.py:2016:        Use at your own risk! This does not check if the passed values are
.venv\Lib\site-packages\pandas\core\tools\datetimes.py:811:        - "mixed", to infer the format for each element individually. This is risky,
.venv\Lib\site-packages\pandas\io\sql.py:1200:            PrimaryKeyConstraint,
.venv\Lib\site-packages\pandas\io\sql.py:1217:            pkc = PrimaryKeyConstraint(*keys, name=self.name + "_pk")
.venv\Lib\site-packages\pandas\io\sql.py:2164:                f"CONSTRAINT {self.name}_pk PRIMARY KEY ({cnames_br})"
.venv\Lib\site-packages\pandas\io\formats\style_render.py:1608:        New rn and cn values that satisfy the max_elements constraint
.venv\Lib\site-packages\pandas\io\json\_table_schema.py:138:        field["constraints"] = {"enum": list(cats)}
.venv\Lib\site-packages\pandas\io\json\_table_schema.py:181:    ...         "constraints": {"enum": ["a", "b", "c"]},
.venv\Lib\site-packages\pandas\io\json\_table_schema.py:215:        if "constraints" in field and "ordered" in field:
.venv\Lib\site-packages\pandas\io\json\_table_schema.py:217:                categories=field["constraints"]["enum"], ordered=field["ordered"]
.venv\Lib\site-packages\pandas\io\json\_table_schema.py:263:    constraint to list the allowed values. The `ordered` attribute is included
.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:164:    # Dups on right allowed by one_to_many constraint
.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:175:    # Dups on right not allowed by one_to_one constraint
.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:187:    # Dups on left allowed by many_to_one constraint
.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:194:    # Dups on left not allowed by one_to_one constraint
.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:206:    # Dups on both allowed by many_to_many constraint
.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:209:    # Dups on both not allowed by many_to_one constraint
.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:218:    # Dups on both not allowed by one_to_many constraint
.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:259:    # Jointly no dups allowed by one_to_one constraint
.venv\Lib\site-packages\pandas\tests\internals\test_internals.py:730:        # reindex_axis does not consolidate_inplace, as that risks failing to
.venv\Lib\site-packages\pandas\tests\io\test_sql.py:1602:        constraint_sentence = 'CONSTRAINT test_pk PRIMARY KEY ("Col1")'
.venv\Lib\site-packages\pandas\tests\io\test_sql.py:1603:        assert constraint_sentence in create_sql
.venv\Lib\site-packages\pandas\tests\io\test_sql.py:1607:        constraint_sentence = 'CONSTRAINT test_pk PRIMARY KEY ("A", "B")'
.venv\Lib\site-packages\pandas\tests\io\test_sql.py:1608:        assert constraint_sentence in create_sql
.venv\Lib\site-packages\pandas\tests\io\test_sql.py:3156:            id serial constraint person_pkey primary key,
.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:280:                "constraints": {"enum": ["a", "b", "c"]},
.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:286:                "constraints": {"enum": ["a", "b", "c"]},
.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:420:                                "constraints": {"enum": ["a", "b"]},
.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:501:            "constraints": {"enum": data},
.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:519:                    "constraints": {"enum": ["a", "b", "c"]},
.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:527:                    "constraints": {"enum": ["a", "b", "c"]},
.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:558:                "constraints": {"enum": ["a", "b"]},
.venv\Lib\site-packages\pandas\tests\io\parser\test_parse_dates.py:1301:        # single unique date and hence no risk of inconsistent parsing.
.venv\Lib\site-packages\pandas\tests\scalar\timedelta\test_timedelta.py:150:        #  bound, so doubling does not risk overflow.
.venv\Lib\site-packages\pandas\_config\config.py:154:    # must at least 1 arg deal with constraints later
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:114:			# EDGE CASE: Deal with duplicate double-asterisk sequences. Collapse each
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:115:			# sequence down to one double-asterisk. Iterate over the segments in
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:116:			# reverse and remove the duplicate double asterisks as we go.
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:138:				# with double-asterisks to make pattern relative to root.
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:158:				# to "{pattern}/**". So, set last segment to a double-asterisk to
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:170:							# A pattern consisting solely of double-asterisks ('**') will
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:175:							# A normalized pattern beginning with double-asterisks
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:181:							# A normalized pattern ending with double-asterisks ('**') will
.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:189:							# A pattern with inner double-asterisks ('**') will match multiple
.venv\Lib\site-packages\pip\_internal\exceptions.py:694:                "You can override this, at the risk of breaking your Python "
.venv\Lib\site-packages\pip\_internal\wheel_builder.py:50:    assert not req.constraint
.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:89:            "When restricting platform and interpreter constraints using "
.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:420:def constraints() -> Option:
.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:423:        "--constraint",
.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:424:        dest="constraints",
.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:428:        help="Constrain versions using the given constraints file. "
.venv\Lib\site-packages\pip\_internal\cli\req_command.py:224:        for filename in options.constraints:
.venv\Lib\site-packages\pip\_internal\cli\req_command.py:227:                constraint=True,
.venv\Lib\site-packages\pip\_internal\commands\download.py:38:        self.cmd_opts.add_option(cmdoptions.constraints())
.venv\Lib\site-packages\pip\_internal\commands\install.py:89:        self.cmd_opts.add_option(cmdoptions.constraints())
.venv\Lib\site-packages\pip\_internal\commands\lock.py:61:        self.cmd_opts.add_option(cmdoptions.constraints())
.venv\Lib\site-packages\pip\_internal\commands\wheel.py:62:        self.cmd_opts.add_option(cmdoptions.constraints())
.venv\Lib\site-packages\pip\_internal\index\package_finder.py:48:    from typing_extensions import TypeGuard
.venv\Lib\site-packages\pip\_internal\index\package_finder.py:978:        ) -> TypeGuard[InstallationCandidate]:
.venv\Lib\site-packages\pip\_internal\network\cache.py:90:                # Change permissions only if there is no risk of following a symlink.
.venv\Lib\site-packages\pip\_internal\req\constructors.py:232:    constraint: bool = False,
.venv\Lib\site-packages\pip\_internal\req\constructors.py:246:        constraint=constraint,
.venv\Lib\site-packages\pip\_internal\req\constructors.py:396:    constraint: bool = False,
.venv\Lib\site-packages\pip\_internal\req\constructors.py:419:        constraint=constraint,
.venv\Lib\site-packages\pip\_internal\req\constructors.py:475:            constraint=parsed_req.constraint,
.venv\Lib\site-packages\pip\_internal\req\constructors.py:495:            constraint=parsed_req.constraint,
.venv\Lib\site-packages\pip\_internal\req\constructors.py:539:        constraint=ireq.constraint,
.venv\Lib\site-packages\pip\_internal\req\req_file.py:53:    cmdoptions.constraints,
.venv\Lib\site-packages\pip\_internal\req\req_file.py:109:        "constraint",
.venv\Lib\site-packages\pip\_internal\req\req_file.py:117:    constraint: bool
.venv\Lib\site-packages\pip\_internal\req\req_file.py:124:    __slots__ = ("filename", "lineno", "args", "opts", "constraint")
.venv\Lib\site-packages\pip\_internal\req\req_file.py:130:    constraint: bool
.venv\Lib\site-packages\pip\_internal\req\req_file.py:151:    constraint: bool = False,
.venv\Lib\site-packages\pip\_internal\req\req_file.py:159:    :param constraint:  If true, parsing a constraint file rather than
.venv\Lib\site-packages\pip\_internal\req\req_file.py:165:    for parsed_line in parser.parse(filename, constraint):
.venv\Lib\site-packages\pip\_internal\req\req_file.py:191:        "-c" if line.constraint else "-r",
.venv\Lib\site-packages\pip\_internal\req\req_file.py:213:        constraint=line.constraint,
.venv\Lib\site-packages\pip\_internal\req\req_file.py:343:        self, filename: str, constraint: bool
.venv\Lib\site-packages\pip\_internal\req\req_file.py:347:            filename, constraint, [{os.path.abspath(filename): None}]
.venv\Lib\site-packages\pip\_internal\req\req_file.py:353:        constraint: bool,
.venv\Lib\site-packages\pip\_internal\req\req_file.py:356:        for line in self._parse_file(filename, constraint):
.venv\Lib\site-packages\pip\_internal\req\req_file.py:358:                line.opts.requirements or line.opts.constraints
.venv\Lib\site-packages\pip\_internal\req\req_file.py:363:                    nested_constraint = False
.venv\Lib\site-packages\pip\_internal\req\req_file.py:365:                    req_path = line.opts.constraints[0]
.venv\Lib\site-packages\pip\_internal\req\req_file.py:366:                    nested_constraint = True
.venv\Lib\site-packages\pip\_internal\req\req_file.py:397:                    req_path, nested_constraint, [new_parsed_files, *parsed_files_stack]
.venv\Lib\site-packages\pip\_internal\req\req_file.py:403:        self, filename: str, constraint: bool
.venv\Lib\site-packages\pip\_internal\req\req_file.py:422:                constraint,
.venv\Lib\site-packages\pip\_internal\req\req_install.py:88:        constraint: bool = False,
.venv\Lib\site-packages\pip\_internal\req\req_install.py:96:        self.constraint = constraint
.venv\Lib\site-packages\pip\_internal\req\req_install.py:112:        # requirement, either directly or via a constraints file.
.venv\Lib\site-packages\pip\_internal\req\req_install.py:159:        # e.g. dependencies, extras or constraints.
.venv\Lib\site-packages\pip\_internal\req\req_install.py:883:def check_invalid_constraint_type(req: InstallRequirement) -> str:
.venv\Lib\site-packages\pip\_internal\req\req_install.py:887:        problem = "Unnamed requirements are not allowed as constraints"
.venv\Lib\site-packages\pip\_internal\req\req_install.py:889:        problem = "Editable requirements are not allowed as constraints"
.venv\Lib\site-packages\pip\_internal\req\req_install.py:891:        problem = "Constraints cannot have extras"
.venv\Lib\site-packages\pip\_internal\req\req_install.py:896:                "Constraints are only allowed to take the form of a package "
.venv\Lib\site-packages\pip\_internal\req\req_install.py:902:            replacement="replacing the constraint with a requirement",
.venv\Lib\site-packages\pip\_internal\req\req_set.py:55:            and not self.requirements[project_name].constraint
.venv\Lib\site-packages\pip\_internal\req\req_set.py:80:            if not install_req.constraint and not install_req.satisfied_by
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:42:    check_invalid_constraint_type,
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:172:            if req.constraint:
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:173:                check_invalid_constraint_type(req)
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:257:            and not existing_req.constraint
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:278:        if install_req.constraint or not existing_req.constraint:
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:281:        does_not_satisfy_constraint = install_req.link and not (
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:284:        if does_not_satisfy_constraint:
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:286:                f"Could not satisfy constraints for '{install_req.name}': "
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:290:        # If we're now installing a constraint, mark the existing
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:292:        existing_req.constraint = False
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:316:            return req.user_supplied or req.constraint
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:500:        if req_to_install.constraint or req_to_install.prepared:
.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:589:            if req.constraint:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:26:class Constraint:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:32:    def empty(cls) -> Constraint:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:33:        return Constraint(SpecifierSet(), Hashes(), frozenset())
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:36:    def from_ireq(cls, ireq: InstallRequirement) -> Constraint:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:38:        return Constraint(ireq.specifier, ireq.hashes(trust_internet=False), links)
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:43:    def __and__(self, other: InstallRequirement) -> Constraint:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:51:        return Constraint(specifier, hashes, links)
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:54:        # Reject if there are any mismatched URL constraints on this package.
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:73:        constraint=template.constraint,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:94:        constraint=template.constraint,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:119:        constraint=template.constraint,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:43:    check_invalid_constraint_type,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:51:from .base import Candidate, Constraint, Requirement
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:85:    constraints: dict[str, Constraint]
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:368:    def _iter_candidates_from_constraints(
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:371:        constraint: Constraint,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:374:        """Produce explicit candidates from constraints.
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:379:        for link in constraint.links:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:395:        constraint: Constraint,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:425:        # Add explicit candidates from constraints. We only do this if there are
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:432:                    self._iter_candidates_from_constraints(
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:434:                        constraint,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:452:                constraint.specifier,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:453:                constraint.hashes,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:462:            and constraint.is_satisfied_by(c)
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:473:            - the InstallRequirement has both a constraint (or link) and extras
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:474:                -> result is split in two requirement objects: one with the constraint
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:475:                (or link) and one with the extra. This allows centralized constraint
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:524:            if ireq.constraint:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:525:                # Ensure we only accept valid constraints
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:526:                problem = check_invalid_constraint_type(ireq)
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:531:                assert ireq.name, "Constraint must be named"
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:533:                if name in collected.constraints:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:534:                    collected.constraints[name] &= ireq
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:536:                    collected.constraints[name] = Constraint.from_ireq(ireq)
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:554:        # taking into account any non-transient constraints on the associated base. This
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:576:            - the specifier has both a constraint and extras -> result is split
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:577:                in two requirement objects: one with the constraint and one with the
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:578:                extra. This allows centralized constraint handling for the base,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:717:        constraints: dict[str, Constraint],
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:743:            if req.name not in constraints:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:785:        relevant_constraints = set()
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:787:            if req.name in constraints:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:788:                relevant_constraints.add(req.name)
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:795:        for key in relevant_constraints:
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:796:            spec = constraints[key].specifier
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:797:            msg += f"\n    The user requested (constraint) {key}{spec}"
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:15:from .base import Candidate, Constraint, Requirement
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:81:    :params constraints: A mapping of constraints specified by the user. Keys
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:92:        constraints: dict[str, Constraint],
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:98:        self._constraints = constraints
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:254:        constraint = _get_with_identifier(
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:255:            self._constraints,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:257:            default=Constraint.empty(),
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:262:            constraint=constraint,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\reporter.py:31:                "the dependency resolver with stricter constraints to reduce "
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\requirements.py:98:        # risking a change in meaning. (Hopefully! Not all edge cases have
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\resolver.py:82:            constraints=collected.constraints,
.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\resolver.py:105:                collected.constraints,
.venv\Lib\site-packages\pip\_vendor\distlib\util.py:223:                            raise SyntaxError('invalid constraint: %s' % ver_remaining)
.venv\Lib\site-packages\pip\_vendor\distlib\util.py:244:                        raise SyntaxError('invalid constraint: %s' % s)
.venv\Lib\site-packages\pip\_vendor\distlib\util.py:248:                        raise SyntaxError('invalid constraint: %s' % s)
.venv\Lib\site-packages\pip\_vendor\distlib\util.py:265:    return Container(name=distname, extras=extras, constraints=versions, marker=mark_expr, url=uri, requirement=rs)
.venv\Lib\site-packages\pip\_vendor\packaging\licenses\_spdx.py:688:    'asterisk-exception': {'id': 'Asterisk-exception', 'deprecated': False},
.venv\Lib\site-packages\pip\_vendor\packaging\licenses\_spdx.py:689:    'asterisk-linking-protocols-exception': {'id': 'Asterisk-linking-protocols-exception', 'deprecated': False},
.venv\Lib\site-packages\pip\_vendor\pkg_resources\__init__.py:3634:    at their own risk.
.venv\Lib\site-packages\pip\_vendor\requests\sessions.py:687:        # Guard against that specific failure case.
.venv\Lib\site-packages\pip\_vendor\resolvelib\providers.py:98:        """Find all possible candidates that satisfy the given constraints.
.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers\abstract.py:36:        """Take a collection of constraints, spit out the resolution result.
.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers\abstract.py:42:        :param requirements: A collection of constraints.
.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers\resolution.py:568:        """Take a collection of constraints, spit out the resolution result.
.venv\Lib\site-packages\pip\_vendor\rich\traceback.py:573:                if frame_summary.f_locals.get("_rich_traceback_guard", False):
.venv\Lib\site-packages\pip\_vendor\rich\traceback.py:884:        _rich_traceback_guard = True
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:769:    "eight-spoked_asterisk": "✳",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:962:    "guard": "💂",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:963:    "guard_dark_skin_tone": "💂🏿",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:964:    "guard_light_skin_tone": "💂🏻",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:965:    "guard_medium-dark_skin_tone": "💂🏾",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:966:    "guard_medium-light_skin_tone": "💂🏼",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:967:    "guard_medium_skin_tone": "💂🏽",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1301:    "man_guard": "💂\u200d♂️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1302:    "man_guard_dark_skin_tone": "💂🏿\u200d♂️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1303:    "man_guard_light_skin_tone": "💂🏻\u200d♂️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1304:    "man_guard_medium-dark_skin_tone": "💂🏾\u200d♂️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1305:    "man_guard_medium-light_skin_tone": "💂🏼\u200d♂️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1306:    "man_guard_medium_skin_tone": "💂🏽\u200d♂️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2537:    "woman_guard": "💂\u200d♀️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2538:    "woman_guard_dark_skin_tone": "💂🏿\u200d♀️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2539:    "woman_guard_light_skin_tone": "💂🏻\u200d♀️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2540:    "woman_guard_medium-dark_skin_tone": "💂🏾\u200d♀️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2541:    "woman_guard_medium-light_skin_tone": "💂🏼\u200d♀️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2542:    "woman_guard_medium_skin_tone": "💂🏽\u200d♀️",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2769:    "keycap_asterisk": "*⃣",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2958:    "eight_spoked_asterisk": "✳",
.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:3276:    "guardsman": "💂",
.venv\Lib\site-packages\pip\_vendor\rich\_ratio.py:15:    """Divide total space to satisfy size, ratio, and minimum_size, constraints.
.venv\Lib\site-packages\pip\_vendor\rich\_ratio.py:18:    impossible to satisfy all the constraints. For instance, if there are two edges
.venv\Lib\site-packages\pip\_vendor\truststore\_windows.py:207:CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG = 0x00000008
.venv\Lib\site-packages\pip\_vendor\truststore\_windows.py:224:    | CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG
.venv\Lib\site-packages\pip\_vendor\urllib3\util\retry.py:118:        Set to ``None`` to remove this constraint and fall back on other
.venv\Lib\site-packages\pip\_vendor\urllib3\util\ssl_.py:317:        # there is a risk associated with it being on wire,
.venv\Lib\site-packages\pip\_vendor\urllib3\util\ssl_.py:343:    # matter due to safe-guards SSLContext has to prevent an SSLContext with
.venv\Lib\site-packages\pip_audit\_fix.py:96:    # However, whenever we upgrade a dependency, we run the risk of introducing new vulnerabilities
.venv\Lib\site-packages\pkg_resources\__init__.py:3270:    at their own risk.
.venv\Lib\site-packages\postgrest\_async\request_builder.py:335:            on_conflict: Specified columns to be made to work with UNIQUE constraint.
.venv\Lib\site-packages\postgrest\_sync\request_builder.py:335:            on_conflict: Specified columns to be made to work with UNIQUE constraint.
.venv\Lib\site-packages\psutil\__init__.py:483:                # "mistake" that the user will make, so let's guard
.venv\Lib\site-packages\pydantic\annotated_handlers.py:88:        Otherwise, you may end up doing something like applying a `min_length` constraint
.venv\Lib\site-packages\pydantic\dataclasses.py:11:from typing_extensions import TypeGuard, dataclass_transform
.venv\Lib\site-packages\pydantic\dataclasses.py:371:def is_pydantic_dataclass(class_: type[Any], /) -> TypeGuard[type[PydanticDataclass]]:
.venv\Lib\site-packages\pydantic\fields.py:133:        metadata: List of metadata constraints.
.venv\Lib\site-packages\pydantic\fields.py:189:    # used to convert kwargs to metadata/constraints,
.venv\Lib\site-packages\pydantic\json_schema.py:1034:            # The len check indicates that constraints are probably present:
.venv\Lib\site-packages\pydantic\json_schema.py:1036:            # If this is a definition reference schema, it most likely has constraints:
.venv\Lib\site-packages\pydantic\networks.py:49:    'UrlConstraints',
.venv\Lib\site-packages\pydantic\networks.py:71:class UrlConstraints:
.venv\Lib\site-packages\pydantic\networks.py:72:    """Url constraints.
.venv\Lib\site-packages\pydantic\networks.py:103:    def defined_constraints(self) -> dict[str, Any]:
.venv\Lib\site-packages\pydantic\networks.py:104:        """Fetch a key / value mapping of constraints to values that are not None. Used for core schema updates."""
.venv\Lib\site-packages\pydantic\networks.py:110:        # for function-wrap schemas, url constraints is applied to the inner schema
.venv\Lib\site-packages\pydantic\networks.py:116:                f"'UrlConstraints' cannot annotate '{annotated_type}'.", code='invalid-annotated-type'
.venv\Lib\site-packages\pydantic\networks.py:118:        for constraint_key, constraint_value in self.defined_constraints.items():
.venv\Lib\site-packages\pydantic\networks.py:119:            schema_to_mutate[constraint_key] = constraint_value
.venv\Lib\site-packages\pydantic\networks.py:124:    _constraints: ClassVar[UrlConstraints] = UrlConstraints()
.venv\Lib\site-packages\pydantic\networks.py:325:            schema=core_schema.url_schema(**cls._constraints.defined_constraints),
.venv\Lib\site-packages\pydantic\networks.py:344:    _constraints: ClassVar[UrlConstraints] = UrlConstraints()
.venv\Lib\site-packages\pydantic\networks.py:511:            schema=core_schema.multi_host_url_schema(**cls._constraints.defined_constraints),
.venv\Lib\site-packages\pydantic\networks.py:566:    _constraints = UrlConstraints(allowed_schemes=['http', 'https'])
.venv\Lib\site-packages\pydantic\networks.py:647:    _constraints = UrlConstraints(max_length=2083, allowed_schemes=['http', 'https'])
.venv\Lib\site-packages\pydantic\networks.py:657:    _constraints = UrlConstraints(allowed_schemes=['ws', 'wss'])
.venv\Lib\site-packages\pydantic\networks.py:668:    _constraints = UrlConstraints(max_length=2083, allowed_schemes=['ws', 'wss'])
.venv\Lib\site-packages\pydantic\networks.py:677:    _constraints = UrlConstraints(allowed_schemes=['file'])
.venv\Lib\site-packages\pydantic\networks.py:687:    _constraints = UrlConstraints(allowed_schemes=['ftp'])
.venv\Lib\site-packages\pydantic\networks.py:750:    _constraints = UrlConstraints(
.venv\Lib\site-packages\pydantic\networks.py:779:    _constraints = UrlConstraints(
.venv\Lib\site-packages\pydantic\networks.py:802:    _constraints = UrlConstraints(allowed_schemes=['amqp', 'amqps'])
.venv\Lib\site-packages\pydantic\networks.py:813:    _constraints = UrlConstraints(
.venv\Lib\site-packages\pydantic\networks.py:836:    _constraints = UrlConstraints(allowed_schemes=['mongodb', 'mongodb+srv'], default_port=27017)
.venv\Lib\site-packages\pydantic\networks.py:847:    _constraints = UrlConstraints(allowed_schemes=['kafka'], default_host='localhost', default_port=9092)
.venv\Lib\site-packages\pydantic\networks.py:859:    _constraints = UrlConstraints(
.venv\Lib\site-packages\pydantic\networks.py:872:    _constraints = UrlConstraints(
.venv\Lib\site-packages\pydantic\networks.py:896:    _constraints = UrlConstraints(
.venv\Lib\site-packages\pydantic\networks.py:910:    _constraints = UrlConstraints(
.venv\Lib\site-packages\pydantic\networks.py:932:    _constraints = UrlConstraints(
.venv\Lib\site-packages\pydantic\types.py:104:    'StringConstraints',
.venv\Lib\site-packages\pydantic\types.py:188:    A wrapper around `int` that allows for additional constraints.
.venv\Lib\site-packages\pydantic\types.py:449:    A wrapper around `float` that allows for additional constraints.
.venv\Lib\site-packages\pydantic\types.py:669:    """A wrapper around `bytes` that allows for additional constraints.
.venv\Lib\site-packages\pydantic\types.py:694:class StringConstraints(annotated_types.GroupedMetadata):
.venv\Lib\site-packages\pydantic\types.py:696:        [`StringConstraints`](../concepts/fields.md#string-constraints)
.venv\Lib\site-packages\pydantic\types.py:698:    A field metadata class to apply constraints to `str` types.
.venv\Lib\site-packages\pydantic\types.py:714:        from pydantic.types import StringConstraints
.venv\Lib\site-packages\pydantic\types.py:716:        ConstrainedStr = Annotated[str, StringConstraints(min_length=1, max_length=10)]
.venv\Lib\site-packages\pydantic\types.py:763:        [`StringConstraints`][pydantic.types.StringConstraints] instead.
.venv\Lib\site-packages\pydantic\types.py:781:            from pydantic import BaseModel, StringConstraints
.venv\Lib\site-packages\pydantic\types.py:786:                    StringConstraints(
.venv\Lib\site-packages\pydantic\types.py:792:    A wrapper around `str` that allows for additional constraints.
.venv\Lib\site-packages\pydantic\types.py:819:        StringConstraints(
.venv\Lib\site-packages\pydantic\types.py:842:    """A wrapper around `typing.Set` that allows for additional constraints.
.venv\Lib\site-packages\pydantic\types.py:858:    """A wrapper around `typing.FrozenSet` that allows for additional constraints.
.venv\Lib\site-packages\pydantic\types.py:1631:    You can enforce constraints on the underlying type through annotations:
.venv\Lib\site-packages\pydantic\types.py:2250:    """A wrapper for date that adds constraints.
.venv\Lib\site-packages\pydantic\types.py:2260:        A date type with the specified constraints.
.venv\Lib\site-packages\pydantic\types.py:2288:                return core_schema.datetime_schema(tz_constraint='aware')
.venv\Lib\site-packages\pydantic\types.py:2292:                schema['tz_constraint'] = 'aware'
.venv\Lib\site-packages\pydantic\types.py:2307:                return core_schema.datetime_schema(tz_constraint='naive')
.venv\Lib\site-packages\pydantic\types.py:2311:                schema['tz_constraint'] = 'naive'
.venv\Lib\site-packages\pydantic\version.py:68:    # Keep this in sync with the version constraint in the `pyproject.toml` dependencies:
.venv\Lib\site-packages\pydantic\__init__.py:127:    'UrlConstraints',
.venv\Lib\site-packages\pydantic\__init__.py:159:    'StringConstraints',
.venv\Lib\site-packages\pydantic\__init__.py:294:    'UrlConstraints': (__spec__.parent, '.networks'),
.venv\Lib\site-packages\pydantic\__init__.py:322:    'StringConstraints': (__spec__.parent, '.types'),
.venv\Lib\site-packages\pydantic\deprecated\copy_internals.py:40:    # The extra "is not None" guards are not logically necessary but optimizes performance for the simple case.
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:88:_ConstraintAnnotation = Union[
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:109:class _Constraint:
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:110:    constraint: _ConstraintAnnotation
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:113:_Step = Union[_ValidateAs, _ValidateAsDefer, _Transform, _PipelineOr, _PipelineAnd, _Constraint]
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:172:    # constraints
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:174:    def constrain(self: _Pipeline[_InT, _NewOutGe], constraint: annotated_types.Ge) -> _Pipeline[_InT, _NewOutGe]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:177:    def constrain(self: _Pipeline[_InT, _NewOutGt], constraint: annotated_types.Gt) -> _Pipeline[_InT, _NewOutGt]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:180:    def constrain(self: _Pipeline[_InT, _NewOutLe], constraint: annotated_types.Le) -> _Pipeline[_InT, _NewOutLe]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:183:    def constrain(self: _Pipeline[_InT, _NewOutLt], constraint: annotated_types.Lt) -> _Pipeline[_InT, _NewOutLt]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:187:        self: _Pipeline[_InT, _NewOutLen], constraint: annotated_types.Len
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:192:        self: _Pipeline[_InT, _NewOutT], constraint: annotated_types.MultipleOf
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:197:        self: _Pipeline[_InT, _NewOutDatetime], constraint: annotated_types.Timezone
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:201:    def constrain(self: _Pipeline[_InT, _OutT], constraint: annotated_types.Predicate) -> _Pipeline[_InT, _OutT]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:205:        self: _Pipeline[_InT, _NewOutInterval], constraint: annotated_types.Interval
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:209:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _Eq) -> _Pipeline[_InT, _OutT]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:212:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _NotEq) -> _Pipeline[_InT, _OutT]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:215:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _In) -> _Pipeline[_InT, _OutT]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:218:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _NotIn) -> _Pipeline[_InT, _OutT]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:221:    def constrain(self: _Pipeline[_InT, _NewOutT], constraint: Pattern[str]) -> _Pipeline[_InT, _NewOutT]: ...
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:223:    def constrain(self, constraint: _ConstraintAnnotation) -> Any:
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:231:        return _Pipeline[_InT, _OutT](self._steps + (_Constraint(constraint),))
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:386:    elif isinstance(step, _Constraint):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:387:        s = _apply_constraint(s, step.constraint)
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:444:def _apply_constraint(  # noqa: C901
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:445:    s: cs.CoreSchema | None, constraint: _ConstraintAnnotation
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:447:    """Apply a single constraint to a schema."""
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:448:    if isinstance(constraint, annotated_types.Gt):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:449:        gt = constraint.gt
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:464:    elif isinstance(constraint, annotated_types.Ge):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:465:        ge = constraint.ge
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:479:    elif isinstance(constraint, annotated_types.Lt):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:480:        lt = constraint.lt
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:494:    elif isinstance(constraint, annotated_types.Le):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:495:        le = constraint.le
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:509:    elif isinstance(constraint, annotated_types.Len):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:510:        min_len = constraint.min_length
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:511:        max_len = constraint.max_length
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:534:    elif isinstance(constraint, annotated_types.MultipleOf):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:535:        multiple_of = constraint.multiple_of
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:549:    elif isinstance(constraint, annotated_types.Timezone):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:550:        tz = constraint.tz
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:555:                s['tz_constraint'] = 'aware'
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:566:                s['tz_constraint'] = 'naive'
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:576:    elif isinstance(constraint, annotated_types.Interval):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:577:        if constraint.ge:
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:578:            s = _apply_constraint(s, annotated_types.Ge(constraint.ge))
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:579:        if constraint.gt:
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:580:            s = _apply_constraint(s, annotated_types.Gt(constraint.gt))
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:581:        if constraint.le:
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:582:            s = _apply_constraint(s, annotated_types.Le(constraint.le))
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:583:        if constraint.lt:
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:584:            s = _apply_constraint(s, annotated_types.Lt(constraint.lt))
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:586:    elif isinstance(constraint, annotated_types.Predicate):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:587:        func = constraint.func
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:606:    elif isinstance(constraint, _NotEq):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:607:        value = constraint.value
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:613:    elif isinstance(constraint, _Eq):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:614:        value = constraint.value
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:620:    elif isinstance(constraint, _In):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:621:        values = constraint.values
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:627:    elif isinstance(constraint, _NotIn):
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:628:        values = constraint.values
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:635:        assert isinstance(constraint, Pattern)
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:638:            s['pattern'] = constraint.pattern
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:643:                return constraint.match(v) is not None
.venv\Lib\site-packages\pydantic\experimental\pipeline.py:645:            s = _check_func(check_pattern, f'~ {constraint.pattern}', s)
.venv\Lib\site-packages\pydantic\v1\fields.py:132:    # field constraints with the default value, it's also used in update_from_config below
.venv\Lib\site-packages\pydantic\v1\fields.py:133:    __field_constraints__ = {
.venv\Lib\site-packages\pydantic\v1\fields.py:183:            **self.__field_constraints__,
.venv\Lib\site-packages\pydantic\v1\fields.py:189:    def get_constraints(self) -> Set[str]:
.venv\Lib\site-packages\pydantic\v1\fields.py:191:        Gets the constraints set on the field by comparing the constraint value with its default value
.venv\Lib\site-packages\pydantic\v1\fields.py:193:        :return: the constraints set on field_info
.venv\Lib\site-packages\pydantic\v1\fields.py:195:        return {attr for attr, default in self.__field_constraints__.items() if getattr(self, attr) != default}
.venv\Lib\site-packages\pydantic\v1\fields.py:209:                if current_value is self.__field_constraints__.get(attr_name, None):
.venv\Lib\site-packages\pydantic\v1\fields.py:592:            elif self.type_.__constraints__:
.venv\Lib\site-packages\pydantic\v1\fields.py:593:                self.type_ = Union[self.type_.__constraints__]
.venv\Lib\site-packages\pydantic\v1\main.py:839:        # The extra "is not None" guards are not logically necessary but optimizes performance for the simple case.
.venv\Lib\site-packages\pydantic\v1\schema.py:998:_map_types_constraint: Dict[Any, Callable[..., type]] = {int: conint, float: confloat, Decimal: condecimal}
.venv\Lib\site-packages\pydantic\v1\schema.py:1012:    constraints = field_info.get_constraints()
.venv\Lib\site-packages\pydantic\v1\schema.py:1013:    used_constraints: Set[str] = set()
.venv\Lib\site-packages\pydantic\v1\schema.py:1014:    if constraints:
.venv\Lib\site-packages\pydantic\v1\schema.py:1015:        annotation, used_constraints = get_annotation_with_constraints(annotation, field_info)
.venv\Lib\site-packages\pydantic\v1\schema.py:1017:        used_constraints.add('allow_mutation')
.venv\Lib\site-packages\pydantic\v1\schema.py:1019:    unused_constraints = constraints - used_constraints
.venv\Lib\site-packages\pydantic\v1\schema.py:1020:    if unused_constraints:
.venv\Lib\site-packages\pydantic\v1\schema.py:1022:            f'On field "{field_name}" the following field constraints are set but not enforced: '
.venv\Lib\site-packages\pydantic\v1\schema.py:1023:            f'{", ".join(unused_constraints)}. '
.venv\Lib\site-packages\pydantic\v1\schema.py:1024:            f'\nFor more details see https://docs.pydantic.dev/usage/schema/#unenforced-field-constraints'
.venv\Lib\site-packages\pydantic\v1\schema.py:1030:def get_annotation_with_constraints(annotation: Any, field_info: FieldInfo) -> Tuple[Type[Any], Set[str]]:  # noqa: C901
.venv\Lib\site-packages\pydantic\v1\schema.py:1032:    Get an annotation with used constraints implemented for numbers and strings based on the field_info.
.venv\Lib\site-packages\pydantic\v1\schema.py:1036:    :return: the same ``annotation`` if unmodified or a new annotation along with the used constraints.
.venv\Lib\site-packages\pydantic\v1\schema.py:1038:    used_constraints: Set[str] = set()
.venv\Lib\site-packages\pydantic\v1\schema.py:1064:                used_constraints.update({'min_items', 'max_items', 'unique_items'})
.venv\Lib\site-packages\pydantic\v1\schema.py:1073:                used_constraints.update({'min_items', 'max_items'})
.venv\Lib\site-packages\pydantic\v1\schema.py:1077:                used_constraints.update({'min_items', 'max_items'})
.venv\Lib\site-packages\pydantic\v1\schema.py:1088:        constraint_func: Optional[Callable[..., type]] = None
.venv\Lib\site-packages\pydantic\v1\schema.py:1093:                def constraint_func(**kw: Any) -> Type[Any]:  # noqa: F811
.venv\Lib\site-packages\pydantic\v1\schema.py:1100:                    def constraint_func(**kw: Any) -> Type[Any]:
.venv\Lib\site-packages\pydantic\v1\schema.py:1104:                    constraint_func = constr
.venv\Lib\site-packages\pydantic\v1\schema.py:1109:                    def constraint_func(**kw: Any) -> Type[Any]:
.venv\Lib\site-packages\pydantic\v1\schema.py:1113:                    constraint_func = conbytes
.venv\Lib\site-packages\pydantic\v1\schema.py:1133:                constraint_func = _map_types_constraint[numeric_type]
.venv\Lib\site-packages\pydantic\v1\schema.py:1136:            used_constraints.update(set(attrs))
.venv\Lib\site-packages\pydantic\v1\schema.py:1143:                constraint_func = cast(Callable[..., type], constraint_func)
.venv\Lib\site-packages\pydantic\v1\schema.py:1144:                return constraint_func(**kwargs)
.venv\Lib\site-packages\pydantic\v1\schema.py:1147:    return go(annotation), used_constraints
.venv\Lib\site-packages\pydantic\v1\types.py:288:        # Modify constraints to account for differences between IEEE floats and JSON
.venv\Lib\site-packages\pydantic\v1\typing.py:66:        # Python 3.13/3.12.4+ made `recursive_guard` a kwarg, so name it explicitly to avoid:
.venv\Lib\site-packages\pydantic\v1\typing.py:67:        # TypeError: ForwardRef._evaluate() missing 1 required keyword-only argument: 'recursive_guard'
.venv\Lib\site-packages\pydantic\v1\typing.py:68:        return cast(Any, type_)._evaluate(globalns, localns, recursive_guard=set())
.venv\Lib\site-packages\pydantic\v1\typing.py:75:        return cast(Any, type_)._evaluate(globalns, localns, type_params=(), recursive_guard=set())
.venv\Lib\site-packages\pydantic\v1\utils.py:691:        # do we really dare to catch ALL errors? Seems a bit risky
.venv\Lib\site-packages\pydantic\v1\validators.py:135:    # NOTICE: this does not fully protect user from the DOS risk since the standard library JSON implementation
.venv\Lib\site-packages\pydantic\v1\_hypothesis_plugin.py:22:to generate instances of the builtin `int` type which match the constraints.
.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:10:from typing_extensions import TypeGuard, get_args, get_origin
.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:45:) -> TypeGuard[CoreSchema]:
.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:51:) -> TypeGuard[CoreSchemaField]:
.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:57:) -> TypeGuard[FunctionSchemaWithInnerSchema]:
.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:63:) -> TypeGuard[core_schema.ListSchema | core_schema.SetSchema | core_schema.FrozenSetSchema]:
.venv\Lib\site-packages\pydantic\_internal\_dataclasses.py:17:from typing_extensions import TypeGuard
.venv\Lib\site-packages\pydantic\_internal\_dataclasses.py:204:def is_builtin_dataclass(_cls: type[Any]) -> TypeGuard[type[StandardDataclass]]:
.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1791:            elif type_param.__constraints__:
.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1792:                return core_schema.union_schema([self.generate_schema(type[c]) for c in type_param.__constraints__])
.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2180:        if constraints := typevar.__constraints__:
.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2181:            return self._union_schema(typing.Union[constraints])
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:20:LENGTH_CONSTRAINTS = {'min_length', 'max_length'}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:22:NUMERIC_CONSTRAINTS = {'multiple_of', *INEQUALITY}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:25:STR_CONSTRAINTS = {
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:26:    *LENGTH_CONSTRAINTS,
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:34:BYTES_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:36:LIST_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:37:TUPLE_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:38:SET_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:39:DICT_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:40:GENERATOR_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:41:SEQUENCE_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *FAIL_FAST}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:43:FLOAT_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *ALLOW_INF_NAN, *STRICT}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:44:DECIMAL_CONSTRAINTS = {'max_digits', 'decimal_places', *FLOAT_CONSTRAINTS}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:45:INT_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *ALLOW_INF_NAN, *STRICT}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:46:BOOL_CONSTRAINTS = STRICT
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:47:UUID_CONSTRAINTS = STRICT
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:49:DATE_TIME_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:50:TIMEDELTA_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:51:TIME_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:52:LAX_OR_STRICT_CONSTRAINTS = STRICT
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:53:ENUM_CONSTRAINTS = STRICT
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:54:COMPLEX_CONSTRAINTS = STRICT
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:56:UNION_CONSTRAINTS = {'union_mode'}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:57:URL_CONSTRAINTS = {
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:70:CONSTRAINTS_TO_ALLOWED_SCHEMAS: dict[str, set[str]] = defaultdict(set)
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:72:constraint_schema_pairings: list[tuple[set[str], tuple[str, ...]]] = [
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:73:    (STR_CONSTRAINTS, TEXT_SCHEMA_TYPES),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:74:    (BYTES_CONSTRAINTS, ('bytes',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:75:    (LIST_CONSTRAINTS, ('list',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:76:    (TUPLE_CONSTRAINTS, ('tuple',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:77:    (SET_CONSTRAINTS, ('set', 'frozenset')),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:78:    (DICT_CONSTRAINTS, ('dict',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:79:    (GENERATOR_CONSTRAINTS, ('generator',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:80:    (FLOAT_CONSTRAINTS, ('float',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:81:    (INT_CONSTRAINTS, ('int',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:82:    (DATE_TIME_CONSTRAINTS, ('date', 'time', 'datetime', 'timedelta')),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:85:    (UNION_CONSTRAINTS, ('union',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:86:    (URL_CONSTRAINTS, ('url', 'multi-host-url')),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:87:    (BOOL_CONSTRAINTS, ('bool',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:88:    (UUID_CONSTRAINTS, ('uuid',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:89:    (LAX_OR_STRICT_CONSTRAINTS, ('lax-or-strict',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:90:    (ENUM_CONSTRAINTS, ('enum',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:91:    (DECIMAL_CONSTRAINTS, ('decimal',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:92:    (COMPLEX_CONSTRAINTS, ('complex',)),
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:95:for constraints, schemas in constraint_schema_pairings:
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:96:    for c in constraints:
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:97:        CONSTRAINTS_TO_ALLOWED_SCHEMAS[c].update(schemas)
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:147:def _get_at_to_constraint_map() -> dict[type, str]:
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:148:    """Return a mapping of annotated types to constraints.
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:195:    chain_schema_constraints: set[str] = {
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:204:    for constraint, value in schema_update.items():
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:205:        if constraint not in CONSTRAINTS_TO_ALLOWED_SCHEMAS:
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:206:            raise ValueError(f'Unknown constraint {constraint}')
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:207:        allowed_schemas = CONSTRAINTS_TO_ALLOWED_SCHEMAS[constraint]
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:209:        # if it becomes necessary to handle more than one constraint
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:211:        # this is a bit challenging because we sometimes want to apply constraints to the inner schema,
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:212:        # whereas other times we want to wrap the existing schema with a new one that enforces a new constraint.
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:213:        if schema_type in {'function-before', 'function-wrap', 'function-after'} and constraint == 'strict':
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:217:        # if we're allowed to apply constraint directly to the schema, like le to int, do that
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:219:            if constraint == 'union_mode' and schema_type == 'union':
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:222:                schema[constraint] = value
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:225:        #  else, apply a function after validator to the schema to enforce the corresponding constraint
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:226:        if constraint in chain_schema_constraints:
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:228:            def _apply_constraint_with_incompatibility_info(
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:234:                    # if the error is about the type, it's likely that the constraint is incompatible the type of the field
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:237:                    # that we'd rather express as a constraint incompatibility error (TypeError)
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:241:                            f"Unable to apply constraint '{constraint}' to supplied value {value} for schema of type '{schema_type}'"  # noqa: B023
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:248:                    _apply_constraint_with_incompatibility_info, cs.str_schema(**{constraint: value})
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:251:        elif constraint in NUMERIC_VALIDATOR_LOOKUP:
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:252:            if constraint in LENGTH_CONSTRAINTS:
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:260:                    js_constraint_key = 'minItems' if constraint == 'min_length' else 'maxItems'
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:262:                    js_constraint_key = 'minLength' if constraint == 'min_length' else 'maxLength'
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:264:                js_constraint_key = constraint
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:267:                partial(NUMERIC_VALIDATOR_LOOKUP[constraint], **{constraint: value}), schema
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:273:                    **{js_constraint_key: as_jsonable_value(value)},
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:276:                metadata['pydantic_js_updates'] = {js_constraint_key: as_jsonable_value(value)}
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:278:        elif constraint == 'allow_inf_nan' and value is False:
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:284:            # It's rare that we'd get here, but it's possible if we add a new constraint and forget to handle it
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:285:            # Most constraint errors are caught at runtime during attempted application
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:286:            raise RuntimeError(f"Unable to apply constraint '{constraint}' to schema of type '{schema_type}'")
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:289:        if (annotation_type := type(annotation)) in (at_to_constraint_map := _get_at_to_constraint_map()):
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:290:            constraint = at_to_constraint_map[annotation_type]
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:291:            validator = NUMERIC_VALIDATOR_LOOKUP.get(constraint)
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:293:                raise ValueError(f'Unknown constraint {constraint}')
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:295:                partial(validator, {constraint: getattr(annotation, constraint)}), schema
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:361:        elif (annotation_type := type(annotation)) in (at_to_constraint_map := _get_at_to_constraint_map()):
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:362:            constraint = at_to_constraint_map[annotation_type]
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:363:            res[constraint] = getattr(annotation, constraint)
.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:392:            f'The following constraints cannot be applied to {source_type!r}: {", ".join([f"{k!r}" for k in unknown])}'
.venv\Lib\site-packages\pydantic\_internal\_utils.py:23:from typing_extensions import TypeAlias, TypeGuard, deprecated
.venv\Lib\site-packages\pydantic\_internal\_utils.py:111:def is_model_class(cls: Any) -> TypeGuard[type[BaseModel]]:
.venv\Lib\site-packages\pydantic\_internal\_utils.py:347:        # do we really dare to catch ALL errors? Seems a bit risky
.venv\Lib\site-packages\pydantic\_internal\_validators.py:279:        raise TypeError(f"Unable to apply constraint 'gt' to supplied value {x}")
.venv\Lib\site-packages\pydantic\_internal\_validators.py:288:        raise TypeError(f"Unable to apply constraint 'ge' to supplied value {x}")
.venv\Lib\site-packages\pydantic\_internal\_validators.py:297:        raise TypeError(f"Unable to apply constraint 'lt' to supplied value {x}")
.venv\Lib\site-packages\pydantic\_internal\_validators.py:306:        raise TypeError(f"Unable to apply constraint 'le' to supplied value {x}")
.venv\Lib\site-packages\pydantic\_internal\_validators.py:315:        raise TypeError(f"Unable to apply constraint 'multiple_of' to supplied value {x}")
.venv\Lib\site-packages\pydantic\_internal\_validators.py:326:        raise TypeError(f"Unable to apply constraint 'min_length' to supplied value {x}")
.venv\Lib\site-packages\pydantic\_internal\_validators.py:338:        raise TypeError(f"Unable to apply constraint 'max_length' to supplied value {x}")
.venv\Lib\site-packages\pydantic\_internal\_validators.py:395:        raise TypeError(f"Unable to apply constraint 'max_digits' to supplied value {x}")
.venv\Lib\site-packages\pydantic\_internal\_validators.py:410:        raise TypeError(f"Unable to apply constraint 'decimal_places' to supplied value {x}")
.venv\Lib\site-packages\pydantic_core\core_schema.py:1022:    tz_constraint: Union[Literal['aware', 'naive'], int]
.venv\Lib\site-packages\pydantic_core\core_schema.py:1036:    tz_constraint: Literal['aware', 'naive'] | int | None = None,
.venv\Lib\site-packages\pydantic_core\core_schema.py:1060:        tz_constraint: The value must be timezone aware or naive, or an int to indicate required tz offset
.venv\Lib\site-packages\pydantic_core\core_schema.py:1073:        tz_constraint=tz_constraint,
.venv\Lib\site-packages\pydantic_core\core_schema.py:1089:    tz_constraint: Union[Literal['aware', 'naive'], int]
.venv\Lib\site-packages\pydantic_core\core_schema.py:1107:    tz_constraint: Literal['aware', 'naive'] | int | None = None,
.venv\Lib\site-packages\pydantic_core\core_schema.py:1134:        tz_constraint: The value must be timezone aware or naive, or an int to indicate required tz offset
.venv\Lib\site-packages\pydantic_core\core_schema.py:1150:        tz_constraint=tz_constraint,
.venv\Lib\site-packages\pygments\lexers\archetype.py:42:        'date_constraints': [
.venv\Lib\site-packages\pygments\lexers\archetype.py:43:            # ISO 8601-based date/time constraints
.venv\Lib\site-packages\pygments\lexers\archetype.py:45:            # ISO 8601-based duration constraints + optional trailing slash
.venv\Lib\site-packages\pygments\lexers\archetype.py:75:        'constraint_values': [
.venv\Lib\site-packages\pygments\lexers\archetype.py:77:             bygroups(Punctuation, Name.Decorator, Punctuation), 'adl14_code_constraint'),
.venv\Lib\site-packages\pygments\lexers\archetype.py:78:            # ADL 1.4 ordinal constraint
.venv\Lib\site-packages\pygments\lexers\archetype.py:81:            include('date_constraints'),
.venv\Lib\site-packages\pygments\lexers\archetype.py:126:        'adl14_code_constraint': [
.venv\Lib\site-packages\pygments\lexers\archetype.py:191:    url = 'https://specifications.openehr.org/releases/AM/latest/ADL2.html#_cadl_constraint_adl'
.venv\Lib\site-packages\pygments\lexers\archetype.py:215:            # regex in slot or as string constraint
.venv\Lib\site-packages\pygments\lexers\archetype.py:218:            # regex in slot or as string constraint
.venv\Lib\site-packages\pygments\lexers\archetype.py:231:            include('constraint_values'),
.venv\Lib\site-packages\pygments\lexers\asm.py:420:                'cfguard_checkcc', 'cleanup', 'cleanuppad', 'cleanupret',
.venv\Lib\site-packages\pygments\lexers\carbon.py:43:             r'base|addr|extends|choice|constraint|impl)\b', Keyword.Declaration),
.venv\Lib\site-packages\pygments\lexers\carbon.py:91:        if 'constraint' in text:
.venv\Lib\site-packages\pygments\lexers\console.py:98:             r"guard_true|guard_false|guard_value|guard_isnull|"
.venv\Lib\site-packages\pygments\lexers\console.py:99:             r"guard_nonnull_class|guard_nonnull|guard_class|guard_no_overflow|"
.venv\Lib\site-packages\pygments\lexers\console.py:100:             r"guard_not_forced|guard_no_exception|guard_not_invalidated)",
.venv\Lib\site-packages\pygments\lexers\dotnet.py:629:        'atomic', 'break', 'checked', 'component', 'const', 'constraint',
.venv\Lib\site-packages\pygments\lexers\elpi.py:81:            (rf"\b(constraint)(\s+)(({const_sym_re}(\s+)?)+)",
.venv\Lib\site-packages\pygments\lexers\esoteric.py:213:                    'fault_ep', 'G', 'guard', 'guard_size', 'init', 'ip',
.venv\Lib\site-packages\pygments\lexers\foxpro.py:268:             r'XMLConstraints|XMLNameIsXPath|XMLNamespace|XMLName|'
.venv\Lib\site-packages\pygments\lexers\haxe.py:237:                    'abstract-opaque', 'type-param-constraint', 'type-name')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:296:            default(('#pop', 'typedef-body', 'type-param-constraint',
.venv\Lib\site-packages\pygments\lexers\haxe.py:308:                     'type-param-constraint', 'type-name')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:315:            (ident_no_keyword, Name, ('enum-member', 'type-param-constraint')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:328:                     'type-param-constraint', 'type-name')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:371:              'parenthesis-open', 'type-param-constraint')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:373:                     'parenthesis-open', 'type-param-constraint')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:386:                                    'type-param-constraint')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:578:            default(('#pop', 'case-sep', 'case-guard', 'expr')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:587:        'case-guard': [
.venv\Lib\site-packages\pygments\lexers\haxe.py:745:        # optional type-param that may include constraint
.venv\Lib\site-packages\pygments\lexers\haxe.py:746:        # ie. <T:Constraint, T2:(ConstraintA,ConstraintB)>
.venv\Lib\site-packages\pygments\lexers\haxe.py:747:        'type-param-constraint': [
.venv\Lib\site-packages\pygments\lexers\haxe.py:749:            (r'<(?!=)', Punctuation, ('#pop', 'type-param-constraint-sep',
.venv\Lib\site-packages\pygments\lexers\haxe.py:750:                                      'type-param-constraint-flag', 'type-name')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:754:        'type-param-constraint-sep': [
.venv\Lib\site-packages\pygments\lexers\haxe.py:757:            (r',', Punctuation, ('#pop', 'type-param-constraint-sep',
.venv\Lib\site-packages\pygments\lexers\haxe.py:758:                                 'type-param-constraint-flag', 'type-name')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:761:        # the optional constraint inside type-param
.venv\Lib\site-packages\pygments\lexers\haxe.py:762:        'type-param-constraint-flag': [
.venv\Lib\site-packages\pygments\lexers\haxe.py:764:            (r':', Punctuation, ('#pop', 'type-param-constraint-flag-type')),
.venv\Lib\site-packages\pygments\lexers\haxe.py:768:        'type-param-constraint-flag-type': [
.venv\Lib\site-packages\pygments\lexers\haxe.py:770:            (r'\(', Punctuation, ('#pop', 'type-param-constraint-flag-type-sep',
.venv\Lib\site-packages\pygments\lexers\haxe.py:775:        'type-param-constraint-flag-type-sep': [
.venv\Lib\site-packages\pygments\lexers\hdl.py:202:                'constraint', 'context', 'continue', 'cover', 'covergroup',
.venv\Lib\site-packages\pygments\lexers\hdl.py:445:                'generic', 'group', 'guarded', 'if', 'impure', 'in',
.venv\Lib\site-packages\pygments\lexers\javascript.py:1050:            # This isn't really guarding against mishighlighting well-formed
.venv\Lib\site-packages\pygments\lexers\lisp.py:832:        'current-reader-guard', 'current-readtable', 'current-seconds',
.venv\Lib\site-packages\pygments\lexers\lisp.py:833:        'current-security-guard', 'current-subprocess-custodian-mode',
.venv\Lib\site-packages\pygments\lexers\lisp.py:941:        'group-read-bit', 'group-write-bit', 'guard-evt', 'handle-evt',
.venv\Lib\site-packages\pygments\lexers\lisp.py:1049:        'make-resolved-module-path', 'make-security-guard', 'make-semaphore',
.venv\Lib\site-packages\pygments\lexers\lisp.py:1073:        'nack-guard-evt', 'namespace-anchor->empty-namespace',
.venv\Lib\site-packages\pygments\lexers\lisp.py:1115:        'poll-guard-evt', 'port->bytes', 'port->bytes-lines', 'port->lines',
.venv\Lib\site-packages\pygments\lexers\lisp.py:1211:        'seconds->date', 'security-guard?', 'semaphore-peek-evt',
.venv\Lib\site-packages\pygments\lexers\matlab.py:1571:                        "matlab.mock.constraints.Occurred",
.venv\Lib\site-packages\pygments\lexers\matlab.py:1572:                        "matlab.mock.constraints.WasAccessed",
.venv\Lib\site-packages\pygments\lexers\matlab.py:1573:                        "matlab.mock.constraints.WasCalled",
.venv\Lib\site-packages\pygments\lexers\matlab.py:1574:                        "matlab.mock.constraints.WasSet",
.venv\Lib\site-packages\pygments\lexers\matlab.py:1673:                        "matlab.unittest.constraints.BooleanConstraint",
.venv\Lib\site-packages\pygments\lexers\matlab.py:1674:                        "matlab.unittest.constraints.Constraint",
.venv\Lib\site-packages\pygments\lexers\matlab.py:1675:                        "matlab.unittest.constraints.Tolerance",
.venv\Lib\site-packages\pygments\lexers\matlab.py:1676:                        "matlab.unittest.diagnostics.ConstraintDiagnostic",
.venv\Lib\site-packages\pygments\lexers\ml.py:368:        'and', 'as', 'assert', 'begin', 'class', 'constraint', 'do', 'done',
.venv\Lib\site-packages\pygments\lexers\ml.py:783:        'as', 'assert', 'begin', 'class', 'constraint', 'do', 'done', 'downto',
.venv\Lib\site-packages\pygments\lexers\modeling.py:324:             # a range constraint
.venv\Lib\site-packages\pygments\lexers\modula2.py:396:        'ABSTRACT', 'AS', 'CLASS', 'GUARD', 'INHERIT', 'OVERRIDE', 'READONLY',
.venv\Lib\site-packages\pygments\lexers\modula2.py:397:        'REVEAL', 'TRACED', 'UNSAFEGUARDED',
.venv\Lib\site-packages\pygments\lexers\monte.py:24:    'extends', 'finally', 'for', 'guards', 'if', 'implements', 'import',
.venv\Lib\site-packages\pygments\lexers\monte.py:59:_guards = [
.venv\Lib\site-packages\pygments\lexers\monte.py:62:    'Set', 'Str', 'SubrangeGuard', 'Transparent', 'Void',
.venv\Lib\site-packages\pygments\lexers\monte.py:134:            # Safe scope guards
.venv\Lib\site-packages\pygments\lexers\monte.py:135:            (words(_guards, prefix='\\b', suffix='\\b'), Keyword.Type),
.venv\Lib\site-packages\pygments\lexers\objective.py:419:                'do', 'else', 'fallthrough', 'for', 'guard', 'if', 'in', 'is',
.venv\Lib\site-packages\pygments\lexers\pddl.py:63:                ':constraints', ':action-costs', ':multi-agent',
.venv\Lib\site-packages\pygments\lexers\perl.py:285:        'constraints','construct','contains','contents','copy','cos','cosec',
.venv\Lib\site-packages\pygments\lexers\smv.py:41:                    'CONSTRAINT', 'SIMPWFF', 'CTLWFF', 'LTLWFF', 'PSLWFF',
.venv\Lib\site-packages\pygments\lexers\theorem.py:90:    # 'as', 'assert', 'begin', 'class', 'constraint', 'do', 'done',
.venv\Lib\site-packages\pygments\lexers\vip.py:98:               'guard', 'multi', 'nondeterm', 'or', 'orelse', 'otherwise', 'procedure', 'resolve', 'single', 'suspending')
.venv\Lib\site-packages\pygments\lexers\_cocoa_builtins.py:14:COCOA_INTERFACES = {'AAAttribution', 'ABNewPersonViewController', 'ABPeoplePickerNavigationController', 'ABPersonViewController', 'ABUnknownPersonViewController', 'ACAccount', 'ACAccountCredential', 'ACAccountStore', 'ACAccountType', 'ADBannerView', 'ADClient', 'ADInterstitialAd', 'ADInterstitialAdPresentationViewController', 'AEAssessmentConfiguration', 'AEAssessmentSession', 'ALAsset', 'ALAssetRepresentation', 'ALAssetsFilter', 'ALA
ssetsGroup', 'ALAssetsLibrary', 'APActivationPayload', 'ARAnchor', 'ARAppClipCodeAnchor', 'ARBody2D', 'ARBodyAnchor', 'ARBodyTrackingConfiguration', 'ARCamera', 'ARCoachingOverlayView', 'ARCollaborationData', 'ARConfiguration', 'ARDepthData', 'ARDirectionalLightEstimate', 'AREnvironmentProbeAnchor', 'ARFaceAnchor', 'ARFaceGeometry', 'ARFaceTrackingConfiguration', 'ARFrame', 'ARGeoAnchor', 'ARGeoTrackingConfiguration', 'ARGeoTrackingStatus', 'ARGeometryElement', 'ARGeometrySource', 'ARHitTestResu
lt', 'ARImageAnchor', 'ARImageTrackingConfiguration', 'ARLightEstimate', 'ARMatteGenerator', 'ARMeshAnchor', 'ARMeshGeometry', 'ARObjectAnchor', 'ARObjectScanningConfiguration', 'AROrientationTrackingConfiguration', 'ARParticipantAnchor', 'ARPlaneAnchor', 'ARPlaneGeometry', 'ARPointCloud', 'ARPositionalTrackingConfiguration', 'ARQuickLookPreviewItem', 'ARRaycastQuery', 'ARRaycastResult', 'ARReferenceImage', 'ARReferenceObject', 'ARSCNFaceGeometry', 'ARSCNPlaneGeometry', 'ARSCNView', 'ARSKView', 
'ARSession', 'ARSkeleton', 'ARSkeleton2D', 'ARSkeleton3D', 'ARSkeletonDefinition', 'ARTrackedRaycast', 'ARVideoFormat', 'ARView', 'ARWorldMap', 'ARWorldTrackingConfiguration', 'ASAccountAuthenticationModificationController', 'ASAccountAuthenticationModificationExtensionContext', 'ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest', 'ASAccountAuthenticationModificationRequest', 'ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest', 'ASAccountAuthent
icationModificationViewController', 'ASAuthorization', 'ASAuthorizationAppleIDButton', 'ASAuthorizationAppleIDCredential', 'ASAuthorizationAppleIDProvider', 'ASAuthorizationAppleIDRequest', 'ASAuthorizationController', 'ASAuthorizationOpenIDRequest', 'ASAuthorizationPasswordProvider', 'ASAuthorizationPasswordRequest', 'ASAuthorizationProviderExtensionAuthorizationRequest', 'ASAuthorizationRequest', 'ASAuthorizationSingleSignOnCredential', 'ASAuthorizationSingleSignOnProvider', 'ASAuthorizationSi
ngleSignOnRequest', 'ASCredentialIdentityStore', 'ASCredentialIdentityStoreState', 'ASCredentialProviderExtensionContext', 'ASCredentialProviderViewController', 'ASCredentialServiceIdentifier', 'ASIdentifierManager', 'ASPasswordCredential', 'ASPasswordCredentialIdentity', 'ASWebAuthenticationSession', 'ASWebAuthenticationSessionRequest', 'ASWebAuthenticationSessionWebBrowserSessionManager', 'ATTrackingManager', 'AUAudioUnit', 'AUAudioUnitBus', 'AUAudioUnitBusArray', 'AUAudioUnitPreset', 'AUAudio
UnitV2Bridge', 'AUAudioUnitViewConfiguration', 'AUParameter', 'AUParameterGroup', 'AUParameterNode', 'AUParameterTree', 'AUViewController', 'AVAggregateAssetDownloadTask', 'AVAsset', 'AVAssetCache', 'AVAssetDownloadStorageManagementPolicy', 'AVAssetDownloadStorageManager', 'AVAssetDownloadTask', 'AVAssetDownloadURLSession', 'AVAssetExportSession', 'AVAssetImageGenerator', 'AVAssetReader', 'AVAssetReaderAudioMixOutput', 'AVAssetReaderOutput', 'AVAssetReaderOutputMetadataAdaptor', 'AVAssetReaderSa
mpleReferenceOutput', 'AVAssetReaderTrackOutput', 'AVAssetReaderVideoCompositionOutput', 'AVAssetResourceLoader', 'AVAssetResourceLoadingContentInformationRequest', 'AVAssetResourceLoadingDataRequest', 'AVAssetResourceLoadingRequest', 'AVAssetResourceLoadingRequestor', 'AVAssetResourceRenewalRequest', 'AVAssetSegmentReport', 'AVAssetSegmentReportSampleInformation', 'AVAssetSegmentTrackReport', 'AVAssetTrack', 'AVAssetTrackGroup', 'AVAssetTrackSegment', 'AVAssetWriter', 'AVAssetWriterInput', 'AVA
ssetWriterInputGroup', 'AVAssetWriterInputMetadataAdaptor', 'AVAssetWriterInputPassDescription', 'AVAssetWriterInputPixelBufferAdaptor', 'AVAsynchronousCIImageFilteringRequest', 'AVAsynchronousVideoCompositionRequest', 'AVAudioMix', 'AVAudioMixInputParameters', 'AVAudioSession', 'AVCameraCalibrationData', 'AVCaptureAudioChannel', 'AVCaptureAudioDataOutput', 'AVCaptureAudioFileOutput', 'AVCaptureAudioPreviewOutput', 'AVCaptureAutoExposureBracketedStillImageSettings', 'AVCaptureBracketedStillImage
Settings', 'AVCaptureConnection', 'AVCaptureDataOutputSynchronizer', 'AVCaptureDepthDataOutput', 'AVCaptureDevice', 'AVCaptureDeviceDiscoverySession', 'AVCaptureDeviceFormat', 'AVCaptureDeviceInput', 'AVCaptureDeviceInputSource', 'AVCaptureFileOutput', 'AVCaptureInput', 'AVCaptureInputPort', 'AVCaptureManualExposureBracketedStillImageSettings', 'AVCaptureMetadataInput', 'AVCaptureMetadataOutput', 'AVCaptureMovieFileOutput', 'AVCaptureMultiCamSession', 'AVCaptureOutput', 'AVCapturePhoto', 'AVCapt
urePhotoBracketSettings', 'AVCapturePhotoOutput', 'AVCapturePhotoSettings', 'AVCaptureResolvedPhotoSettings', 'AVCaptureScreenInput', 'AVCaptureSession', 'AVCaptureStillImageOutput', 'AVCaptureSynchronizedData', 'AVCaptureSynchronizedDataCollection', 'AVCaptureSynchronizedDepthData', 'AVCaptureSynchronizedMetadataObjectData', 'AVCaptureSynchronizedSampleBufferData', 'AVCaptureSystemPressureState', 'AVCaptureVideoDataOutput', 'AVCaptureVideoPreviewLayer', 'AVComposition', 'AVCompositionTrack', 'A
VCompositionTrackFormatDescriptionReplacement', 'AVCompositionTrackSegment', 'AVContentKeyRequest', 'AVContentKeyResponse', 'AVContentKeySession', 'AVDateRangeMetadataGroup', 'AVDepthData', 'AVDisplayCriteria', 'AVFragmentedAsset', 'AVFragmentedAssetMinder', 'AVFragmentedAssetTrack', 'AVFragmentedMovie', 'AVFragmentedMovieMinder', 'AVFragmentedMovieTrack', 'AVFrameRateRange', 'AVMediaDataStorage', 'AVMediaSelection', 'AVMediaSelectionGroup', 'AVMediaSelectionOption', 'AVMetadataBodyObject', 'AVM
etadataCatBodyObject', 'AVMetadataDogBodyObject', 'AVMetadataFaceObject', 'AVMetadataGroup', 'AVMetadataHumanBodyObject', 'AVMetadataItem', 'AVMetadataItemFilter', 'AVMetadataItemValueRequest', 'AVMetadataMachineReadableCodeObject', 'AVMetadataObject', 'AVMetadataSalientObject', 'AVMovie', 'AVMovieTrack', 'AVMutableAssetDownloadStorageManagementPolicy', 'AVMutableAudioMix', 'AVMutableAudioMixInputParameters', 'AVMutableComposition', 'AVMutableCompositionTrack', 'AVMutableDateRangeMetadataGroup',
 'AVMutableMediaSelection', 'AVMutableMetadataItem', 'AVMutableMovie', 'AVMutableMovieTrack', 'AVMutableTimedMetadataGroup', 'AVMutableVideoComposition', 'AVMutableVideoCompositionInstruction', 'AVMutableVideoCompositionLayerInstruction', 'AVOutputSettingsAssistant', 'AVPersistableContentKeyRequest', 'AVPictureInPictureController', 'AVPlayer', 'AVPlayerItem', 'AVPlayerItemAccessLog', 'AVPlayerItemAccessLogEvent', 'AVPlayerItemErrorLog', 'AVPlayerItemErrorLogEvent', 'AVPlayerItemLegibleOutput', '
AVPlayerItemMediaDataCollector', 'AVPlayerItemMetadataCollector', 'AVPlayerItemMetadataOutput', 'AVPlayerItemOutput', 'AVPlayerItemTrack', 'AVPlayerItemVideoOutput', 'AVPlayerLayer', 'AVPlayerLooper', 'AVPlayerMediaSelectionCriteria', 'AVPlayerViewController', 'AVPortraitEffectsMatte', 'AVQueuePlayer', 'AVRouteDetector', 'AVRoutePickerView', 'AVSampleBufferAudioRenderer', 'AVSampleBufferDisplayLayer', 'AVSampleBufferRenderSynchronizer', 'AVSemanticSegmentationMatte', 'AVSynchronizedLayer', 'AVTe
xtStyleRule', 'AVTimedMetadataGroup', 'AVURLAsset', 'AVVideoComposition', 'AVVideoCompositionCoreAnimationTool', 'AVVideoCompositionInstruction', 'AVVideoCompositionLayerInstruction', 'AVVideoCompositionRenderContext', 'AVVideoCompositionRenderHint', 'AXCustomContent', 'BCChatAction', 'BCChatButton', 'BGAppRefreshTask', 'BGAppRefreshTaskRequest', 'BGProcessingTask', 'BGProcessingTaskRequest', 'BGTask', 'BGTaskRequest', 'BGTaskScheduler', 'CAAnimation', 'CAAnimationGroup', 'CABTMIDICentralViewCon
troller', 'CABTMIDILocalPeripheralViewController', 'CABasicAnimation', 'CADisplayLink', 'CAEAGLLayer', 'CAEmitterCell', 'CAEmitterLayer', 'CAGradientLayer', 'CAInterAppAudioSwitcherView', 'CAInterAppAudioTransportView', 'CAKeyframeAnimation', 'CALayer', 'CAMediaTimingFunction', 'CAMetalLayer', 'CAPropertyAnimation', 'CAReplicatorLayer', 'CAScrollLayer', 'CAShapeLayer', 'CASpringAnimation', 'CATextLayer', 'CATiledLayer', 'CATransaction', 'CATransformLayer', 'CATransition', 'CAValueFunction', 'CBA
TTRequest', 'CBAttribute', 'CBCentral', 'CBCentralManager', 'CBCharacteristic', 'CBDescriptor', 'CBL2CAPChannel', 'CBManager', 'CBMutableCharacteristic', 'CBMutableDescriptor', 'CBMutableService', 'CBPeer', 'CBPeripheral', 'CBPeripheralManager', 'CBService', 'CBUUID', 'CHHapticDynamicParameter', 'CHHapticEngine', 'CHHapticEvent', 'CHHapticEventParameter', 'CHHapticParameterCurve', 'CHHapticParameterCurveControlPoint', 'CHHapticPattern', 'CIAztecCodeDescriptor', 'CIBarcodeDescriptor', 'CIBlendKer
nel', 'CIColor', 'CIColorKernel', 'CIContext', 'CIDataMatrixCodeDescriptor', 'CIDetector', 'CIFaceFeature', 'CIFeature', 'CIFilter', 'CIFilterGenerator', 'CIFilterShape', 'CIImage', 'CIImageAccumulator', 'CIImageProcessorKernel', 'CIKernel', 'CIPDF417CodeDescriptor', 'CIPlugIn', 'CIQRCodeDescriptor', 'CIQRCodeFeature', 'CIRectangleFeature', 'CIRenderDestination', 'CIRenderInfo', 'CIRenderTask', 'CISampler', 'CITextFeature', 'CIVector', 'CIWarpKernel', 'CKAcceptSharesOperation', 'CKAsset', 'CKCon
tainer', 'CKDatabase', 'CKDatabaseNotification', 'CKDatabaseOperation', 'CKDatabaseSubscription', 'CKDiscoverAllUserIdentitiesOperation', 'CKDiscoverUserIdentitiesOperation', 'CKFetchDatabaseChangesOperation', 'CKFetchNotificationChangesOperation', 'CKFetchRecordChangesOperation', 'CKFetchRecordZoneChangesConfiguration', 'CKFetchRecordZoneChangesOperation', 'CKFetchRecordZoneChangesOptions', 'CKFetchRecordZonesOperation', 'CKFetchRecordsOperation', 'CKFetchShareMetadataOperation', 'CKFetchShareP
articipantsOperation', 'CKFetchSubscriptionsOperation', 'CKFetchWebAuthTokenOperation', 'CKLocationSortDescriptor', 'CKMarkNotificationsReadOperation', 'CKModifyBadgeOperation', 'CKModifyRecordZonesOperation', 'CKModifyRecordsOperation', 'CKModifySubscriptionsOperation', 'CKNotification', 'CKNotificationID', 'CKNotificationInfo', 'CKOperation', 'CKOperationConfiguration', 'CKOperationGroup', 'CKQuery', 'CKQueryCursor', 'CKQueryNotification', 'CKQueryOperation', 'CKQuerySubscription', 'CKRecord',
 'CKRecordID', 'CKRecordZone', 'CKRecordZoneID', 'CKRecordZoneNotification', 'CKRecordZoneSubscription', 'CKReference', 'CKServerChangeToken', 'CKShare', 'CKShareMetadata', 'CKShareParticipant', 'CKSubscription', 'CKUserIdentity', 'CKUserIdentityLookupInfo', 'CLBeacon', 'CLBeaconIdentityConstraint', 'CLBeaconRegion', 'CLCircularRegion', 'CLFloor', 'CLGeocoder', 'CLHeading', 'CLKComplication', 'CLKComplicationDescriptor', 'CLKComplicationServer', 'CLKComplicationTemplate', 'CLKComplicationTemplat
eCircularSmallRingImage', 'CLKComplicationTemplateCircularSmallRingText', 'CLKComplicationTemplateCircularSmallSimpleImage', 'CLKComplicationTemplateCircularSmallSimpleText', 'CLKComplicationTemplateCircularSmallStackImage', 'CLKComplicationTemplateCircularSmallStackText', 'CLKComplicationTemplateExtraLargeColumnsText', 'CLKComplicationTemplateExtraLargeRingImage', 'CLKComplicationTemplateExtraLargeRingText', 'CLKComplicationTemplateExtraLargeSimpleImage', 'CLKComplicationTemplateExtraLargeSimpl
eText', 'CLKComplicationTemplateExtraLargeStackImage', 'CLKComplicationTemplateExtraLargeStackText', 'CLKComplicationTemplateGraphicBezelCircularText', 'CLKComplicationTemplateGraphicCircular', 'CLKComplicationTemplateGraphicCircularClosedGaugeImage', 'CLKComplicationTemplateGraphicCircularClosedGaugeText', 'CLKComplicationTemplateGraphicCircularImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeRangeText', 'CLKComplicationTemplateGrap
hicCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicCircularStackImage', 'CLKComplicationTemplateGraphicCircularStackText', 'CLKComplicationTemplateGraphicCornerCircularImage', 'CLKComplicationTemplateGraphicCornerGaugeImage', 'CLKComplicationTemplateGraphicCornerGaugeText', 'CLKComplicationTemplateGraphicCornerStackText', 'CLKComplicationTemplateGraphicCornerTextImage', 'CLKComplicationTemplateGraphicExtraLargeCircular', 'CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeIm
age', 'CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText', 'CLKComplicationTemplateGraphicExtraLargeCircularImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicExtraLargeCircularStackImage', 'CLKComplicationTemplateGraphicExtraLargeCircularStackText', 'CLKComplicationTemplateGraphicRectangul
arFullImage', 'CLKComplicationTemplateGraphicRectangularLargeImage', 'CLKComplicationTemplateGraphicRectangularStandardBody', 'CLKComplicationTemplateGraphicRectangularTextGauge', 'CLKComplicationTemplateModularLargeColumns', 'CLKComplicationTemplateModularLargeStandardBody', 'CLKComplicationTemplateModularLargeTable', 'CLKComplicationTemplateModularLargeTallBody', 'CLKComplicationTemplateModularSmallColumnsText', 'CLKComplicationTemplateModularSmallRingImage', 'CLKComplicationTemplateModularSma
llRingText', 'CLKComplicationTemplateModularSmallSimpleImage', 'CLKComplicationTemplateModularSmallSimpleText', 'CLKComplicationTemplateModularSmallStackImage', 'CLKComplicationTemplateModularSmallStackText', 'CLKComplicationTemplateUtilitarianLargeFlat', 'CLKComplicationTemplateUtilitarianSmallFlat', 'CLKComplicationTemplateUtilitarianSmallRingImage', 'CLKComplicationTemplateUtilitarianSmallRingText', 'CLKComplicationTemplateUtilitarianSmallSquare', 'CLKComplicationTimelineEntry', 'CLKDateTextP
rovider', 'CLKFullColorImageProvider', 'CLKGaugeProvider', 'CLKImageProvider', 'CLKRelativeDateTextProvider', 'CLKSimpleGaugeProvider', 'CLKSimpleTextProvider', 'CLKTextProvider', 'CLKTimeIntervalGaugeProvider', 'CLKTimeIntervalTextProvider', 'CLKTimeTextProvider', 'CLKWatchFaceLibrary', 'CLLocation', 'CLLocationManager', 'CLPlacemark', 'CLRegion', 'CLSActivity', 'CLSActivityItem', 'CLSBinaryItem', 'CLSContext', 'CLSDataStore', 'CLSObject', 'CLSProgressReportingCapability', 'CLSQuantityItem', 'C
LSScoreItem', 'CLVisit', 'CMAccelerometerData', 'CMAltimeter', 'CMAltitudeData', 'CMAttitude', 'CMDeviceMotion', 'CMDyskineticSymptomResult', 'CMFallDetectionEvent', 'CMFallDetectionManager', 'CMGyroData', 'CMHeadphoneMotionManager', 'CMLogItem', 'CMMagnetometerData', 'CMMotionActivity', 'CMMotionActivityManager', 'CMMotionManager', 'CMMovementDisorderManager', 'CMPedometer', 'CMPedometerData', 'CMPedometerEvent', 'CMRecordedAccelerometerData', 'CMRecordedRotationRateData', 'CMRotationRateData',
 'CMSensorDataList', 'CMSensorRecorder', 'CMStepCounter', 'CMTremorResult', 'CNChangeHistoryAddContactEvent', 'CNChangeHistoryAddGroupEvent', 'CNChangeHistoryAddMemberToGroupEvent', 'CNChangeHistoryAddSubgroupToGroupEvent', 'CNChangeHistoryDeleteContactEvent', 'CNChangeHistoryDeleteGroupEvent', 'CNChangeHistoryDropEverythingEvent', 'CNChangeHistoryEvent', 'CNChangeHistoryFetchRequest', 'CNChangeHistoryRemoveMemberFromGroupEvent', 'CNChangeHistoryRemoveSubgroupFromGroupEvent', 'CNChangeHistoryUpd
ateContactEvent', 'CNChangeHistoryUpdateGroupEvent', 'CNContact', 'CNContactFetchRequest', 'CNContactFormatter', 'CNContactPickerViewController', 'CNContactProperty', 'CNContactRelation', 'CNContactStore', 'CNContactVCardSerialization', 'CNContactViewController', 'CNContactsUserDefaults', 'CNContainer', 'CNFetchRequest', 'CNFetchResult', 'CNGroup', 'CNInstantMessageAddress', 'CNLabeledValue', 'CNMutableContact', 'CNMutableGroup', 'CNMutablePostalAddress', 'CNPhoneNumber', 'CNPostalAddress', 'CNP
ostalAddressFormatter', 'CNSaveRequest', 'CNSocialProfile', 'CPActionSheetTemplate', 'CPAlertAction', 'CPAlertTemplate', 'CPBarButton', 'CPButton', 'CPContact', 'CPContactCallButton', 'CPContactDirectionsButton', 'CPContactMessageButton', 'CPContactTemplate', 'CPDashboardButton', 'CPDashboardController', 'CPGridButton', 'CPGridTemplate', 'CPImageSet', 'CPInformationItem', 'CPInformationRatingItem', 'CPInformationTemplate', 'CPInterfaceController', 'CPListImageRowItem', 'CPListItem', 'CPListSecti
on', 'CPListTemplate', 'CPManeuver', 'CPMapButton', 'CPMapTemplate', 'CPMessageComposeBarButton', 'CPMessageListItem', 'CPMessageListItemLeadingConfiguration', 'CPMessageListItemTrailingConfiguration', 'CPNavigationAlert', 'CPNavigationSession', 'CPNowPlayingAddToLibraryButton', 'CPNowPlayingButton', 'CPNowPlayingImageButton', 'CPNowPlayingMoreButton', 'CPNowPlayingPlaybackRateButton', 'CPNowPlayingRepeatButton', 'CPNowPlayingShuffleButton', 'CPNowPlayingTemplate', 'CPPointOfInterest', 'CPPointO
fInterestTemplate', 'CPRouteChoice', 'CPSearchTemplate', 'CPSessionConfiguration', 'CPTabBarTemplate', 'CPTemplate', 'CPTemplateApplicationDashboardScene', 'CPTemplateApplicationScene', 'CPTextButton', 'CPTravelEstimates', 'CPTrip', 'CPTripPreviewTextConfiguration', 'CPVoiceControlState', 'CPVoiceControlTemplate', 'CPWindow', 'CSCustomAttributeKey', 'CSIndexExtensionRequestHandler', 'CSLocalizedString', 'CSPerson', 'CSSearchQuery', 'CSSearchableIndex', 'CSSearchableItem', 'CSSearchableItemAttrib
uteSet', 'CTCall', 'CTCallCenter', 'CTCarrier', 'CTCellularData', 'CTCellularPlanProvisioning', 'CTCellularPlanProvisioningRequest', 'CTSubscriber', 'CTSubscriberInfo', 'CTTelephonyNetworkInfo', 'CXAction', 'CXAnswerCallAction', 'CXCall', 'CXCallAction', 'CXCallController', 'CXCallDirectoryExtensionContext', 'CXCallDirectoryManager', 'CXCallDirectoryProvider', 'CXCallObserver', 'CXCallUpdate', 'CXEndCallAction', 'CXHandle', 'CXPlayDTMFCallAction', 'CXProvider', 'CXProviderConfiguration', 'CXSetG
roupCallAction', 'CXSetHeldCallAction', 'CXSetMutedCallAction', 'CXStartCallAction', 'CXTransaction', 'DCAppAttestService', 'DCDevice', 'EAAccessory', 'EAAccessoryManager', 'EAGLContext', 'EAGLSharegroup', 'EASession', 'EAWiFiUnconfiguredAccessory', 'EAWiFiUnconfiguredAccessoryBrowser', 'EKAlarm', 'EKCalendar', 'EKCalendarChooser', 'EKCalendarItem', 'EKEvent', 'EKEventEditViewController', 'EKEventStore', 'EKEventViewController', 'EKObject', 'EKParticipant', 'EKRecurrenceDayOfWeek', 'EKRecurrence
End', 'EKRecurrenceRule', 'EKReminder', 'EKSource', 'EKStructuredLocation', 'ENExposureConfiguration', 'ENExposureDaySummary', 'ENExposureDetectionSummary', 'ENExposureInfo', 'ENExposureSummaryItem', 'ENExposureWindow', 'ENManager', 'ENScanInstance', 'ENTemporaryExposureKey', 'EntityRotationGestureRecognizer', 'EntityScaleGestureRecognizer', 'EntityTranslationGestureRecognizer', 'FPUIActionExtensionContext', 'FPUIActionExtensionViewController', 'GCColor', 'GCController', 'GCControllerAxisInput',
 'GCControllerButtonInput', 'GCControllerDirectionPad', 'GCControllerElement', 'GCControllerTouchpad', 'GCDeviceBattery', 'GCDeviceCursor', 'GCDeviceHaptics', 'GCDeviceLight', 'GCDirectionalGamepad', 'GCDualShockGamepad', 'GCEventViewController', 'GCExtendedGamepad', 'GCExtendedGamepadSnapshot', 'GCGamepad', 'GCGamepadSnapshot', 'GCKeyboard', 'GCKeyboardInput', 'GCMicroGamepad', 'GCMicroGamepadSnapshot', 'GCMotion', 'GCMouse', 'GCMouseInput', 'GCPhysicalInputProfile', 'GCXboxGamepad', 'GKARC4Ran
domSource', 'GKAccessPoint', 'GKAchievement', 'GKAchievementChallenge', 'GKAchievementDescription', 'GKAchievementViewController', 'GKAgent', 'GKAgent2D', 'GKAgent3D', 'GKBasePlayer', 'GKBehavior', 'GKBillowNoiseSource', 'GKChallenge', 'GKChallengeEventHandler', 'GKCheckerboardNoiseSource', 'GKCircleObstacle', 'GKCloudPlayer', 'GKCoherentNoiseSource', 'GKComponent', 'GKComponentSystem', 'GKCompositeBehavior', 'GKConstantNoiseSource', 'GKCylindersNoiseSource', 'GKDecisionNode', 'GKDecisionTree', 
'GKEntity', 'GKFriendRequestComposeViewController', 'GKGameCenterViewController', 'GKGameSession', 'GKGameSessionSharingViewController', 'GKGaussianDistribution', 'GKGoal', 'GKGraph', 'GKGraphNode', 'GKGraphNode2D', 'GKGraphNode3D', 'GKGridGraph', 'GKGridGraphNode', 'GKInvite', 'GKLeaderboard', 'GKLeaderboardEntry', 'GKLeaderboardScore', 'GKLeaderboardSet', 'GKLeaderboardViewController', 'GKLinearCongruentialRandomSource', 'GKLocalPlayer', 'GKMatch', 'GKMatchRequest', 'GKMatchmaker', 'GKMatchmak
erViewController', 'GKMersenneTwisterRandomSource', 'GKMeshGraph', 'GKMinmaxStrategist', 'GKMonteCarloStrategist', 'GKNSPredicateRule', 'GKNoise', 'GKNoiseMap', 'GKNoiseSource', 'GKNotificationBanner', 'GKObstacle', 'GKObstacleGraph', 'GKOctree', 'GKOctreeNode', 'GKPath', 'GKPeerPickerController', 'GKPerlinNoiseSource', 'GKPlayer', 'GKPolygonObstacle', 'GKQuadtree', 'GKQuadtreeNode', 'GKRTree', 'GKRandomDistribution', 'GKRandomSource', 'GKRidgedNoiseSource', 'GKRule', 'GKRuleSystem', 'GKSCNNodeC
omponent', 'GKSKNodeComponent', 'GKSavedGame', 'GKScene', 'GKScore', 'GKScoreChallenge', 'GKSession', 'GKShuffledDistribution', 'GKSphereObstacle', 'GKSpheresNoiseSource', 'GKState', 'GKStateMachine', 'GKTurnBasedEventHandler', 'GKTurnBasedExchangeReply', 'GKTurnBasedMatch', 'GKTurnBasedMatchmakerViewController', 'GKTurnBasedParticipant', 'GKVoiceChat', 'GKVoiceChatService', 'GKVoronoiNoiseSource', 'GLKBaseEffect', 'GLKEffectProperty', 'GLKEffectPropertyFog', 'GLKEffectPropertyLight', 'GLKEffect
PropertyMaterial', 'GLKEffectPropertyTexture', 'GLKEffectPropertyTransform', 'GLKMesh', 'GLKMeshBuffer', 'GLKMeshBufferAllocator', 'GLKReflectionMapEffect', 'GLKSkyboxEffect', 'GLKSubmesh', 'GLKTextureInfo', 'GLKTextureLoader', 'GLKView', 'GLKViewController', 'HKActivityMoveModeObject', 'HKActivityRingView', 'HKActivitySummary', 'HKActivitySummaryQuery', 'HKActivitySummaryType', 'HKAnchoredObjectQuery', 'HKAudiogramSample', 'HKAudiogramSampleType', 'HKAudiogramSensitivityPoint', 'HKBiologicalSex
Object', 'HKBloodTypeObject', 'HKCDADocument', 'HKCDADocumentSample', 'HKCategorySample', 'HKCategoryType', 'HKCharacteristicType', 'HKClinicalRecord', 'HKClinicalType', 'HKCorrelation', 'HKCorrelationQuery', 'HKCorrelationType', 'HKCumulativeQuantitySample', 'HKCumulativeQuantitySeriesSample', 'HKDeletedObject', 'HKDevice', 'HKDiscreteQuantitySample', 'HKDocumentQuery', 'HKDocumentSample', 'HKDocumentType', 'HKElectrocardiogram', 'HKElectrocardiogramQuery', 'HKElectrocardiogramType', 'HKElectro
cardiogramVoltageMeasurement', 'HKFHIRResource', 'HKFHIRVersion', 'HKFitzpatrickSkinTypeObject', 'HKHealthStore', 'HKHeartbeatSeriesBuilder', 'HKHeartbeatSeriesQuery', 'HKHeartbeatSeriesSample', 'HKLiveWorkoutBuilder', 'HKLiveWorkoutDataSource', 'HKObject', 'HKObjectType', 'HKObserverQuery', 'HKQuantity', 'HKQuantitySample', 'HKQuantitySeriesSampleBuilder', 'HKQuantitySeriesSampleQuery', 'HKQuantityType', 'HKQuery', 'HKQueryAnchor', 'HKSample', 'HKSampleQuery', 'HKSampleType', 'HKSeriesBuilder',
 'HKSeriesSample', 'HKSeriesType', 'HKSource', 'HKSourceQuery', 'HKSourceRevision', 'HKStatistics', 'HKStatisticsCollection', 'HKStatisticsCollectionQuery', 'HKStatisticsQuery', 'HKUnit', 'HKWheelchairUseObject', 'HKWorkout', 'HKWorkoutBuilder', 'HKWorkoutConfiguration', 'HKWorkoutEvent', 'HKWorkoutRoute', 'HKWorkoutRouteBuilder', 'HKWorkoutRouteQuery', 'HKWorkoutSession', 'HKWorkoutType', 'HMAccessControl', 'HMAccessory', 'HMAccessoryBrowser', 'HMAccessoryCategory', 'HMAccessoryOwnershipToken',
 'HMAccessoryProfile', 'HMAccessorySetupPayload', 'HMAction', 'HMActionSet', 'HMAddAccessoryRequest', 'HMCalendarEvent', 'HMCameraAudioControl', 'HMCameraControl', 'HMCameraProfile', 'HMCameraSettingsControl', 'HMCameraSnapshot', 'HMCameraSnapshotControl', 'HMCameraSource', 'HMCameraStream', 'HMCameraStreamControl', 'HMCameraView', 'HMCharacteristic', 'HMCharacteristicEvent', 'HMCharacteristicMetadata', 'HMCharacteristicThresholdRangeEvent', 'HMCharacteristicWriteAction', 'HMDurationEvent', 'HME
vent', 'HMEventTrigger', 'HMHome', 'HMHomeAccessControl', 'HMHomeManager', 'HMLocationEvent', 'HMMutableCalendarEvent', 'HMMutableCharacteristicEvent', 'HMMutableCharacteristicThresholdRangeEvent', 'HMMutableDurationEvent', 'HMMutableLocationEvent', 'HMMutablePresenceEvent', 'HMMutableSignificantTimeEvent', 'HMNetworkConfigurationProfile', 'HMNumberRange', 'HMPresenceEvent', 'HMRoom', 'HMService', 'HMServiceGroup', 'HMSignificantTimeEvent', 'HMTimeEvent', 'HMTimerTrigger', 'HMTrigger', 'HMUser',
 'HMZone', 'ICCameraDevice', 'ICCameraFile', 'ICCameraFolder', 'ICCameraItem', 'ICDevice', 'ICDeviceBrowser', 'ICScannerBandData', 'ICScannerDevice', 'ICScannerFeature', 'ICScannerFeatureBoolean', 'ICScannerFeatureEnumeration', 'ICScannerFeatureRange', 'ICScannerFeatureTemplate', 'ICScannerFunctionalUnit', 'ICScannerFunctionalUnitDocumentFeeder', 'ICScannerFunctionalUnitFlatbed', 'ICScannerFunctionalUnitNegativeTransparency', 'ICScannerFunctionalUnitPositiveTransparency', 'ILCallClassificationRe
quest', 'ILCallCommunication', 'ILClassificationRequest', 'ILClassificationResponse', 'ILClassificationUIExtensionContext', 'ILClassificationUIExtensionViewController', 'ILCommunication', 'ILMessageClassificationRequest', 'ILMessageCommunication', 'ILMessageFilterExtension', 'ILMessageFilterExtensionContext', 'ILMessageFilterQueryRequest', 'ILMessageFilterQueryResponse', 'ILNetworkResponse', 'INAccountTypeResolutionResult', 'INActivateCarSignalIntent', 'INActivateCarSignalIntentResponse', 'INAdd
MediaIntent', 'INAddMediaIntentResponse', 'INAddMediaMediaDestinationResolutionResult', 'INAddMediaMediaItemResolutionResult', 'INAddTasksIntent', 'INAddTasksIntentResponse', 'INAddTasksTargetTaskListResolutionResult', 'INAddTasksTemporalEventTriggerResolutionResult', 'INAirline', 'INAirport', 'INAirportGate', 'INAppendToNoteIntent', 'INAppendToNoteIntentResponse', 'INBalanceAmount', 'INBalanceTypeResolutionResult', 'INBillDetails', 'INBillPayee', 'INBillPayeeResolutionResult', 'INBillTypeResolu
tionResult', 'INBoatReservation', 'INBoatTrip', 'INBookRestaurantReservationIntent', 'INBookRestaurantReservationIntentResponse', 'INBooleanResolutionResult', 'INBusReservation', 'INBusTrip', 'INCallCapabilityResolutionResult', 'INCallDestinationTypeResolutionResult', 'INCallRecord', 'INCallRecordFilter', 'INCallRecordResolutionResult', 'INCallRecordTypeOptionsResolutionResult', 'INCallRecordTypeResolutionResult', 'INCancelRideIntent', 'INCancelRideIntentResponse', 'INCancelWorkoutIntent', 'INCa
ncelWorkoutIntentResponse', 'INCar', 'INCarAirCirculationModeResolutionResult', 'INCarAudioSourceResolutionResult', 'INCarDefrosterResolutionResult', 'INCarHeadUnit', 'INCarSeatResolutionResult', 'INCarSignalOptionsResolutionResult', 'INCreateNoteIntent', 'INCreateNoteIntentResponse', 'INCreateTaskListIntent', 'INCreateTaskListIntentResponse', 'INCurrencyAmount', 'INCurrencyAmountResolutionResult', 'INDailyRoutineRelevanceProvider', 'INDateComponentsRange', 'INDateComponentsRangeResolutionResult
', 'INDateComponentsResolutionResult', 'INDateRelevanceProvider', 'INDateSearchTypeResolutionResult', 'INDefaultCardTemplate', 'INDeleteTasksIntent', 'INDeleteTasksIntentResponse', 'INDeleteTasksTaskListResolutionResult', 'INDeleteTasksTaskResolutionResult', 'INDoubleResolutionResult', 'INEndWorkoutIntent', 'INEndWorkoutIntentResponse', 'INEnergyResolutionResult', 'INEnumResolutionResult', 'INExtension', 'INFile', 'INFileResolutionResult', 'INFlight', 'INFlightReservation', 'INGetAvailableRestau
rantReservationBookingDefaultsIntent', 'INGetAvailableRestaurantReservationBookingDefaultsIntentResponse', 'INGetAvailableRestaurantReservationBookingsIntent', 'INGetAvailableRestaurantReservationBookingsIntentResponse', 'INGetCarLockStatusIntent', 'INGetCarLockStatusIntentResponse', 'INGetCarPowerLevelStatusIntent', 'INGetCarPowerLevelStatusIntentResponse', 'INGetReservationDetailsIntent', 'INGetReservationDetailsIntentResponse', 'INGetRestaurantGuestIntent', 'INGetRestaurantGuestIntentResponse
', 'INGetRideStatusIntent', 'INGetRideStatusIntentResponse', 'INGetUserCurrentRestaurantReservationBookingsIntent', 'INGetUserCurrentRestaurantReservationBookingsIntentResponse', 'INGetVisualCodeIntent', 'INGetVisualCodeIntentResponse', 'INImage', 'INImageNoteContent', 'INIntegerResolutionResult', 'INIntent', 'INIntentResolutionResult', 'INIntentResponse', 'INInteraction', 'INLengthResolutionResult', 'INListCarsIntent', 'INListCarsIntentResponse', 'INListRideOptionsIntent', 'INListRideOptionsInt
entResponse', 'INLocationRelevanceProvider', 'INLocationSearchTypeResolutionResult', 'INLodgingReservation', 'INMassResolutionResult', 'INMediaAffinityTypeResolutionResult', 'INMediaDestination', 'INMediaDestinationResolutionResult', 'INMediaItem', 'INMediaItemResolutionResult', 'INMediaSearch', 'INMediaUserContext', 'INMessage', 'INMessageAttributeOptionsResolutionResult', 'INMessageAttributeResolutionResult', 'INNote', 'INNoteContent', 'INNoteContentResolutionResult', 'INNoteContentTypeResolut
ionResult', 'INNoteResolutionResult', 'INNotebookItemTypeResolutionResult', 'INObject', 'INObjectCollection', 'INObjectResolutionResult', 'INObjectSection', 'INOutgoingMessageTypeResolutionResult', 'INParameter', 'INPauseWorkoutIntent', 'INPauseWorkoutIntentResponse', 'INPayBillIntent', 'INPayBillIntentResponse', 'INPaymentAccount', 'INPaymentAccountResolutionResult', 'INPaymentAmount', 'INPaymentAmountResolutionResult', 'INPaymentMethod', 'INPaymentMethodResolutionResult', 'INPaymentRecord', 'I
NPaymentStatusResolutionResult', 'INPerson', 'INPersonHandle', 'INPersonResolutionResult', 'INPlacemarkResolutionResult', 'INPlayMediaIntent', 'INPlayMediaIntentResponse', 'INPlayMediaMediaItemResolutionResult', 'INPlayMediaPlaybackSpeedResolutionResult', 'INPlaybackQueueLocationResolutionResult', 'INPlaybackRepeatModeResolutionResult', 'INPreferences', 'INPriceRange', 'INRadioTypeResolutionResult', 'INRecurrenceRule', 'INRelativeReferenceResolutionResult', 'INRelativeSettingResolutionResult', '
INRelevanceProvider', 'INRelevantShortcut', 'INRelevantShortcutStore', 'INRentalCar', 'INRentalCarReservation', 'INRequestPaymentCurrencyAmountResolutionResult', 'INRequestPaymentIntent', 'INRequestPaymentIntentResponse', 'INRequestPaymentPayerResolutionResult', 'INRequestRideIntent', 'INRequestRideIntentResponse', 'INReservation', 'INReservationAction', 'INRestaurant', 'INRestaurantGuest', 'INRestaurantGuestDisplayPreferences', 'INRestaurantGuestResolutionResult', 'INRestaurantOffer', 'INRestau
rantReservation', 'INRestaurantReservationBooking', 'INRestaurantReservationUserBooking', 'INRestaurantResolutionResult', 'INResumeWorkoutIntent', 'INResumeWorkoutIntentResponse', 'INRideCompletionStatus', 'INRideDriver', 'INRideFareLineItem', 'INRideOption', 'INRidePartySizeOption', 'INRideStatus', 'INRideVehicle', 'INSaveProfileInCarIntent', 'INSaveProfileInCarIntentResponse', 'INSearchCallHistoryIntent', 'INSearchCallHistoryIntentResponse', 'INSearchForAccountsIntent', 'INSearchForAccountsInt
entResponse', 'INSearchForBillsIntent', 'INSearchForBillsIntentResponse', 'INSearchForMediaIntent', 'INSearchForMediaIntentResponse', 'INSearchForMediaMediaItemResolutionResult', 'INSearchForMessagesIntent', 'INSearchForMessagesIntentResponse', 'INSearchForNotebookItemsIntent', 'INSearchForNotebookItemsIntentResponse', 'INSearchForPhotosIntent', 'INSearchForPhotosIntentResponse', 'INSeat', 'INSendMessageAttachment', 'INSendMessageIntent', 'INSendMessageIntentResponse', 'INSendMessageRecipientRes
olutionResult', 'INSendPaymentCurrencyAmountResolutionResult', 'INSendPaymentIntent', 'INSendPaymentIntentResponse', 'INSendPaymentPayeeResolutionResult', 'INSendRideFeedbackIntent', 'INSendRideFeedbackIntentResponse', 'INSetAudioSourceInCarIntent', 'INSetAudioSourceInCarIntentResponse', 'INSetCarLockStatusIntent', 'INSetCarLockStatusIntentResponse', 'INSetClimateSettingsInCarIntent', 'INSetClimateSettingsInCarIntentResponse', 'INSetDefrosterSettingsInCarIntent', 'INSetDefrosterSettingsInCarInte
ntResponse', 'INSetMessageAttributeIntent', 'INSetMessageAttributeIntentResponse', 'INSetProfileInCarIntent', 'INSetProfileInCarIntentResponse', 'INSetRadioStationIntent', 'INSetRadioStationIntentResponse', 'INSetSeatSettingsInCarIntent', 'INSetSeatSettingsInCarIntentResponse', 'INSetTaskAttributeIntent', 'INSetTaskAttributeIntentResponse', 'INSetTaskAttributeTemporalEventTriggerResolutionResult', 'INShortcut', 'INSnoozeTasksIntent', 'INSnoozeTasksIntentResponse', 'INSnoozeTasksTaskResolutionRes
ult', 'INSpatialEventTrigger', 'INSpatialEventTriggerResolutionResult', 'INSpeakableString', 'INSpeakableStringResolutionResult', 'INSpeedResolutionResult', 'INStartAudioCallIntent', 'INStartAudioCallIntentResponse', 'INStartCallCallCapabilityResolutionResult', 'INStartCallCallRecordToCallBackResolutionResult', 'INStartCallContactResolutionResult', 'INStartCallIntent', 'INStartCallIntentResponse', 'INStartPhotoPlaybackIntent', 'INStartPhotoPlaybackIntentResponse', 'INStartVideoCallIntent', 'INSt
artVideoCallIntentResponse', 'INStartWorkoutIntent', 'INStartWorkoutIntentResponse', 'INStringResolutionResult', 'INTask', 'INTaskList', 'INTaskListResolutionResult', 'INTaskPriorityResolutionResult', 'INTaskResolutionResult', 'INTaskStatusResolutionResult', 'INTemperatureResolutionResult', 'INTemporalEventTrigger', 'INTemporalEventTriggerResolutionResult', 'INTemporalEventTriggerTypeOptionsResolutionResult', 'INTermsAndConditions', 'INTextNoteContent', 'INTicketedEvent', 'INTicketedEventReserva
tion', 'INTimeIntervalResolutionResult', 'INTrainReservation', 'INTrainTrip', 'INTransferMoneyIntent', 'INTransferMoneyIntentResponse', 'INUIAddVoiceShortcutButton', 'INUIAddVoiceShortcutViewController', 'INUIEditVoiceShortcutViewController', 'INURLResolutionResult', 'INUpcomingMediaManager', 'INUpdateMediaAffinityIntent', 'INUpdateMediaAffinityIntentResponse', 'INUpdateMediaAffinityMediaItemResolutionResult', 'INUserContext', 'INVisualCodeTypeResolutionResult', 'INVocabulary', 'INVoiceShortcut'
, 'INVoiceShortcutCenter', 'INVolumeResolutionResult', 'INWorkoutGoalUnitTypeResolutionResult', 'INWorkoutLocationTypeResolutionResult', 'IOSurface', 'JSContext', 'JSManagedValue', 'JSValue', 'JSVirtualMachine', 'LAContext', 'LPLinkMetadata', 'LPLinkView', 'LPMetadataProvider', 'MCAdvertiserAssistant', 'MCBrowserViewController', 'MCNearbyServiceAdvertiser', 'MCNearbyServiceBrowser', 'MCPeerID', 'MCSession', 'MDLAnimatedMatrix4x4', 'MDLAnimatedQuaternion', 'MDLAnimatedQuaternionArray', 'MDLAnimat
edScalar', 'MDLAnimatedScalarArray', 'MDLAnimatedValue', 'MDLAnimatedVector2', 'MDLAnimatedVector3', 'MDLAnimatedVector3Array', 'MDLAnimatedVector4', 'MDLAnimationBindComponent', 'MDLAreaLight', 'MDLAsset', 'MDLBundleAssetResolver', 'MDLCamera', 'MDLCheckerboardTexture', 'MDLColorSwatchTexture', 'MDLLight', 'MDLLightProbe', 'MDLMaterial', 'MDLMaterialProperty', 'MDLMaterialPropertyConnection', 'MDLMaterialPropertyGraph', 'MDLMaterialPropertyNode', 'MDLMatrix4x4Array', 'MDLMesh', 'MDLMeshBufferDa
ta', 'MDLMeshBufferDataAllocator', 'MDLMeshBufferMap', 'MDLMeshBufferZoneDefault', 'MDLNoiseTexture', 'MDLNormalMapTexture', 'MDLObject', 'MDLObjectContainer', 'MDLPackedJointAnimation', 'MDLPathAssetResolver', 'MDLPhotometricLight', 'MDLPhysicallyPlausibleLight', 'MDLPhysicallyPlausibleScatteringFunction', 'MDLRelativeAssetResolver', 'MDLScatteringFunction', 'MDLSkeleton', 'MDLSkyCubeTexture', 'MDLStereoscopicCamera', 'MDLSubmesh', 'MDLSubmeshTopology', 'MDLTexture', 'MDLTextureFilter', 'MDLTex
tureSampler', 'MDLTransform', 'MDLTransformMatrixOp', 'MDLTransformOrientOp', 'MDLTransformRotateOp', 'MDLTransformRotateXOp', 'MDLTransformRotateYOp', 'MDLTransformRotateZOp', 'MDLTransformScaleOp', 'MDLTransformStack', 'MDLTransformTranslateOp', 'MDLURLTexture', 'MDLVertexAttribute', 'MDLVertexAttributeData', 'MDLVertexBufferLayout', 'MDLVertexDescriptor', 'MDLVoxelArray', 'MFMailComposeViewController', 'MFMessageComposeViewController', 'MIDICIDeviceInfo', 'MIDICIDiscoveredNode', 'MIDICIDiscov
eryManager', 'MIDICIProfile', 'MIDICIProfileState', 'MIDICIResponder', 'MIDICISession', 'MIDINetworkConnection', 'MIDINetworkHost', 'MIDINetworkSession', 'MKAnnotationView', 'MKCircle', 'MKCircleRenderer', 'MKCircleView', 'MKClusterAnnotation', 'MKCompassButton', 'MKDirections', 'MKDirectionsRequest', 'MKDirectionsResponse', 'MKDistanceFormatter', 'MKETAResponse', 'MKGeoJSONDecoder', 'MKGeoJSONFeature', 'MKGeodesicPolyline', 'MKGradientPolylineRenderer', 'MKLocalPointsOfInterestRequest', 'MKLoca
lSearch', 'MKLocalSearchCompleter', 'MKLocalSearchCompletion', 'MKLocalSearchRequest', 'MKLocalSearchResponse', 'MKMapCamera', 'MKMapCameraBoundary', 'MKMapCameraZoomRange', 'MKMapItem', 'MKMapSnapshot', 'MKMapSnapshotOptions', 'MKMapSnapshotter', 'MKMapView', 'MKMarkerAnnotationView', 'MKMultiPoint', 'MKMultiPolygon', 'MKMultiPolygonRenderer', 'MKMultiPolyline', 'MKMultiPolylineRenderer', 'MKOverlayPathRenderer', 'MKOverlayPathView', 'MKOverlayRenderer', 'MKOverlayView', 'MKPinAnnotationView', 
'MKPitchControl', 'MKPlacemark', 'MKPointAnnotation', 'MKPointOfInterestFilter', 'MKPolygon', 'MKPolygonRenderer', 'MKPolygonView', 'MKPolyline', 'MKPolylineRenderer', 'MKPolylineView', 'MKReverseGeocoder', 'MKRoute', 'MKRouteStep', 'MKScaleView', 'MKShape', 'MKTileOverlay', 'MKTileOverlayRenderer', 'MKUserLocation', 'MKUserLocationView', 'MKUserTrackingBarButtonItem', 'MKUserTrackingButton', 'MKZoomControl', 'MLArrayBatchProvider', 'MLCActivationDescriptor', 'MLCActivationLayer', 'MLCArithmetic
Layer', 'MLCBatchNormalizationLayer', 'MLCConcatenationLayer', 'MLCConvolutionDescriptor', 'MLCConvolutionLayer', 'MLCDevice', 'MLCDropoutLayer', 'MLCEmbeddingDescriptor', 'MLCEmbeddingLayer', 'MLCFullyConnectedLayer', 'MLCGramMatrixLayer', 'MLCGraph', 'MLCGroupNormalizationLayer', 'MLCInferenceGraph', 'MLCInstanceNormalizationLayer', 'MLCLSTMDescriptor', 'MLCLSTMLayer', 'MLCLayer', 'MLCLayerNormalizationLayer', 'MLCLossDescriptor', 'MLCLossLayer', 'MLCMatMulDescriptor', 'MLCMatMulLayer', 'MLCMu
ltiheadAttentionDescriptor', 'MLCMultiheadAttentionLayer', 'MLCPaddingLayer', 'MLCPoolingDescriptor', 'MLCPoolingLayer', 'MLCReductionLayer', 'MLCReshapeLayer', 'MLCSliceLayer', 'MLCSoftmaxLayer', 'MLCSplitLayer', 'MLCTensor', 'MLCTensorData', 'MLCTensorDescriptor', 'MLCTensorOptimizerDeviceData', 'MLCTensorParameter', 'MLCTrainingGraph', 'MLCTransposeLayer', 'MLCUpsampleLayer', 'MLCYOLOLossDescriptor', 'MLCYOLOLossLayer', 'MLDictionaryConstraint', 'MLDictionaryFeatureProvider', 'MLFeatureDescri
ption', 'MLFeatureValue', 'MLImageConstraint', 'MLImageSize', 'MLImageSizeConstraint', 'MLKey', 'MLMetricKey', 'MLModel', 'MLModelCollection', 'MLModelCollectionEntry', 'MLModelConfiguration', 'MLModelDescription', 'MLMultiArray', 'MLMultiArrayConstraint', 'MLMultiArrayShapeConstraint', 'MLNumericConstraint', 'MLParameterDescription', 'MLParameterKey', 'MLPredictionOptions', 'MLSequence', 'MLSequenceConstraint', 'MLTask', 'MLUpdateContext', 'MLUpdateProgressHandlers', 'MLUpdateTask', 'MPChangeLa
nguageOptionCommandEvent', 'MPChangePlaybackPositionCommand', 'MPChangePlaybackPositionCommandEvent', 'MPChangePlaybackRateCommand', 'MPChangePlaybackRateCommandEvent', 'MPChangeRepeatModeCommand', 'MPChangeRepeatModeCommandEvent', 'MPChangeShuffleModeCommand', 'MPChangeShuffleModeCommandEvent', 'MPContentItem', 'MPFeedbackCommand', 'MPFeedbackCommandEvent', 'MPMediaEntity', 'MPMediaItem', 'MPMediaItemArtwork', 'MPMediaItemCollection', 'MPMediaLibrary', 'MPMediaPickerController', 'MPMediaPlaylis
t', 'MPMediaPlaylistCreationMetadata', 'MPMediaPredicate', 'MPMediaPropertyPredicate', 'MPMediaQuery', 'MPMediaQuerySection', 'MPMovieAccessLog', 'MPMovieAccessLogEvent', 'MPMovieErrorLog', 'MPMovieErrorLogEvent', 'MPMoviePlayerController', 'MPMoviePlayerViewController', 'MPMusicPlayerApplicationController', 'MPMusicPlayerController', 'MPMusicPlayerControllerMutableQueue', 'MPMusicPlayerControllerQueue', 'MPMusicPlayerMediaItemQueueDescriptor', 'MPMusicPlayerPlayParameters', 'MPMusicPlayerPlayPa
rametersQueueDescriptor', 'MPMusicPlayerQueueDescriptor', 'MPMusicPlayerStoreQueueDescriptor', 'MPNowPlayingInfoCenter', 'MPNowPlayingInfoLanguageOption', 'MPNowPlayingInfoLanguageOptionGroup', 'MPNowPlayingSession', 'MPPlayableContentManager', 'MPPlayableContentManagerContext', 'MPRatingCommand', 'MPRatingCommandEvent', 'MPRemoteCommand', 'MPRemoteCommandCenter', 'MPRemoteCommandEvent', 'MPSGraph', 'MPSGraphConvolution2DOpDescriptor', 'MPSGraphDepthwiseConvolution2DOpDescriptor', 'MPSGraphDevic
e', 'MPSGraphExecutionDescriptor', 'MPSGraphOperation', 'MPSGraphPooling2DOpDescriptor', 'MPSGraphShapedType', 'MPSGraphTensor', 'MPSGraphTensorData', 'MPSGraphVariableOp', 'MPSeekCommandEvent', 'MPSkipIntervalCommand', 'MPSkipIntervalCommandEvent', 'MPTimedMetadata', 'MPVolumeView', 'MSConversation', 'MSMessage', 'MSMessageLayout', 'MSMessageLiveLayout', 'MSMessageTemplateLayout', 'MSMessagesAppViewController', 'MSServiceAccount', 'MSSession', 'MSSetupSession', 'MSSticker', 'MSStickerBrowserVie
w', 'MSStickerBrowserViewController', 'MSStickerView', 'MTKMesh', 'MTKMeshBuffer', 'MTKMeshBufferAllocator', 'MTKSubmesh', 'MTKTextureLoader', 'MTKView', 'MTLAccelerationStructureBoundingBoxGeometryDescriptor', 'MTLAccelerationStructureDescriptor', 'MTLAccelerationStructureGeometryDescriptor', 'MTLAccelerationStructureTriangleGeometryDescriptor', 'MTLArgument', 'MTLArgumentDescriptor', 'MTLArrayType', 'MTLAttribute', 'MTLAttributeDescriptor', 'MTLAttributeDescriptorArray', 'MTLBinaryArchiveDescr
iptor', 'MTLBlitPassDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptorArray', 'MTLBufferLayoutDescriptor', 'MTLBufferLayoutDescriptorArray', 'MTLCaptureDescriptor', 'MTLCaptureManager', 'MTLCommandBufferDescriptor', 'MTLCompileOptions', 'MTLComputePassDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptorArray', 'MTLComputePipelineDescriptor', 'MTLComputePipelineReflection', 'MTLCounterS
ampleBufferDescriptor', 'MTLDepthStencilDescriptor', 'MTLFunctionConstant', 'MTLFunctionConstantValues', 'MTLFunctionDescriptor', 'MTLHeapDescriptor', 'MTLIndirectCommandBufferDescriptor', 'MTLInstanceAccelerationStructureDescriptor', 'MTLIntersectionFunctionDescriptor', 'MTLIntersectionFunctionTableDescriptor', 'MTLLinkedFunctions', 'MTLPipelineBufferDescriptor', 'MTLPipelineBufferDescriptorArray', 'MTLPointerType', 'MTLPrimitiveAccelerationStructureDescriptor', 'MTLRasterizationRateLayerArray'
, 'MTLRasterizationRateLayerDescriptor', 'MTLRasterizationRateMapDescriptor', 'MTLRasterizationRateSampleArray', 'MTLRenderPassAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptorArray', 'MTLRenderPassDepthAttachmentDescriptor', 'MTLRenderPassDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptorArray', 'MTLRenderPassStencilAttachmentDescriptor', 'MTLRenderPipelineColorAttachmentDescriptor',
 'MTLRenderPipelineColorAttachmentDescriptorArray', 'MTLRenderPipelineDescriptor', 'MTLRenderPipelineReflection', 'MTLResourceStatePassDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptorArray', 'MTLSamplerDescriptor', 'MTLSharedEventHandle', 'MTLSharedEventListener', 'MTLSharedTextureHandle', 'MTLStageInputOutputDescriptor', 'MTLStencilDescriptor', 'MTLStructMember', 'MTLStructType', 'MTLTextureDescriptor', 'MTLTextureReferen
ceType', 'MTLTileRenderPipelineColorAttachmentDescriptor', 'MTLTileRenderPipelineColorAttachmentDescriptorArray', 'MTLTileRenderPipelineDescriptor', 'MTLType', 'MTLVertexAttribute', 'MTLVertexAttributeDescriptor', 'MTLVertexAttributeDescriptorArray', 'MTLVertexBufferLayoutDescriptor', 'MTLVertexBufferLayoutDescriptorArray', 'MTLVertexDescriptor', 'MTLVisibleFunctionTableDescriptor', 'MXAnimationMetric', 'MXAppExitMetric', 'MXAppLaunchMetric', 'MXAppResponsivenessMetric', 'MXAppRunTimeMetric', 'M
XAverage', 'MXBackgroundExitData', 'MXCPUExceptionDiagnostic', 'MXCPUMetric', 'MXCallStackTree', 'MXCellularConditionMetric', 'MXCrashDiagnostic', 'MXDiagnostic', 'MXDiagnosticPayload', 'MXDiskIOMetric', 'MXDiskWriteExceptionDiagnostic', 'MXDisplayMetric', 'MXForegroundExitData', 'MXGPUMetric', 'MXHangDiagnostic', 'MXHistogram', 'MXHistogramBucket', 'MXLocationActivityMetric', 'MXMemoryMetric', 'MXMetaData', 'MXMetric', 'MXMetricManager', 'MXMetricPayload', 'MXNetworkTransferMetric', 'MXSignpost
IntervalData', 'MXSignpostMetric', 'MXUnitAveragePixelLuminance', 'MXUnitSignalBars', 'MyClass', 'NCWidgetController', 'NEAppProxyFlow', 'NEAppProxyProvider', 'NEAppProxyProviderManager', 'NEAppProxyTCPFlow', 'NEAppProxyUDPFlow', 'NEAppPushManager', 'NEAppPushProvider', 'NEAppRule', 'NEDNSOverHTTPSSettings', 'NEDNSOverTLSSettings', 'NEDNSProxyManager', 'NEDNSProxyProvider', 'NEDNSProxyProviderProtocol', 'NEDNSSettings', 'NEDNSSettingsManager', 'NEEvaluateConnectionRule', 'NEFilterBrowserFlow', '
NEFilterControlProvider', 'NEFilterControlVerdict', 'NEFilterDataProvider', 'NEFilterDataVerdict', 'NEFilterFlow', 'NEFilterManager', 'NEFilterNewFlowVerdict', 'NEFilterPacketContext', 'NEFilterPacketProvider', 'NEFilterProvider', 'NEFilterProviderConfiguration', 'NEFilterRemediationVerdict', 'NEFilterReport', 'NEFilterRule', 'NEFilterSettings', 'NEFilterSocketFlow', 'NEFilterVerdict', 'NEFlowMetaData', 'NEHotspotConfiguration', 'NEHotspotConfigurationManager', 'NEHotspotEAPSettings', 'NEHotspot
HS20Settings', 'NEHotspotHelper', 'NEHotspotHelperCommand', 'NEHotspotHelperResponse', 'NEHotspotNetwork', 'NEIPv4Route', 'NEIPv4Settings', 'NEIPv6Route', 'NEIPv6Settings', 'NENetworkRule', 'NEOnDemandRule', 'NEOnDemandRuleConnect', 'NEOnDemandRuleDisconnect', 'NEOnDemandRuleEvaluateConnection', 'NEOnDemandRuleIgnore', 'NEPacket', 'NEPacketTunnelFlow', 'NEPacketTunnelNetworkSettings', 'NEPacketTunnelProvider', 'NEProvider', 'NEProxyServer', 'NEProxySettings', 'NETransparentProxyManager', 'NETran
sparentProxyNetworkSettings', 'NETransparentProxyProvider', 'NETunnelNetworkSettings', 'NETunnelProvider', 'NETunnelProviderManager', 'NETunnelProviderProtocol', 'NETunnelProviderSession', 'NEVPNConnection', 'NEVPNIKEv2SecurityAssociationParameters', 'NEVPNManager', 'NEVPNProtocol', 'NEVPNProtocolIKEv2', 'NEVPNProtocolIPSec', 'NFCISO15693CustomCommandConfiguration', 'NFCISO15693ReadMultipleBlocksConfiguration', 'NFCISO15693ReaderSession', 'NFCISO7816APDU', 'NFCNDEFMessage', 'NFCNDEFPayload', 'NF
CNDEFReaderSession', 'NFCReaderSession', 'NFCTagCommandConfiguration', 'NFCTagReaderSession', 'NFCVASCommandConfiguration', 'NFCVASReaderSession', 'NFCVASResponse', 'NIConfiguration', 'NIDiscoveryToken', 'NINearbyObject', 'NINearbyPeerConfiguration', 'NISession', 'NKAssetDownload', 'NKIssue', 'NKLibrary', 'NLEmbedding', 'NLGazetteer', 'NLLanguageRecognizer', 'NLModel', 'NLModelConfiguration', 'NLTagger', 'NLTokenizer', 'NSArray', 'NSAssertionHandler', 'NSAsynchronousFetchRequest', 'NSAsynchronou
sFetchResult', 'NSAtomicStore', 'NSAtomicStoreCacheNode', 'NSAttributeDescription', 'NSAttributedString', 'NSAutoreleasePool', 'NSBatchDeleteRequest', 'NSBatchDeleteResult', 'NSBatchInsertRequest', 'NSBatchInsertResult', 'NSBatchUpdateRequest', 'NSBatchUpdateResult', 'NSBlockOperation', 'NSBundle', 'NSBundleResourceRequest', 'NSByteCountFormatter', 'NSCache', 'NSCachedURLResponse', 'NSCalendar', 'NSCharacterSet', 'NSCoder', 'NSCollectionLayoutAnchor', 'NSCollectionLayoutBoundarySupplementaryItem
', 'NSCollectionLayoutDecorationItem', 'NSCollectionLayoutDimension', 'NSCollectionLayoutEdgeSpacing', 'NSCollectionLayoutGroup', 'NSCollectionLayoutGroupCustomItem', 'NSCollectionLayoutItem', 'NSCollectionLayoutSection', 'NSCollectionLayoutSize', 'NSCollectionLayoutSpacing', 'NSCollectionLayoutSupplementaryItem', 'NSComparisonPredicate', 'NSCompoundPredicate', 'NSCondition', 'NSConditionLock', 'NSConstantString', 'NSConstraintConflict', 'NSCoreDataCoreSpotlightDelegate', 'NSCountedSet', 'NSData
', 'NSDataAsset', 'NSDataDetector', 'NSDate', 'NSDateComponents', 'NSDateComponentsFormatter', 'NSDateFormatter', 'NSDateInterval', 'NSDateIntervalFormatter', 'NSDecimalNumber', 'NSDecimalNumberHandler', 'NSDerivedAttributeDescription', 'NSDictionary', 'NSDiffableDataSourceSectionSnapshot', 'NSDiffableDataSourceSectionTransaction', 'NSDiffableDataSourceSnapshot', 'NSDiffableDataSourceTransaction', 'NSDimension', 'NSDirectoryEnumerator', 'NSEnergyFormatter', 'NSEntityDescription', 'NSEntityMappin
g', 'NSEntityMigrationPolicy', 'NSEnumerator', 'NSError', 'NSEvent', 'NSException', 'NSExpression', 'NSExpressionDescription', 'NSExtensionContext', 'NSExtensionItem', 'NSFetchIndexDescription', 'NSFetchIndexElementDescription', 'NSFetchRequest', 'NSFetchRequestExpression', 'NSFetchedPropertyDescription', 'NSFetchedResultsController', 'NSFileAccessIntent', 'NSFileCoordinator', 'NSFileHandle', 'NSFileManager', 'NSFileProviderDomain', 'NSFileProviderExtension', 'NSFileProviderManager', 'NSFileProv
iderService', 'NSFileSecurity', 'NSFileVersion', 'NSFileWrapper', 'NSFormatter', 'NSHTTPCookie', 'NSHTTPCookieStorage', 'NSHTTPURLResponse', 'NSHashTable', 'NSISO8601DateFormatter', 'NSIncrementalStore', 'NSIncrementalStoreNode', 'NSIndexPath', 'NSIndexSet', 'NSInputStream', 'NSInvocation', 'NSInvocationOperation', 'NSItemProvider', 'NSJSONSerialization', 'NSKeyedArchiver', 'NSKeyedUnarchiver', 'NSLayoutAnchor', 'NSLayoutConstraint', 'NSLayoutDimension', 'NSLayoutManager', 'NSLayoutXAxisAnchor',
 'NSLayoutYAxisAnchor', 'NSLengthFormatter', 'NSLinguisticTagger', 'NSListFormatter', 'NSLocale', 'NSLock', 'NSMachPort', 'NSManagedObject', 'NSManagedObjectContext', 'NSManagedObjectID', 'NSManagedObjectModel', 'NSMapTable', 'NSMappingModel', 'NSMassFormatter', 'NSMeasurement', 'NSMeasurementFormatter', 'NSMenuToolbarItem', 'NSMergeConflict', 'NSMergePolicy', 'NSMessagePort', 'NSMetadataItem', 'NSMetadataQuery', 'NSMetadataQueryAttributeValueTuple', 'NSMetadataQueryResultGroup', 'NSMethodSignat
ure', 'NSMigrationManager', 'NSMutableArray', 'NSMutableAttributedString', 'NSMutableCharacterSet', 'NSMutableData', 'NSMutableDictionary', 'NSMutableIndexSet', 'NSMutableOrderedSet', 'NSMutableParagraphStyle', 'NSMutableSet', 'NSMutableString', 'NSMutableURLRequest', 'NSNetService', 'NSNetServiceBrowser', 'NSNotification', 'NSNotificationCenter', 'NSNotificationQueue', 'NSNull', 'NSNumber', 'NSNumberFormatter', 'NSObject', 'NSOperation', 'NSOperationQueue', 'NSOrderedCollectionChange', 'NSOrder
edCollectionDifference', 'NSOrderedSet', 'NSOrthography', 'NSOutputStream', 'NSParagraphStyle', 'NSPersistentCloudKitContainer', 'NSPersistentCloudKitContainerEvent', 'NSPersistentCloudKitContainerEventRequest', 'NSPersistentCloudKitContainerEventResult', 'NSPersistentCloudKitContainerOptions', 'NSPersistentContainer', 'NSPersistentHistoryChange', 'NSPersistentHistoryChangeRequest', 'NSPersistentHistoryResult', 'NSPersistentHistoryToken', 'NSPersistentHistoryTransaction', 'NSPersistentStore', 'N
SPersistentStoreAsynchronousResult', 'NSPersistentStoreCoordinator', 'NSPersistentStoreDescription', 'NSPersistentStoreRequest', 'NSPersistentStoreResult', 'NSPersonNameComponents', 'NSPersonNameComponentsFormatter', 'NSPipe', 'NSPointerArray', 'NSPointerFunctions', 'NSPort', 'NSPredicate', 'NSProcessInfo', 'NSProgress', 'NSPropertyDescription', 'NSPropertyListSerialization', 'NSPropertyMapping', 'NSProxy', 'NSPurgeableData', 'NSQueryGenerationToken', 'NSRecursiveLock', 'NSRegularExpression', 'N
SRelationshipDescription', 'NSRelativeDateTimeFormatter', 'NSRunLoop', 'NSSaveChangesRequest', 'NSScanner', 'NSSecureUnarchiveFromDataTransformer', 'NSSet', 'NSShadow', 'NSSharingServicePickerToolbarItem', 'NSSharingServicePickerTouchBarItem', 'NSSimpleCString', 'NSSocketPort', 'NSSortDescriptor', 'NSStream', 'NSString', 'NSStringDrawingContext', 'NSTextAttachment', 'NSTextCheckingResult', 'NSTextContainer', 'NSTextStorage', 'NSTextTab', 'NSThread', 'NSTimeZone', 'NSTimer', 'NSToolbarItem', 'NSU
RL', 'NSURLAuthenticationChallenge', 'NSURLCache', 'NSURLComponents', 'NSURLConnection', 'NSURLCredential', 'NSURLCredentialStorage', 'NSURLProtectionSpace', 'NSURLProtocol', 'NSURLQueryItem', 'NSURLRequest', 'NSURLResponse', 'NSURLSession', 'NSURLSessionConfiguration', 'NSURLSessionDataTask', 'NSURLSessionDownloadTask', 'NSURLSessionStreamTask', 'NSURLSessionTask', 'NSURLSessionTaskMetrics', 'NSURLSessionTaskTransactionMetrics', 'NSURLSessionUploadTask', 'NSURLSessionWebSocketMessage', 'NSURLSe
ssionWebSocketTask', 'NSUUID', 'NSUbiquitousKeyValueStore', 'NSUndoManager', 'NSUnit', 'NSUnitAcceleration', 'NSUnitAngle', 'NSUnitArea', 'NSUnitConcentrationMass', 'NSUnitConverter', 'NSUnitConverterLinear', 'NSUnitDispersion', 'NSUnitDuration', 'NSUnitElectricCharge', 'NSUnitElectricCurrent', 'NSUnitElectricPotentialDifference', 'NSUnitElectricResistance', 'NSUnitEnergy', 'NSUnitFrequency', 'NSUnitFuelEfficiency', 'NSUnitIlluminance', 'NSUnitInformationStorage', 'NSUnitLength', 'NSUnitMass', '
NSUnitPower', 'NSUnitPressure', 'NSUnitSpeed', 'NSUnitTemperature', 'NSUnitVolume', 'NSUserActivity', 'NSUserDefaults', 'NSValue', 'NSValueTransformer', 'NSXMLParser', 'NSXPCCoder', 'NSXPCConnection', 'NSXPCInterface', 'NSXPCListener', 'NSXPCListenerEndpoint', 'NWBonjourServiceEndpoint', 'NWEndpoint', 'NWHostEndpoint', 'NWPath', 'NWTCPConnection', 'NWTLSParameters', 'NWUDPSession', 'OSLogEntry', 'OSLogEntryActivity', 'OSLogEntryBoundary', 'OSLogEntryLog', 'OSLogEntrySignpost', 'OSLogEnumerator',
 'OSLogMessageComponent', 'OSLogPosition', 'OSLogStore', 'PDFAction', 'PDFActionGoTo', 'PDFActionNamed', 'PDFActionRemoteGoTo', 'PDFActionResetForm', 'PDFActionURL', 'PDFAnnotation', 'PDFAppearanceCharacteristics', 'PDFBorder', 'PDFDestination', 'PDFDocument', 'PDFOutline', 'PDFPage', 'PDFSelection', 'PDFThumbnailView', 'PDFView', 'PHAdjustmentData', 'PHAsset', 'PHAssetChangeRequest', 'PHAssetCollection', 'PHAssetCollectionChangeRequest', 'PHAssetCreationRequest', 'PHAssetResource', 'PHAssetReso
urceCreationOptions', 'PHAssetResourceManager', 'PHAssetResourceRequestOptions', 'PHCachingImageManager', 'PHChange', 'PHChangeRequest', 'PHCloudIdentifier', 'PHCollection', 'PHCollectionList', 'PHCollectionListChangeRequest', 'PHContentEditingInput', 'PHContentEditingInputRequestOptions', 'PHContentEditingOutput', 'PHEditingExtensionContext', 'PHFetchOptions', 'PHFetchResult', 'PHFetchResultChangeDetails', 'PHImageManager', 'PHImageRequestOptions', 'PHLivePhoto', 'PHLivePhotoEditingContext', 'P
HLivePhotoRequestOptions', 'PHLivePhotoView', 'PHObject', 'PHObjectChangeDetails', 'PHObjectPlaceholder', 'PHPhotoLibrary', 'PHPickerConfiguration', 'PHPickerFilter', 'PHPickerResult', 'PHPickerViewController', 'PHProject', 'PHProjectChangeRequest', 'PHVideoRequestOptions', 'PKAddCarKeyPassConfiguration', 'PKAddPassButton', 'PKAddPassesViewController', 'PKAddPaymentPassRequest', 'PKAddPaymentPassRequestConfiguration', 'PKAddPaymentPassViewController', 'PKAddSecureElementPassConfiguration', 'PKAd
dSecureElementPassViewController', 'PKAddShareablePassConfiguration', 'PKBarcodeEventConfigurationRequest', 'PKBarcodeEventMetadataRequest', 'PKBarcodeEventMetadataResponse', 'PKBarcodeEventSignatureRequest', 'PKBarcodeEventSignatureResponse', 'PKCanvasView', 'PKContact', 'PKDisbursementAuthorizationController', 'PKDisbursementRequest', 'PKDisbursementVoucher', 'PKDrawing', 'PKEraserTool', 'PKFloatRange', 'PKInk', 'PKInkingTool', 'PKIssuerProvisioningExtensionHandler', 'PKIssuerProvisioningExten
sionPassEntry', 'PKIssuerProvisioningExtensionPaymentPassEntry', 'PKIssuerProvisioningExtensionStatus', 'PKLabeledValue', 'PKLassoTool', 'PKObject', 'PKPass', 'PKPassLibrary', 'PKPayment', 'PKPaymentAuthorizationController', 'PKPaymentAuthorizationResult', 'PKPaymentAuthorizationViewController', 'PKPaymentButton', 'PKPaymentInformationEventExtension', 'PKPaymentMerchantSession', 'PKPaymentMethod', 'PKPaymentPass', 'PKPaymentRequest', 'PKPaymentRequestMerchantSessionUpdate', 'PKPaymentRequestPaym
entMethodUpdate', 'PKPaymentRequestShippingContactUpdate', 'PKPaymentRequestShippingMethodUpdate', 'PKPaymentRequestUpdate', 'PKPaymentSummaryItem', 'PKPaymentToken', 'PKPushCredentials', 'PKPushPayload', 'PKPushRegistry', 'PKSecureElementPass', 'PKShareablePassMetadata', 'PKShippingMethod', 'PKStroke', 'PKStrokePath', 'PKStrokePoint', 'PKSuicaPassProperties', 'PKTool', 'PKToolPicker', 'PKTransitPassProperties', 'QLFileThumbnailRequest', 'QLPreviewController', 'QLThumbnailGenerationRequest', 'QL
ThumbnailGenerator', 'QLThumbnailProvider', 'QLThumbnailReply', 'QLThumbnailRepresentation', 'RPBroadcastActivityController', 'RPBroadcastActivityViewController', 'RPBroadcastConfiguration', 'RPBroadcastController', 'RPBroadcastHandler', 'RPBroadcastMP4ClipHandler', 'RPBroadcastSampleHandler', 'RPPreviewViewController', 'RPScreenRecorder', 'RPSystemBroadcastPickerView', 'SCNAccelerationConstraint', 'SCNAction', 'SCNAnimation', 'SCNAnimationEvent', 'SCNAnimationPlayer', 'SCNAudioPlayer', 'SCNAudi
oSource', 'SCNAvoidOccluderConstraint', 'SCNBillboardConstraint', 'SCNBox', 'SCNCamera', 'SCNCameraController', 'SCNCapsule', 'SCNCone', 'SCNConstraint', 'SCNCylinder', 'SCNDistanceConstraint', 'SCNFloor', 'SCNGeometry', 'SCNGeometryElement', 'SCNGeometrySource', 'SCNGeometryTessellator', 'SCNHitTestResult', 'SCNIKConstraint', 'SCNLevelOfDetail', 'SCNLight', 'SCNLookAtConstraint', 'SCNMaterial', 'SCNMaterialProperty', 'SCNMorpher', 'SCNNode', 'SCNParticlePropertyController', 'SCNParticleSystem',
 'SCNPhysicsBallSocketJoint', 'SCNPhysicsBehavior', 'SCNPhysicsBody', 'SCNPhysicsConeTwistJoint', 'SCNPhysicsContact', 'SCNPhysicsField', 'SCNPhysicsHingeJoint', 'SCNPhysicsShape', 'SCNPhysicsSliderJoint', 'SCNPhysicsVehicle', 'SCNPhysicsVehicleWheel', 'SCNPhysicsWorld', 'SCNPlane', 'SCNProgram', 'SCNPyramid', 'SCNReferenceNode', 'SCNRenderer', 'SCNReplicatorConstraint', 'SCNScene', 'SCNSceneSource', 'SCNShape', 'SCNSkinner', 'SCNSliderConstraint', 'SCNSphere', 'SCNTechnique', 'SCNText', 'SCNTim
ingFunction', 'SCNTorus', 'SCNTransaction', 'SCNTransformConstraint', 'SCNTube', 'SCNView', 'SFAcousticFeature', 'SFAuthenticationSession', 'SFContentBlockerManager', 'SFContentBlockerState', 'SFSafariViewController', 'SFSafariViewControllerConfiguration', 'SFSpeechAudioBufferRecognitionRequest', 'SFSpeechRecognitionRequest', 'SFSpeechRecognitionResult', 'SFSpeechRecognitionTask', 'SFSpeechRecognizer', 'SFSpeechURLRecognitionRequest', 'SFTranscription', 'SFTranscriptionSegment', 'SFVoiceAnalytic
s', 'SK3DNode', 'SKAction', 'SKAdNetwork', 'SKArcadeService', 'SKAttribute', 'SKAttributeValue', 'SKAudioNode', 'SKCameraNode', 'SKCloudServiceController', 'SKCloudServiceSetupViewController', 'SKConstraint', 'SKCropNode', 'SKDownload', 'SKEffectNode', 'SKEmitterNode', 'SKFieldNode', 'SKKeyframeSequence', 'SKLabelNode', 'SKLightNode', 'SKMutablePayment', 'SKMutableTexture', 'SKNode', 'SKOverlay', 'SKOverlayAppClipConfiguration', 'SKOverlayAppConfiguration', 'SKOverlayConfiguration', 'SKOverlayTr
ansitionContext', 'SKPayment', 'SKPaymentDiscount', 'SKPaymentQueue', 'SKPaymentTransaction', 'SKPhysicsBody', 'SKPhysicsContact', 'SKPhysicsJoint', 'SKPhysicsJointFixed', 'SKPhysicsJointLimit', 'SKPhysicsJointPin', 'SKPhysicsJointSliding', 'SKPhysicsJointSpring', 'SKPhysicsWorld', 'SKProduct', 'SKProductDiscount', 'SKProductStorePromotionController', 'SKProductSubscriptionPeriod', 'SKProductsRequest', 'SKProductsResponse', 'SKRange', 'SKReachConstraints', 'SKReceiptRefreshRequest', 'SKReference
Node', 'SKRegion', 'SKRenderer', 'SKRequest', 'SKScene', 'SKShader', 'SKShapeNode', 'SKSpriteNode', 'SKStoreProductViewController', 'SKStoreReviewController', 'SKStorefront', 'SKTexture', 'SKTextureAtlas', 'SKTileDefinition', 'SKTileGroup', 'SKTileGroupRule', 'SKTileMapNode', 'SKTileSet', 'SKTransformNode', 'SKTransition', 'SKUniform', 'SKVideoNode', 'SKView', 'SKWarpGeometry', 'SKWarpGeometryGrid', 'SLComposeServiceViewController', 'SLComposeSheetConfigurationItem', 'SLComposeViewController', '
SLRequest', 'SNAudioFileAnalyzer', 'SNAudioStreamAnalyzer', 'SNClassification', 'SNClassificationResult', 'SNClassifySoundRequest', 'SRAmbientLightSample', 'SRApplicationUsage', 'SRDeletionRecord', 'SRDevice', 'SRDeviceUsageReport', 'SRFetchRequest', 'SRFetchResult', 'SRKeyboardMetrics', 'SRKeyboardProbabilityMetric', 'SRMessagesUsageReport', 'SRNotificationUsage', 'SRPhoneUsageReport', 'SRSensorReader', 'SRVisit', 'SRWebUsage', 'SRWristDetection', 'SSReadingList', 'STScreenTimeConfiguration', '
STScreenTimeConfigurationObserver', 'STWebHistory', 'STWebpageController', 'TKBERTLVRecord', 'TKCompactTLVRecord', 'TKSimpleTLVRecord', 'TKSmartCard', 'TKSmartCardATR', 'TKSmartCardATRInterfaceGroup', 'TKSmartCardPINFormat', 'TKSmartCardSlot', 'TKSmartCardSlotManager', 'TKSmartCardToken', 'TKSmartCardTokenDriver', 'TKSmartCardTokenSession', 'TKSmartCardUserInteraction', 'TKSmartCardUserInteractionForPINOperation', 'TKSmartCardUserInteractionForSecurePINChange', 'TKSmartCardUserInteractionForSecu
rePINVerification', 'TKTLVRecord', 'TKToken', 'TKTokenAuthOperation', 'TKTokenConfiguration', 'TKTokenDriver', 'TKTokenDriverConfiguration', 'TKTokenKeyAlgorithm', 'TKTokenKeyExchangeParameters', 'TKTokenKeychainCertificate', 'TKTokenKeychainContents', 'TKTokenKeychainItem', 'TKTokenKeychainKey', 'TKTokenPasswordAuthOperation', 'TKTokenSession', 'TKTokenSmartCardPINAuthOperation', 'TKTokenWatcher', 'TWRequest', 'TWTweetComposeViewController', 'UIAcceleration', 'UIAccelerometer', 'UIAccessibility
CustomAction', 'UIAccessibilityCustomRotor', 'UIAccessibilityCustomRotorItemResult', 'UIAccessibilityCustomRotorSearchPredicate', 'UIAccessibilityElement', 'UIAccessibilityLocationDescriptor', 'UIAction', 'UIActionSheet', 'UIActivity', 'UIActivityIndicatorView', 'UIActivityItemProvider', 'UIActivityItemsConfiguration', 'UIActivityViewController', 'UIAlertAction', 'UIAlertController', 'UIAlertView', 'UIApplication', 'UIApplicationShortcutIcon', 'UIApplicationShortcutItem', 'UIAttachmentBehavior',
 'UIBackgroundConfiguration', 'UIBarAppearance', 'UIBarButtonItem', 'UIBarButtonItemAppearance', 'UIBarButtonItemGroup', 'UIBarButtonItemStateAppearance', 'UIBarItem', 'UIBezierPath', 'UIBlurEffect', 'UIButton', 'UICellAccessory', 'UICellAccessoryCheckmark', 'UICellAccessoryCustomView', 'UICellAccessoryDelete', 'UICellAccessoryDisclosureIndicator', 'UICellAccessoryInsert', 'UICellAccessoryLabel', 'UICellAccessoryMultiselect', 'UICellAccessoryOutlineDisclosure', 'UICellAccessoryReorder', 'UICellC
onfigurationState', 'UICloudSharingController', 'UICollectionLayoutListConfiguration', 'UICollectionReusableView', 'UICollectionView', 'UICollectionViewCell', 'UICollectionViewCellRegistration', 'UICollectionViewCompositionalLayout', 'UICollectionViewCompositionalLayoutConfiguration', 'UICollectionViewController', 'UICollectionViewDiffableDataSource', 'UICollectionViewDiffableDataSourceReorderingHandlers', 'UICollectionViewDiffableDataSourceSectionSnapshotHandlers', 'UICollectionViewDropPlacehol
der', 'UICollectionViewDropProposal', 'UICollectionViewFlowLayout', 'UICollectionViewFlowLayoutInvalidationContext', 'UICollectionViewFocusUpdateContext', 'UICollectionViewLayout', 'UICollectionViewLayoutAttributes', 'UICollectionViewLayoutInvalidationContext', 'UICollectionViewListCell', 'UICollectionViewPlaceholder', 'UICollectionViewSupplementaryRegistration', 'UICollectionViewTransitionLayout', 'UICollectionViewUpdateItem', 'UICollisionBehavior', 'UIColor', 'UIColorPickerViewController', 'UI
ColorWell', 'UICommand', 'UICommandAlternate', 'UIContextMenuConfiguration', 'UIContextMenuInteraction', 'UIContextualAction', 'UIControl', 'UICubicTimingParameters', 'UIDatePicker', 'UIDeferredMenuElement', 'UIDevice', 'UIDictationPhrase', 'UIDocument', 'UIDocumentBrowserAction', 'UIDocumentBrowserTransitionController', 'UIDocumentBrowserViewController', 'UIDocumentInteractionController', 'UIDocumentMenuViewController', 'UIDocumentPickerExtensionViewController', 'UIDocumentPickerViewController'
, 'UIDragInteraction', 'UIDragItem', 'UIDragPreview', 'UIDragPreviewParameters', 'UIDragPreviewTarget', 'UIDropInteraction', 'UIDropProposal', 'UIDynamicAnimator', 'UIDynamicBehavior', 'UIDynamicItemBehavior', 'UIDynamicItemGroup', 'UIEvent', 'UIFeedbackGenerator', 'UIFieldBehavior', 'UIFocusAnimationCoordinator', 'UIFocusDebugger', 'UIFocusGuide', 'UIFocusMovementHint', 'UIFocusSystem', 'UIFocusUpdateContext', 'UIFont', 'UIFontDescriptor', 'UIFontMetrics', 'UIFontPickerViewController', 'UIFontP
ickerViewControllerConfiguration', 'UIGestureRecognizer', 'UIGraphicsImageRenderer', 'UIGraphicsImageRendererContext', 'UIGraphicsImageRendererFormat', 'UIGraphicsPDFRenderer', 'UIGraphicsPDFRendererContext', 'UIGraphicsPDFRendererFormat', 'UIGraphicsRenderer', 'UIGraphicsRendererContext', 'UIGraphicsRendererFormat', 'UIGravityBehavior', 'UIHoverGestureRecognizer', 'UIImage', 'UIImageAsset', 'UIImageConfiguration', 'UIImagePickerController', 'UIImageSymbolConfiguration', 'UIImageView', 'UIImpact
FeedbackGenerator', 'UIIndirectScribbleInteraction', 'UIInputView', 'UIInputViewController', 'UIInterpolatingMotionEffect', 'UIKey', 'UIKeyCommand', 'UILabel', 'UILargeContentViewerInteraction', 'UILayoutGuide', 'UILexicon', 'UILexiconEntry', 'UIListContentConfiguration', 'UIListContentImageProperties', 'UIListContentTextProperties', 'UIListContentView', 'UILocalNotification', 'UILocalizedIndexedCollation', 'UILongPressGestureRecognizer', 'UIManagedDocument', 'UIMarkupTextPrintFormatter', 'UIMen
u', 'UIMenuController', 'UIMenuElement', 'UIMenuItem', 'UIMenuSystem', 'UIMotionEffect', 'UIMotionEffectGroup', 'UIMutableApplicationShortcutItem', 'UIMutableUserNotificationAction', 'UIMutableUserNotificationCategory', 'UINavigationBar', 'UINavigationBarAppearance', 'UINavigationController', 'UINavigationItem', 'UINib', 'UINotificationFeedbackGenerator', 'UIOpenURLContext', 'UIPageControl', 'UIPageViewController', 'UIPanGestureRecognizer', 'UIPasteConfiguration', 'UIPasteboard', 'UIPencilIntera
ction', 'UIPercentDrivenInteractiveTransition', 'UIPickerView', 'UIPinchGestureRecognizer', 'UIPointerEffect', 'UIPointerHighlightEffect', 'UIPointerHoverEffect', 'UIPointerInteraction', 'UIPointerLiftEffect', 'UIPointerLockState', 'UIPointerRegion', 'UIPointerRegionRequest', 'UIPointerShape', 'UIPointerStyle', 'UIPopoverBackgroundView', 'UIPopoverController', 'UIPopoverPresentationController', 'UIPresentationController', 'UIPress', 'UIPressesEvent', 'UIPreviewAction', 'UIPreviewActionGroup', 'U
IPreviewInteraction', 'UIPreviewParameters', 'UIPreviewTarget', 'UIPrintFormatter', 'UIPrintInfo', 'UIPrintInteractionController', 'UIPrintPageRenderer', 'UIPrintPaper', 'UIPrinter', 'UIPrinterPickerController', 'UIProgressView', 'UIPushBehavior', 'UIReferenceLibraryViewController', 'UIRefreshControl', 'UIRegion', 'UIResponder', 'UIRotationGestureRecognizer', 'UIScene', 'UISceneActivationConditions', 'UISceneActivationRequestOptions', 'UISceneConfiguration', 'UISceneConnectionOptions', 'UISceneD
estructionRequestOptions', 'UISceneOpenExternalURLOptions', 'UISceneOpenURLOptions', 'UISceneSession', 'UISceneSizeRestrictions', 'UIScreen', 'UIScreenEdgePanGestureRecognizer', 'UIScreenMode', 'UIScreenshotService', 'UIScribbleInteraction', 'UIScrollView', 'UISearchBar', 'UISearchContainerViewController', 'UISearchController', 'UISearchDisplayController', 'UISearchSuggestionItem', 'UISearchTextField', 'UISearchToken', 'UISegmentedControl', 'UISelectionFeedbackGenerator', 'UISimpleTextPrintForma
tter', 'UISlider', 'UISnapBehavior', 'UISplitViewController', 'UISpringLoadedInteraction', 'UISpringTimingParameters', 'UIStackView', 'UIStatusBarManager', 'UIStepper', 'UIStoryboard', 'UIStoryboardPopoverSegue', 'UIStoryboardSegue', 'UIStoryboardUnwindSegueSource', 'UISwipeActionsConfiguration', 'UISwipeGestureRecognizer', 'UISwitch', 'UITabBar', 'UITabBarAppearance', 'UITabBarController', 'UITabBarItem', 'UITabBarItemAppearance', 'UITabBarItemStateAppearance', 'UITableView', 'UITableViewCell',
 'UITableViewController', 'UITableViewDiffableDataSource', 'UITableViewDropPlaceholder', 'UITableViewDropProposal', 'UITableViewFocusUpdateContext', 'UITableViewHeaderFooterView', 'UITableViewPlaceholder', 'UITableViewRowAction', 'UITapGestureRecognizer', 'UITargetedDragPreview', 'UITargetedPreview', 'UITextChecker', 'UITextDragPreviewRenderer', 'UITextDropProposal', 'UITextField', 'UITextFormattingCoordinator', 'UITextInputAssistantItem', 'UITextInputMode', 'UITextInputPasswordRules', 'UITextIn
putStringTokenizer', 'UITextInteraction', 'UITextPlaceholder', 'UITextPosition', 'UITextRange', 'UITextSelectionRect', 'UITextView', 'UITitlebar', 'UIToolbar', 'UIToolbarAppearance', 'UITouch', 'UITraitCollection', 'UIUserNotificationAction', 'UIUserNotificationCategory', 'UIUserNotificationSettings', 'UIVibrancyEffect', 'UIVideoEditorController', 'UIView', 'UIViewConfigurationState', 'UIViewController', 'UIViewPrintFormatter', 'UIViewPropertyAnimator', 'UIVisualEffect', 'UIVisualEffectView', 'U
IWebView', 'UIWindow', 'UIWindowScene', 'UIWindowSceneDestructionRequestOptions', 'UNCalendarNotificationTrigger', 'UNLocationNotificationTrigger', 'UNMutableNotificationContent', 'UNNotification', 'UNNotificationAction', 'UNNotificationAttachment', 'UNNotificationCategory', 'UNNotificationContent', 'UNNotificationRequest', 'UNNotificationResponse', 'UNNotificationServiceExtension', 'UNNotificationSettings', 'UNNotificationSound', 'UNNotificationTrigger', 'UNPushNotificationTrigger', 'UNTextInpu
tNotificationAction', 'UNTextInputNotificationResponse', 'UNTimeIntervalNotificationTrigger', 'UNUserNotificationCenter', 'UTType', 'VNBarcodeObservation', 'VNCircle', 'VNClassificationObservation', 'VNClassifyImageRequest', 'VNContour', 'VNContoursObservation', 'VNCoreMLFeatureValueObservation', 'VNCoreMLModel', 'VNCoreMLRequest', 'VNDetectBarcodesRequest', 'VNDetectContoursRequest', 'VNDetectFaceCaptureQualityRequest', 'VNDetectFaceLandmarksRequest', 'VNDetectFaceRectanglesRequest', 'VNDetectH
orizonRequest', 'VNDetectHumanBodyPoseRequest', 'VNDetectHumanHandPoseRequest', 'VNDetectHumanRectanglesRequest', 'VNDetectRectanglesRequest', 'VNDetectTextRectanglesRequest', 'VNDetectTrajectoriesRequest', 'VNDetectedObjectObservation', 'VNDetectedPoint', 'VNDocumentCameraScan', 'VNDocumentCameraViewController', 'VNFaceLandmarkRegion', 'VNFaceLandmarkRegion2D', 'VNFaceLandmarks', 'VNFaceLandmarks2D', 'VNFaceObservation', 'VNFeaturePrintObservation', 'VNGenerateAttentionBasedSaliencyImageRequest
', 'VNGenerateImageFeaturePrintRequest', 'VNGenerateObjectnessBasedSaliencyImageRequest', 'VNGenerateOpticalFlowRequest', 'VNGeometryUtils', 'VNHomographicImageRegistrationRequest', 'VNHorizonObservation', 'VNHumanBodyPoseObservation', 'VNHumanHandPoseObservation', 'VNImageAlignmentObservation', 'VNImageBasedRequest', 'VNImageHomographicAlignmentObservation', 'VNImageRegistrationRequest', 'VNImageRequestHandler', 'VNImageTranslationAlignmentObservation', 'VNObservation', 'VNPixelBufferObservatio
n', 'VNPoint', 'VNRecognizeAnimalsRequest', 'VNRecognizeTextRequest', 'VNRecognizedObjectObservation', 'VNRecognizedPoint', 'VNRecognizedPointsObservation', 'VNRecognizedText', 'VNRecognizedTextObservation', 'VNRectangleObservation', 'VNRequest', 'VNSaliencyImageObservation', 'VNSequenceRequestHandler', 'VNStatefulRequest', 'VNTargetedImageRequest', 'VNTextObservation', 'VNTrackObjectRequest', 'VNTrackRectangleRequest', 'VNTrackingRequest', 'VNTrajectoryObservation', 'VNTranslationalImageRegistr
ationRequest', 'VNVector', 'VNVideoProcessor', 'VNVideoProcessorCadence', 'VNVideoProcessorFrameRateCadence', 'VNVideoProcessorRequestProcessingOptions', 'VNVideoProcessorTimeIntervalCadence', 'VSAccountApplicationProvider', 'VSAccountManager', 'VSAccountManagerResult', 'VSAccountMetadata', 'VSAccountMetadataRequest', 'VSAccountProviderResponse', 'VSSubscription', 'VSSubscriptionRegistrationCenter', 'WCSession', 'WCSessionFile', 'WCSessionFileTransfer', 'WCSessionUserInfoTransfer', 'WKBackForwar
dList', 'WKBackForwardListItem', 'WKContentRuleList', 'WKContentRuleListStore', 'WKContentWorld', 'WKContextMenuElementInfo', 'WKFindConfiguration', 'WKFindResult', 'WKFrameInfo', 'WKHTTPCookieStore', 'WKNavigation', 'WKNavigationAction', 'WKNavigationResponse', 'WKOpenPanelParameters', 'WKPDFConfiguration', 'WKPreferences', 'WKPreviewElementInfo', 'WKProcessPool', 'WKScriptMessage', 'WKSecurityOrigin', 'WKSnapshotConfiguration', 'WKUserContentController', 'WKUserScript', 'WKWebView', 'WKWebView
Configuration', 'WKWebpagePreferences', 'WKWebsiteDataRecord', 'WKWebsiteDataStore', 'WKWindowFeatures', '__EntityAccessibilityWrapper'}
.venv\Lib\site-packages\pygments\lexers\_cocoa_builtins.py:15:COCOA_PROTOCOLS = {'ABNewPersonViewControllerDelegate', 'ABPeoplePickerNavigationControllerDelegate', 'ABPersonViewControllerDelegate', 'ABUnknownPersonViewControllerDelegate', 'ADActionViewControllerChildInterface', 'ADActionViewControllerInterface', 'ADBannerViewDelegate', 'ADInterstitialAdDelegate', 'AEAssessmentSessionDelegate', 'ARAnchorCopying', 'ARCoachingOverlayViewDelegate', 'ARSCNViewDelegate', 'ARSKViewDelegate', 'ARSession
Delegate', 'ARSessionObserver', 'ARSessionProviding', 'ARTrackable', 'ASAccountAuthenticationModificationControllerDelegate', 'ASAccountAuthenticationModificationControllerPresentationContextProviding', 'ASAuthorizationControllerDelegate', 'ASAuthorizationControllerPresentationContextProviding', 'ASAuthorizationCredential', 'ASAuthorizationProvider', 'ASAuthorizationProviderExtensionAuthorizationRequestHandler', 'ASWebAuthenticationPresentationContextProviding', 'ASWebAuthenticationSessionReques
tDelegate', 'ASWebAuthenticationSessionWebBrowserSessionHandling', 'AUAudioUnitFactory', 'AVAssetDownloadDelegate', 'AVAssetResourceLoaderDelegate', 'AVAssetWriterDelegate', 'AVAsynchronousKeyValueLoading', 'AVCaptureAudioDataOutputSampleBufferDelegate', 'AVCaptureDataOutputSynchronizerDelegate', 'AVCaptureDepthDataOutputDelegate', 'AVCaptureFileOutputDelegate', 'AVCaptureFileOutputRecordingDelegate', 'AVCaptureMetadataOutputObjectsDelegate', 'AVCapturePhotoCaptureDelegate', 'AVCapturePhotoFileD
ataRepresentationCustomizer', 'AVCaptureVideoDataOutputSampleBufferDelegate', 'AVContentKeyRecipient', 'AVContentKeySessionDelegate', 'AVFragmentMinding', 'AVPictureInPictureControllerDelegate', 'AVPlayerItemLegibleOutputPushDelegate', 'AVPlayerItemMetadataCollectorPushDelegate', 'AVPlayerItemMetadataOutputPushDelegate', 'AVPlayerItemOutputPullDelegate', 'AVPlayerItemOutputPushDelegate', 'AVPlayerViewControllerDelegate', 'AVQueuedSampleBufferRendering', 'AVRoutePickerViewDelegate', 'AVVideoCompo
siting', 'AVVideoCompositionInstruction', 'AVVideoCompositionValidationHandling', 'AXCustomContentProvider', 'CAAction', 'CAAnimationDelegate', 'CALayerDelegate', 'CAMediaTiming', 'CAMetalDrawable', 'CBCentralManagerDelegate', 'CBPeripheralDelegate', 'CBPeripheralManagerDelegate', 'CHHapticAdvancedPatternPlayer', 'CHHapticDeviceCapability', 'CHHapticParameterAttributes', 'CHHapticPatternPlayer', 'CIAccordionFoldTransition', 'CIAffineClamp', 'CIAffineTile', 'CIAreaAverage', 'CIAreaHistogram', 'CI
AreaMaximum', 'CIAreaMaximumAlpha', 'CIAreaMinMax', 'CIAreaMinMaxRed', 'CIAreaMinimum', 'CIAreaMinimumAlpha', 'CIAreaReductionFilter', 'CIAttributedTextImageGenerator', 'CIAztecCodeGenerator', 'CIBarcodeGenerator', 'CIBarsSwipeTransition', 'CIBicubicScaleTransform', 'CIBlendWithMask', 'CIBloom', 'CIBokehBlur', 'CIBoxBlur', 'CIBumpDistortion', 'CIBumpDistortionLinear', 'CICMYKHalftone', 'CICheckerboardGenerator', 'CICircleSplashDistortion', 'CICircularScreen', 'CICircularWrap', 'CICode128BarcodeG
enerator', 'CIColorAbsoluteDifference', 'CIColorClamp', 'CIColorControls', 'CIColorCrossPolynomial', 'CIColorCube', 'CIColorCubeWithColorSpace', 'CIColorCubesMixedWithMask', 'CIColorCurves', 'CIColorInvert', 'CIColorMap', 'CIColorMatrix', 'CIColorMonochrome', 'CIColorPolynomial', 'CIColorPosterize', 'CIColorThreshold', 'CIColorThresholdOtsu', 'CIColumnAverage', 'CIComicEffect', 'CICompositeOperation', 'CIConvolution', 'CICopyMachineTransition', 'CICoreMLModel', 'CICrystallize', 'CIDepthOfField',
 'CIDepthToDisparity', 'CIDiscBlur', 'CIDisintegrateWithMaskTransition', 'CIDisparityToDepth', 'CIDisplacementDistortion', 'CIDissolveTransition', 'CIDither', 'CIDocumentEnhancer', 'CIDotScreen', 'CIDroste', 'CIEdgePreserveUpsample', 'CIEdgeWork', 'CIEdges', 'CIEightfoldReflectedTile', 'CIExposureAdjust', 'CIFalseColor', 'CIFilter', 'CIFilterConstructor', 'CIFlashTransition', 'CIFourCoordinateGeometryFilter', 'CIFourfoldReflectedTile', 'CIFourfoldRotatedTile', 'CIFourfoldTranslatedTile', 'CIGabo
rGradients', 'CIGammaAdjust', 'CIGaussianBlur', 'CIGaussianGradient', 'CIGlassDistortion', 'CIGlassLozenge', 'CIGlideReflectedTile', 'CIGloom', 'CIHatchedScreen', 'CIHeightFieldFromMask', 'CIHexagonalPixellate', 'CIHighlightShadowAdjust', 'CIHistogramDisplay', 'CIHoleDistortion', 'CIHueAdjust', 'CIHueSaturationValueGradient', 'CIImageProcessorInput', 'CIImageProcessorOutput', 'CIKMeans', 'CIKaleidoscope', 'CIKeystoneCorrectionCombined', 'CIKeystoneCorrectionHorizontal', 'CIKeystoneCorrectionVert
ical', 'CILabDeltaE', 'CILanczosScaleTransform', 'CILenticularHaloGenerator', 'CILightTunnel', 'CILineOverlay', 'CILineScreen', 'CILinearGradient', 'CILinearToSRGBToneCurve', 'CIMaskToAlpha', 'CIMaskedVariableBlur', 'CIMaximumComponent', 'CIMedian', 'CIMeshGenerator', 'CIMinimumComponent', 'CIMix', 'CIModTransition', 'CIMorphologyGradient', 'CIMorphologyMaximum', 'CIMorphologyMinimum', 'CIMorphologyRectangleMaximum', 'CIMorphologyRectangleMinimum', 'CIMotionBlur', 'CINinePartStretched', 'CINineP
artTiled', 'CINoiseReduction', 'CIOpTile', 'CIPDF417BarcodeGenerator', 'CIPageCurlTransition', 'CIPageCurlWithShadowTransition', 'CIPaletteCentroid', 'CIPalettize', 'CIParallelogramTile', 'CIPerspectiveCorrection', 'CIPerspectiveRotate', 'CIPerspectiveTile', 'CIPerspectiveTransform', 'CIPerspectiveTransformWithExtent', 'CIPhotoEffect', 'CIPinchDistortion', 'CIPixellate', 'CIPlugInRegistration', 'CIPointillize', 'CIQRCodeGenerator', 'CIRadialGradient', 'CIRandomGenerator', 'CIRippleTransition', '
CIRoundedRectangleGenerator', 'CIRowAverage', 'CISRGBToneCurveToLinear', 'CISaliencyMap', 'CISepiaTone', 'CIShadedMaterial', 'CISharpenLuminance', 'CISixfoldReflectedTile', 'CISixfoldRotatedTile', 'CISmoothLinearGradient', 'CISpotColor', 'CISpotLight', 'CIStarShineGenerator', 'CIStraighten', 'CIStretchCrop', 'CIStripesGenerator', 'CISunbeamsGenerator', 'CISwipeTransition', 'CITemperatureAndTint', 'CITextImageGenerator', 'CIThermal', 'CIToneCurve', 'CITorusLensDistortion', 'CITransitionFilter', '
CITriangleKaleidoscope', 'CITriangleTile', 'CITwelvefoldReflectedTile', 'CITwirlDistortion', 'CIUnsharpMask', 'CIVibrance', 'CIVignette', 'CIVignetteEffect', 'CIVortexDistortion', 'CIWhitePointAdjust', 'CIXRay', 'CIZoomBlur', 'CKRecordKeyValueSetting', 'CKRecordValue', 'CLKComplicationDataSource', 'CLLocationManagerDelegate', 'CLSContextProvider', 'CLSDataStoreDelegate', 'CMFallDetectionDelegate', 'CMHeadphoneMotionManagerDelegate', 'CNChangeHistoryEventVisitor', 'CNContactPickerDelegate', 'CNCo
ntactViewControllerDelegate', 'CNKeyDescriptor', 'CPApplicationDelegate', 'CPBarButtonProviding', 'CPInterfaceControllerDelegate', 'CPListTemplateDelegate', 'CPListTemplateItem', 'CPMapTemplateDelegate', 'CPNowPlayingTemplateObserver', 'CPPointOfInterestTemplateDelegate', 'CPSearchTemplateDelegate', 'CPSelectableListItem', 'CPSessionConfigurationDelegate', 'CPTabBarTemplateDelegate', 'CPTemplateApplicationDashboardSceneDelegate', 'CPTemplateApplicationSceneDelegate', 'CSSearchableIndexDelegate',
 'CTSubscriberDelegate', 'CTTelephonyNetworkInfoDelegate', 'CXCallDirectoryExtensionContextDelegate', 'CXCallObserverDelegate', 'CXProviderDelegate', 'EAAccessoryDelegate', 'EAGLDrawable', 'EAWiFiUnconfiguredAccessoryBrowserDelegate', 'EKCalendarChooserDelegate', 'EKEventEditViewDelegate', 'EKEventViewDelegate', 'GCDevice', 'GKAchievementViewControllerDelegate', 'GKAgentDelegate', 'GKChallengeEventHandlerDelegate', 'GKChallengeListener', 'GKFriendRequestComposeViewControllerDelegate', 'GKGameCen
terControllerDelegate', 'GKGameModel', 'GKGameModelPlayer', 'GKGameModelUpdate', 'GKGameSessionEventListener', 'GKGameSessionSharingViewControllerDelegate', 'GKInviteEventListener', 'GKLeaderboardViewControllerDelegate', 'GKLocalPlayerListener', 'GKMatchDelegate', 'GKMatchmakerViewControllerDelegate', 'GKPeerPickerControllerDelegate', 'GKRandom', 'GKSavedGameListener', 'GKSceneRootNodeType', 'GKSessionDelegate', 'GKStrategist', 'GKTurnBasedEventListener', 'GKTurnBasedMatchmakerViewControllerDele
gate', 'GKVoiceChatClient', 'GLKNamedEffect', 'GLKViewControllerDelegate', 'GLKViewDelegate', 'HKLiveWorkoutBuilderDelegate', 'HKWorkoutSessionDelegate', 'HMAccessoryBrowserDelegate', 'HMAccessoryDelegate', 'HMCameraSnapshotControlDelegate', 'HMCameraStreamControlDelegate', 'HMHomeDelegate', 'HMHomeManagerDelegate', 'HMNetworkConfigurationProfileDelegate', 'ICCameraDeviceDelegate', 'ICCameraDeviceDownloadDelegate', 'ICDeviceBrowserDelegate', 'ICDeviceDelegate', 'ICScannerDeviceDelegate', 'ILMess
ageFilterQueryHandling', 'INActivateCarSignalIntentHandling', 'INAddMediaIntentHandling', 'INAddTasksIntentHandling', 'INAppendToNoteIntentHandling', 'INBookRestaurantReservationIntentHandling', 'INCallsDomainHandling', 'INCancelRideIntentHandling', 'INCancelWorkoutIntentHandling', 'INCarCommandsDomainHandling', 'INCarPlayDomainHandling', 'INCreateNoteIntentHandling', 'INCreateTaskListIntentHandling', 'INDeleteTasksIntentHandling', 'INEndWorkoutIntentHandling', 'INGetAvailableRestaurantReservati
onBookingDefaultsIntentHandling', 'INGetAvailableRestaurantReservationBookingsIntentHandling', 'INGetCarLockStatusIntentHandling', 'INGetCarPowerLevelStatusIntentHandling', 'INGetCarPowerLevelStatusIntentResponseObserver', 'INGetRestaurantGuestIntentHandling', 'INGetRideStatusIntentHandling', 'INGetRideStatusIntentResponseObserver', 'INGetUserCurrentRestaurantReservationBookingsIntentHandling', 'INGetVisualCodeIntentHandling', 'INIntentHandlerProviding', 'INListCarsIntentHandling', 'INListRideOp
tionsIntentHandling', 'INMessagesDomainHandling', 'INNotebookDomainHandling', 'INPauseWorkoutIntentHandling', 'INPayBillIntentHandling', 'INPaymentsDomainHandling', 'INPhotosDomainHandling', 'INPlayMediaIntentHandling', 'INRadioDomainHandling', 'INRequestPaymentIntentHandling', 'INRequestRideIntentHandling', 'INResumeWorkoutIntentHandling', 'INRidesharingDomainHandling', 'INSaveProfileInCarIntentHandling', 'INSearchCallHistoryIntentHandling', 'INSearchForAccountsIntentHandling', 'INSearchForBill
sIntentHandling', 'INSearchForMediaIntentHandling', 'INSearchForMessagesIntentHandling', 'INSearchForNotebookItemsIntentHandling', 'INSearchForPhotosIntentHandling', 'INSendMessageIntentHandling', 'INSendPaymentIntentHandling', 'INSendRideFeedbackIntentHandling', 'INSetAudioSourceInCarIntentHandling', 'INSetCarLockStatusIntentHandling', 'INSetClimateSettingsInCarIntentHandling', 'INSetDefrosterSettingsInCarIntentHandling', 'INSetMessageAttributeIntentHandling', 'INSetProfileInCarIntentHandling',
 'INSetRadioStationIntentHandling', 'INSetSeatSettingsInCarIntentHandling', 'INSetTaskAttributeIntentHandling', 'INSnoozeTasksIntentHandling', 'INSpeakable', 'INStartAudioCallIntentHandling', 'INStartCallIntentHandling', 'INStartPhotoPlaybackIntentHandling', 'INStartVideoCallIntentHandling', 'INStartWorkoutIntentHandling', 'INTransferMoneyIntentHandling', 'INUIAddVoiceShortcutButtonDelegate', 'INUIAddVoiceShortcutViewControllerDelegate', 'INUIEditVoiceShortcutViewControllerDelegate', 'INUIHosted
ViewControlling', 'INUIHostedViewSiriProviding', 'INUpdateMediaAffinityIntentHandling', 'INVisualCodeDomainHandling', 'INWorkoutsDomainHandling', 'JSExport', 'MCAdvertiserAssistantDelegate', 'MCBrowserViewControllerDelegate', 'MCNearbyServiceAdvertiserDelegate', 'MCNearbyServiceBrowserDelegate', 'MCSessionDelegate', 'MDLAssetResolver', 'MDLComponent', 'MDLJointAnimation', 'MDLLightProbeIrradianceDataSource', 'MDLMeshBuffer', 'MDLMeshBufferAllocator', 'MDLMeshBufferZone', 'MDLNamed', 'MDLObjectCo
ntainerComponent', 'MDLTransformComponent', 'MDLTransformOp', 'MFMailComposeViewControllerDelegate', 'MFMessageComposeViewControllerDelegate', 'MIDICIProfileResponderDelegate', 'MKAnnotation', 'MKGeoJSONObject', 'MKLocalSearchCompleterDelegate', 'MKMapViewDelegate', 'MKOverlay', 'MKReverseGeocoderDelegate', 'MLBatchProvider', 'MLCustomLayer', 'MLCustomModel', 'MLFeatureProvider', 'MLWritable', 'MPMediaPickerControllerDelegate', 'MPMediaPlayback', 'MPNowPlayingSessionDelegate', 'MPPlayableContent
DataSource', 'MPPlayableContentDelegate', 'MPSystemMusicPlayerController', 'MSAuthenticationPresentationContext', 'MSMessagesAppTranscriptPresentation', 'MSStickerBrowserViewDataSource', 'MTKViewDelegate', 'MTLAccelerationStructure', 'MTLAccelerationStructureCommandEncoder', 'MTLArgumentEncoder', 'MTLBinaryArchive', 'MTLBlitCommandEncoder', 'MTLBuffer', 'MTLCaptureScope', 'MTLCommandBuffer', 'MTLCommandBufferEncoderInfo', 'MTLCommandEncoder', 'MTLCommandQueue', 'MTLComputeCommandEncoder', 'MTLCo
mputePipelineState', 'MTLCounter', 'MTLCounterSampleBuffer', 'MTLCounterSet', 'MTLDepthStencilState', 'MTLDevice', 'MTLDrawable', 'MTLDynamicLibrary', 'MTLEvent', 'MTLFence', 'MTLFunction', 'MTLFunctionHandle', 'MTLFunctionLog', 'MTLFunctionLogDebugLocation', 'MTLHeap', 'MTLIndirectCommandBuffer', 'MTLIndirectComputeCommand', 'MTLIndirectComputeCommandEncoder', 'MTLIndirectRenderCommand', 'MTLIndirectRenderCommandEncoder', 'MTLIntersectionFunctionTable', 'MTLLibrary', 'MTLLogContainer', 'MTLPara
llelRenderCommandEncoder', 'MTLRasterizationRateMap', 'MTLRenderCommandEncoder', 'MTLRenderPipelineState', 'MTLResource', 'MTLResourceStateCommandEncoder', 'MTLSamplerState', 'MTLSharedEvent', 'MTLTexture', 'MTLVisibleFunctionTable', 'MXMetricManagerSubscriber', 'MyClassJavaScriptMethods', 'NCWidgetProviding', 'NEAppPushDelegate', 'NFCFeliCaTag', 'NFCISO15693Tag', 'NFCISO7816Tag', 'NFCMiFareTag', 'NFCNDEFReaderSessionDelegate', 'NFCNDEFTag', 'NFCReaderSession', 'NFCReaderSessionDelegate', 'NFCTa
g', 'NFCTagReaderSessionDelegate', 'NFCVASReaderSessionDelegate', 'NISessionDelegate', 'NSCacheDelegate', 'NSCoding', 'NSCollectionLayoutContainer', 'NSCollectionLayoutEnvironment', 'NSCollectionLayoutVisibleItem', 'NSCopying', 'NSDecimalNumberBehaviors', 'NSDiscardableContent', 'NSExtensionRequestHandling', 'NSFastEnumeration', 'NSFetchRequestResult', 'NSFetchedResultsControllerDelegate', 'NSFetchedResultsSectionInfo', 'NSFileManagerDelegate', 'NSFilePresenter', 'NSFileProviderChangeObserver', 
'NSFileProviderEnumerationObserver', 'NSFileProviderEnumerator', 'NSFileProviderItem', 'NSFileProviderServiceSource', 'NSItemProviderReading', 'NSItemProviderWriting', 'NSKeyedArchiverDelegate', 'NSKeyedUnarchiverDelegate', 'NSLayoutManagerDelegate', 'NSLocking', 'NSMachPortDelegate', 'NSMetadataQueryDelegate', 'NSMutableCopying', 'NSNetServiceBrowserDelegate', 'NSNetServiceDelegate', 'NSPortDelegate', 'NSProgressReporting', 'NSSecureCoding', 'NSStreamDelegate', 'NSTextAttachmentContainer', 'NST
extLayoutOrientationProvider', 'NSTextStorageDelegate', 'NSURLAuthenticationChallengeSender', 'NSURLConnectionDataDelegate', 'NSURLConnectionDelegate', 'NSURLConnectionDownloadDelegate', 'NSURLProtocolClient', 'NSURLSessionDataDelegate', 'NSURLSessionDelegate', 'NSURLSessionDownloadDelegate', 'NSURLSessionStreamDelegate', 'NSURLSessionTaskDelegate', 'NSURLSessionWebSocketDelegate', 'NSUserActivityDelegate', 'NSXMLParserDelegate', 'NSXPCListenerDelegate', 'NSXPCProxyCreating', 'NWTCPConnectionAut
henticationDelegate', 'OSLogEntryFromProcess', 'OSLogEntryWithPayload', 'PDFDocumentDelegate', 'PDFViewDelegate', 'PHContentEditingController', 'PHLivePhotoFrame', 'PHLivePhotoViewDelegate', 'PHPhotoLibraryAvailabilityObserver', 'PHPhotoLibraryChangeObserver', 'PHPickerViewControllerDelegate', 'PKAddPassesViewControllerDelegate', 'PKAddPaymentPassViewControllerDelegate', 'PKAddSecureElementPassViewControllerDelegate', 'PKCanvasViewDelegate', 'PKDisbursementAuthorizationControllerDelegate', 'PKIs
suerProvisioningExtensionAuthorizationProviding', 'PKPaymentAuthorizationControllerDelegate', 'PKPaymentAuthorizationViewControllerDelegate', 'PKPaymentInformationRequestHandling', 'PKPushRegistryDelegate', 'PKToolPickerObserver', 'PreviewDisplaying', 'QLPreviewControllerDataSource', 'QLPreviewControllerDelegate', 'QLPreviewItem', 'QLPreviewingController', 'RPBroadcastActivityControllerDelegate', 'RPBroadcastActivityViewControllerDelegate', 'RPBroadcastControllerDelegate', 'RPPreviewViewControll
erDelegate', 'RPScreenRecorderDelegate', 'SCNActionable', 'SCNAnimatable', 'SCNAnimation', 'SCNAvoidOccluderConstraintDelegate', 'SCNBoundingVolume', 'SCNBufferStream', 'SCNCameraControlConfiguration', 'SCNCameraControllerDelegate', 'SCNNodeRendererDelegate', 'SCNPhysicsContactDelegate', 'SCNProgramDelegate', 'SCNSceneExportDelegate', 'SCNSceneRenderer', 'SCNSceneRendererDelegate', 'SCNShadable', 'SCNTechniqueSupport', 'SFSafariViewControllerDelegate', 'SFSpeechRecognitionTaskDelegate', 'SFSpeec
hRecognizerDelegate', 'SKCloudServiceSetupViewControllerDelegate', 'SKOverlayDelegate', 'SKPaymentQueueDelegate', 'SKPaymentTransactionObserver', 'SKPhysicsContactDelegate', 'SKProductsRequestDelegate', 'SKRequestDelegate', 'SKSceneDelegate', 'SKStoreProductViewControllerDelegate', 'SKViewDelegate', 'SKWarpable', 'SNRequest', 'SNResult', 'SNResultsObserving', 'SRSensorReaderDelegate', 'TKSmartCardTokenDriverDelegate', 'TKSmartCardUserInteractionDelegate', 'TKTokenDelegate', 'TKTokenDriverDelegat
e', 'TKTokenSessionDelegate', 'UIAccelerometerDelegate', 'UIAccessibilityContainerDataTable', 'UIAccessibilityContainerDataTableCell', 'UIAccessibilityContentSizeCategoryImageAdjusting', 'UIAccessibilityIdentification', 'UIAccessibilityReadingContent', 'UIActionSheetDelegate', 'UIActivityItemSource', 'UIActivityItemsConfigurationReading', 'UIAdaptivePresentationControllerDelegate', 'UIAlertViewDelegate', 'UIAppearance', 'UIAppearanceContainer', 'UIApplicationDelegate', 'UIBarPositioning', 'UIBar
PositioningDelegate', 'UICloudSharingControllerDelegate', 'UICollectionViewDataSource', 'UICollectionViewDataSourcePrefetching', 'UICollectionViewDelegate', 'UICollectionViewDelegateFlowLayout', 'UICollectionViewDragDelegate', 'UICollectionViewDropCoordinator', 'UICollectionViewDropDelegate', 'UICollectionViewDropItem', 'UICollectionViewDropPlaceholderContext', 'UICollisionBehaviorDelegate', 'UIColorPickerViewControllerDelegate', 'UIConfigurationState', 'UIContentConfiguration', 'UIContentContai
ner', 'UIContentSizeCategoryAdjusting', 'UIContentView', 'UIContextMenuInteractionAnimating', 'UIContextMenuInteractionCommitAnimating', 'UIContextMenuInteractionDelegate', 'UICoordinateSpace', 'UIDataSourceModelAssociation', 'UIDataSourceTranslating', 'UIDocumentBrowserViewControllerDelegate', 'UIDocumentInteractionControllerDelegate', 'UIDocumentMenuDelegate', 'UIDocumentPickerDelegate', 'UIDragAnimating', 'UIDragDropSession', 'UIDragInteractionDelegate', 'UIDragSession', 'UIDropInteractionDel
egate', 'UIDropSession', 'UIDynamicAnimatorDelegate', 'UIDynamicItem', 'UIFocusAnimationContext', 'UIFocusDebuggerOutput', 'UIFocusEnvironment', 'UIFocusItem', 'UIFocusItemContainer', 'UIFocusItemScrollableContainer', 'UIFontPickerViewControllerDelegate', 'UIGestureRecognizerDelegate', 'UIGuidedAccessRestrictionDelegate', 'UIImageConfiguration', 'UIImagePickerControllerDelegate', 'UIIndirectScribbleInteractionDelegate', 'UIInputViewAudioFeedback', 'UIInteraction', 'UIItemProviderPresentationSize
Providing', 'UIKeyInput', 'UILargeContentViewerInteractionDelegate', 'UILargeContentViewerItem', 'UILayoutSupport', 'UIMenuBuilder', 'UINavigationBarDelegate', 'UINavigationControllerDelegate', 'UIObjectRestoration', 'UIPageViewControllerDataSource', 'UIPageViewControllerDelegate', 'UIPasteConfigurationSupporting', 'UIPencilInteractionDelegate', 'UIPickerViewAccessibilityDelegate', 'UIPickerViewDataSource', 'UIPickerViewDelegate', 'UIPointerInteractionAnimating', 'UIPointerInteractionDelegate', 
'UIPopoverBackgroundViewMethods', 'UIPopoverControllerDelegate', 'UIPopoverPresentationControllerDelegate', 'UIPreviewActionItem', 'UIPreviewInteractionDelegate', 'UIPrintInteractionControllerDelegate', 'UIPrinterPickerControllerDelegate', 'UIResponderStandardEditActions', 'UISceneDelegate', 'UIScreenshotServiceDelegate', 'UIScribbleInteractionDelegate', 'UIScrollViewAccessibilityDelegate', 'UIScrollViewDelegate', 'UISearchBarDelegate', 'UISearchControllerDelegate', 'UISearchDisplayDelegate', 'U
ISearchResultsUpdating', 'UISearchSuggestion', 'UISearchTextFieldDelegate', 'UISearchTextFieldPasteItem', 'UISplitViewControllerDelegate', 'UISpringLoadedInteractionBehavior', 'UISpringLoadedInteractionContext', 'UISpringLoadedInteractionEffect', 'UISpringLoadedInteractionSupporting', 'UIStateRestoring', 'UITabBarControllerDelegate', 'UITabBarDelegate', 'UITableViewDataSource', 'UITableViewDataSourcePrefetching', 'UITableViewDelegate', 'UITableViewDragDelegate', 'UITableViewDropCoordinator', 'UI
TableViewDropDelegate', 'UITableViewDropItem', 'UITableViewDropPlaceholderContext', 'UITextDocumentProxy', 'UITextDragDelegate', 'UITextDragRequest', 'UITextDraggable', 'UITextDropDelegate', 'UITextDropRequest', 'UITextDroppable', 'UITextFieldDelegate', 'UITextFormattingCoordinatorDelegate', 'UITextInput', 'UITextInputDelegate', 'UITextInputTokenizer', 'UITextInputTraits', 'UITextInteractionDelegate', 'UITextPasteConfigurationSupporting', 'UITextPasteDelegate', 'UITextPasteItem', 'UITextSelectin
g', 'UITextViewDelegate', 'UITimingCurveProvider', 'UIToolbarDelegate', 'UITraitEnvironment', 'UIUserActivityRestoring', 'UIVideoEditorControllerDelegate', 'UIViewAnimating', 'UIViewControllerAnimatedTransitioning', 'UIViewControllerContextTransitioning', 'UIViewControllerInteractiveTransitioning', 'UIViewControllerPreviewing', 'UIViewControllerPreviewingDelegate', 'UIViewControllerRestoration', 'UIViewControllerTransitionCoordinator', 'UIViewControllerTransitionCoordinatorContext', 'UIViewContr
ollerTransitioningDelegate', 'UIViewImplicitlyAnimating', 'UIWebViewDelegate', 'UIWindowSceneDelegate', 'UNNotificationContentExtension', 'UNUserNotificationCenterDelegate', 'VNDocumentCameraViewControllerDelegate', 'VNFaceObservationAccepting', 'VNRequestProgressProviding', 'VNRequestRevisionProviding', 'VSAccountManagerDelegate', 'WCSessionDelegate', 'WKHTTPCookieStoreObserver', 'WKNavigationDelegate', 'WKPreviewActionItem', 'WKScriptMessageHandler', 'WKScriptMessageHandlerWithReply', 'WKUIDel
egate', 'WKURLSchemeHandler', 'WKURLSchemeTask'}
.venv\Lib\site-packages\pygments\lexers\_googlesql_builtins.py:578:    'CONSTRAINT',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:1445:        'sqlite_constraint',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:4682:        'showeanguardbars',
.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:5278:        'showeanguardbars',
.venv\Lib\site-packages\pygments\lexers\_mql_builtins.py:654:    'MB_ICONASTERISK',
.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:624:    'constraint',
.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:625:    'constraint_catalog',
.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:626:    'constraint_name',
.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:627:    'constraint_schema',
.venv\Lib\site-packages\pygments\lexers\_postgres_builtins.py:86:    'CONSTRAINT',
.venv\Lib\site-packages\pygments\lexers\_postgres_builtins.py:87:    'CONSTRAINTS',
.venv\Lib\site-packages\pygments\lexers\_scheme_builtins.py:814:    "make-guardian",
.venv\Lib\site-packages\pygments\lexers\_scilab_builtins.py:2626:    'optimbase_hasconstraints',
.venv\Lib\site-packages\pygments\lexers\_sql_builtins.py:26:    'CONNECTION', 'CONNECTION_NAME', 'CONSTRAINT', 'CONSTRAINTS',
.venv\Lib\site-packages\pygments\lexers\_sql_builtins.py:27:    'CONSTRAINT_CATALOG', 'CONSTRAINT_NAME', 'CONSTRAINT_SCHEMA',
.venv\Lib\site-packages\pygments\lexers\_stata_builtins.py:52:    "constra", "constrai", "constrain", "constraint", "continue",
.venv\Lib\site-packages\pygments\lexers\_tsql_builtins.py:86:    'constraint',
.venv\Lib\site-packages\pygments\lexers\_tsql_builtins.py:287:    'constraints',
.venv\Lib\site-packages\pygments\lexers\_tsql_builtins.py:566:    'constraint',
.venv\Lib\site-packages\pygments\lexers\_tsql_builtins.py:567:    'constraints',
.venv\Lib\site-packages\pygments\styles\paraiso_dark.py:9:    (https://github.com/chriskempson/base16-builder).
.venv\Lib\site-packages\pygments\styles\paraiso_light.py:9:    (https://github.com/chriskempson/base16-builder).
.venv\Lib\site-packages\pylint\checkers\design_analysis.py:273:            # This guard might appear to be performing the same function as
.venv\Lib\site-packages\pylint\checkers\imports.py:28:    is_sys_guard,
.venv\Lib\site-packages\pylint\checkers\imports.py:147:    # Ignore import failure if part of guarded import block
.venv\Lib\site-packages\pylint\checkers\imports.py:151:    if isinstance(node.parent, nodes.If) and is_sys_guard(node.parent):
.venv\Lib\site-packages\pylint\checkers\imports.py:598:                    and is_sys_guard(import_node.parent)
.venv\Lib\site-packages\pylint\checkers\typecheck.py:458:        * The node is guarded behind and `IF` or `IFExp` node
.venv\Lib\site-packages\pylint\checkers\typecheck.py:519:    # Don't emit no-member if guarded behind `IF` or `IFExp`
.venv\Lib\site-packages\pylint\checkers\utils.py:1842:def is_sys_guard(node: nodes.If) -> bool:
.venv\Lib\site-packages\pylint\checkers\utils.py:1843:    """Return True if IF stmt is a sys.version_info guard.
.venv\Lib\site-packages\pylint\checkers\utils.py:1946:    Useful for extracting whether a statement is guarded by a try, except, or finally
.venv\Lib\site-packages\pylint\checkers\utils.py:1958:    """Check if a node is guarded by a TYPE_CHECKING guard."""
.venv\Lib\site-packages\pylint\checkers\variables.py:32:    is_sys_guard,
.venv\Lib\site-packages\pylint\checkers\variables.py:185:    will only work if guarded by a nested function definition.
.venv\Lib\site-packages\pylint\checkers\variables.py:196:            def guard():
.venv\Lib\site-packages\pylint\checkers\variables.py:654:        # Filter out assignments guarded by always false conditions
.venv\Lib\site-packages\pylint\checkers\variables.py:820:            if NamesConsumer._node_guarded_by_same_test(node, outer_if):
.venv\Lib\site-packages\pylint\checkers\variables.py:832:    def _node_guarded_by_same_test(node: nodes.NodeNG, other_if: nodes.If) -> bool:
.venv\Lib\site-packages\pylint\checkers\variables.py:833:        """Identify if `node` is guarded by an equivalent test as `other_if`.
.venv\Lib\site-packages\pylint\checkers\variables.py:837:        are identical, and the if test guarding `node` is not a Name.
.venv\Lib\site-packages\pylint\checkers\variables.py:1061:            # `node` not guarded by `else`
.venv\Lib\site-packages\pylint\checkers\variables.py:1137:            # If the other statement is the except handler guarding `node`, it executes
.venv\Lib\site-packages\pylint\checkers\variables.py:2098:        # Don't verify import if part of guarded import block
.venv\Lib\site-packages\pylint\checkers\variables.py:2101:        if isinstance(node.parent, nodes.If) and is_sys_guard(node.parent):
.venv\Lib\site-packages\pylint\checkers\variables.py:2121:        # Don't verify import if part of guarded import block
.venv\Lib\site-packages\pylint\checkers\variables.py:2125:        if isinstance(node.parent, nodes.If) and is_sys_guard(node.parent):
.venv\Lib\site-packages\pylint\checkers\variables.py:2425:            return any(case.guard for case in defstmt.cases)
.venv\Lib\site-packages\pylint\checkers\refactoring\refactoring_checker.py:844:        # Does not have a single statement in the guard's body
.venv\Lib\site-packages\pylint\extensions\code_style.py:20:    from typing import TypeGuard
.venv\Lib\site-packages\pylint\extensions\code_style.py:22:    from typing_extensions import TypeGuard
.venv\Lib\site-packages\pylint\extensions\code_style.py:280:    ) -> TypeGuard[nodes.Assign | nodes.AnnAssign]:
.venv\Lib\site-packages\pylint\extensions\docparams.py:426:        # Handle variadic and keyword args without asterisks
.venv\Lib\site-packages\pylint\extensions\docparams.py:462:        # Handle variadic and keyword args without asterisks
.venv\Lib\site-packages\pylint\extensions\_check_docs_utils.py:374:        ((\\\*{{0,2}}\w+)|(\w+))  # Parameter name with potential asterisks
.venv\Lib\site-packages\pylint\extensions\_check_docs_utils.py:475:            # Remove escape characters necessary for asterisks
.venv\Lib\site-packages\pylint\extensions\_check_docs_utils.py:572:        \s*  ((?:\\?\*{{0,2}})?[\w\\]+) # identifier potentially with asterisks or escaped `\`
.venv\Lib\site-packages\pylint\extensions\_check_docs_utils.py:750:            # Remove escape characters necessary for asterisks
.venv\Lib\site-packages\pylint\extensions\_check_docs_utils.py:833:        \s*  (?P<param_name>\*{{0,2}}\w+)(\s?(:|\n)) # identifier with potential asterisks
.venv\Lib\site-packages\pylint\message\message_definition_store.py:59:    # risk of creating a large memory leak.
.venv\Lib\site-packages\pyparsing\core.py:518:            # guard against looping forever through recursive grammars
.venv\Lib\site-packages\pyparsing\core.py:6227:    # guard against _getframe not being implemented in the current Python
.venv\Lib\site-packages\requests\sessions.py:687:        # Guard against that specific failure case.
.venv\Lib\site-packages\rich\traceback.py:573:                if frame_summary.f_locals.get("_rich_traceback_guard", False):
.venv\Lib\site-packages\rich\traceback.py:884:        _rich_traceback_guard = True
.venv\Lib\site-packages\rich\_emoji_codes.py:769:    "eight-spoked_asterisk": "✳",
.venv\Lib\site-packages\rich\_emoji_codes.py:962:    "guard": "💂",
.venv\Lib\site-packages\rich\_emoji_codes.py:963:    "guard_dark_skin_tone": "💂🏿",
.venv\Lib\site-packages\rich\_emoji_codes.py:964:    "guard_light_skin_tone": "💂🏻",
.venv\Lib\site-packages\rich\_emoji_codes.py:965:    "guard_medium-dark_skin_tone": "💂🏾",
.venv\Lib\site-packages\rich\_emoji_codes.py:966:    "guard_medium-light_skin_tone": "💂🏼",
.venv\Lib\site-packages\rich\_emoji_codes.py:967:    "guard_medium_skin_tone": "💂🏽",
.venv\Lib\site-packages\rich\_emoji_codes.py:1301:    "man_guard": "💂\u200d♂️",
.venv\Lib\site-packages\rich\_emoji_codes.py:1302:    "man_guard_dark_skin_tone": "💂🏿\u200d♂️",
.venv\Lib\site-packages\rich\_emoji_codes.py:1303:    "man_guard_light_skin_tone": "💂🏻\u200d♂️",
.venv\Lib\site-packages\rich\_emoji_codes.py:1304:    "man_guard_medium-dark_skin_tone": "💂🏾\u200d♂️",
.venv\Lib\site-packages\rich\_emoji_codes.py:1305:    "man_guard_medium-light_skin_tone": "💂🏼\u200d♂️",
.venv\Lib\site-packages\rich\_emoji_codes.py:1306:    "man_guard_medium_skin_tone": "💂🏽\u200d♂️",
.venv\Lib\site-packages\rich\_emoji_codes.py:2537:    "woman_guard": "💂\u200d♀️",
.venv\Lib\site-packages\rich\_emoji_codes.py:2538:    "woman_guard_dark_skin_tone": "💂🏿\u200d♀️",
.venv\Lib\site-packages\rich\_emoji_codes.py:2539:    "woman_guard_light_skin_tone": "💂🏻\u200d♀️",
.venv\Lib\site-packages\rich\_emoji_codes.py:2540:    "woman_guard_medium-dark_skin_tone": "💂🏾\u200d♀️",
.venv\Lib\site-packages\rich\_emoji_codes.py:2541:    "woman_guard_medium-light_skin_tone": "💂🏼\u200d♀️",
.venv\Lib\site-packages\rich\_emoji_codes.py:2542:    "woman_guard_medium_skin_tone": "💂🏽\u200d♀️",
.venv\Lib\site-packages\rich\_emoji_codes.py:2769:    "keycap_asterisk": "*⃣",
.venv\Lib\site-packages\rich\_emoji_codes.py:2958:    "eight_spoked_asterisk": "✳",
.venv\Lib\site-packages\rich\_emoji_codes.py:3276:    "guardsman": "💂",
.venv\Lib\site-packages\rich\_ratio.py:15:    """Divide total space to satisfy size, ratio, and minimum_size, constraints.
.venv\Lib\site-packages\rich\_ratio.py:18:    impossible to satisfy all the constraints. For instance, if there are two edges
.venv\Lib\site-packages\setuptools\_distutils\cmd.py:202:    # value meets certain type and value constraints.  If not, we try to
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:83:    'TypeGuard',
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1858:if hasattr(typing, 'TypeGuard'):
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1859:    TypeGuard = typing.TypeGuard
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1862:    class _TypeGuardForm(typing._SpecialForm, _root=True):
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1866:    @_TypeGuardForm
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1867:    def TypeGuard(self, parameters):
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1869:        type guard function.  ``TypeGuard`` only accepts a single type argument.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1872:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1876:        conditional expression here is sometimes referred to as a "type guard".
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1879:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1882:        Using  ``-> TypeGuard`` tells the static type checker that for a given
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1887:        is the type inside ``TypeGuard``.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1892:                # "isinstance" type guard
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1905:        writing type-safe type guards is left to the user.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1907:        ``TypeGuard`` also works with type variables.  For more information, see
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1908:        PEP 647 (User-Defined Type Guards).
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1914:    class _TypeGuardForm(typing._SpecialForm, _root=True):
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1924:    TypeGuard = _TypeGuardForm(
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1925:        'TypeGuard',
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1927:        type guard function.  ``TypeGuard`` only accepts a single type argument.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1930:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1934:        conditional expression here is sometimes referred to as a "type guard".
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1937:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1940:        Using  ``-> TypeGuard`` tells the static type checker that for a given
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1945:        is the type inside ``TypeGuard``.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1950:                # "isinstance" type guard
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1963:        writing type-safe type guards is left to the user.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1965:        ``TypeGuard`` also works with type variables.  For more information, see
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1966:        PEP 647 (User-Defined Type Guards).
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1970:    class _TypeGuard(typing._FinalTypingBase, _root=True):
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1972:        type guard function.  ``TypeGuard`` only accepts a single type argument.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1975:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1979:        conditional expression here is sometimes referred to as a "type guard".
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1982:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1985:        Using  ``-> TypeGuard`` tells the static type checker that for a given
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1990:        is the type inside ``TypeGuard``.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1995:                # "isinstance" type guard
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2008:        writing type-safe type guards is left to the user.
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2010:        ``TypeGuard`` also works with type variables.  For more information, see
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2011:        PEP 647 (User-Defined Type Guards).
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2043:            if not isinstance(other, _TypeGuard):
.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2049:    TypeGuard = _TypeGuard(_root=True)
.venv\Lib\site-packages\typing_inspection\typing_objects.py:48:    'is_typeguard',
.venv\Lib\site-packages\typing_inspection\typing_objects.py:457:is_typeguard = _compile_identity_check_function('TypeGuard', 'is_typeguard')
.venv\Lib\site-packages\typing_inspection\typing_objects.py:458:is_typeguard.__doc__ = """
.venv\Lib\site-packages\typing_inspection\typing_objects.py:459:Return whether the argument is the [`TypeGuard`][typing.TypeGuard] [special form][].
.venv\Lib\site-packages\typing_inspection\typing_objects.py:462:>>> is_typeguard(TypeGuard)
.venv\Lib\site-packages\urllib3\util\retry.py:73:        Set to ``None`` to remove this constraint and fall back on other
.venv\Lib\site-packages\urllib3\util\ssl_.py:327:        # there is a risk associated with it being on wire,
.venv\Lib\site-packages\urllib3\util\ssl_.py:351:    # matter due to safe-guards SSLContext has to prevent an SSLContext with
.venv\Lib\site-packages\uvicorn\protocols\websockets\wsproto_impl.py:196:        # todo: we may want to guard the size of self.bytes and self.text
.venv\Lib\site-packages\virtualenv\create\via_global_ref\builtin\ref.py:4:the constraints: e.g. can the file system symlink, can the files be read, executed, etc.
.venv\Lib\site-packages\websockets\legacy\protocol.py:514:        Canceling :meth:`recv` is safe. There's no risk of losing the next
.venv\Lib\site-packages\websockets\sync\connection.py:709:                # There's no risk to overwrite another error because
.venv\Lib\site-packages\_pytest\pathlib.py:50:# EBADF - guard against macOS `stat` throwing EBADF
.venv\Lib\site-packages\_pytest\python.py:134:        "side effects(use at your own risk)",
.venv\Lib\site-packages\_pytest\assertion\rewrite.py:87:        # flag to guard against trying to rewrite a pyc file while we are already writing another pyc file,
.venv\Lib\site-packages\_pytest\config\__init__.py:354:        # abuse typeguard from importlib to avoid massive method type union thats lacking a alias
.venv\Lib\site-packages\_pytest\_py\path.py:1319:                # risk of seeing their temporary dir disappear.  For now
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:100:    'TypeGuard',
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:1637:        def __new__(cls, name, *constraints, bound=None,
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:1642:                typevar = typing.TypeVar(name, *constraints, bound=bound,
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:1646:                typevar = typing.TypeVar(name, *constraints, bound=bound,
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2119:if hasattr(typing, 'TypeGuard'):
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2120:    TypeGuard = typing.TypeGuard
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2124:    def TypeGuard(self, parameters):
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2126:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2129:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2133:        conditional expression here is sometimes referred to as a "type guard".
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2136:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2139:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2144:        is the type inside ``TypeGuard``.
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2149:                # "isinstance" type guard
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2162:        writing type-safe type guards is left to the user.
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2164:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2165:        PEP 647 (User-Defined Type Guards).
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2186:        conditional expression here is sometimes referred to as a "type guard".
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:2189:        as a type guard.  Such a function should use ``TypeIs[...]`` as its
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:4077:        _recursive_guard=frozenset(),
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:4103:        if forward_ref.__forward_arg__ in _recursive_guard:
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:4133:                _recursive_guard=_recursive_guard, format=format
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:4146:                recursive_guard=_recursive_guard | {forward_ref.__forward_arg__},
scripts\mcp\.venv\Lib\site-packages\typing_extensions.py:4154:                recursive_guard=_recursive_guard | {forward_ref.__forward_arg__},
scripts\mcp\.venv\Lib\site-packages\annotated_types\__init__.py:157:    All of the constraints and metadata should be fully expressable
scripts\mcp\.venv\Lib\site-packages\annotated_types\__init__.py:209:    are interpreted the same way as the single-bound constraints.
scripts\mcp\.venv\Lib\site-packages\annotated_types\__init__.py:329:    We provide a few predefined predicates for common string constraints:
scripts\mcp\.venv\Lib\site-packages\annotated_types\__init__.py:340:    skip invalid constraints, or statically raise an error; or it might try calling it
scripts\mcp\.venv\Lib\site-packages\anyio\__init__.py:62:from ._core._synchronization import ResourceGuard as ResourceGuard
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:88:    ResourceGuard,
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1238:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1239:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1247:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1282:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1326:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1327:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1367:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1373:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1393:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1417:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1463:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1488:        self._accept_guard = ResourceGuard("accepting connections from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1498:        with self._accept_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1545:        self._accept_guard = ResourceGuard("accepting connections from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1550:        with self._accept_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1584:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1585:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1598:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1615:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1632:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1633:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1646:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1665:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1680:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1697:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1716:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1733:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:76:    ResourceGuard,
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:419:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:420:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:423:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:435:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:458:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:498:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:519:        self._accept_guard = ResourceGuard("accepting connections from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:522:        with self._accept_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:535:        self._accept_guard = ResourceGuard("accepting connections from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:538:        with self._accept_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:550:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:551:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:554:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:562:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:572:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:573:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:576:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:583:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:593:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:594:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:597:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:605:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:617:        self._receive_guard = ResourceGuard("reading from")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:618:        self._send_guard = ResourceGuard("writing to")
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:621:        with self._receive_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_backends\_trio.py:628:        with self._send_guard:
scripts\mcp\.venv\Lib\site-packages\anyio\_core\_synchronization.py:700:class ResourceGuard:
scripts\mcp\.venv\Lib\site-packages\anyio\_core\_synchronization.py:708:    :param action: the action to guard against (visible in the :exc:`BusyResourceError`
scripts\mcp\.venv\Lib\site-packages\anyio\_core\_synchronization.py:714:    __slots__ = "action", "_guarded"
scripts\mcp\.venv\Lib\site-packages\anyio\_core\_synchronization.py:718:        self._guarded = False
scripts\mcp\.venv\Lib\site-packages\anyio\_core\_synchronization.py:721:        if self._guarded:
scripts\mcp\.venv\Lib\site-packages\anyio\_core\_synchronization.py:724:        self._guarded = True
scripts\mcp\.venv\Lib\site-packages\anyio\_core\_synchronization.py:732:        self._guarded = False
scripts\mcp\.venv\Lib\site-packages\click\types.py:831:def _is_file_like(value: t.Any) -> te.TypeGuard[t.IO[t.Any]]:
scripts\mcp\.venv\Lib\site-packages\dotenv\main.py:163:    If the .env path given doesn't exist, fails instead of risking creating
scripts\mcp\.venv\Lib\site-packages\httpcore\_async\http2.py:89:            # It's in place simply for resilience as a guard against incorrect
scripts\mcp\.venv\Lib\site-packages\httpcore\_sync\http2.py:89:            # It's in place simply for resilience as a guard against incorrect
scripts\mcp\.venv\Lib\site-packages\jsonschema\tests\test_cli.py:778:        # is hidden inside the CLI, so guard that that's the case, and
scripts\mcp\.venv\Lib\site-packages\mcp\types.py:5:from pydantic.networks import AnyUrl, UrlConstraints
scripts\mcp\.venv\Lib\site-packages\mcp\types.py:412:    uri: Annotated[AnyUrl, UrlConstraints(host_required=False)]
scripts\mcp\.venv\Lib\site-packages\mcp\types.py:479:    uri: Annotated[AnyUrl, UrlConstraints(host_required=False)]
scripts\mcp\.venv\Lib\site-packages\mcp\types.py:497:    uri: Annotated[AnyUrl, UrlConstraints(host_required=False)]
scripts\mcp\.venv\Lib\site-packages\mcp\types.py:547:    uri: Annotated[AnyUrl, UrlConstraints(host_required=False)]
scripts\mcp\.venv\Lib\site-packages\mcp\types.py:568:    uri: Annotated[AnyUrl, UrlConstraints(host_required=False)]
scripts\mcp\.venv\Lib\site-packages\mcp\types.py:586:    uri: Annotated[AnyUrl, UrlConstraints(host_required=False)]
scripts\mcp\.venv\Lib\site-packages\mcp\client\auth.py:511:                    # OAuth flow must be inline due to generator constraints
scripts\mcp\.venv\Lib\site-packages\mcp\client\stdio\__init__.py:63:            # Skip functions, which are a security risk
scripts\mcp\.venv\Lib\site-packages\mcp\server\fastmcp\resources\base.py:11:    UrlConstraints,
scripts\mcp\.venv\Lib\site-packages\mcp\server\fastmcp\resources\base.py:22:    uri: Annotated[AnyUrl, UrlConstraints(host_required=False)] = Field(default=..., description="URI of the resource")
scripts\mcp\.venv\Lib\site-packages\pip\_internal\exceptions.py:694:                "You can override this, at the risk of breaking your Python "
scripts\mcp\.venv\Lib\site-packages\pip\_internal\wheel_builder.py:50:    assert not req.constraint
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:89:            "When restricting platform and interpreter constraints using "
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:420:def constraints() -> Option:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:423:        "--constraint",
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:424:        dest="constraints",
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:428:        help="Constrain versions using the given constraints file. "
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\req_command.py:224:        for filename in options.constraints:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\cli\req_command.py:227:                constraint=True,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\commands\download.py:38:        self.cmd_opts.add_option(cmdoptions.constraints())
scripts\mcp\.venv\Lib\site-packages\pip\_internal\commands\install.py:89:        self.cmd_opts.add_option(cmdoptions.constraints())
scripts\mcp\.venv\Lib\site-packages\pip\_internal\commands\lock.py:61:        self.cmd_opts.add_option(cmdoptions.constraints())
scripts\mcp\.venv\Lib\site-packages\pip\_internal\commands\wheel.py:62:        self.cmd_opts.add_option(cmdoptions.constraints())
scripts\mcp\.venv\Lib\site-packages\pip\_internal\index\package_finder.py:48:    from typing_extensions import TypeGuard
scripts\mcp\.venv\Lib\site-packages\pip\_internal\index\package_finder.py:978:        ) -> TypeGuard[InstallationCandidate]:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\network\cache.py:90:                # Change permissions only if there is no risk of following a symlink.
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\constructors.py:232:    constraint: bool = False,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\constructors.py:246:        constraint=constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\constructors.py:396:    constraint: bool = False,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\constructors.py:419:        constraint=constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\constructors.py:475:            constraint=parsed_req.constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\constructors.py:495:            constraint=parsed_req.constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\constructors.py:539:        constraint=ireq.constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:53:    cmdoptions.constraints,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:109:        "constraint",
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:117:    constraint: bool
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:124:    __slots__ = ("filename", "lineno", "args", "opts", "constraint")
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:130:    constraint: bool
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:151:    constraint: bool = False,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:159:    :param constraint:  If true, parsing a constraint file rather than
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:165:    for parsed_line in parser.parse(filename, constraint):
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:191:        "-c" if line.constraint else "-r",
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:213:        constraint=line.constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:343:        self, filename: str, constraint: bool
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:347:            filename, constraint, [{os.path.abspath(filename): None}]
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:353:        constraint: bool,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:356:        for line in self._parse_file(filename, constraint):
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:358:                line.opts.requirements or line.opts.constraints
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:363:                    nested_constraint = False
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:365:                    req_path = line.opts.constraints[0]
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:366:                    nested_constraint = True
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:397:                    req_path, nested_constraint, [new_parsed_files, *parsed_files_stack]
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:403:        self, filename: str, constraint: bool
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_file.py:422:                constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:88:        constraint: bool = False,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:96:        self.constraint = constraint
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:112:        # requirement, either directly or via a constraints file.
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:159:        # e.g. dependencies, extras or constraints.
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:883:def check_invalid_constraint_type(req: InstallRequirement) -> str:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:887:        problem = "Unnamed requirements are not allowed as constraints"
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:889:        problem = "Editable requirements are not allowed as constraints"
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:891:        problem = "Constraints cannot have extras"
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:896:                "Constraints are only allowed to take the form of a package "
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_install.py:902:            replacement="replacing the constraint with a requirement",
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_set.py:55:            and not self.requirements[project_name].constraint
scripts\mcp\.venv\Lib\site-packages\pip\_internal\req\req_set.py:80:            if not install_req.constraint and not install_req.satisfied_by
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:42:    check_invalid_constraint_type,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:172:            if req.constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:173:                check_invalid_constraint_type(req)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:257:            and not existing_req.constraint
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:278:        if install_req.constraint or not existing_req.constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:281:        does_not_satisfy_constraint = install_req.link and not (
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:284:        if does_not_satisfy_constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:286:                f"Could not satisfy constraints for '{install_req.name}': "
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:290:        # If we're now installing a constraint, mark the existing
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:292:        existing_req.constraint = False
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:316:            return req.user_supplied or req.constraint
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:500:        if req_to_install.constraint or req_to_install.prepared:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:589:            if req.constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:26:class Constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:32:    def empty(cls) -> Constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:33:        return Constraint(SpecifierSet(), Hashes(), frozenset())
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:36:    def from_ireq(cls, ireq: InstallRequirement) -> Constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:38:        return Constraint(ireq.specifier, ireq.hashes(trust_internet=False), links)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:43:    def __and__(self, other: InstallRequirement) -> Constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:51:        return Constraint(specifier, hashes, links)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:54:        # Reject if there are any mismatched URL constraints on this package.
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:73:        constraint=template.constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:94:        constraint=template.constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:119:        constraint=template.constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:43:    check_invalid_constraint_type,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:51:from .base import Candidate, Constraint, Requirement
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:85:    constraints: dict[str, Constraint]
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:368:    def _iter_candidates_from_constraints(
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:371:        constraint: Constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:374:        """Produce explicit candidates from constraints.
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:379:        for link in constraint.links:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:395:        constraint: Constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:425:        # Add explicit candidates from constraints. We only do this if there are
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:432:                    self._iter_candidates_from_constraints(
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:434:                        constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:452:                constraint.specifier,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:453:                constraint.hashes,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:462:            and constraint.is_satisfied_by(c)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:473:            - the InstallRequirement has both a constraint (or link) and extras
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:474:                -> result is split in two requirement objects: one with the constraint
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:475:                (or link) and one with the extra. This allows centralized constraint
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:524:            if ireq.constraint:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:525:                # Ensure we only accept valid constraints
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:526:                problem = check_invalid_constraint_type(ireq)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:531:                assert ireq.name, "Constraint must be named"
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:533:                if name in collected.constraints:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:534:                    collected.constraints[name] &= ireq
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:536:                    collected.constraints[name] = Constraint.from_ireq(ireq)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:554:        # taking into account any non-transient constraints on the associated base. This
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:576:            - the specifier has both a constraint and extras -> result is split
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:577:                in two requirement objects: one with the constraint and one with the
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:578:                extra. This allows centralized constraint handling for the base,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:717:        constraints: dict[str, Constraint],
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:743:            if req.name not in constraints:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:785:        relevant_constraints = set()
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:787:            if req.name in constraints:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:788:                relevant_constraints.add(req.name)
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:795:        for key in relevant_constraints:
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:796:            spec = constraints[key].specifier
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:797:            msg += f"\n    The user requested (constraint) {key}{spec}"
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:15:from .base import Candidate, Constraint, Requirement
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:81:    :params constraints: A mapping of constraints specified by the user. Keys
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:92:        constraints: dict[str, Constraint],
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:98:        self._constraints = constraints
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:254:        constraint = _get_with_identifier(
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:255:            self._constraints,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:257:            default=Constraint.empty(),
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:262:            constraint=constraint,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\reporter.py:31:                "the dependency resolver with stricter constraints to reduce "
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\requirements.py:98:        # risking a change in meaning. (Hopefully! Not all edge cases have
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\resolver.py:82:            constraints=collected.constraints,
scripts\mcp\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\resolver.py:105:                collected.constraints,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:223:                            raise SyntaxError('invalid constraint: %s' % ver_remaining)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:244:                        raise SyntaxError('invalid constraint: %s' % s)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:248:                        raise SyntaxError('invalid constraint: %s' % s)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:265:    return Container(name=distname, extras=extras, constraints=versions, marker=mark_expr, url=uri, requirement=rs)
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\packaging\licenses\_spdx.py:688:    'asterisk-exception': {'id': 'Asterisk-exception', 'deprecated': False},
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\packaging\licenses\_spdx.py:689:    'asterisk-linking-protocols-exception': {'id': 'Asterisk-linking-protocols-exception', 'deprecated': False},
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\pkg_resources\__init__.py:3634:    at their own risk.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\requests\sessions.py:687:        # Guard against that specific failure case.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\resolvelib\providers.py:98:        """Find all possible candidates that satisfy the given constraints.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers\abstract.py:36:        """Take a collection of constraints, spit out the resolution result.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers\abstract.py:42:        :param requirements: A collection of constraints.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers\resolution.py:568:        """Take a collection of constraints, spit out the resolution result.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\traceback.py:573:                if frame_summary.f_locals.get("_rich_traceback_guard", False):
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\traceback.py:884:        _rich_traceback_guard = True
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:769:    "eight-spoked_asterisk": "✳",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:962:    "guard": "💂",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:963:    "guard_dark_skin_tone": "💂🏿",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:964:    "guard_light_skin_tone": "💂🏻",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:965:    "guard_medium-dark_skin_tone": "💂🏾",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:966:    "guard_medium-light_skin_tone": "💂🏼",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:967:    "guard_medium_skin_tone": "💂🏽",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1301:    "man_guard": "💂\u200d♂️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1302:    "man_guard_dark_skin_tone": "💂🏿\u200d♂️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1303:    "man_guard_light_skin_tone": "💂🏻\u200d♂️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1304:    "man_guard_medium-dark_skin_tone": "💂🏾\u200d♂️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1305:    "man_guard_medium-light_skin_tone": "💂🏼\u200d♂️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1306:    "man_guard_medium_skin_tone": "💂🏽\u200d♂️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2537:    "woman_guard": "💂\u200d♀️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2538:    "woman_guard_dark_skin_tone": "💂🏿\u200d♀️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2539:    "woman_guard_light_skin_tone": "💂🏻\u200d♀️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2540:    "woman_guard_medium-dark_skin_tone": "💂🏾\u200d♀️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2541:    "woman_guard_medium-light_skin_tone": "💂🏼\u200d♀️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2542:    "woman_guard_medium_skin_tone": "💂🏽\u200d♀️",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2769:    "keycap_asterisk": "*⃣",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2958:    "eight_spoked_asterisk": "✳",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:3276:    "guardsman": "💂",
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_ratio.py:15:    """Divide total space to satisfy size, ratio, and minimum_size, constraints.
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\rich\_ratio.py:18:    impossible to satisfy all the constraints. For instance, if there are two edges
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\truststore\_windows.py:207:CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG = 0x00000008
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\truststore\_windows.py:224:    | CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\urllib3\util\retry.py:118:        Set to ``None`` to remove this constraint and fall back on other
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\urllib3\util\ssl_.py:317:        # there is a risk associated with it being on wire,
scripts\mcp\.venv\Lib\site-packages\pip\_vendor\urllib3\util\ssl_.py:343:    # matter due to safe-guards SSLContext has to prevent an SSLContext with
scripts\mcp\.venv\Lib\site-packages\pkg_resources\__init__.py:3270:    at their own risk.
scripts\mcp\.venv\Lib\site-packages\pydantic\annotated_handlers.py:88:        Otherwise, you may end up doing something like applying a `min_length` constraint
scripts\mcp\.venv\Lib\site-packages\pydantic\dataclasses.py:11:from typing_extensions import TypeGuard, dataclass_transform
scripts\mcp\.venv\Lib\site-packages\pydantic\dataclasses.py:371:def is_pydantic_dataclass(class_: type[Any], /) -> TypeGuard[type[PydanticDataclass]]:
scripts\mcp\.venv\Lib\site-packages\pydantic\fields.py:133:        metadata: List of metadata constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\fields.py:189:    # used to convert kwargs to metadata/constraints,
scripts\mcp\.venv\Lib\site-packages\pydantic\json_schema.py:1034:            # The len check indicates that constraints are probably present:
scripts\mcp\.venv\Lib\site-packages\pydantic\json_schema.py:1036:            # If this is a definition reference schema, it most likely has constraints:
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:49:    'UrlConstraints',
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:71:class UrlConstraints:
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:72:    """Url constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:103:    def defined_constraints(self) -> dict[str, Any]:
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:104:        """Fetch a key / value mapping of constraints to values that are not None. Used for core schema updates."""
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:110:        # for function-wrap schemas, url constraints is applied to the inner schema
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:116:                f"'UrlConstraints' cannot annotate '{annotated_type}'.", code='invalid-annotated-type'
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:118:        for constraint_key, constraint_value in self.defined_constraints.items():
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:119:            schema_to_mutate[constraint_key] = constraint_value
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:124:    _constraints: ClassVar[UrlConstraints] = UrlConstraints()
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:325:            schema=core_schema.url_schema(**cls._constraints.defined_constraints),
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:344:    _constraints: ClassVar[UrlConstraints] = UrlConstraints()
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:511:            schema=core_schema.multi_host_url_schema(**cls._constraints.defined_constraints),
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:566:    _constraints = UrlConstraints(allowed_schemes=['http', 'https'])
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:647:    _constraints = UrlConstraints(max_length=2083, allowed_schemes=['http', 'https'])
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:657:    _constraints = UrlConstraints(allowed_schemes=['ws', 'wss'])
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:668:    _constraints = UrlConstraints(max_length=2083, allowed_schemes=['ws', 'wss'])
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:677:    _constraints = UrlConstraints(allowed_schemes=['file'])
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:687:    _constraints = UrlConstraints(allowed_schemes=['ftp'])
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:750:    _constraints = UrlConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:779:    _constraints = UrlConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:802:    _constraints = UrlConstraints(allowed_schemes=['amqp', 'amqps'])
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:813:    _constraints = UrlConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:836:    _constraints = UrlConstraints(allowed_schemes=['mongodb', 'mongodb+srv'], default_port=27017)
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:847:    _constraints = UrlConstraints(allowed_schemes=['kafka'], default_host='localhost', default_port=9092)
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:859:    _constraints = UrlConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:872:    _constraints = UrlConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:896:    _constraints = UrlConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:910:    _constraints = UrlConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\networks.py:932:    _constraints = UrlConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:104:    'StringConstraints',
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:188:    A wrapper around `int` that allows for additional constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:449:    A wrapper around `float` that allows for additional constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:669:    """A wrapper around `bytes` that allows for additional constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:694:class StringConstraints(annotated_types.GroupedMetadata):
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:696:        [`StringConstraints`](../concepts/fields.md#string-constraints)
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:698:    A field metadata class to apply constraints to `str` types.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:714:        from pydantic.types import StringConstraints
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:716:        ConstrainedStr = Annotated[str, StringConstraints(min_length=1, max_length=10)]
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:763:        [`StringConstraints`][pydantic.types.StringConstraints] instead.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:781:            from pydantic import BaseModel, StringConstraints
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:786:                    StringConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:792:    A wrapper around `str` that allows for additional constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:819:        StringConstraints(
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:842:    """A wrapper around `typing.Set` that allows for additional constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:858:    """A wrapper around `typing.FrozenSet` that allows for additional constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:1631:    You can enforce constraints on the underlying type through annotations:
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:2250:    """A wrapper for date that adds constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:2260:        A date type with the specified constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:2288:                return core_schema.datetime_schema(tz_constraint='aware')
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:2292:                schema['tz_constraint'] = 'aware'
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:2307:                return core_schema.datetime_schema(tz_constraint='naive')
scripts\mcp\.venv\Lib\site-packages\pydantic\types.py:2311:                schema['tz_constraint'] = 'naive'
scripts\mcp\.venv\Lib\site-packages\pydantic\version.py:68:    # Keep this in sync with the version constraint in the `pyproject.toml` dependencies:
scripts\mcp\.venv\Lib\site-packages\pydantic\__init__.py:127:    'UrlConstraints',
scripts\mcp\.venv\Lib\site-packages\pydantic\__init__.py:159:    'StringConstraints',
scripts\mcp\.venv\Lib\site-packages\pydantic\__init__.py:294:    'UrlConstraints': (__spec__.parent, '.networks'),
scripts\mcp\.venv\Lib\site-packages\pydantic\__init__.py:322:    'StringConstraints': (__spec__.parent, '.types'),
scripts\mcp\.venv\Lib\site-packages\pydantic\deprecated\copy_internals.py:40:    # The extra "is not None" guards are not logically necessary but optimizes performance for the simple case.
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:88:_ConstraintAnnotation = Union[
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:109:class _Constraint:
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:110:    constraint: _ConstraintAnnotation
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:113:_Step = Union[_ValidateAs, _ValidateAsDefer, _Transform, _PipelineOr, _PipelineAnd, _Constraint]
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:172:    # constraints
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:174:    def constrain(self: _Pipeline[_InT, _NewOutGe], constraint: annotated_types.Ge) -> _Pipeline[_InT, _NewOutGe]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:177:    def constrain(self: _Pipeline[_InT, _NewOutGt], constraint: annotated_types.Gt) -> _Pipeline[_InT, _NewOutGt]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:180:    def constrain(self: _Pipeline[_InT, _NewOutLe], constraint: annotated_types.Le) -> _Pipeline[_InT, _NewOutLe]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:183:    def constrain(self: _Pipeline[_InT, _NewOutLt], constraint: annotated_types.Lt) -> _Pipeline[_InT, _NewOutLt]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:187:        self: _Pipeline[_InT, _NewOutLen], constraint: annotated_types.Len
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:192:        self: _Pipeline[_InT, _NewOutT], constraint: annotated_types.MultipleOf
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:197:        self: _Pipeline[_InT, _NewOutDatetime], constraint: annotated_types.Timezone
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:201:    def constrain(self: _Pipeline[_InT, _OutT], constraint: annotated_types.Predicate) -> _Pipeline[_InT, _OutT]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:205:        self: _Pipeline[_InT, _NewOutInterval], constraint: annotated_types.Interval
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:209:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _Eq) -> _Pipeline[_InT, _OutT]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:212:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _NotEq) -> _Pipeline[_InT, _OutT]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:215:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _In) -> _Pipeline[_InT, _OutT]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:218:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _NotIn) -> _Pipeline[_InT, _OutT]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:221:    def constrain(self: _Pipeline[_InT, _NewOutT], constraint: Pattern[str]) -> _Pipeline[_InT, _NewOutT]: ...
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:223:    def constrain(self, constraint: _ConstraintAnnotation) -> Any:
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:231:        return _Pipeline[_InT, _OutT](self._steps + (_Constraint(constraint),))
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:386:    elif isinstance(step, _Constraint):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:387:        s = _apply_constraint(s, step.constraint)
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:444:def _apply_constraint(  # noqa: C901
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:445:    s: cs.CoreSchema | None, constraint: _ConstraintAnnotation
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:447:    """Apply a single constraint to a schema."""
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:448:    if isinstance(constraint, annotated_types.Gt):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:449:        gt = constraint.gt
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:464:    elif isinstance(constraint, annotated_types.Ge):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:465:        ge = constraint.ge
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:479:    elif isinstance(constraint, annotated_types.Lt):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:480:        lt = constraint.lt
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:494:    elif isinstance(constraint, annotated_types.Le):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:495:        le = constraint.le
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:509:    elif isinstance(constraint, annotated_types.Len):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:510:        min_len = constraint.min_length
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:511:        max_len = constraint.max_length
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:534:    elif isinstance(constraint, annotated_types.MultipleOf):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:535:        multiple_of = constraint.multiple_of
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:549:    elif isinstance(constraint, annotated_types.Timezone):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:550:        tz = constraint.tz
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:555:                s['tz_constraint'] = 'aware'
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:566:                s['tz_constraint'] = 'naive'
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:576:    elif isinstance(constraint, annotated_types.Interval):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:577:        if constraint.ge:
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:578:            s = _apply_constraint(s, annotated_types.Ge(constraint.ge))
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:579:        if constraint.gt:
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:580:            s = _apply_constraint(s, annotated_types.Gt(constraint.gt))
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:581:        if constraint.le:
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:582:            s = _apply_constraint(s, annotated_types.Le(constraint.le))
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:583:        if constraint.lt:
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:584:            s = _apply_constraint(s, annotated_types.Lt(constraint.lt))
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:586:    elif isinstance(constraint, annotated_types.Predicate):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:587:        func = constraint.func
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:606:    elif isinstance(constraint, _NotEq):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:607:        value = constraint.value
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:613:    elif isinstance(constraint, _Eq):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:614:        value = constraint.value
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:620:    elif isinstance(constraint, _In):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:621:        values = constraint.values
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:627:    elif isinstance(constraint, _NotIn):
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:628:        values = constraint.values
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:635:        assert isinstance(constraint, Pattern)
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:638:            s['pattern'] = constraint.pattern
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:643:                return constraint.match(v) is not None
scripts\mcp\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:645:            s = _check_func(check_pattern, f'~ {constraint.pattern}', s)
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:132:    # field constraints with the default value, it's also used in update_from_config below
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:133:    __field_constraints__ = {
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:183:            **self.__field_constraints__,
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:189:    def get_constraints(self) -> Set[str]:
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:191:        Gets the constraints set on the field by comparing the constraint value with its default value
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:193:        :return: the constraints set on field_info
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:195:        return {attr for attr, default in self.__field_constraints__.items() if getattr(self, attr) != default}
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:209:                if current_value is self.__field_constraints__.get(attr_name, None):
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:592:            elif self.type_.__constraints__:
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\fields.py:593:                self.type_ = Union[self.type_.__constraints__]
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\main.py:839:        # The extra "is not None" guards are not logically necessary but optimizes performance for the simple case.
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:998:_map_types_constraint: Dict[Any, Callable[..., type]] = {int: conint, float: confloat, Decimal: condecimal}
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1012:    constraints = field_info.get_constraints()
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1013:    used_constraints: Set[str] = set()
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1014:    if constraints:
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1015:        annotation, used_constraints = get_annotation_with_constraints(annotation, field_info)
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1017:        used_constraints.add('allow_mutation')
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1019:    unused_constraints = constraints - used_constraints
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1020:    if unused_constraints:
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1022:            f'On field "{field_name}" the following field constraints are set but not enforced: '
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1023:            f'{", ".join(unused_constraints)}. '
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1024:            f'\nFor more details see https://docs.pydantic.dev/usage/schema/#unenforced-field-constraints'
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1030:def get_annotation_with_constraints(annotation: Any, field_info: FieldInfo) -> Tuple[Type[Any], Set[str]]:  # noqa: C901
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1032:    Get an annotation with used constraints implemented for numbers and strings based on the field_info.
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1036:    :return: the same ``annotation`` if unmodified or a new annotation along with the used constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1038:    used_constraints: Set[str] = set()
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1064:                used_constraints.update({'min_items', 'max_items', 'unique_items'})
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1073:                used_constraints.update({'min_items', 'max_items'})
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1077:                used_constraints.update({'min_items', 'max_items'})
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1088:        constraint_func: Optional[Callable[..., type]] = None
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1093:                def constraint_func(**kw: Any) -> Type[Any]:  # noqa: F811
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1100:                    def constraint_func(**kw: Any) -> Type[Any]:
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1104:                    constraint_func = constr
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1109:                    def constraint_func(**kw: Any) -> Type[Any]:
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1113:                    constraint_func = conbytes
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1133:                constraint_func = _map_types_constraint[numeric_type]
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1136:            used_constraints.update(set(attrs))
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1143:                constraint_func = cast(Callable[..., type], constraint_func)
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1144:                return constraint_func(**kwargs)
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\schema.py:1147:    return go(annotation), used_constraints
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\types.py:288:        # Modify constraints to account for differences between IEEE floats and JSON
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\typing.py:66:        # Python 3.13/3.12.4+ made `recursive_guard` a kwarg, so name it explicitly to avoid:
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\typing.py:67:        # TypeError: ForwardRef._evaluate() missing 1 required keyword-only argument: 'recursive_guard'
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\typing.py:68:        return cast(Any, type_)._evaluate(globalns, localns, recursive_guard=set())
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\typing.py:75:        return cast(Any, type_)._evaluate(globalns, localns, type_params=(), recursive_guard=set())
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\utils.py:691:        # do we really dare to catch ALL errors? Seems a bit risky
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\validators.py:135:    # NOTICE: this does not fully protect user from the DOS risk since the standard library JSON implementation
scripts\mcp\.venv\Lib\site-packages\pydantic\v1\_hypothesis_plugin.py:22:to generate instances of the builtin `int` type which match the constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:10:from typing_extensions import TypeGuard, get_args, get_origin
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:45:) -> TypeGuard[CoreSchema]:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:51:) -> TypeGuard[CoreSchemaField]:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:57:) -> TypeGuard[FunctionSchemaWithInnerSchema]:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:63:) -> TypeGuard[core_schema.ListSchema | core_schema.SetSchema | core_schema.FrozenSetSchema]:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_dataclasses.py:17:from typing_extensions import TypeGuard
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_dataclasses.py:204:def is_builtin_dataclass(_cls: type[Any]) -> TypeGuard[type[StandardDataclass]]:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1791:            elif type_param.__constraints__:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1792:                return core_schema.union_schema([self.generate_schema(type[c]) for c in type_param.__constraints__])
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2180:        if constraints := typevar.__constraints__:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2181:            return self._union_schema(typing.Union[constraints])
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:20:LENGTH_CONSTRAINTS = {'min_length', 'max_length'}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:22:NUMERIC_CONSTRAINTS = {'multiple_of', *INEQUALITY}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:25:STR_CONSTRAINTS = {
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:26:    *LENGTH_CONSTRAINTS,
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:34:BYTES_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:36:LIST_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:37:TUPLE_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:38:SET_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:39:DICT_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:40:GENERATOR_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:41:SEQUENCE_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *FAIL_FAST}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:43:FLOAT_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *ALLOW_INF_NAN, *STRICT}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:44:DECIMAL_CONSTRAINTS = {'max_digits', 'decimal_places', *FLOAT_CONSTRAINTS}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:45:INT_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *ALLOW_INF_NAN, *STRICT}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:46:BOOL_CONSTRAINTS = STRICT
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:47:UUID_CONSTRAINTS = STRICT
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:49:DATE_TIME_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:50:TIMEDELTA_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:51:TIME_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:52:LAX_OR_STRICT_CONSTRAINTS = STRICT
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:53:ENUM_CONSTRAINTS = STRICT
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:54:COMPLEX_CONSTRAINTS = STRICT
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:56:UNION_CONSTRAINTS = {'union_mode'}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:57:URL_CONSTRAINTS = {
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:70:CONSTRAINTS_TO_ALLOWED_SCHEMAS: dict[str, set[str]] = defaultdict(set)
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:72:constraint_schema_pairings: list[tuple[set[str], tuple[str, ...]]] = [
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:73:    (STR_CONSTRAINTS, TEXT_SCHEMA_TYPES),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:74:    (BYTES_CONSTRAINTS, ('bytes',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:75:    (LIST_CONSTRAINTS, ('list',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:76:    (TUPLE_CONSTRAINTS, ('tuple',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:77:    (SET_CONSTRAINTS, ('set', 'frozenset')),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:78:    (DICT_CONSTRAINTS, ('dict',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:79:    (GENERATOR_CONSTRAINTS, ('generator',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:80:    (FLOAT_CONSTRAINTS, ('float',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:81:    (INT_CONSTRAINTS, ('int',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:82:    (DATE_TIME_CONSTRAINTS, ('date', 'time', 'datetime', 'timedelta')),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:85:    (UNION_CONSTRAINTS, ('union',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:86:    (URL_CONSTRAINTS, ('url', 'multi-host-url')),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:87:    (BOOL_CONSTRAINTS, ('bool',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:88:    (UUID_CONSTRAINTS, ('uuid',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:89:    (LAX_OR_STRICT_CONSTRAINTS, ('lax-or-strict',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:90:    (ENUM_CONSTRAINTS, ('enum',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:91:    (DECIMAL_CONSTRAINTS, ('decimal',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:92:    (COMPLEX_CONSTRAINTS, ('complex',)),
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:95:for constraints, schemas in constraint_schema_pairings:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:96:    for c in constraints:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:97:        CONSTRAINTS_TO_ALLOWED_SCHEMAS[c].update(schemas)
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:147:def _get_at_to_constraint_map() -> dict[type, str]:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:148:    """Return a mapping of annotated types to constraints.
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:195:    chain_schema_constraints: set[str] = {
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:204:    for constraint, value in schema_update.items():
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:205:        if constraint not in CONSTRAINTS_TO_ALLOWED_SCHEMAS:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:206:            raise ValueError(f'Unknown constraint {constraint}')
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:207:        allowed_schemas = CONSTRAINTS_TO_ALLOWED_SCHEMAS[constraint]
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:209:        # if it becomes necessary to handle more than one constraint
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:211:        # this is a bit challenging because we sometimes want to apply constraints to the inner schema,
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:212:        # whereas other times we want to wrap the existing schema with a new one that enforces a new constraint.
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:213:        if schema_type in {'function-before', 'function-wrap', 'function-after'} and constraint == 'strict':
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:217:        # if we're allowed to apply constraint directly to the schema, like le to int, do that
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:219:            if constraint == 'union_mode' and schema_type == 'union':
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:222:                schema[constraint] = value
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:225:        #  else, apply a function after validator to the schema to enforce the corresponding constraint
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:226:        if constraint in chain_schema_constraints:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:228:            def _apply_constraint_with_incompatibility_info(
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:234:                    # if the error is about the type, it's likely that the constraint is incompatible the type of the field
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:237:                    # that we'd rather express as a constraint incompatibility error (TypeError)
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:241:                            f"Unable to apply constraint '{constraint}' to supplied value {value} for schema of type '{schema_type}'"  # noqa: B023
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:248:                    _apply_constraint_with_incompatibility_info, cs.str_schema(**{constraint: value})
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:251:        elif constraint in NUMERIC_VALIDATOR_LOOKUP:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:252:            if constraint in LENGTH_CONSTRAINTS:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:260:                    js_constraint_key = 'minItems' if constraint == 'min_length' else 'maxItems'
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:262:                    js_constraint_key = 'minLength' if constraint == 'min_length' else 'maxLength'
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:264:                js_constraint_key = constraint
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:267:                partial(NUMERIC_VALIDATOR_LOOKUP[constraint], **{constraint: value}), schema
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:273:                    **{js_constraint_key: as_jsonable_value(value)},
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:276:                metadata['pydantic_js_updates'] = {js_constraint_key: as_jsonable_value(value)}
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:278:        elif constraint == 'allow_inf_nan' and value is False:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:284:            # It's rare that we'd get here, but it's possible if we add a new constraint and forget to handle it
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:285:            # Most constraint errors are caught at runtime during attempted application
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:286:            raise RuntimeError(f"Unable to apply constraint '{constraint}' to schema of type '{schema_type}'")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:289:        if (annotation_type := type(annotation)) in (at_to_constraint_map := _get_at_to_constraint_map()):
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:290:            constraint = at_to_constraint_map[annotation_type]
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:291:            validator = NUMERIC_VALIDATOR_LOOKUP.get(constraint)
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:293:                raise ValueError(f'Unknown constraint {constraint}')
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:295:                partial(validator, {constraint: getattr(annotation, constraint)}), schema
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:361:        elif (annotation_type := type(annotation)) in (at_to_constraint_map := _get_at_to_constraint_map()):
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:362:            constraint = at_to_constraint_map[annotation_type]
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:363:            res[constraint] = getattr(annotation, constraint)
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:392:            f'The following constraints cannot be applied to {source_type!r}: {", ".join([f"{k!r}" for k in unknown])}'
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_utils.py:23:from typing_extensions import TypeAlias, TypeGuard, deprecated
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_utils.py:111:def is_model_class(cls: Any) -> TypeGuard[type[BaseModel]]:
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_utils.py:347:        # do we really dare to catch ALL errors? Seems a bit risky
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:279:        raise TypeError(f"Unable to apply constraint 'gt' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:288:        raise TypeError(f"Unable to apply constraint 'ge' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:297:        raise TypeError(f"Unable to apply constraint 'lt' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:306:        raise TypeError(f"Unable to apply constraint 'le' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:315:        raise TypeError(f"Unable to apply constraint 'multiple_of' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:326:        raise TypeError(f"Unable to apply constraint 'min_length' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:338:        raise TypeError(f"Unable to apply constraint 'max_length' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:395:        raise TypeError(f"Unable to apply constraint 'max_digits' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic\_internal\_validators.py:410:        raise TypeError(f"Unable to apply constraint 'decimal_places' to supplied value {x}")
scripts\mcp\.venv\Lib\site-packages\pydantic_core\core_schema.py:1022:    tz_constraint: Union[Literal['aware', 'naive'], int]
scripts\mcp\.venv\Lib\site-packages\pydantic_core\core_schema.py:1036:    tz_constraint: Literal['aware', 'naive'] | int | None = None,
scripts\mcp\.venv\Lib\site-packages\pydantic_core\core_schema.py:1060:        tz_constraint: The value must be timezone aware or naive, or an int to indicate required tz offset
scripts\mcp\.venv\Lib\site-packages\pydantic_core\core_schema.py:1073:        tz_constraint=tz_constraint,
scripts\mcp\.venv\Lib\site-packages\pydantic_core\core_schema.py:1089:    tz_constraint: Union[Literal['aware', 'naive'], int]
scripts\mcp\.venv\Lib\site-packages\pydantic_core\core_schema.py:1107:    tz_constraint: Literal['aware', 'naive'] | int | None = None,
scripts\mcp\.venv\Lib\site-packages\pydantic_core\core_schema.py:1134:        tz_constraint: The value must be timezone aware or naive, or an int to indicate required tz offset
scripts\mcp\.venv\Lib\site-packages\pydantic_core\core_schema.py:1150:        tz_constraint=tz_constraint,
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\Demos\app\basictimerapp.py:233:    win32api.MessageBeep(win32con.MB_ICONASTERISK)
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\docking\DockingBar.py:5:# WARNING: Use at your own risk, as this interface is highly likely to change.
scripts\mcp\.venv\Lib\site-packages\pythonwin\pywin\scintilla\scintillacon.py:1786:SCE_NNCRONTAB_ASTERISK = 6
scripts\mcp\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:202:    # value meets certain type and value constraints.  If not, we try to
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:83:    'TypeGuard',
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1858:if hasattr(typing, 'TypeGuard'):
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1859:    TypeGuard = typing.TypeGuard
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1862:    class _TypeGuardForm(typing._SpecialForm, _root=True):
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1866:    @_TypeGuardForm
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1867:    def TypeGuard(self, parameters):
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1869:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1872:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1876:        conditional expression here is sometimes referred to as a "type guard".
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1879:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1882:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1887:        is the type inside ``TypeGuard``.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1892:                # "isinstance" type guard
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1905:        writing type-safe type guards is left to the user.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1907:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1908:        PEP 647 (User-Defined Type Guards).
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1914:    class _TypeGuardForm(typing._SpecialForm, _root=True):
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1924:    TypeGuard = _TypeGuardForm(
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1925:        'TypeGuard',
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1927:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1930:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1934:        conditional expression here is sometimes referred to as a "type guard".
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1937:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1940:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1945:        is the type inside ``TypeGuard``.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1950:                # "isinstance" type guard
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1963:        writing type-safe type guards is left to the user.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1965:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1966:        PEP 647 (User-Defined Type Guards).
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1970:    class _TypeGuard(typing._FinalTypingBase, _root=True):
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1972:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1975:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1979:        conditional expression here is sometimes referred to as a "type guard".
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1982:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1985:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1990:        is the type inside ``TypeGuard``.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1995:                # "isinstance" type guard
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2008:        writing type-safe type guards is left to the user.
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2010:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2011:        PEP 647 (User-Defined Type Guards).
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2043:            if not isinstance(other, _TypeGuard):
scripts\mcp\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2049:    TypeGuard = _TypeGuard(_root=True)
scripts\mcp\.venv\Lib\site-packages\starlette\testclient.py:34:    from typing import TypeGuard
scripts\mcp\.venv\Lib\site-packages\starlette\testclient.py:36:    from typing_extensions import TypeGuard
scripts\mcp\.venv\Lib\site-packages\starlette\testclient.py:61:def _is_asgi3(app: ASGI2App | ASGI3App) -> TypeGuard[ASGI3App]:
scripts\mcp\.venv\Lib\site-packages\typing_inspection\typing_objects.py:48:    'is_typeguard',
scripts\mcp\.venv\Lib\site-packages\typing_inspection\typing_objects.py:457:is_typeguard = _compile_identity_check_function('TypeGuard', 'is_typeguard')
scripts\mcp\.venv\Lib\site-packages\typing_inspection\typing_objects.py:458:is_typeguard.__doc__ = """
scripts\mcp\.venv\Lib\site-packages\typing_inspection\typing_objects.py:459:Return whether the argument is the [`TypeGuard`][typing.TypeGuard] [special form][].
scripts\mcp\.venv\Lib\site-packages\typing_inspection\typing_objects.py:462:>>> is_typeguard(TypeGuard)
scripts\mcp\.venv\Lib\site-packages\uvicorn\protocols\websockets\wsproto_impl.py:204:        # todo: we may want to guard the size of self.bytes and self.text
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:442:MB_ICONASTERISK = 64
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:445:MB_ICONINFORMATION = MB_ICONASTERISK
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:703:IDI_ASTERISK = 32516
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:707:IDI_INFORMATION = IDI_ASTERISK
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:2108:PAGE_GUARD = 256
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:3565:STATUS_GUARD_PAGE_VIOLATION = -2147483647
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32con.py:3620:EXCEPTION_GUARD_PAGE = STATUS_GUARD_PAGE_VIOLATION
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:648:X509_BASIC_CONSTRAINTS = 13
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:650:X509_BASIC_CONSTRAINTS2 = 15
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:698:X509_NAME_CONSTRAINTS = 55
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:700:X509_POLICY_CONSTRAINTS = 57
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:734:szOID_BASIC_CONSTRAINTS = "2.5.29.10"
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:737:szOID_BASIC_CONSTRAINTS2 = "2.5.29.19"
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:752:szOID_NAME_CONSTRAINTS = "2.5.29.30"
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:755:szOID_POLICY_CONSTRAINTS = "2.5.29.36"
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:788:szOID_APPLICATION_POLICY_CONSTRAINTS = "1.3.6.1.4.1.311.21.12"
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1228:CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID = 84
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1328:CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG = 0x20
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1804:CERT_TRUST_INVALID_POLICY_CONSTRAINTS = 0x00000200
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1805:CERT_TRUST_INVALID_BASIC_CONSTRAINTS = 0x00000400
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1806:CERT_TRUST_INVALID_NAME_CONSTRAINTS = 0x00000800
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1807:CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT = 0x00001000
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1808:CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT = 0x00002000
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1809:CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT = 0x00004000
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1810:CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT = 0x00008000
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1823:CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS = 0x00000400
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1847:CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG = 0x00000008
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1872:BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG = -2147483648
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32cryptcon.py:1873:BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG = 0x40000000
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32pdhquery.py:122:Use at your own risk, no warranties, no guarantees, no assurances,
scripts\mcp\.venv\Lib\site-packages\win32\lib\win32pdhquery.py:123:if you use it, you accept the risk of using it, etceteras.
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:825:ERROR_PAGE_FAULT_GUARD_PAGE = 750
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:2241:ERROR_DS_CONSTRAINT_VIOLATION = 8239
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:2285:ERROR_DS_SINGLE_VALUE_CONSTRAINT = 8321
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:2286:ERROR_DS_RANGE_CONSTRAINT = 8322
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:4368:OSS_CONSTRAINT_VIOLATED = -2146881519
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:4386:OSS_CONSTRAINT_DLL_NOT_LINKED = -2146881501
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:4403:CRYPT_E_ASN1_CONSTRAINT = -2146881275
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:4488:TRUST_E_BASIC_CONSTRAINTS = -2146869223
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:5069:ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT = -1071242408
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7150:SQLITE_E_CONSTRAINT = -2018574317
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7203:SQLITE_E_CONSTRAINT_CHECK = -2018574061
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7204:SQLITE_E_CONSTRAINT_COMMITHOOK = -2018573805
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7205:SQLITE_E_CONSTRAINT_FOREIGNKEY = -2018573549
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7206:SQLITE_E_CONSTRAINT_FUNCTION = -2018573293
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7207:SQLITE_E_CONSTRAINT_NOTNULL = -2018573037
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7208:SQLITE_E_CONSTRAINT_PRIMARYKEY = -2018572781
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7209:SQLITE_E_CONSTRAINT_TRIGGER = -2018572525
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7210:SQLITE_E_CONSTRAINT_UNIQUE = -2018572269
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7211:SQLITE_E_CONSTRAINT_VTAB = -2018572013
scripts\mcp\.venv\Lib\site-packages\win32\lib\winerror.py:7212:SQLITE_E_CONSTRAINT_ROWID = -2018571757
scripts\mcp\.venv\Lib\site-packages\win32\lib\winnt.py:276:PAGE_GUARD = 256
scripts\mcp\.venv\Lib\site-packages\win32comext\axscript\client\pyscript_rexec.py:53:    print("You have been warned, and are doing this at your own (significant) risk")
scripts\mcp\.venv\Lib\site-packages\win32comext\internet\inetcon.py:168:URLACTION_SHELL_EXECUTE_HIGHRISK = 0x00001806
scripts\mcp\.venv\Lib\site-packages\win32comext\internet\inetcon.py:169:URLACTION_SHELL_EXECUTE_MODRISK = 0x00001807
scripts\mcp\.venv\Lib\site-packages\win32comext\internet\inetcon.py:170:URLACTION_SHELL_EXECUTE_LOWRISK = 0x00001808
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:100:    'TypeGuard',
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:1637:        def __new__(cls, name, *constraints, bound=None,
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:1642:                typevar = typing.TypeVar(name, *constraints, bound=bound,
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:1646:                typevar = typing.TypeVar(name, *constraints, bound=bound,
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2119:if hasattr(typing, 'TypeGuard'):
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2120:    TypeGuard = typing.TypeGuard
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2124:    def TypeGuard(self, parameters):
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2126:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2129:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2133:        conditional expression here is sometimes referred to as a "type guard".
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2136:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2139:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2144:        is the type inside ``TypeGuard``.
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2149:                # "isinstance" type guard
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2162:        writing type-safe type guards is left to the user.
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2164:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2165:        PEP 647 (User-Defined Type Guards).
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2186:        conditional expression here is sometimes referred to as a "type guard".
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:2189:        as a type guard.  Such a function should use ``TypeIs[...]`` as its
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:4077:        _recursive_guard=frozenset(),
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:4103:        if forward_ref.__forward_arg__ in _recursive_guard:
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:4133:                _recursive_guard=_recursive_guard, format=format
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:4146:                recursive_guard=_recursive_guard | {forward_ref.__forward_arg__},
scripts\openai_batch\.venv\Lib\site-packages\typing_extensions.py:4154:                recursive_guard=_recursive_guard | {forward_ref.__forward_arg__},
scripts\openai_batch\.venv\Lib\site-packages\annotated_types\__init__.py:157:    All of the constraints and metadata should be fully expressable
scripts\openai_batch\.venv\Lib\site-packages\annotated_types\__init__.py:209:    are interpreted the same way as the single-bound constraints.
scripts\openai_batch\.venv\Lib\site-packages\annotated_types\__init__.py:329:    We provide a few predefined predicates for common string constraints:
scripts\openai_batch\.venv\Lib\site-packages\annotated_types\__init__.py:340:    skip invalid constraints, or statically raise an error; or it might try calling it
scripts\openai_batch\.venv\Lib\site-packages\anyio\__init__.py:62:from ._core._synchronization import ResourceGuard as ResourceGuard
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:88:    ResourceGuard,
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1238:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1239:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1247:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1282:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1326:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1327:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1367:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1373:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1393:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1417:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1463:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1488:        self._accept_guard = ResourceGuard("accepting connections from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1498:        with self._accept_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1545:        self._accept_guard = ResourceGuard("accepting connections from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1550:        with self._accept_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1584:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1585:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1598:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1615:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1632:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1633:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1646:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1665:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1680:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1697:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1716:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1733:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:76:    ResourceGuard,
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:419:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:420:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:423:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:435:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:458:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:498:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:519:        self._accept_guard = ResourceGuard("accepting connections from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:522:        with self._accept_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:535:        self._accept_guard = ResourceGuard("accepting connections from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:538:        with self._accept_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:550:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:551:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:554:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:562:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:572:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:573:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:576:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:583:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:593:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:594:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:597:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:605:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:617:        self._receive_guard = ResourceGuard("reading from")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:618:        self._send_guard = ResourceGuard("writing to")
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:621:        with self._receive_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_backends\_trio.py:628:        with self._send_guard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_core\_synchronization.py:700:class ResourceGuard:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_core\_synchronization.py:708:    :param action: the action to guard against (visible in the :exc:`BusyResourceError`
scripts\openai_batch\.venv\Lib\site-packages\anyio\_core\_synchronization.py:714:    __slots__ = "action", "_guarded"
scripts\openai_batch\.venv\Lib\site-packages\anyio\_core\_synchronization.py:718:        self._guarded = False
scripts\openai_batch\.venv\Lib\site-packages\anyio\_core\_synchronization.py:721:        if self._guarded:
scripts\openai_batch\.venv\Lib\site-packages\anyio\_core\_synchronization.py:724:        self._guarded = True
scripts\openai_batch\.venv\Lib\site-packages\anyio\_core\_synchronization.py:732:        self._guarded = False
scripts\openai_batch\.venv\Lib\site-packages\dotenv\main.py:163:    If the .env path given doesn't exist, fails instead of risking creating
scripts\openai_batch\.venv\Lib\site-packages\httpcore\_async\http2.py:89:            # It's in place simply for resilience as a guard against incorrect
scripts\openai_batch\.venv\Lib\site-packages\httpcore\_sync\http2.py:89:            # It's in place simply for resilience as a guard against incorrect
scripts\openai_batch\.venv\Lib\site-packages\openai\_files.py:7:from typing_extensions import TypeGuard
scripts\openai_batch\.venv\Lib\site-packages\openai\_files.py:23:def is_base64_file_input(obj: object) -> TypeGuard[Base64FileInput]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_files.py:27:def is_file_content(obj: object) -> TypeGuard[FileContent]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_models.py:17:    TypeGuard,
scripts\openai_batch\.venv\Lib\site-packages\openai\_models.py:431:def is_basemodel_type(type_: type) -> TypeGuard[type[BaseModel] | type[GenericModel]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_streaming.py:8:from typing_extensions import Self, Protocol, TypeGuard, override, get_origin, runtime_checkable
scripts\openai_batch\.venv\Lib\site-packages\openai\_streaming.py:382:def is_stream_class_type(typ: type) -> TypeGuard[type[Stream[object]] | type[AsyncStream[object]]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_streaming.py:383:    """TypeGuard for determining whether or not the given type is a subclass of `Stream` / `AsyncStream`"""
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\completions.py:39:        help="""What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.
scripts\openai_batch\.venv\Lib\site-packages\openai\cli\_api\chat\completions.py:58:        help="""What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_pydantic.py:5:from typing_extensions import TypeGuard
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_pydantic.py:132:def is_basemodel_type(typ: type) -> TypeGuard[type[pydantic.BaseModel]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_pydantic.py:143:def is_dict(obj: object) -> TypeGuard[dict[str, object]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_parsing\_completions.py:6:from typing_extensions import TypeVar, TypeGuard, assert_never
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_parsing\_completions.py:45:) -> TypeGuard[ChatCompletionFunctionToolParam]:
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_parsing\_completions.py:235:) -> TypeGuard[type[ResponseFormatT]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_parsing\_completions.py:245:def is_response_format_param(response_format: object) -> TypeGuard[ResponseFormatParam]:
scripts\openai_batch\.venv\Lib\site-packages\openai\lib\_parsing\_completions.py:282:    # type checkers don't narrow the negation of a `TypeGuard` as it isn't
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\beta\realtime\realtime.py:268:        Canceling this method is safe. There's no risk of losing data.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\beta\realtime\realtime.py:275:        Canceling this method is safe. There's no risk of losing data.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\beta\realtime\realtime.py:450:        Canceling this method is safe. There's no risk of losing data.
scripts\openai_batch\.venv\Lib\site-packages\openai\resources\beta\realtime\realtime.py:457:        Canceling this method is safe. There's no risk of losing data.
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:21:from typing_extensions import TypeGuard
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:134:def is_given(obj: NotGivenOr[_T]) -> TypeGuard[_T]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:148:def is_tuple(obj: object) -> TypeGuard[tuple[object, ...]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:152:def is_tuple_t(obj: _TupleT | object) -> TypeGuard[_TupleT]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:156:def is_sequence(obj: object) -> TypeGuard[Sequence[object]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:160:def is_sequence_t(obj: _SequenceT | object) -> TypeGuard[_SequenceT]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:164:def is_mapping(obj: object) -> TypeGuard[Mapping[str, object]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:168:def is_mapping_t(obj: _MappingT | object) -> TypeGuard[_MappingT]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:172:def is_dict(obj: object) -> TypeGuard[dict[object, object]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:176:def is_list(obj: object) -> TypeGuard[list[object]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:180:def is_iterable(obj: object) -> TypeGuard[Iterable[object]]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:234:    # This enforces the same constraints that a static type checker would
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:429:def is_azure_client(client: object) -> TypeGuard[AzureOpenAI]:
scripts\openai_batch\.venv\Lib\site-packages\openai\_utils\_utils.py:435:def is_async_azure_client(client: object) -> TypeGuard[AsyncAzureOpenAI]:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\exceptions.py:681:                "You can override this, at the risk of breaking your Python "
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\wheel_builder.py:50:    if req.constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\wheel_builder.py:51:        # never build requirements that are merely constraints
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:87:            "When restricting platform and interpreter constraints using "
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:405:def constraints() -> Option:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:408:        "--constraint",
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:409:        dest="constraints",
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:413:        help="Constrain versions using the given constraints file. "
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\cli\req_command.py:395:        for filename in options.constraints:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\cli\req_command.py:398:                constraint=True,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\commands\download.py:39:        self.cmd_opts.add_option(cmdoptions.constraints())
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\commands\install.py:74:        self.cmd_opts.add_option(cmdoptions.constraints())
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\commands\wheel.py:63:        self.cmd_opts.add_option(cmdoptions.constraints())
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\index\package_finder.py:40:    from pip._vendor.typing_extensions import TypeGuard
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\index\package_finder.py:946:        ) -> "TypeGuard[InstallationCandidate]":
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\constructors.py:235:    constraint: bool = False,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\constructors.py:249:        constraint=constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\constructors.py:410:    constraint: bool = False,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\constructors.py:433:        constraint=constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\constructors.py:489:            constraint=parsed_req.constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\constructors.py:509:            constraint=parsed_req.constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\constructors.py:553:        constraint=ireq.constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:58:    cmdoptions.constraints,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:98:        constraint: bool,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:106:        self.constraint = constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:117:        constraint: bool,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:122:        self.constraint = constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:142:    constraint: bool = False,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:150:    :param constraint:  If true, parsing a constraint file rather than
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:156:    for parsed_line in parser.parse(filename, constraint):
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:182:        "-c" if line.constraint else "-r",
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:204:        constraint=line.constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:334:        self, filename: str, constraint: bool
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:337:        yield from self._parse_and_recurse(filename, constraint)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:340:        self, filename: str, constraint: bool
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:342:        for line in self._parse_file(filename, constraint):
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:344:                line.opts.requirements or line.opts.constraints
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:349:                    nested_constraint = False
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:351:                    req_path = line.opts.constraints[0]
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:352:                    nested_constraint = True
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:366:                yield from self._parse_and_recurse(req_path, nested_constraint)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:371:        self, filename: str, constraint: bool
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_file.py:390:                constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:85:        constraint: bool = False,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:93:        self.constraint = constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:109:        # requirement, either directly or via a constraints file.
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:156:        # e.g. dependencies, extras or constraints.
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:869:def check_invalid_constraint_type(req: InstallRequirement) -> str:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:873:        problem = "Unnamed requirements are not allowed as constraints"
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:875:        problem = "Editable requirements are not allowed as constraints"
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:877:        problem = "Constraints cannot have extras"
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:882:                "Constraints are only allowed to take the form of a package "
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_install.py:888:            replacement="replacing the constraint with a requirement",
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_set.py:59:            and not self.requirements[project_name].constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_set.py:84:            if not install_req.constraint and not install_req.satisfied_by
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_set.py:98:                        "set or update constraints to select another version "
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\req\req_set.py:114:                            "set or update constraints to select another version "
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:42:    check_invalid_constraint_type,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:173:            if req.constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:174:                check_invalid_constraint_type(req)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:258:            and not existing_req.constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:280:        if install_req.constraint or not existing_req.constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:283:        does_not_satisfy_constraint = install_req.link and not (
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:286:        if does_not_satisfy_constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:288:                f"Could not satisfy constraints for '{install_req.name}': "
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:292:        # If we're now installing a constraint, mark the existing
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:294:        existing_req.constraint = False
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:318:            return req.user_supplied or req.constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:501:        if req_to_install.constraint or req_to_install.prepared:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:589:            if req.constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:22:class Constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:31:    def empty(cls) -> "Constraint":
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:32:        return Constraint(SpecifierSet(), Hashes(), frozenset())
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:35:    def from_ireq(cls, ireq: InstallRequirement) -> "Constraint":
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:37:        return Constraint(ireq.specifier, ireq.hashes(trust_internet=False), links)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:42:    def __and__(self, other: InstallRequirement) -> "Constraint":
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:50:        return Constraint(specifier, hashes, links)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:53:        # Reject if there are any mismatched URL constraints on this package.
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:67:        constraint=template.constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:88:        constraint=template.constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:113:        constraint=template.constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:45:    check_invalid_constraint_type,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:53:from .base import Candidate, CandidateVersion, Constraint, Requirement
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:88:    constraints: Dict[str, Constraint]
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:365:    def _iter_candidates_from_constraints(
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:368:        constraint: Constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:371:        """Produce explicit candidates from constraints.
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:376:        for link in constraint.links:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:392:        constraint: Constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:421:        # Add explicit candidates from constraints. We only do this if there are
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:428:                    self._iter_candidates_from_constraints(
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:430:                        constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:448:                constraint.specifier,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:449:                constraint.hashes,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:458:            and constraint.is_satisfied_by(c)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:469:            - the InstallRequirement has both a constraint (or link) and extras
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:470:                -> result is split in two requirement objects: one with the constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:471:                (or link) and one with the extra. This allows centralized constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:520:            if ireq.constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:521:                # Ensure we only accept valid constraints
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:522:                problem = check_invalid_constraint_type(ireq)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:527:                assert ireq.name, "Constraint must be named"
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:529:                if name in collected.constraints:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:530:                    collected.constraints[name] &= ireq
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:532:                    collected.constraints[name] = Constraint.from_ireq(ireq)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:550:        # taking into account any non-transient constraints on the associated base. This
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:572:            - the specifier has both a constraint and extras -> result is split
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:573:                in two requirement objects: one with the constraint and one with the
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:574:                extra. This allows centralized constraint handling for the base,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:715:        constraints: Dict[str, Constraint],
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:741:            if req.name not in constraints:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:783:        relevant_constraints = set()
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:785:            if req.name in constraints:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:786:                relevant_constraints.add(req.name)
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:793:        for key in relevant_constraints:
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:794:            spec = constraints[key].specifier
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:795:            msg += f"\n    The user requested (constraint) {key}{spec}"
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:16:from .base import Candidate, Constraint, Requirement
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:81:    :params constraints: A mapping of constraints specified by the user. Keys
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:92:        constraints: Dict[str, Constraint],
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:98:        self._constraints = constraints
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:226:        constraint = _get_with_identifier(
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:227:            self._constraints,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:229:            default=Constraint.empty(),
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:234:            constraint=constraint,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\reporter.py:29:                "the dependency resolver with stricter constraints to reduce "
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\requirements.py:64:        # risking a change in meaning. (Hopefully! Not all edge cases have
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\resolver.py:79:            constraints=collected.constraints,
scripts\openai_batch\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\resolver.py:102:                collected.constraints,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:84:    'TypeGuard',
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1518:    def __new__(cls, name, *constraints, bound=None,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1523:            typevar = typing.TypeVar(name, *constraints, bound=bound,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1527:            typevar = typing.TypeVar(name, *constraints, bound=bound,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1827:if hasattr(typing, 'TypeGuard'):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1828:    TypeGuard = typing.TypeGuard
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1832:    def TypeGuard(self, parameters):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1834:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1837:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1841:        conditional expression here is sometimes referred to as a "type guard".
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1844:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1847:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1852:        is the type inside ``TypeGuard``.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1857:                # "isinstance" type guard
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1870:        writing type-safe type guards is left to the user.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1872:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1873:        PEP 647 (User-Defined Type Guards).
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1879:    class _TypeGuardForm(_ExtensionsSpecialForm, _root=True):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1885:    TypeGuard = _TypeGuardForm(
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1886:        'TypeGuard',
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1888:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1891:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1895:        conditional expression here is sometimes referred to as a "type guard".
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1898:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1901:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1906:        is the type inside ``TypeGuard``.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1911:                # "isinstance" type guard
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1924:        writing type-safe type guards is left to the user.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1926:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1927:        PEP 647 (User-Defined Type Guards).
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\database.py:924:                if not r.constraints:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\database.py:927:                    cons = ', '.join('%s%s' % c for c in r.constraints)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\locators.py:1023:                    # for specific constraints, we only return something if
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\metadata.py:466:                if not scheme.is_valid_constraint_list(value):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\metadata.py:535:        def are_valid_constraints(value):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\metadata.py:541:        for fields, controller in ((_PREDICATE_FIELDS, are_valid_constraints),
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\metadata.py:543:                                    scheme.is_valid_constraint_list),
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:227:                            raise SyntaxError('invalid constraint: %s' %
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:250:                        raise SyntaxError('invalid constraint: %s' % s)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:254:                        raise SyntaxError('invalid constraint: %s' % s)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:274:                     constraints=versions,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:110:        if r.constraints:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:112:            for op, s in r.constraints:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:116:                                         '%r constraints' % op)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:131:        Check if the provided version matches the constraints.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:138:        for operator, constraint, prefix in self._parts:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:146:            if not f(version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:318:    def _adjust_local(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:320:            strip_local = '+' not in constraint and version._parts[-1]
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:322:            # both constraint and version are
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:324:            # If constraint does not have a local component,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:326:            strip_local = not constraint._parts[-1] and version._parts[-1]
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:330:        return version, constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:332:    def _match_lt(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:333:        version, constraint = self._adjust_local(version, constraint, prefix)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:334:        if version >= constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:336:        release_clause = constraint._release_clause
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:340:    def _match_gt(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:341:        version, constraint = self._adjust_local(version, constraint, prefix)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:342:        if version <= constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:344:        release_clause = constraint._release_clause
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:348:    def _match_le(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:349:        version, constraint = self._adjust_local(version, constraint, prefix)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:350:        return version <= constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:352:    def _match_ge(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:353:        version, constraint = self._adjust_local(version, constraint, prefix)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:354:        return version >= constraint
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:356:    def _match_eq(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:357:        version, constraint = self._adjust_local(version, constraint, prefix)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:359:            result = (version == constraint)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:361:            result = _match_prefix(version, constraint)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:364:    def _match_arbitrary(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:365:        return str(version) == str(constraint)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:367:    def _match_ne(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:368:        version, constraint = self._adjust_local(version, constraint, prefix)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:370:            result = (version != constraint)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:372:            result = not _match_prefix(version, constraint)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:375:    def _match_compatible(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:376:        version, constraint = self._adjust_local(version, constraint, prefix)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:377:        if version == constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:379:        if version < constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:383:        release_clause = constraint._release_clause
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:637:    def _match_compatible(self, version, constraint, prefix):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:638:        if version < constraint:
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:640:        m = self.numeric_re.match(str(constraint))
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:643:                           ' and constraint %s', version, constraint)
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:720:    def is_valid_constraint_list(self, s):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\pkg_resources\__init__.py:3338:    at their own risk.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\pyparsing\core.py:514:            # guard against looping forever through recursive grammars
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\requests\sessions.py:687:        # Guard against that specific failure case.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\resolvelib\providers.py:64:        """Find all possible candidates that satisfy the given constraints.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\resolvelib\providers.py:122:        """Take a collection of constraints, spit out the resolution result.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\resolvelib\providers.py:128:        :param requirements: A collection of constraints.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers.py:518:        """Take a collection of constraints, spit out the resolution result.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\traceback.py:461:                if frame_summary.f_locals.get("_rich_traceback_guard", False):
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\traceback.py:734:        _rich_traceback_guard = True
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:769:    "eight-spoked_asterisk": "✳",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:962:    "guard": "💂",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:963:    "guard_dark_skin_tone": "💂🏿",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:964:    "guard_light_skin_tone": "💂🏻",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:965:    "guard_medium-dark_skin_tone": "💂🏾",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:966:    "guard_medium-light_skin_tone": "💂🏼",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:967:    "guard_medium_skin_tone": "💂🏽",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1301:    "man_guard": "💂\u200d♂️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1302:    "man_guard_dark_skin_tone": "💂🏿\u200d♂️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1303:    "man_guard_light_skin_tone": "💂🏻\u200d♂️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1304:    "man_guard_medium-dark_skin_tone": "💂🏾\u200d♂️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1305:    "man_guard_medium-light_skin_tone": "💂🏼\u200d♂️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1306:    "man_guard_medium_skin_tone": "💂🏽\u200d♂️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2537:    "woman_guard": "💂\u200d♀️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2538:    "woman_guard_dark_skin_tone": "💂🏿\u200d♀️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2539:    "woman_guard_light_skin_tone": "💂🏻\u200d♀️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2540:    "woman_guard_medium-dark_skin_tone": "💂🏾\u200d♀️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2541:    "woman_guard_medium-light_skin_tone": "💂🏼\u200d♀️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2542:    "woman_guard_medium_skin_tone": "💂🏽\u200d♀️",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2769:    "keycap_asterisk": "*⃣",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2958:    "eight_spoked_asterisk": "✳",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:3276:    "guardsman": "💂",
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_ratio.py:21:    """Divide total space to satisfy size, ratio, and minimum_size, constraints.
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\rich\_ratio.py:24:    impossible to satisfy all the constraints. For instance, if there are two edges
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\truststore\_windows.py:207:CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG = 0x00000008
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\truststore\_windows.py:223:    | CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\urllib3\util\retry.py:118:        Set to ``None`` to remove this constraint and fall back on other
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\urllib3\util\ssl_.py:308:        # there is a risk associated with it being on wire,
scripts\openai_batch\.venv\Lib\site-packages\pip\_vendor\urllib3\util\ssl_.py:334:    # matter due to safe-guards SSLContext has to prevent an SSLContext with
scripts\openai_batch\.venv\Lib\site-packages\pkg_resources\__init__.py:3270:    at their own risk.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\annotated_handlers.py:88:        Otherwise, you may end up doing something like applying a `min_length` constraint
scripts\openai_batch\.venv\Lib\site-packages\pydantic\dataclasses.py:11:from typing_extensions import TypeGuard, dataclass_transform
scripts\openai_batch\.venv\Lib\site-packages\pydantic\dataclasses.py:371:def is_pydantic_dataclass(class_: type[Any], /) -> TypeGuard[type[PydanticDataclass]]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\fields.py:133:        metadata: List of metadata constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\fields.py:189:    # used to convert kwargs to metadata/constraints,
scripts\openai_batch\.venv\Lib\site-packages\pydantic\json_schema.py:1034:            # The len check indicates that constraints are probably present:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\json_schema.py:1036:            # If this is a definition reference schema, it most likely has constraints:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:49:    'UrlConstraints',
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:71:class UrlConstraints:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:72:    """Url constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:103:    def defined_constraints(self) -> dict[str, Any]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:104:        """Fetch a key / value mapping of constraints to values that are not None. Used for core schema updates."""
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:110:        # for function-wrap schemas, url constraints is applied to the inner schema
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:116:                f"'UrlConstraints' cannot annotate '{annotated_type}'.", code='invalid-annotated-type'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:118:        for constraint_key, constraint_value in self.defined_constraints.items():
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:119:            schema_to_mutate[constraint_key] = constraint_value
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:124:    _constraints: ClassVar[UrlConstraints] = UrlConstraints()
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:325:            schema=core_schema.url_schema(**cls._constraints.defined_constraints),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:344:    _constraints: ClassVar[UrlConstraints] = UrlConstraints()
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:511:            schema=core_schema.multi_host_url_schema(**cls._constraints.defined_constraints),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:566:    _constraints = UrlConstraints(allowed_schemes=['http', 'https'])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:647:    _constraints = UrlConstraints(max_length=2083, allowed_schemes=['http', 'https'])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:657:    _constraints = UrlConstraints(allowed_schemes=['ws', 'wss'])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:668:    _constraints = UrlConstraints(max_length=2083, allowed_schemes=['ws', 'wss'])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:677:    _constraints = UrlConstraints(allowed_schemes=['file'])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:687:    _constraints = UrlConstraints(allowed_schemes=['ftp'])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:750:    _constraints = UrlConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:779:    _constraints = UrlConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:802:    _constraints = UrlConstraints(allowed_schemes=['amqp', 'amqps'])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:813:    _constraints = UrlConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:836:    _constraints = UrlConstraints(allowed_schemes=['mongodb', 'mongodb+srv'], default_port=27017)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:847:    _constraints = UrlConstraints(allowed_schemes=['kafka'], default_host='localhost', default_port=9092)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:859:    _constraints = UrlConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:872:    _constraints = UrlConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:896:    _constraints = UrlConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:910:    _constraints = UrlConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\networks.py:932:    _constraints = UrlConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:104:    'StringConstraints',
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:188:    A wrapper around `int` that allows for additional constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:449:    A wrapper around `float` that allows for additional constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:669:    """A wrapper around `bytes` that allows for additional constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:694:class StringConstraints(annotated_types.GroupedMetadata):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:696:        [`StringConstraints`](../concepts/fields.md#string-constraints)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:698:    A field metadata class to apply constraints to `str` types.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:714:        from pydantic.types import StringConstraints
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:716:        ConstrainedStr = Annotated[str, StringConstraints(min_length=1, max_length=10)]
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:763:        [`StringConstraints`][pydantic.types.StringConstraints] instead.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:781:            from pydantic import BaseModel, StringConstraints
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:786:                    StringConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:792:    A wrapper around `str` that allows for additional constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:819:        StringConstraints(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:842:    """A wrapper around `typing.Set` that allows for additional constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:858:    """A wrapper around `typing.FrozenSet` that allows for additional constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:1631:    You can enforce constraints on the underlying type through annotations:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:2250:    """A wrapper for date that adds constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:2260:        A date type with the specified constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:2288:                return core_schema.datetime_schema(tz_constraint='aware')
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:2292:                schema['tz_constraint'] = 'aware'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:2307:                return core_schema.datetime_schema(tz_constraint='naive')
scripts\openai_batch\.venv\Lib\site-packages\pydantic\types.py:2311:                schema['tz_constraint'] = 'naive'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\version.py:68:    # Keep this in sync with the version constraint in the `pyproject.toml` dependencies:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\__init__.py:127:    'UrlConstraints',
scripts\openai_batch\.venv\Lib\site-packages\pydantic\__init__.py:159:    'StringConstraints',
scripts\openai_batch\.venv\Lib\site-packages\pydantic\__init__.py:294:    'UrlConstraints': (__spec__.parent, '.networks'),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\__init__.py:322:    'StringConstraints': (__spec__.parent, '.types'),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\deprecated\copy_internals.py:40:    # The extra "is not None" guards are not logically necessary but optimizes performance for the simple case.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:88:_ConstraintAnnotation = Union[
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:109:class _Constraint:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:110:    constraint: _ConstraintAnnotation
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:113:_Step = Union[_ValidateAs, _ValidateAsDefer, _Transform, _PipelineOr, _PipelineAnd, _Constraint]
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:172:    # constraints
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:174:    def constrain(self: _Pipeline[_InT, _NewOutGe], constraint: annotated_types.Ge) -> _Pipeline[_InT, _NewOutGe]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:177:    def constrain(self: _Pipeline[_InT, _NewOutGt], constraint: annotated_types.Gt) -> _Pipeline[_InT, _NewOutGt]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:180:    def constrain(self: _Pipeline[_InT, _NewOutLe], constraint: annotated_types.Le) -> _Pipeline[_InT, _NewOutLe]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:183:    def constrain(self: _Pipeline[_InT, _NewOutLt], constraint: annotated_types.Lt) -> _Pipeline[_InT, _NewOutLt]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:187:        self: _Pipeline[_InT, _NewOutLen], constraint: annotated_types.Len
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:192:        self: _Pipeline[_InT, _NewOutT], constraint: annotated_types.MultipleOf
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:197:        self: _Pipeline[_InT, _NewOutDatetime], constraint: annotated_types.Timezone
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:201:    def constrain(self: _Pipeline[_InT, _OutT], constraint: annotated_types.Predicate) -> _Pipeline[_InT, _OutT]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:205:        self: _Pipeline[_InT, _NewOutInterval], constraint: annotated_types.Interval
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:209:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _Eq) -> _Pipeline[_InT, _OutT]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:212:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _NotEq) -> _Pipeline[_InT, _OutT]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:215:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _In) -> _Pipeline[_InT, _OutT]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:218:    def constrain(self: _Pipeline[_InT, _OutT], constraint: _NotIn) -> _Pipeline[_InT, _OutT]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:221:    def constrain(self: _Pipeline[_InT, _NewOutT], constraint: Pattern[str]) -> _Pipeline[_InT, _NewOutT]: ...
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:223:    def constrain(self, constraint: _ConstraintAnnotation) -> Any:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:231:        return _Pipeline[_InT, _OutT](self._steps + (_Constraint(constraint),))
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:386:    elif isinstance(step, _Constraint):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:387:        s = _apply_constraint(s, step.constraint)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:444:def _apply_constraint(  # noqa: C901
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:445:    s: cs.CoreSchema | None, constraint: _ConstraintAnnotation
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:447:    """Apply a single constraint to a schema."""
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:448:    if isinstance(constraint, annotated_types.Gt):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:449:        gt = constraint.gt
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:464:    elif isinstance(constraint, annotated_types.Ge):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:465:        ge = constraint.ge
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:479:    elif isinstance(constraint, annotated_types.Lt):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:480:        lt = constraint.lt
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:494:    elif isinstance(constraint, annotated_types.Le):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:495:        le = constraint.le
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:509:    elif isinstance(constraint, annotated_types.Len):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:510:        min_len = constraint.min_length
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:511:        max_len = constraint.max_length
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:534:    elif isinstance(constraint, annotated_types.MultipleOf):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:535:        multiple_of = constraint.multiple_of
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:549:    elif isinstance(constraint, annotated_types.Timezone):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:550:        tz = constraint.tz
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:555:                s['tz_constraint'] = 'aware'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:566:                s['tz_constraint'] = 'naive'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:576:    elif isinstance(constraint, annotated_types.Interval):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:577:        if constraint.ge:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:578:            s = _apply_constraint(s, annotated_types.Ge(constraint.ge))
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:579:        if constraint.gt:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:580:            s = _apply_constraint(s, annotated_types.Gt(constraint.gt))
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:581:        if constraint.le:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:582:            s = _apply_constraint(s, annotated_types.Le(constraint.le))
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:583:        if constraint.lt:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:584:            s = _apply_constraint(s, annotated_types.Lt(constraint.lt))
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:586:    elif isinstance(constraint, annotated_types.Predicate):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:587:        func = constraint.func
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:606:    elif isinstance(constraint, _NotEq):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:607:        value = constraint.value
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:613:    elif isinstance(constraint, _Eq):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:614:        value = constraint.value
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:620:    elif isinstance(constraint, _In):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:621:        values = constraint.values
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:627:    elif isinstance(constraint, _NotIn):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:628:        values = constraint.values
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:635:        assert isinstance(constraint, Pattern)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:638:            s['pattern'] = constraint.pattern
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:643:                return constraint.match(v) is not None
scripts\openai_batch\.venv\Lib\site-packages\pydantic\experimental\pipeline.py:645:            s = _check_func(check_pattern, f'~ {constraint.pattern}', s)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:132:    # field constraints with the default value, it's also used in update_from_config below
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:133:    __field_constraints__ = {
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:183:            **self.__field_constraints__,
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:189:    def get_constraints(self) -> Set[str]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:191:        Gets the constraints set on the field by comparing the constraint value with its default value
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:193:        :return: the constraints set on field_info
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:195:        return {attr for attr, default in self.__field_constraints__.items() if getattr(self, attr) != default}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:209:                if current_value is self.__field_constraints__.get(attr_name, None):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:592:            elif self.type_.__constraints__:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\fields.py:593:                self.type_ = Union[self.type_.__constraints__]
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\main.py:839:        # The extra "is not None" guards are not logically necessary but optimizes performance for the simple case.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:998:_map_types_constraint: Dict[Any, Callable[..., type]] = {int: conint, float: confloat, Decimal: condecimal}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1012:    constraints = field_info.get_constraints()
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1013:    used_constraints: Set[str] = set()
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1014:    if constraints:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1015:        annotation, used_constraints = get_annotation_with_constraints(annotation, field_info)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1017:        used_constraints.add('allow_mutation')
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1019:    unused_constraints = constraints - used_constraints
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1020:    if unused_constraints:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1022:            f'On field "{field_name}" the following field constraints are set but not enforced: '
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1023:            f'{", ".join(unused_constraints)}. '
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1024:            f'\nFor more details see https://docs.pydantic.dev/usage/schema/#unenforced-field-constraints'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1030:def get_annotation_with_constraints(annotation: Any, field_info: FieldInfo) -> Tuple[Type[Any], Set[str]]:  # noqa: C901
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1032:    Get an annotation with used constraints implemented for numbers and strings based on the field_info.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1036:    :return: the same ``annotation`` if unmodified or a new annotation along with the used constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1038:    used_constraints: Set[str] = set()
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1064:                used_constraints.update({'min_items', 'max_items', 'unique_items'})
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1073:                used_constraints.update({'min_items', 'max_items'})
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1077:                used_constraints.update({'min_items', 'max_items'})
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1088:        constraint_func: Optional[Callable[..., type]] = None
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1093:                def constraint_func(**kw: Any) -> Type[Any]:  # noqa: F811
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1100:                    def constraint_func(**kw: Any) -> Type[Any]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1104:                    constraint_func = constr
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1109:                    def constraint_func(**kw: Any) -> Type[Any]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1113:                    constraint_func = conbytes
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1133:                constraint_func = _map_types_constraint[numeric_type]
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1136:            used_constraints.update(set(attrs))
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1143:                constraint_func = cast(Callable[..., type], constraint_func)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1144:                return constraint_func(**kwargs)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\schema.py:1147:    return go(annotation), used_constraints
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\types.py:288:        # Modify constraints to account for differences between IEEE floats and JSON
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\typing.py:66:        # Python 3.13/3.12.4+ made `recursive_guard` a kwarg, so name it explicitly to avoid:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\typing.py:67:        # TypeError: ForwardRef._evaluate() missing 1 required keyword-only argument: 'recursive_guard'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\typing.py:68:        return cast(Any, type_)._evaluate(globalns, localns, recursive_guard=set())
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\typing.py:75:        return cast(Any, type_)._evaluate(globalns, localns, type_params=(), recursive_guard=set())
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\utils.py:691:        # do we really dare to catch ALL errors? Seems a bit risky
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\validators.py:135:    # NOTICE: this does not fully protect user from the DOS risk since the standard library JSON implementation
scripts\openai_batch\.venv\Lib\site-packages\pydantic\v1\_hypothesis_plugin.py:22:to generate instances of the builtin `int` type which match the constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:10:from typing_extensions import TypeGuard, get_args, get_origin
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:45:) -> TypeGuard[CoreSchema]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:51:) -> TypeGuard[CoreSchemaField]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:57:) -> TypeGuard[FunctionSchemaWithInnerSchema]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_core_utils.py:63:) -> TypeGuard[core_schema.ListSchema | core_schema.SetSchema | core_schema.FrozenSetSchema]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_dataclasses.py:17:from typing_extensions import TypeGuard
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_dataclasses.py:204:def is_builtin_dataclass(_cls: type[Any]) -> TypeGuard[type[StandardDataclass]]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1791:            elif type_param.__constraints__:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:1792:                return core_schema.union_schema([self.generate_schema(type[c]) for c in type_param.__constraints__])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2180:        if constraints := typevar.__constraints__:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_generate_schema.py:2181:            return self._union_schema(typing.Union[constraints])
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:20:LENGTH_CONSTRAINTS = {'min_length', 'max_length'}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:22:NUMERIC_CONSTRAINTS = {'multiple_of', *INEQUALITY}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:25:STR_CONSTRAINTS = {
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:26:    *LENGTH_CONSTRAINTS,
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:34:BYTES_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:36:LIST_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:37:TUPLE_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:38:SET_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT, *FAIL_FAST}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:39:DICT_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:40:GENERATOR_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *STRICT}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:41:SEQUENCE_CONSTRAINTS = {*LENGTH_CONSTRAINTS, *FAIL_FAST}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:43:FLOAT_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *ALLOW_INF_NAN, *STRICT}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:44:DECIMAL_CONSTRAINTS = {'max_digits', 'decimal_places', *FLOAT_CONSTRAINTS}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:45:INT_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *ALLOW_INF_NAN, *STRICT}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:46:BOOL_CONSTRAINTS = STRICT
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:47:UUID_CONSTRAINTS = STRICT
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:49:DATE_TIME_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:50:TIMEDELTA_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:51:TIME_CONSTRAINTS = {*NUMERIC_CONSTRAINTS, *STRICT}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:52:LAX_OR_STRICT_CONSTRAINTS = STRICT
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:53:ENUM_CONSTRAINTS = STRICT
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:54:COMPLEX_CONSTRAINTS = STRICT
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:56:UNION_CONSTRAINTS = {'union_mode'}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:57:URL_CONSTRAINTS = {
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:70:CONSTRAINTS_TO_ALLOWED_SCHEMAS: dict[str, set[str]] = defaultdict(set)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:72:constraint_schema_pairings: list[tuple[set[str], tuple[str, ...]]] = [
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:73:    (STR_CONSTRAINTS, TEXT_SCHEMA_TYPES),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:74:    (BYTES_CONSTRAINTS, ('bytes',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:75:    (LIST_CONSTRAINTS, ('list',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:76:    (TUPLE_CONSTRAINTS, ('tuple',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:77:    (SET_CONSTRAINTS, ('set', 'frozenset')),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:78:    (DICT_CONSTRAINTS, ('dict',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:79:    (GENERATOR_CONSTRAINTS, ('generator',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:80:    (FLOAT_CONSTRAINTS, ('float',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:81:    (INT_CONSTRAINTS, ('int',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:82:    (DATE_TIME_CONSTRAINTS, ('date', 'time', 'datetime', 'timedelta')),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:85:    (UNION_CONSTRAINTS, ('union',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:86:    (URL_CONSTRAINTS, ('url', 'multi-host-url')),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:87:    (BOOL_CONSTRAINTS, ('bool',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:88:    (UUID_CONSTRAINTS, ('uuid',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:89:    (LAX_OR_STRICT_CONSTRAINTS, ('lax-or-strict',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:90:    (ENUM_CONSTRAINTS, ('enum',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:91:    (DECIMAL_CONSTRAINTS, ('decimal',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:92:    (COMPLEX_CONSTRAINTS, ('complex',)),
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:95:for constraints, schemas in constraint_schema_pairings:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:96:    for c in constraints:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:97:        CONSTRAINTS_TO_ALLOWED_SCHEMAS[c].update(schemas)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:147:def _get_at_to_constraint_map() -> dict[type, str]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:148:    """Return a mapping of annotated types to constraints.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:195:    chain_schema_constraints: set[str] = {
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:204:    for constraint, value in schema_update.items():
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:205:        if constraint not in CONSTRAINTS_TO_ALLOWED_SCHEMAS:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:206:            raise ValueError(f'Unknown constraint {constraint}')
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:207:        allowed_schemas = CONSTRAINTS_TO_ALLOWED_SCHEMAS[constraint]
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:209:        # if it becomes necessary to handle more than one constraint
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:211:        # this is a bit challenging because we sometimes want to apply constraints to the inner schema,
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:212:        # whereas other times we want to wrap the existing schema with a new one that enforces a new constraint.
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:213:        if schema_type in {'function-before', 'function-wrap', 'function-after'} and constraint == 'strict':
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:217:        # if we're allowed to apply constraint directly to the schema, like le to int, do that
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:219:            if constraint == 'union_mode' and schema_type == 'union':
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:222:                schema[constraint] = value
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:225:        #  else, apply a function after validator to the schema to enforce the corresponding constraint
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:226:        if constraint in chain_schema_constraints:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:228:            def _apply_constraint_with_incompatibility_info(
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:234:                    # if the error is about the type, it's likely that the constraint is incompatible the type of the field
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:237:                    # that we'd rather express as a constraint incompatibility error (TypeError)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:241:                            f"Unable to apply constraint '{constraint}' to supplied value {value} for schema of type '{schema_type}'"  # noqa: B023
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:248:                    _apply_constraint_with_incompatibility_info, cs.str_schema(**{constraint: value})
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:251:        elif constraint in NUMERIC_VALIDATOR_LOOKUP:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:252:            if constraint in LENGTH_CONSTRAINTS:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:260:                    js_constraint_key = 'minItems' if constraint == 'min_length' else 'maxItems'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:262:                    js_constraint_key = 'minLength' if constraint == 'min_length' else 'maxLength'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:264:                js_constraint_key = constraint
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:267:                partial(NUMERIC_VALIDATOR_LOOKUP[constraint], **{constraint: value}), schema
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:273:                    **{js_constraint_key: as_jsonable_value(value)},
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:276:                metadata['pydantic_js_updates'] = {js_constraint_key: as_jsonable_value(value)}
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:278:        elif constraint == 'allow_inf_nan' and value is False:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:284:            # It's rare that we'd get here, but it's possible if we add a new constraint and forget to handle it
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:285:            # Most constraint errors are caught at runtime during attempted application
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:286:            raise RuntimeError(f"Unable to apply constraint '{constraint}' to schema of type '{schema_type}'")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:289:        if (annotation_type := type(annotation)) in (at_to_constraint_map := _get_at_to_constraint_map()):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:290:            constraint = at_to_constraint_map[annotation_type]
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:291:            validator = NUMERIC_VALIDATOR_LOOKUP.get(constraint)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:293:                raise ValueError(f'Unknown constraint {constraint}')
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:295:                partial(validator, {constraint: getattr(annotation, constraint)}), schema
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:361:        elif (annotation_type := type(annotation)) in (at_to_constraint_map := _get_at_to_constraint_map()):
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:362:            constraint = at_to_constraint_map[annotation_type]
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:363:            res[constraint] = getattr(annotation, constraint)
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_known_annotated_metadata.py:392:            f'The following constraints cannot be applied to {source_type!r}: {", ".join([f"{k!r}" for k in unknown])}'
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_utils.py:23:from typing_extensions import TypeAlias, TypeGuard, deprecated
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_utils.py:111:def is_model_class(cls: Any) -> TypeGuard[type[BaseModel]]:
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_utils.py:347:        # do we really dare to catch ALL errors? Seems a bit risky
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:279:        raise TypeError(f"Unable to apply constraint 'gt' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:288:        raise TypeError(f"Unable to apply constraint 'ge' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:297:        raise TypeError(f"Unable to apply constraint 'lt' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:306:        raise TypeError(f"Unable to apply constraint 'le' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:315:        raise TypeError(f"Unable to apply constraint 'multiple_of' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:326:        raise TypeError(f"Unable to apply constraint 'min_length' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:338:        raise TypeError(f"Unable to apply constraint 'max_length' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:395:        raise TypeError(f"Unable to apply constraint 'max_digits' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic\_internal\_validators.py:410:        raise TypeError(f"Unable to apply constraint 'decimal_places' to supplied value {x}")
scripts\openai_batch\.venv\Lib\site-packages\pydantic_core\core_schema.py:1022:    tz_constraint: Union[Literal['aware', 'naive'], int]
scripts\openai_batch\.venv\Lib\site-packages\pydantic_core\core_schema.py:1036:    tz_constraint: Literal['aware', 'naive'] | int | None = None,
scripts\openai_batch\.venv\Lib\site-packages\pydantic_core\core_schema.py:1060:        tz_constraint: The value must be timezone aware or naive, or an int to indicate required tz offset
scripts\openai_batch\.venv\Lib\site-packages\pydantic_core\core_schema.py:1073:        tz_constraint=tz_constraint,
scripts\openai_batch\.venv\Lib\site-packages\pydantic_core\core_schema.py:1089:    tz_constraint: Union[Literal['aware', 'naive'], int]
scripts\openai_batch\.venv\Lib\site-packages\pydantic_core\core_schema.py:1107:    tz_constraint: Literal['aware', 'naive'] | int | None = None,
scripts\openai_batch\.venv\Lib\site-packages\pydantic_core\core_schema.py:1134:        tz_constraint: The value must be timezone aware or naive, or an int to indicate required tz offset
scripts\openai_batch\.venv\Lib\site-packages\pydantic_core\core_schema.py:1150:        tz_constraint=tz_constraint,
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:202:    # value meets certain type and value constraints.  If not, we try to
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:83:    'TypeGuard',
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1858:if hasattr(typing, 'TypeGuard'):
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1859:    TypeGuard = typing.TypeGuard
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1862:    class _TypeGuardForm(typing._SpecialForm, _root=True):
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1866:    @_TypeGuardForm
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1867:    def TypeGuard(self, parameters):
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1869:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1872:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1876:        conditional expression here is sometimes referred to as a "type guard".
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1879:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1882:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1887:        is the type inside ``TypeGuard``.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1892:                # "isinstance" type guard
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1905:        writing type-safe type guards is left to the user.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1907:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1908:        PEP 647 (User-Defined Type Guards).
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1914:    class _TypeGuardForm(typing._SpecialForm, _root=True):
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1924:    TypeGuard = _TypeGuardForm(
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1925:        'TypeGuard',
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1927:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1930:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1934:        conditional expression here is sometimes referred to as a "type guard".
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1937:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1940:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1945:        is the type inside ``TypeGuard``.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1950:                # "isinstance" type guard
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1963:        writing type-safe type guards is left to the user.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1965:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1966:        PEP 647 (User-Defined Type Guards).
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1970:    class _TypeGuard(typing._FinalTypingBase, _root=True):
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1972:        type guard function.  ``TypeGuard`` only accepts a single type argument.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1975:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1979:        conditional expression here is sometimes referred to as a "type guard".
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1982:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1985:        Using  ``-> TypeGuard`` tells the static type checker that for a given
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1990:        is the type inside ``TypeGuard``.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1995:                # "isinstance" type guard
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2008:        writing type-safe type guards is left to the user.
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2010:        ``TypeGuard`` also works with type variables.  For more information, see
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2011:        PEP 647 (User-Defined Type Guards).
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2043:            if not isinstance(other, _TypeGuard):
scripts\openai_batch\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2049:    TypeGuard = _TypeGuard(_root=True)
scripts\openai_batch\.venv\Lib\site-packages\typing_inspection\typing_objects.py:48:    'is_typeguard',
scripts\openai_batch\.venv\Lib\site-packages\typing_inspection\typing_objects.py:457:is_typeguard = _compile_identity_check_function('TypeGuard', 'is_typeguard')
scripts\openai_batch\.venv\Lib\site-packages\typing_inspection\typing_objects.py:458:is_typeguard.__doc__ = """
scripts\openai_batch\.venv\Lib\site-packages\typing_inspection\typing_objects.py:459:Return whether the argument is the [`TypeGuard`][typing.TypeGuard] [special form][].
scripts\openai_batch\.venv\Lib\site-packages\typing_inspection\typing_objects.py:462:>>> is_typeguard(TypeGuard)
tradingbot-backend\main.py:230:# Mitigera DoS-relaterade risker i multipart/stora svar
tradingbot-backend\main.py:234:# Enkel RequestGuard: blockera multipart och cap Content-Length
tradingbot-backend\main.py:236:async def request_guard(request: Request, call_next):
tradingbot-backend\main.py:334:# risk-panel and shared directories removed
tradingbot-backend\main.py:335:# _RISK_PANEL_DIR = os.path.join(_FRONTEND_DIR, "risk-panel")
tradingbot-backend\main.py:339:# app.mount("/risk-panel", StaticFiles(directory=_RISK_PANEL_DIR, html=True), name="risk-panel")
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:100:    'TypeGuard',
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:1637:        def __new__(cls, name, *constraints, bound=None,
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:1642:                typevar = typing.TypeVar(name, *constraints, bound=bound,
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:1646:                typevar = typing.TypeVar(name, *constraints, bound=bound,
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2119:if hasattr(typing, 'TypeGuard'):
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2120:    TypeGuard = typing.TypeGuard
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2124:    def TypeGuard(self, parameters):
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2126:        type guard function.  ``TypeGuard`` only accepts a single type argument.
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2129:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2133:        conditional expression here is sometimes referred to as a "type guard".
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2136:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2139:        Using  ``-> TypeGuard`` tells the static type checker that for a given
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2144:        is the type inside ``TypeGuard``.
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2149:                # "isinstance" type guard
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2162:        writing type-safe type guards is left to the user.
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2164:        ``TypeGuard`` also works with type variables.  For more information, see
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2165:        PEP 647 (User-Defined Type Guards).
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2186:        conditional expression here is sometimes referred to as a "type guard".
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:2189:        as a type guard.  Such a function should use ``TypeIs[...]`` as its
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:4077:        _recursive_guard=frozenset(),
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:4103:        if forward_ref.__forward_arg__ in _recursive_guard:
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:4133:                _recursive_guard=_recursive_guard, format=format
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:4146:                recursive_guard=_recursive_guard | {forward_ref.__forward_arg__},
tradingbot-backend\.venv\Lib\site-packages\typing_extensions.py:4154:                recursive_guard=_recursive_guard | {forward_ref.__forward_arg__},
tradingbot-backend\.venv\Lib\site-packages\anyio\__init__.py:62:from ._core._synchronization import ResourceGuard as ResourceGuard
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:88:    ResourceGuard,
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1238:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1239:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1247:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1282:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1326:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1327:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1367:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1373:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1393:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1417:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1463:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1488:        self._accept_guard = ResourceGuard("accepting connections from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1498:        with self._accept_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1545:        self._accept_guard = ResourceGuard("accepting connections from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1550:        with self._accept_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1584:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1585:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1598:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1615:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1632:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1633:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1646:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1665:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1680:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1697:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1716:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_asyncio.py:1733:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:76:    ResourceGuard,
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:419:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:420:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:423:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:435:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:458:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:498:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:519:        self._accept_guard = ResourceGuard("accepting connections from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:522:        with self._accept_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:535:        self._accept_guard = ResourceGuard("accepting connections from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:538:        with self._accept_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:550:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:551:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:554:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:562:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:572:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:573:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:576:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:583:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:593:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:594:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:597:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:605:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:617:        self._receive_guard = ResourceGuard("reading from")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:618:        self._send_guard = ResourceGuard("writing to")
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:621:        with self._receive_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_backends\_trio.py:628:        with self._send_guard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_core\_synchronization.py:700:class ResourceGuard:
tradingbot-backend\.venv\Lib\site-packages\anyio\_core\_synchronization.py:708:    :param action: the action to guard against (visible in the :exc:`BusyResourceError`
tradingbot-backend\.venv\Lib\site-packages\anyio\_core\_synchronization.py:714:    __slots__ = "action", "_guarded"
tradingbot-backend\.venv\Lib\site-packages\anyio\_core\_synchronization.py:718:        self._guarded = False
tradingbot-backend\.venv\Lib\site-packages\anyio\_core\_synchronization.py:721:        if self._guarded:
tradingbot-backend\.venv\Lib\site-packages\anyio\_core\_synchronization.py:724:        self._guarded = True
tradingbot-backend\.venv\Lib\site-packages\anyio\_core\_synchronization.py:732:        self._guarded = False
tradingbot-backend\.venv\Lib\site-packages\bandit\plugins\asserts.py:11:discovered that some projects used assert to enforce interface constraints.
tradingbot-backend\.venv\Lib\site-packages\bandit\plugins\django_xss.py:187:def check_risk(node):
tradingbot-backend\.venv\Lib\site-packages\bandit\plugins\django_xss.py:276:                return check_risk(context.node)
tradingbot-backend\.venv\Lib\site-packages\bandit\plugins\exec.py:11:Python docs succinctly describe why the use of `exec` is risky.
tradingbot-backend\.venv\Lib\site-packages\bandit\plugins\injection_shell.py:116:    mitigate this risk. Calls of this type are identified by a parameter of
tradingbot-backend\.venv\Lib\site-packages\bandit\plugins\injection_shell.py:414:    mitigate this risk. Calls of this type are identified by the use of certain
tradingbot-backend\.venv\Lib\site-packages\bandit\plugins\injection_shell.py:604:    root then this may present a potential security risk.
tradingbot-backend\.venv\Lib\site-packages\bandit\plugins\logging_config_insecure_listen.py:14:may open its users to a security risk. While the function only
tradingbot-backend\.venv\Lib\site-packages\bidict\_base.py:138:        # Works with the guard in BidictBase._ensure_inv_cls() to prevent infinite recursion.
tradingbot-backend\.venv\Lib\site-packages\black\handle_ipynb_magics.py:13:    from typing import TypeGuard
tradingbot-backend\.venv\Lib\site-packages\black\handle_ipynb_magics.py:15:    from typing_extensions import TypeGuard
tradingbot-backend\.venv\Lib\site-packages\black\handle_ipynb_magics.py:279:def _is_ipython_magic(node: ast.expr) -> TypeGuard[ast.Attribute]:
tradingbot-backend\.venv\Lib\site-packages\black\linegen.py:586:        if Preview.remove_redundant_guard_parens in self.mode:
tradingbot-backend\.venv\Lib\site-packages\black\linegen.py:587:            self.visit_guard = partial(v, keywords=Ø, parens={"if"})
tradingbot-backend\.venv\Lib\site-packages\black\linegen.py:1366:        # Add parentheses around if guards in case blocks
tradingbot-backend\.venv\Lib\site-packages\black\linegen.py:1369:            and child.type == syms.guard
tradingbot-backend\.venv\Lib\site-packages\black\mode.py:207:    remove_redundant_guard_parens = auto()
tradingbot-backend\.venv\Lib\site-packages\black\nodes.py:20:    from typing import TypeGuard
tradingbot-backend\.venv\Lib\site-packages\black\nodes.py:22:    from typing_extensions import TypeGuard
tradingbot-backend\.venv\Lib\site-packages\black\nodes.py:979:def is_name_token(nl: NL) -> TypeGuard[Leaf]:
tradingbot-backend\.venv\Lib\site-packages\black\nodes.py:983:def is_lpar_token(nl: NL) -> TypeGuard[Leaf]:
tradingbot-backend\.venv\Lib\site-packages\black\nodes.py:987:def is_rpar_token(nl: NL) -> TypeGuard[Leaf]:
tradingbot-backend\.venv\Lib\site-packages\black\nodes.py:991:def is_number_token(nl: NL) -> TypeGuard[Leaf]:
tradingbot-backend\.venv\Lib\site-packages\black\trans.py:1692:        # line is actually necessary, but it seems to be. Otherwise we risk
tradingbot-backend\.venv\Lib\site-packages\blib2to3\pygram.py:79:    guard: int
tradingbot-backend\.venv\Lib\site-packages\click\types.py:831:def _is_file_like(value: t.Any) -> te.TypeGuard[t.IO[t.Any]]:
tradingbot-backend\.venv\Lib\site-packages\distlib\database.py:902:                if not r.constraints:
tradingbot-backend\.venv\Lib\site-packages\distlib\database.py:905:                    cons = ', '.join('%s%s' % c for c in r.constraints)
tradingbot-backend\.venv\Lib\site-packages\distlib\locators.py:1020:                    # for specific constraints, we only return something if
tradingbot-backend\.venv\Lib\site-packages\distlib\metadata.py:445:                if not scheme.is_valid_constraint_list(value):
tradingbot-backend\.venv\Lib\site-packages\distlib\metadata.py:512:        def are_valid_constraints(value):
tradingbot-backend\.venv\Lib\site-packages\distlib\metadata.py:518:        for fields, controller in ((_PREDICATE_FIELDS, are_valid_constraints),
tradingbot-backend\.venv\Lib\site-packages\distlib\metadata.py:519:                                   (_VERSIONS_FIELDS, scheme.is_valid_constraint_list), (_VERSION_FIELDS,
tradingbot-backend\.venv\Lib\site-packages\distlib\util.py:223:                            raise SyntaxError('invalid constraint: %s' % ver_remaining)
tradingbot-backend\.venv\Lib\site-packages\distlib\util.py:244:                        raise SyntaxError('invalid constraint: %s' % s)
tradingbot-backend\.venv\Lib\site-packages\distlib\util.py:248:                        raise SyntaxError('invalid constraint: %s' % s)
tradingbot-backend\.venv\Lib\site-packages\distlib\util.py:265:    return Container(name=distname, extras=extras, constraints=versions, marker=mark_expr, url=uri, requirement=rs)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:110:        if r.constraints:
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:112:            for op, s in r.constraints:
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:116:                                         '%r constraints' % op)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:131:        Check if the provided version matches the constraints.
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:138:        for operator, constraint, prefix in self._parts:
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:146:            if not f(version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:318:    def _adjust_local(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:320:            strip_local = '+' not in constraint and version._parts[-1]
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:322:            # both constraint and version are
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:324:            # If constraint does not have a local component,
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:326:            strip_local = not constraint._parts[-1] and version._parts[-1]
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:330:        return version, constraint
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:332:    def _match_lt(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:333:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:334:        if version >= constraint:
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:336:        release_clause = constraint._release_clause
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:340:    def _match_gt(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:341:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:342:        if version <= constraint:
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:344:        release_clause = constraint._release_clause
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:348:    def _match_le(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:349:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:350:        return version <= constraint
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:352:    def _match_ge(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:353:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:354:        return version >= constraint
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:356:    def _match_eq(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:357:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:359:            result = (version == constraint)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:361:            result = _match_prefix(version, constraint)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:364:    def _match_arbitrary(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:365:        return str(version) == str(constraint)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:367:    def _match_ne(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:368:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:370:            result = (version != constraint)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:372:            result = not _match_prefix(version, constraint)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:375:    def _match_compatible(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:376:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:377:        if version == constraint:
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:379:        if version < constraint:
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:383:        release_clause = constraint._release_clause
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:636:    def _match_compatible(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:637:        if version < constraint:
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:639:        m = self.numeric_re.match(str(constraint))
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:642:                           ' and constraint %s', version, constraint)
tradingbot-backend\.venv\Lib\site-packages\distlib\version.py:719:    def is_valid_constraint_list(self, s):
tradingbot-backend\.venv\Lib\site-packages\dotenv\main.py:158:    If the .env path given doesn't exist, fails instead of risking creating
tradingbot-backend\.venv\Lib\site-packages\h2\config.py:204:        Enforces constraints on the value of header encoding.
tradingbot-backend\.venv\Lib\site-packages\h2\connection.py:65:from .utilities import SizeLimitDict, guard_increment_window
tradingbot-backend\.venv\Lib\site-packages\h2\connection.py:283:    constraints of those state machines are met as well. Attempts to create
tradingbot-backend\.venv\Lib\site-packages\h2\connection.py:1477:            stream.outbound_flow_control_window = guard_increment_window(
tradingbot-backend\.venv\Lib\site-packages\h2\connection.py:1805:            self.outbound_flow_control_window = guard_increment_window(
tradingbot-backend\.venv\Lib\site-packages\h2\exceptions.py:57:    An attempted action violates flow control constraints.
tradingbot-backend\.venv\Lib\site-packages\h2\stream.py:38:    guard_increment_window,
tradingbot-backend\.venv\Lib\site-packages\h2\stream.py:1149:                self.outbound_flow_control_window = guard_increment_window(
tradingbot-backend\.venv\Lib\site-packages\h2\utilities.py:73:    Certain headers are at risk of being attacked during the header compression
tradingbot-backend\.venv\Lib\site-packages\h2\utilities.py:86:    These fields are the most at-risk. These rules are inspired by Firefox
tradingbot-backend\.venv\Lib\site-packages\h2\utilities.py:131:def guard_increment_window(current: int, increment: int) -> int:
tradingbot-backend\.venv\Lib\site-packages\h2\utilities.py:133:    Increments a flow control window, guarding against that window becoming too
tradingbot-backend\.venv\Lib\site-packages\h2\utilities.py:184:    Validates a header sequence against a set of constraints from RFC 7540.
tradingbot-backend\.venv\Lib\site-packages\h2\utilities.py:421:    # TODO: We should also guard against receiving duplicate Host headers,
tradingbot-backend\.venv\Lib\site-packages\h2\windows.py:104:           the risk of blocking a stream altogether.
tradingbot-backend\.venv\Lib\site-packages\httpcore\_async\http2.py:89:            # It's in place simply for resilience as a guard against incorrect
tradingbot-backend\.venv\Lib\site-packages\httpcore\_sync\http2.py:89:            # It's in place simply for resilience as a guard against incorrect
tradingbot-backend\.venv\Lib\site-packages\hyperframe\frame.py:411:    endpoints communicate. The parameters are either constraints on peer
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:105:a particular purpose. THE ENTIRE RISK AS TO THE QUALITY OF THE ORIGINAL WORK
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:791:PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:1014:      risks associated with Your exercise of permissions under this License.
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:2512:redistributing the Work and assume any risks associated with Your exercise of
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:2708:and distributing the Program and assumes all risks associated with its
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:2710:risks and costs of program errors, compliance with applicable laws, damage to
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:2972:risks associated with its exercise of rights under this Agreement,
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:2973:including but not limited to the risks and costs of program errors,
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:3914:MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:4589:PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:5135:PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:5583:particular purpose.  The entire risk as to the quality and performance
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:6087:*  particular purpose or non-infringing. The entire risk as to the     *
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:6242:     (E) The software is licensed "as-is." You bear the risk of using it. The
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:6311:     (F) The software is licensed "as-is." You bear the risk of using it. The
tradingbot-backend\.venv\Lib\site-packages\identify\vendor\licenses.py:6522:a particular purpose. THE ENTIRE RISK AS TO THE QUALITY OF THE ORIGINAL WORK
tradingbot-backend\.venv\Lib\site-packages\lxml\ElementInclude.py:148:#     Limited to reduce the risk of malicious content explosion.
tradingbot-backend\.venv\Lib\site-packages\numpy\__init__.py:422:    core.multiarray._multiarray_umath._reload_guard()
tradingbot-backend\.venv\Lib\site-packages\numpy\core\arrayprint.py:493:def _recursive_guard(fillvalue='...'):
tradingbot-backend\.venv\Lib\site-packages\numpy\core\arrayprint.py:523:@_recursive_guard()
tradingbot-backend\.venv\Lib\site-packages\numpy\core\arrayprint.py:1564:@_recursive_guard()
tradingbot-backend\.venv\Lib\site-packages\numpy\core\arrayprint.py:1565:def _guarded_repr_or_str(v):
tradingbot-backend\.venv\Lib\site-packages\numpy\core\arrayprint.py:1585:        # ndarray's getindex. Also guard against recursive 0d object arrays.
tradingbot-backend\.venv\Lib\site-packages\numpy\core\arrayprint.py:1586:        return _guarded_repr_or_str(np.ndarray.__getitem__(a, ()))
tradingbot-backend\.venv\Lib\site-packages\numpy\core\einsumfunc.py:165:        The optimal contraction order within the memory limit constraint.
tradingbot-backend\.venv\Lib\site-packages\numpy\core\einsumfunc.py:336:        The greedy contraction order within the memory limit constraint.
tradingbot-backend\.venv\Lib\site-packages\numpy\core\generate_numpy_api.py:93:   * the headers (npy_endian.h) as a safeguard
tradingbot-backend\.venv\Lib\site-packages\numpy\core\setup.py:565:                # add the guard to make sure config.h is never included directly,
tradingbot-backend\.venv\Lib\site-packages\numpy\core\_machar.py:55:        Number of 'guard digits' used when truncating the product
tradingbot-backend\.venv\Lib\site-packages\numpy\core\_methods.py:83:        # guarded to protect circular imports
tradingbot-backend\.venv\Lib\site-packages\numpy\core\_methods.py:94:    # guarded to protect circular imports
tradingbot-backend\.venv\Lib\site-packages\numpy\core\tests\test_einsum.py:992:        # Ensure memory constraints are satisfied
tradingbot-backend\.venv\Lib\site-packages\numpy\core\tests\test_regression.py:1745:            # expectation to guard against regression
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler_opt.py:1369:                    # infinity recursive guard since
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\ccompiler_opt.py:1690:            # Guard extra definitions in case of duplicate with
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\cpuinfo.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\mingw32ccompiler.py:509:    # divisible by 4, most likely for alignment constraints when the xml is
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\system_info.py:165:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\distutils\_shell_utils.py:49:        import ctypes  # guarded import for systems without ctypes
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\auxfuncs.py:12:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\capi_maps.py:9:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\cb_rules.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\cfuncs.py:12:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\common_rules.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\crackfortran.py:10:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\f2py2e.py:12:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\f90mod_rules.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\func2subr.py:11:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\rules.py:48:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\setup.py:13:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\use_rules.py:13:NO WARRANTY IS EXPRESSED OR IMPLIED.  USE AT YOUR OWN RISK.
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\tests\test_docs.py:29:    sources = [_path('asterisk1.f90'), _path('asterisk2.f90'),
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\tests\test_docs.py:32:    def test_asterisk1(self):
tradingbot-backend\.venv\Lib\site-packages\numpy\f2py\tests\test_docs.py:36:    def test_asterisk2(self):
tradingbot-backend\.venv\Lib\site-packages\numpy\lib\arraysetops.py:598:    manually set ``kind='table'`` if memory constraints can be relaxed.
tradingbot-backend\.venv\Lib\site-packages\numpy\lib\arraysetops.py:651:        # Constraints on whether we can actually use the table method:
tradingbot-backend\.venv\Lib\site-packages\numpy\lib\arraysetops.py:653:        below_memory_constraint = ar2_range <= 6 * (ar1.size + ar2.size)
tradingbot-backend\.venv\Lib\site-packages\numpy\lib\arraysetops.py:681:            (below_memory_constraint or kind == 'table')
tradingbot-backend\.venv\Lib\site-packages\numpy\lib\arraysetops.py:843:    manually set ``kind='table'`` if memory constraints can be relaxed.
tradingbot-backend\.venv\Lib\site-packages\numpy\lib\function_base.py:427:        The only constraint on `weights` is that `sum(weights)` must not be 0.
tradingbot-backend\.venv\Lib\site-packages\numpy\lib\nanfunctions.py:160:        True if `res` can be modified in place, given the constraint on the
tradingbot-backend\.venv\Lib\site-packages\numpy\lib\shape_base.py:1269:        # have no data there is no risk of an inadvertent overwrite.
tradingbot-backend\.venv\Lib\site-packages\numpy\ma\core.py:3103:                        # Don't modify inplace, we risk back-propagation
tradingbot-backend\.venv\Lib\site-packages\numpy\ma\extras.py:550:        The only constraint on `weights` is that `sum(weights)` must not be 0.
tradingbot-backend\.venv\Lib\site-packages\numpy\ma\tests\test_core.py:4204:    def test_masked_where_shape_constraint(self):
tradingbot-backend\.venv\Lib\site-packages\numpy\random\tests\test_randomstate.py:1267:        # guard against changes in RandomState when Generator is fixed
tradingbot-backend\.venv\Lib\site-packages\numpy\random\_examples\cffi\parse.py:26:            # check for and remove extern "C" guards
tradingbot-backend\.venv\Lib\site-packages\numpy\tests\test_lazyloading.py:7:# Warning raised by _reload_guard() in numpy/__init__.py
tradingbot-backend\.venv\Lib\site-packages\numpy\typing\tests\test_typing.py:324:    # there is the risk of accidentally grabbing dictionaries and sets
tradingbot-backend\.venv\Lib\site-packages\packaging\licenses\_spdx.py:688:    'asterisk-exception': {'id': 'Asterisk-exception', 'deprecated': False},
tradingbot-backend\.venv\Lib\site-packages\packaging\licenses\_spdx.py:689:    'asterisk-linking-protocols-exception': {'id': 'Asterisk-linking-protocols-exception', 'deprecated': False},
tradingbot-backend\.venv\Lib\site-packages\pandas\compat\compressors.py:50:            # `b` into something that meets that constraint with
tradingbot-backend\.venv\Lib\site-packages\pandas\compat\compressors.py:65:                # `b` into something that meets that constraint with
tradingbot-backend\.venv\Lib\site-packages\pandas\core\algorithms.py:1325:        # same dtype as `arr`, while guarding against integer overflows.
tradingbot-backend\.venv\Lib\site-packages\pandas\core\nanops.py:189:            #  result.ndim == 1, so there is no risk of this ravel making a copy.
tradingbot-backend\.venv\Lib\site-packages\pandas\core\arrays\_ranges.py:184:            # with endpoint negative and addend positive we risk
tradingbot-backend\.venv\Lib\site-packages\pandas\core\arrays\_ranges.py:185:            #  FloatingPointError; with reversed signed we risk OverflowError
tradingbot-backend\.venv\Lib\site-packages\pandas\core\dtypes\cast.py:214:    into a numpy array.  Failing to unbox would risk dropping nanoseconds.
tradingbot-backend\.venv\Lib\site-packages\pandas\core\dtypes\common.py:1695:    # which we safeguard against by catching them earlier and returning
tradingbot-backend\.venv\Lib\site-packages\pandas\core\indexers\objects.py:195:            # within the constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\core\internals\array_manager.py:1302:        Use at your own risk! This does not check if the passed values are
tradingbot-backend\.venv\Lib\site-packages\pandas\core\internals\blocks.py:2586:    This has some historical constraints, and is overridden in block
tradingbot-backend\.venv\Lib\site-packages\pandas\core\internals\managers.py:2067:        Use at your own risk! This does not check if the passed values are
tradingbot-backend\.venv\Lib\site-packages\pandas\core\tools\datetimes.py:768:        - "mixed", to infer the format for each element individually. This is risky,
tradingbot-backend\.venv\Lib\site-packages\pandas\io\sql.py:1162:            PrimaryKeyConstraint,
tradingbot-backend\.venv\Lib\site-packages\pandas\io\sql.py:1179:            pkc = PrimaryKeyConstraint(*keys, name=self.name + "_pk")
tradingbot-backend\.venv\Lib\site-packages\pandas\io\sql.py:2102:                f"CONSTRAINT {self.name}_pk PRIMARY KEY ({cnames_br})"
tradingbot-backend\.venv\Lib\site-packages\pandas\io\formats\style_render.py:1561:        New rn and cn values that satisfy the max_elements constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\io\json\_table_schema.py:139:        field["constraints"] = {"enum": list(cats)}
tradingbot-backend\.venv\Lib\site-packages\pandas\io\json\_table_schema.py:181:    ...         "constraints": {"enum": ["a", "b", "c"]},
tradingbot-backend\.venv\Lib\site-packages\pandas\io\json\_table_schema.py:215:        if "constraints" in field and "ordered" in field:
tradingbot-backend\.venv\Lib\site-packages\pandas\io\json\_table_schema.py:217:                categories=field["constraints"]["enum"], ordered=field["ordered"]
tradingbot-backend\.venv\Lib\site-packages\pandas\io\json\_table_schema.py:263:    constraint to list the allowed values. The `ordered` attribute is included
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:163:    # Dups on right allowed by one_to_many constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:170:    # Dups on right not allowed by one_to_one constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:182:    # Dups on left allowed by many_to_one constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:189:    # Dups on left not allowed by one_to_one constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:201:    # Dups on both allowed by many_to_many constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:204:    # Dups on both not allowed by many_to_one constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:213:    # Dups on both not allowed by one_to_many constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\frame\methods\test_join.py:254:    # Jointly no dups allowed by one_to_one constraint
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\internals\test_internals.py:729:        # reindex_axis does not consolidate_inplace, as that risks failing to
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\test_sql.py:1426:        constraint_sentence = 'CONSTRAINT test_pk PRIMARY KEY ("Col1")'
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\test_sql.py:1427:        assert constraint_sentence in create_sql
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\test_sql.py:1431:        constraint_sentence = 'CONSTRAINT test_pk PRIMARY KEY ("A", "B")'
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\test_sql.py:1432:        assert constraint_sentence in create_sql
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:279:                "constraints": {"enum": ["a", "b", "c"]},
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:285:                "constraints": {"enum": ["a", "b", "c"]},
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:419:                                "constraints": {"enum": ["a", "b"]},
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:500:            "constraints": {"enum": data},
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:518:                    "constraints": {"enum": ["a", "b", "c"]},
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:526:                    "constraints": {"enum": ["a", "b", "c"]},
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\json\test_json_table_schema.py:557:                "constraints": {"enum": ["a", "b"]},
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\parser\test_parse_dates.py:1263:        # single unique date and hence no risk of inconsistent parsing.
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\io\parser\test_parse_dates.py:1292:        # single unique date and hence no risk of inconsistent parsing.
tradingbot-backend\.venv\Lib\site-packages\pandas\tests\scalar\timedelta\test_timedelta.py:149:        #  bound, so doubling does not risk overflow.
tradingbot-backend\.venv\Lib\site-packages\pandas\_config\config.py:143:    # must at least 1 arg deal with constraints later
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:114:			# EDGE CASE: Deal with duplicate double-asterisk sequences. Collapse each
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:115:			# sequence down to one double-asterisk. Iterate over the segments in
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:116:			# reverse and remove the duplicate double asterisks as we go.
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:138:				# with double-asterisks to make pattern relative to root.
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:158:				# to "{pattern}/**". So, set last segment to a double-asterisk to
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:170:							# A pattern consisting solely of double-asterisks ('**') will
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:175:							# A normalized pattern beginning with double-asterisks
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:181:							# A normalized pattern ending with double-asterisks ('**') will
tradingbot-backend\.venv\Lib\site-packages\pathspec\patterns\gitwildmatch.py:189:							# A pattern with inner double-asterisks ('**') will match multiple
tradingbot-backend\.venv\Lib\site-packages\pbr\git.py:228:    .. caution:: this function risk to return a tag that doesn't exist really
tradingbot-backend\.venv\Lib\site-packages\pbr\packaging.py:286:        constraint - if semver rules would result in a newer version then an
tradingbot-backend\.venv\Lib\site-packages\pbr\util.py:575:                # and as such do not need guarded, and pip will never call
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_changelog_author.py:118:    def test_changelog_handles_astrisk(self):
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:115:        constraints = os.path.join(
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:116:            REPODIR, 'requirements', 'upper-constraints.txt'
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:118:        tmp_constraints = os.path.join(
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:119:            self.useFixture(fixtures.TempDir()).path, 'upper-constraints.txt'
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:122:        # conflicts with the constraints.
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:123:        with open(constraints, 'r') as src:
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:124:            with open(tmp_constraints, 'w') as dest:
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:126:                    constraint = line.split('===')[0]
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:127:                    constraint = pkg_resources.safe_name(constraint).lower()
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:128:                    if project_name != constraint:
tradingbot-backend\.venv\Lib\site-packages\pbr\tests\functional\test_integration.py:130:        pip_cmd = PIP_CMD + ['-c', tmp_constraints]
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\exceptions.py:681:                "You can override this, at the risk of breaking your Python "
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\wheel_builder.py:50:    if req.constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\wheel_builder.py:51:        # never build requirements that are merely constraints
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:87:            "When restricting platform and interpreter constraints using "
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:405:def constraints() -> Option:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:408:        "--constraint",
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:409:        dest="constraints",
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\cli\cmdoptions.py:413:        help="Constrain versions using the given constraints file. "
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\cli\req_command.py:395:        for filename in options.constraints:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\cli\req_command.py:398:                constraint=True,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\commands\download.py:39:        self.cmd_opts.add_option(cmdoptions.constraints())
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\commands\install.py:74:        self.cmd_opts.add_option(cmdoptions.constraints())
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\commands\wheel.py:63:        self.cmd_opts.add_option(cmdoptions.constraints())
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\index\package_finder.py:40:    from pip._vendor.typing_extensions import TypeGuard
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\index\package_finder.py:946:        ) -> "TypeGuard[InstallationCandidate]":
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\constructors.py:235:    constraint: bool = False,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\constructors.py:249:        constraint=constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\constructors.py:410:    constraint: bool = False,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\constructors.py:433:        constraint=constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\constructors.py:489:            constraint=parsed_req.constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\constructors.py:509:            constraint=parsed_req.constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\constructors.py:553:        constraint=ireq.constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:58:    cmdoptions.constraints,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:98:        constraint: bool,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:106:        self.constraint = constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:117:        constraint: bool,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:122:        self.constraint = constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:142:    constraint: bool = False,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:150:    :param constraint:  If true, parsing a constraint file rather than
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:156:    for parsed_line in parser.parse(filename, constraint):
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:182:        "-c" if line.constraint else "-r",
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:204:        constraint=line.constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:334:        self, filename: str, constraint: bool
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:337:        yield from self._parse_and_recurse(filename, constraint)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:340:        self, filename: str, constraint: bool
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:342:        for line in self._parse_file(filename, constraint):
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:344:                line.opts.requirements or line.opts.constraints
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:349:                    nested_constraint = False
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:351:                    req_path = line.opts.constraints[0]
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:352:                    nested_constraint = True
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:366:                yield from self._parse_and_recurse(req_path, nested_constraint)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:371:        self, filename: str, constraint: bool
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_file.py:390:                constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:85:        constraint: bool = False,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:93:        self.constraint = constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:109:        # requirement, either directly or via a constraints file.
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:156:        # e.g. dependencies, extras or constraints.
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:869:def check_invalid_constraint_type(req: InstallRequirement) -> str:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:873:        problem = "Unnamed requirements are not allowed as constraints"
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:875:        problem = "Editable requirements are not allowed as constraints"
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:877:        problem = "Constraints cannot have extras"
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:882:                "Constraints are only allowed to take the form of a package "
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_install.py:888:            replacement="replacing the constraint with a requirement",
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_set.py:59:            and not self.requirements[project_name].constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_set.py:84:            if not install_req.constraint and not install_req.satisfied_by
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_set.py:98:                        "set or update constraints to select another version "
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\req\req_set.py:114:                            "set or update constraints to select another version "
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:42:    check_invalid_constraint_type,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:173:            if req.constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:174:                check_invalid_constraint_type(req)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:258:            and not existing_req.constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:280:        if install_req.constraint or not existing_req.constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:283:        does_not_satisfy_constraint = install_req.link and not (
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:286:        if does_not_satisfy_constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:288:                f"Could not satisfy constraints for '{install_req.name}': "
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:292:        # If we're now installing a constraint, mark the existing
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:294:        existing_req.constraint = False
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:318:            return req.user_supplied or req.constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:501:        if req_to_install.constraint or req_to_install.prepared:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\legacy\resolver.py:589:            if req.constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:22:class Constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:31:    def empty(cls) -> "Constraint":
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:32:        return Constraint(SpecifierSet(), Hashes(), frozenset())
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:35:    def from_ireq(cls, ireq: InstallRequirement) -> "Constraint":
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:37:        return Constraint(ireq.specifier, ireq.hashes(trust_internet=False), links)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:42:    def __and__(self, other: InstallRequirement) -> "Constraint":
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:50:        return Constraint(specifier, hashes, links)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\base.py:53:        # Reject if there are any mismatched URL constraints on this package.
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:67:        constraint=template.constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:88:        constraint=template.constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\candidates.py:113:        constraint=template.constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:45:    check_invalid_constraint_type,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:53:from .base import Candidate, CandidateVersion, Constraint, Requirement
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:88:    constraints: Dict[str, Constraint]
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:365:    def _iter_candidates_from_constraints(
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:368:        constraint: Constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:371:        """Produce explicit candidates from constraints.
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:376:        for link in constraint.links:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:392:        constraint: Constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:421:        # Add explicit candidates from constraints. We only do this if there are
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:428:                    self._iter_candidates_from_constraints(
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:430:                        constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:448:                constraint.specifier,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:449:                constraint.hashes,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:458:            and constraint.is_satisfied_by(c)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:469:            - the InstallRequirement has both a constraint (or link) and extras
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:470:                -> result is split in two requirement objects: one with the constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:471:                (or link) and one with the extra. This allows centralized constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:520:            if ireq.constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:521:                # Ensure we only accept valid constraints
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:522:                problem = check_invalid_constraint_type(ireq)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:527:                assert ireq.name, "Constraint must be named"
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:529:                if name in collected.constraints:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:530:                    collected.constraints[name] &= ireq
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:532:                    collected.constraints[name] = Constraint.from_ireq(ireq)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:550:        # taking into account any non-transient constraints on the associated base. This
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:572:            - the specifier has both a constraint and extras -> result is split
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:573:                in two requirement objects: one with the constraint and one with the
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:574:                extra. This allows centralized constraint handling for the base,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:715:        constraints: Dict[str, Constraint],
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:741:            if req.name not in constraints:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:783:        relevant_constraints = set()
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:785:            if req.name in constraints:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:786:                relevant_constraints.add(req.name)
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:793:        for key in relevant_constraints:
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:794:            spec = constraints[key].specifier
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\factory.py:795:            msg += f"\n    The user requested (constraint) {key}{spec}"
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:16:from .base import Candidate, Constraint, Requirement
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:81:    :params constraints: A mapping of constraints specified by the user. Keys
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:92:        constraints: Dict[str, Constraint],
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:98:        self._constraints = constraints
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:226:        constraint = _get_with_identifier(
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:227:            self._constraints,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:229:            default=Constraint.empty(),
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\provider.py:234:            constraint=constraint,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\reporter.py:29:                "the dependency resolver with stricter constraints to reduce "
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\requirements.py:64:        # risking a change in meaning. (Hopefully! Not all edge cases have
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\resolver.py:79:            constraints=collected.constraints,
tradingbot-backend\.venv\Lib\site-packages\pip\_internal\resolution\resolvelib\resolver.py:102:                collected.constraints,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:84:    'TypeGuard',
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1518:    def __new__(cls, name, *constraints, bound=None,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1523:            typevar = typing.TypeVar(name, *constraints, bound=bound,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1527:            typevar = typing.TypeVar(name, *constraints, bound=bound,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1827:if hasattr(typing, 'TypeGuard'):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1828:    TypeGuard = typing.TypeGuard
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1832:    def TypeGuard(self, parameters):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1834:        type guard function.  ``TypeGuard`` only accepts a single type argument.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1837:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1841:        conditional expression here is sometimes referred to as a "type guard".
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1844:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1847:        Using  ``-> TypeGuard`` tells the static type checker that for a given
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1852:        is the type inside ``TypeGuard``.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1857:                # "isinstance" type guard
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1870:        writing type-safe type guards is left to the user.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1872:        ``TypeGuard`` also works with type variables.  For more information, see
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1873:        PEP 647 (User-Defined Type Guards).
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1879:    class _TypeGuardForm(_ExtensionsSpecialForm, _root=True):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1885:    TypeGuard = _TypeGuardForm(
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1886:        'TypeGuard',
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1888:        type guard function.  ``TypeGuard`` only accepts a single type argument.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1891:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1895:        conditional expression here is sometimes referred to as a "type guard".
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1898:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1901:        Using  ``-> TypeGuard`` tells the static type checker that for a given
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1906:        is the type inside ``TypeGuard``.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1911:                # "isinstance" type guard
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1924:        writing type-safe type guards is left to the user.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1926:        ``TypeGuard`` also works with type variables.  For more information, see
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\typing_extensions.py:1927:        PEP 647 (User-Defined Type Guards).
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\database.py:924:                if not r.constraints:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\database.py:927:                    cons = ', '.join('%s%s' % c for c in r.constraints)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\locators.py:1023:                    # for specific constraints, we only return something if
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\metadata.py:466:                if not scheme.is_valid_constraint_list(value):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\metadata.py:535:        def are_valid_constraints(value):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\metadata.py:541:        for fields, controller in ((_PREDICATE_FIELDS, are_valid_constraints),
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\metadata.py:543:                                    scheme.is_valid_constraint_list),
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:227:                            raise SyntaxError('invalid constraint: %s' %
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:250:                        raise SyntaxError('invalid constraint: %s' % s)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:254:                        raise SyntaxError('invalid constraint: %s' % s)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\util.py:274:                     constraints=versions,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:110:        if r.constraints:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:112:            for op, s in r.constraints:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:116:                                         '%r constraints' % op)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:131:        Check if the provided version matches the constraints.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:138:        for operator, constraint, prefix in self._parts:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:146:            if not f(version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:318:    def _adjust_local(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:320:            strip_local = '+' not in constraint and version._parts[-1]
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:322:            # both constraint and version are
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:324:            # If constraint does not have a local component,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:326:            strip_local = not constraint._parts[-1] and version._parts[-1]
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:330:        return version, constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:332:    def _match_lt(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:333:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:334:        if version >= constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:336:        release_clause = constraint._release_clause
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:340:    def _match_gt(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:341:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:342:        if version <= constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:344:        release_clause = constraint._release_clause
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:348:    def _match_le(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:349:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:350:        return version <= constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:352:    def _match_ge(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:353:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:354:        return version >= constraint
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:356:    def _match_eq(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:357:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:359:            result = (version == constraint)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:361:            result = _match_prefix(version, constraint)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:364:    def _match_arbitrary(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:365:        return str(version) == str(constraint)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:367:    def _match_ne(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:368:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:370:            result = (version != constraint)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:372:            result = not _match_prefix(version, constraint)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:375:    def _match_compatible(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:376:        version, constraint = self._adjust_local(version, constraint, prefix)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:377:        if version == constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:379:        if version < constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:383:        release_clause = constraint._release_clause
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:637:    def _match_compatible(self, version, constraint, prefix):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:638:        if version < constraint:
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:640:        m = self.numeric_re.match(str(constraint))
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:643:                           ' and constraint %s', version, constraint)
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\distlib\version.py:720:    def is_valid_constraint_list(self, s):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\pkg_resources\__init__.py:3338:    at their own risk.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\pyparsing\core.py:514:            # guard against looping forever through recursive grammars
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\requests\sessions.py:687:        # Guard against that specific failure case.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\resolvelib\providers.py:64:        """Find all possible candidates that satisfy the given constraints.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\resolvelib\providers.py:122:        """Take a collection of constraints, spit out the resolution result.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\resolvelib\providers.py:128:        :param requirements: A collection of constraints.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\resolvelib\resolvers.py:518:        """Take a collection of constraints, spit out the resolution result.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\traceback.py:461:                if frame_summary.f_locals.get("_rich_traceback_guard", False):
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\traceback.py:734:        _rich_traceback_guard = True
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:769:    "eight-spoked_asterisk": "✳",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:962:    "guard": "💂",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:963:    "guard_dark_skin_tone": "💂🏿",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:964:    "guard_light_skin_tone": "💂🏻",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:965:    "guard_medium-dark_skin_tone": "💂🏾",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:966:    "guard_medium-light_skin_tone": "💂🏼",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:967:    "guard_medium_skin_tone": "💂🏽",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1301:    "man_guard": "💂\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1302:    "man_guard_dark_skin_tone": "💂🏿\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1303:    "man_guard_light_skin_tone": "💂🏻\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1304:    "man_guard_medium-dark_skin_tone": "💂🏾\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1305:    "man_guard_medium-light_skin_tone": "💂🏼\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:1306:    "man_guard_medium_skin_tone": "💂🏽\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2537:    "woman_guard": "💂\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2538:    "woman_guard_dark_skin_tone": "💂🏿\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2539:    "woman_guard_light_skin_tone": "💂🏻\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2540:    "woman_guard_medium-dark_skin_tone": "💂🏾\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2541:    "woman_guard_medium-light_skin_tone": "💂🏼\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2542:    "woman_guard_medium_skin_tone": "💂🏽\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2769:    "keycap_asterisk": "*⃣",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:2958:    "eight_spoked_asterisk": "✳",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_emoji_codes.py:3276:    "guardsman": "💂",
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_ratio.py:21:    """Divide total space to satisfy size, ratio, and minimum_size, constraints.
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\rich\_ratio.py:24:    impossible to satisfy all the constraints. For instance, if there are two edges
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\truststore\_windows.py:207:CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG = 0x00000008
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\truststore\_windows.py:223:    | CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\urllib3\util\retry.py:118:        Set to ``None`` to remove this constraint and fall back on other
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\urllib3\util\ssl_.py:308:        # there is a risk associated with it being on wire,
tradingbot-backend\.venv\Lib\site-packages\pip\_vendor\urllib3\util\ssl_.py:334:    # matter due to safe-guards SSLContext has to prevent an SSLContext with
tradingbot-backend\.venv\Lib\site-packages\pkg_resources\__init__.py:3671:    at their own risk.
tradingbot-backend\.venv\Lib\site-packages\postgrest\_async\request_builder.py:335:            on_conflict: Specified columns to be made to work with UNIQUE constraint.
tradingbot-backend\.venv\Lib\site-packages\postgrest\_sync\request_builder.py:335:            on_conflict: Specified columns to be made to work with UNIQUE constraint.
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:132:    # field constraints with the default value, it's also used in update_from_config below
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:133:    __field_constraints__ = {
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:183:            **self.__field_constraints__,
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:189:    def get_constraints(self) -> Set[str]:
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:191:        Gets the constraints set on the field by comparing the constraint value with its default value
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:193:        :return: the constraints set on field_info
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:195:        return {attr for attr, default in self.__field_constraints__.items() if getattr(self, attr) != default}
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:209:                if current_value is self.__field_constraints__.get(attr_name, None):
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:592:            elif self.type_.__constraints__:
tradingbot-backend\.venv\Lib\site-packages\pydantic\fields.py:593:                self.type_ = Union[self.type_.__constraints__]
tradingbot-backend\.venv\Lib\site-packages\pydantic\main.py:833:        # The extra "is not None" guards are not logically necessary but optimizes performance for the simple case.
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:998:_map_types_constraint: Dict[Any, Callable[..., type]] = {int: conint, float: confloat, Decimal: condecimal}
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1012:    constraints = field_info.get_constraints()
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1013:    used_constraints: Set[str] = set()
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1014:    if constraints:
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1015:        annotation, used_constraints = get_annotation_with_constraints(annotation, field_info)
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1017:        used_constraints.add('allow_mutation')
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1019:    unused_constraints = constraints - used_constraints
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1020:    if unused_constraints:
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1022:            f'On field "{field_name}" the following field constraints are set but not enforced: '
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1023:            f'{", ".join(unused_constraints)}. '
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1024:            f'\nFor more details see https://docs.pydantic.dev/usage/schema/#unenforced-field-constraints'
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1030:def get_annotation_with_constraints(annotation: Any, field_info: FieldInfo) -> Tuple[Type[Any], Set[str]]:  # noqa: C901
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1032:    Get an annotation with used constraints implemented for numbers and strings based on the field_info.
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1036:    :return: the same ``annotation`` if unmodified or a new annotation along with the used constraints.
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1038:    used_constraints: Set[str] = set()
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1064:                used_constraints.update({'min_items', 'max_items', 'unique_items'})
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1073:                used_constraints.update({'min_items', 'max_items'})
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1077:                used_constraints.update({'min_items', 'max_items'})
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1088:        constraint_func: Optional[Callable[..., type]] = None
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1093:                def constraint_func(**kw: Any) -> Type[Any]:
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1100:                    def constraint_func(**kw: Any) -> Type[Any]:
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1104:                    constraint_func = constr
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1109:                    def constraint_func(**kw: Any) -> Type[Any]:
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1113:                    constraint_func = conbytes
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1133:                constraint_func = _map_types_constraint[numeric_type]
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1136:            used_constraints.update(set(attrs))
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1143:                constraint_func = cast(Callable[..., type], constraint_func)
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1144:                return constraint_func(**kwargs)
tradingbot-backend\.venv\Lib\site-packages\pydantic\schema.py:1147:    return go(annotation), used_constraints
tradingbot-backend\.venv\Lib\site-packages\pydantic\types.py:288:        # Modify constraints to account for differences between IEEE floats and JSON
tradingbot-backend\.venv\Lib\site-packages\pydantic\utils.py:690:        # do we really dare to catch ALL errors? Seems a bit risky
tradingbot-backend\.venv\Lib\site-packages\pydantic\validators.py:134:    # NOTICE: this does not fully protect user from the DOS risk since the standard library JSON implementation
tradingbot-backend\.venv\Lib\site-packages\pydantic\_hypothesis_plugin.py:22:to generate instances of the builtin `int` type which match the constraints.
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:42:        'date_constraints': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:43:            # ISO 8601-based date/time constraints
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:45:            # ISO 8601-based duration constraints + optional trailing slash
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:75:        'constraint_values': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:77:             bygroups(Punctuation, Name.Decorator, Punctuation), 'adl14_code_constraint'),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:78:            # ADL 1.4 ordinal constraint
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:81:            include('date_constraints'),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:126:        'adl14_code_constraint': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:191:    url = 'https://specifications.openehr.org/releases/AM/latest/ADL2.html#_cadl_constraint_adl'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:215:            # regex in slot or as string constraint
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:218:            # regex in slot or as string constraint
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\archetype.py:231:            include('constraint_values'),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\asm.py:420:                'cfguard_checkcc', 'cleanup', 'cleanuppad', 'cleanupret',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\carbon.py:43:             r'base|addr|extends|choice|constraint|impl)\b', Keyword.Declaration),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\carbon.py:91:        if 'constraint' in text:
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\console.py:98:             r"guard_true|guard_false|guard_value|guard_isnull|"
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\console.py:99:             r"guard_nonnull_class|guard_nonnull|guard_class|guard_no_overflow|"
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\console.py:100:             r"guard_not_forced|guard_no_exception|guard_not_invalidated)",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\dotnet.py:629:        'atomic', 'break', 'checked', 'component', 'const', 'constraint',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\elpi.py:81:            (rf"\b(constraint)(\s+)(({const_sym_re}(\s+)?)+)",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\esoteric.py:213:                    'fault_ep', 'G', 'guard', 'guard_size', 'init', 'ip',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\foxpro.py:268:             r'XMLConstraints|XMLNameIsXPath|XMLNamespace|XMLName|'
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:237:                    'abstract-opaque', 'type-param-constraint', 'type-name')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:296:            default(('#pop', 'typedef-body', 'type-param-constraint',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:308:                     'type-param-constraint', 'type-name')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:315:            (ident_no_keyword, Name, ('enum-member', 'type-param-constraint')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:328:                     'type-param-constraint', 'type-name')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:371:              'parenthesis-open', 'type-param-constraint')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:373:                     'parenthesis-open', 'type-param-constraint')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:386:                                    'type-param-constraint')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:578:            default(('#pop', 'case-sep', 'case-guard', 'expr')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:587:        'case-guard': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:745:        # optional type-param that may include constraint
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:746:        # ie. <T:Constraint, T2:(ConstraintA,ConstraintB)>
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:747:        'type-param-constraint': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:749:            (r'<(?!=)', Punctuation, ('#pop', 'type-param-constraint-sep',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:750:                                      'type-param-constraint-flag', 'type-name')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:754:        'type-param-constraint-sep': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:757:            (r',', Punctuation, ('#pop', 'type-param-constraint-sep',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:758:                                 'type-param-constraint-flag', 'type-name')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:761:        # the optional constraint inside type-param
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:762:        'type-param-constraint-flag': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:764:            (r':', Punctuation, ('#pop', 'type-param-constraint-flag-type')),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:768:        'type-param-constraint-flag-type': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:770:            (r'\(', Punctuation, ('#pop', 'type-param-constraint-flag-type-sep',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\haxe.py:775:        'type-param-constraint-flag-type-sep': [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\hdl.py:202:                'constraint', 'context', 'continue', 'cover', 'covergroup',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\hdl.py:445:                'generic', 'group', 'guarded', 'if', 'impure', 'in',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\javascript.py:1050:            # This isn't really guarding against mishighlighting well-formed
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\lisp.py:832:        'current-reader-guard', 'current-readtable', 'current-seconds',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\lisp.py:833:        'current-security-guard', 'current-subprocess-custodian-mode',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\lisp.py:941:        'group-read-bit', 'group-write-bit', 'guard-evt', 'handle-evt',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\lisp.py:1049:        'make-resolved-module-path', 'make-security-guard', 'make-semaphore',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\lisp.py:1073:        'nack-guard-evt', 'namespace-anchor->empty-namespace',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\lisp.py:1115:        'poll-guard-evt', 'port->bytes', 'port->bytes-lines', 'port->lines',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\lisp.py:1211:        'seconds->date', 'security-guard?', 'semaphore-peek-evt',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:1571:                        "matlab.mock.constraints.Occurred",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:1572:                        "matlab.mock.constraints.WasAccessed",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:1573:                        "matlab.mock.constraints.WasCalled",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:1574:                        "matlab.mock.constraints.WasSet",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:1673:                        "matlab.unittest.constraints.BooleanConstraint",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:1674:                        "matlab.unittest.constraints.Constraint",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:1675:                        "matlab.unittest.constraints.Tolerance",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\matlab.py:1676:                        "matlab.unittest.diagnostics.ConstraintDiagnostic",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\ml.py:368:        'and', 'as', 'assert', 'begin', 'class', 'constraint', 'do', 'done',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\ml.py:783:        'as', 'assert', 'begin', 'class', 'constraint', 'do', 'done', 'downto',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\modeling.py:324:             # a range constraint
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\modula2.py:396:        'ABSTRACT', 'AS', 'CLASS', 'GUARD', 'INHERIT', 'OVERRIDE', 'READONLY',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\modula2.py:397:        'REVEAL', 'TRACED', 'UNSAFEGUARDED',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\monte.py:24:    'extends', 'finally', 'for', 'guards', 'if', 'implements', 'import',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\monte.py:59:_guards = [
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\monte.py:62:    'Set', 'Str', 'SubrangeGuard', 'Transparent', 'Void',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\monte.py:134:            # Safe scope guards
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\monte.py:135:            (words(_guards, prefix='\\b', suffix='\\b'), Keyword.Type),
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\objective.py:419:                'do', 'else', 'fallthrough', 'for', 'guard', 'if', 'in', 'is',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\pddl.py:63:                ':constraints', ':action-costs', ':multi-agent',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\perl.py:285:        'constraints','construct','contains','contents','copy','cos','cosec',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\smv.py:41:                    'CONSTRAINT', 'SIMPWFF', 'CTLWFF', 'LTLWFF', 'PSLWFF',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\theorem.py:90:    # 'as', 'assert', 'begin', 'class', 'constraint', 'do', 'done',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\vip.py:98:               'guard', 'multi', 'nondeterm', 'or', 'orelse', 'otherwise', 'procedure', 'resolve', 'single', 'suspending')
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_cocoa_builtins.py:14:COCOA_INTERFACES = {'AAAttribution', 'ABNewPersonViewController', 'ABPeoplePickerNavigationController', 'ABPersonViewController', 'ABUnknownPersonViewController', 'ACAccount', 'ACAccountCredential', 'ACAccountStore', 'ACAccountType', 'ADBannerView', 'ADClient', 'ADInterstitialAd', 'ADInterstitialAdPresentationViewController', 'AEAssessmentConfiguration', 'AEAssessmentSession', 'ALAsset', 'ALAssetRepresentation', 'AL
AssetsFilter', 'ALAssetsGroup', 'ALAssetsLibrary', 'APActivationPayload', 'ARAnchor', 'ARAppClipCodeAnchor', 'ARBody2D', 'ARBodyAnchor', 'ARBodyTrackingConfiguration', 'ARCamera', 'ARCoachingOverlayView', 'ARCollaborationData', 'ARConfiguration', 'ARDepthData', 'ARDirectionalLightEstimate', 'AREnvironmentProbeAnchor', 'ARFaceAnchor', 'ARFaceGeometry', 'ARFaceTrackingConfiguration', 'ARFrame', 'ARGeoAnchor', 'ARGeoTrackingConfiguration', 'ARGeoTrackingStatus', 'ARGeometryElement', 'ARGeometrySour
ce', 'ARHitTestResult', 'ARImageAnchor', 'ARImageTrackingConfiguration', 'ARLightEstimate', 'ARMatteGenerator', 'ARMeshAnchor', 'ARMeshGeometry', 'ARObjectAnchor', 'ARObjectScanningConfiguration', 'AROrientationTrackingConfiguration', 'ARParticipantAnchor', 'ARPlaneAnchor', 'ARPlaneGeometry', 'ARPointCloud', 'ARPositionalTrackingConfiguration', 'ARQuickLookPreviewItem', 'ARRaycastQuery', 'ARRaycastResult', 'ARReferenceImage', 'ARReferenceObject', 'ARSCNFaceGeometry', 'ARSCNPlaneGeometry', 'ARSCN
View', 'ARSKView', 'ARSession', 'ARSkeleton', 'ARSkeleton2D', 'ARSkeleton3D', 'ARSkeletonDefinition', 'ARTrackedRaycast', 'ARVideoFormat', 'ARView', 'ARWorldMap', 'ARWorldTrackingConfiguration', 'ASAccountAuthenticationModificationController', 'ASAccountAuthenticationModificationExtensionContext', 'ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest', 'ASAccountAuthenticationModificationRequest', 'ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest'
, 'ASAccountAuthenticationModificationViewController', 'ASAuthorization', 'ASAuthorizationAppleIDButton', 'ASAuthorizationAppleIDCredential', 'ASAuthorizationAppleIDProvider', 'ASAuthorizationAppleIDRequest', 'ASAuthorizationController', 'ASAuthorizationOpenIDRequest', 'ASAuthorizationPasswordProvider', 'ASAuthorizationPasswordRequest', 'ASAuthorizationProviderExtensionAuthorizationRequest', 'ASAuthorizationRequest', 'ASAuthorizationSingleSignOnCredential', 'ASAuthorizationSingleSignOnProvider',
 'ASAuthorizationSingleSignOnRequest', 'ASCredentialIdentityStore', 'ASCredentialIdentityStoreState', 'ASCredentialProviderExtensionContext', 'ASCredentialProviderViewController', 'ASCredentialServiceIdentifier', 'ASIdentifierManager', 'ASPasswordCredential', 'ASPasswordCredentialIdentity', 'ASWebAuthenticationSession', 'ASWebAuthenticationSessionRequest', 'ASWebAuthenticationSessionWebBrowserSessionManager', 'ATTrackingManager', 'AUAudioUnit', 'AUAudioUnitBus', 'AUAudioUnitBusArray', 'AUAudioUn
itPreset', 'AUAudioUnitV2Bridge', 'AUAudioUnitViewConfiguration', 'AUParameter', 'AUParameterGroup', 'AUParameterNode', 'AUParameterTree', 'AUViewController', 'AVAggregateAssetDownloadTask', 'AVAsset', 'AVAssetCache', 'AVAssetDownloadStorageManagementPolicy', 'AVAssetDownloadStorageManager', 'AVAssetDownloadTask', 'AVAssetDownloadURLSession', 'AVAssetExportSession', 'AVAssetImageGenerator', 'AVAssetReader', 'AVAssetReaderAudioMixOutput', 'AVAssetReaderOutput', 'AVAssetReaderOutputMetadataAdaptor
', 'AVAssetReaderSampleReferenceOutput', 'AVAssetReaderTrackOutput', 'AVAssetReaderVideoCompositionOutput', 'AVAssetResourceLoader', 'AVAssetResourceLoadingContentInformationRequest', 'AVAssetResourceLoadingDataRequest', 'AVAssetResourceLoadingRequest', 'AVAssetResourceLoadingRequestor', 'AVAssetResourceRenewalRequest', 'AVAssetSegmentReport', 'AVAssetSegmentReportSampleInformation', 'AVAssetSegmentTrackReport', 'AVAssetTrack', 'AVAssetTrackGroup', 'AVAssetTrackSegment', 'AVAssetWriter', 'AVAsse
tWriterInput', 'AVAssetWriterInputGroup', 'AVAssetWriterInputMetadataAdaptor', 'AVAssetWriterInputPassDescription', 'AVAssetWriterInputPixelBufferAdaptor', 'AVAsynchronousCIImageFilteringRequest', 'AVAsynchronousVideoCompositionRequest', 'AVAudioMix', 'AVAudioMixInputParameters', 'AVAudioSession', 'AVCameraCalibrationData', 'AVCaptureAudioChannel', 'AVCaptureAudioDataOutput', 'AVCaptureAudioFileOutput', 'AVCaptureAudioPreviewOutput', 'AVCaptureAutoExposureBracketedStillImageSettings', 'AVCapture
BracketedStillImageSettings', 'AVCaptureConnection', 'AVCaptureDataOutputSynchronizer', 'AVCaptureDepthDataOutput', 'AVCaptureDevice', 'AVCaptureDeviceDiscoverySession', 'AVCaptureDeviceFormat', 'AVCaptureDeviceInput', 'AVCaptureDeviceInputSource', 'AVCaptureFileOutput', 'AVCaptureInput', 'AVCaptureInputPort', 'AVCaptureManualExposureBracketedStillImageSettings', 'AVCaptureMetadataInput', 'AVCaptureMetadataOutput', 'AVCaptureMovieFileOutput', 'AVCaptureMultiCamSession', 'AVCaptureOutput', 'AVCap
turePhoto', 'AVCapturePhotoBracketSettings', 'AVCapturePhotoOutput', 'AVCapturePhotoSettings', 'AVCaptureResolvedPhotoSettings', 'AVCaptureScreenInput', 'AVCaptureSession', 'AVCaptureStillImageOutput', 'AVCaptureSynchronizedData', 'AVCaptureSynchronizedDataCollection', 'AVCaptureSynchronizedDepthData', 'AVCaptureSynchronizedMetadataObjectData', 'AVCaptureSynchronizedSampleBufferData', 'AVCaptureSystemPressureState', 'AVCaptureVideoDataOutput', 'AVCaptureVideoPreviewLayer', 'AVComposition', 'AVCo
mpositionTrack', 'AVCompositionTrackFormatDescriptionReplacement', 'AVCompositionTrackSegment', 'AVContentKeyRequest', 'AVContentKeyResponse', 'AVContentKeySession', 'AVDateRangeMetadataGroup', 'AVDepthData', 'AVDisplayCriteria', 'AVFragmentedAsset', 'AVFragmentedAssetMinder', 'AVFragmentedAssetTrack', 'AVFragmentedMovie', 'AVFragmentedMovieMinder', 'AVFragmentedMovieTrack', 'AVFrameRateRange', 'AVMediaDataStorage', 'AVMediaSelection', 'AVMediaSelectionGroup', 'AVMediaSelectionOption', 'AVMetada
taBodyObject', 'AVMetadataCatBodyObject', 'AVMetadataDogBodyObject', 'AVMetadataFaceObject', 'AVMetadataGroup', 'AVMetadataHumanBodyObject', 'AVMetadataItem', 'AVMetadataItemFilter', 'AVMetadataItemValueRequest', 'AVMetadataMachineReadableCodeObject', 'AVMetadataObject', 'AVMetadataSalientObject', 'AVMovie', 'AVMovieTrack', 'AVMutableAssetDownloadStorageManagementPolicy', 'AVMutableAudioMix', 'AVMutableAudioMixInputParameters', 'AVMutableComposition', 'AVMutableCompositionTrack', 'AVMutableDateR
angeMetadataGroup', 'AVMutableMediaSelection', 'AVMutableMetadataItem', 'AVMutableMovie', 'AVMutableMovieTrack', 'AVMutableTimedMetadataGroup', 'AVMutableVideoComposition', 'AVMutableVideoCompositionInstruction', 'AVMutableVideoCompositionLayerInstruction', 'AVOutputSettingsAssistant', 'AVPersistableContentKeyRequest', 'AVPictureInPictureController', 'AVPlayer', 'AVPlayerItem', 'AVPlayerItemAccessLog', 'AVPlayerItemAccessLogEvent', 'AVPlayerItemErrorLog', 'AVPlayerItemErrorLogEvent', 'AVPlayerIt
emLegibleOutput', 'AVPlayerItemMediaDataCollector', 'AVPlayerItemMetadataCollector', 'AVPlayerItemMetadataOutput', 'AVPlayerItemOutput', 'AVPlayerItemTrack', 'AVPlayerItemVideoOutput', 'AVPlayerLayer', 'AVPlayerLooper', 'AVPlayerMediaSelectionCriteria', 'AVPlayerViewController', 'AVPortraitEffectsMatte', 'AVQueuePlayer', 'AVRouteDetector', 'AVRoutePickerView', 'AVSampleBufferAudioRenderer', 'AVSampleBufferDisplayLayer', 'AVSampleBufferRenderSynchronizer', 'AVSemanticSegmentationMatte', 'AVSynchr
onizedLayer', 'AVTextStyleRule', 'AVTimedMetadataGroup', 'AVURLAsset', 'AVVideoComposition', 'AVVideoCompositionCoreAnimationTool', 'AVVideoCompositionInstruction', 'AVVideoCompositionLayerInstruction', 'AVVideoCompositionRenderContext', 'AVVideoCompositionRenderHint', 'AXCustomContent', 'BCChatAction', 'BCChatButton', 'BGAppRefreshTask', 'BGAppRefreshTaskRequest', 'BGProcessingTask', 'BGProcessingTaskRequest', 'BGTask', 'BGTaskRequest', 'BGTaskScheduler', 'CAAnimation', 'CAAnimationGroup', 'CAB
TMIDICentralViewController', 'CABTMIDILocalPeripheralViewController', 'CABasicAnimation', 'CADisplayLink', 'CAEAGLLayer', 'CAEmitterCell', 'CAEmitterLayer', 'CAGradientLayer', 'CAInterAppAudioSwitcherView', 'CAInterAppAudioTransportView', 'CAKeyframeAnimation', 'CALayer', 'CAMediaTimingFunction', 'CAMetalLayer', 'CAPropertyAnimation', 'CAReplicatorLayer', 'CAScrollLayer', 'CAShapeLayer', 'CASpringAnimation', 'CATextLayer', 'CATiledLayer', 'CATransaction', 'CATransformLayer', 'CATransition', 'CAV
alueFunction', 'CBATTRequest', 'CBAttribute', 'CBCentral', 'CBCentralManager', 'CBCharacteristic', 'CBDescriptor', 'CBL2CAPChannel', 'CBManager', 'CBMutableCharacteristic', 'CBMutableDescriptor', 'CBMutableService', 'CBPeer', 'CBPeripheral', 'CBPeripheralManager', 'CBService', 'CBUUID', 'CHHapticDynamicParameter', 'CHHapticEngine', 'CHHapticEvent', 'CHHapticEventParameter', 'CHHapticParameterCurve', 'CHHapticParameterCurveControlPoint', 'CHHapticPattern', 'CIAztecCodeDescriptor', 'CIBarcodeDescr
iptor', 'CIBlendKernel', 'CIColor', 'CIColorKernel', 'CIContext', 'CIDataMatrixCodeDescriptor', 'CIDetector', 'CIFaceFeature', 'CIFeature', 'CIFilter', 'CIFilterGenerator', 'CIFilterShape', 'CIImage', 'CIImageAccumulator', 'CIImageProcessorKernel', 'CIKernel', 'CIPDF417CodeDescriptor', 'CIPlugIn', 'CIQRCodeDescriptor', 'CIQRCodeFeature', 'CIRectangleFeature', 'CIRenderDestination', 'CIRenderInfo', 'CIRenderTask', 'CISampler', 'CITextFeature', 'CIVector', 'CIWarpKernel', 'CKAcceptSharesOperation'
, 'CKAsset', 'CKContainer', 'CKDatabase', 'CKDatabaseNotification', 'CKDatabaseOperation', 'CKDatabaseSubscription', 'CKDiscoverAllUserIdentitiesOperation', 'CKDiscoverUserIdentitiesOperation', 'CKFetchDatabaseChangesOperation', 'CKFetchNotificationChangesOperation', 'CKFetchRecordChangesOperation', 'CKFetchRecordZoneChangesConfiguration', 'CKFetchRecordZoneChangesOperation', 'CKFetchRecordZoneChangesOptions', 'CKFetchRecordZonesOperation', 'CKFetchRecordsOperation', 'CKFetchShareMetadataOperati
on', 'CKFetchShareParticipantsOperation', 'CKFetchSubscriptionsOperation', 'CKFetchWebAuthTokenOperation', 'CKLocationSortDescriptor', 'CKMarkNotificationsReadOperation', 'CKModifyBadgeOperation', 'CKModifyRecordZonesOperation', 'CKModifyRecordsOperation', 'CKModifySubscriptionsOperation', 'CKNotification', 'CKNotificationID', 'CKNotificationInfo', 'CKOperation', 'CKOperationConfiguration', 'CKOperationGroup', 'CKQuery', 'CKQueryCursor', 'CKQueryNotification', 'CKQueryOperation', 'CKQuerySubscri
ption', 'CKRecord', 'CKRecordID', 'CKRecordZone', 'CKRecordZoneID', 'CKRecordZoneNotification', 'CKRecordZoneSubscription', 'CKReference', 'CKServerChangeToken', 'CKShare', 'CKShareMetadata', 'CKShareParticipant', 'CKSubscription', 'CKUserIdentity', 'CKUserIdentityLookupInfo', 'CLBeacon', 'CLBeaconIdentityConstraint', 'CLBeaconRegion', 'CLCircularRegion', 'CLFloor', 'CLGeocoder', 'CLHeading', 'CLKComplication', 'CLKComplicationDescriptor', 'CLKComplicationServer', 'CLKComplicationTemplate', 'CLK
ComplicationTemplateCircularSmallRingImage', 'CLKComplicationTemplateCircularSmallRingText', 'CLKComplicationTemplateCircularSmallSimpleImage', 'CLKComplicationTemplateCircularSmallSimpleText', 'CLKComplicationTemplateCircularSmallStackImage', 'CLKComplicationTemplateCircularSmallStackText', 'CLKComplicationTemplateExtraLargeColumnsText', 'CLKComplicationTemplateExtraLargeRingImage', 'CLKComplicationTemplateExtraLargeRingText', 'CLKComplicationTemplateExtraLargeSimpleImage', 'CLKComplicationTemp
lateExtraLargeSimpleText', 'CLKComplicationTemplateExtraLargeStackImage', 'CLKComplicationTemplateExtraLargeStackText', 'CLKComplicationTemplateGraphicBezelCircularText', 'CLKComplicationTemplateGraphicCircular', 'CLKComplicationTemplateGraphicCircularClosedGaugeImage', 'CLKComplicationTemplateGraphicCircularClosedGaugeText', 'CLKComplicationTemplateGraphicCircularImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicCircularOpenGaugeRangeText', 'CLKCompl
icationTemplateGraphicCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicCircularStackImage', 'CLKComplicationTemplateGraphicCircularStackText', 'CLKComplicationTemplateGraphicCornerCircularImage', 'CLKComplicationTemplateGraphicCornerGaugeImage', 'CLKComplicationTemplateGraphicCornerGaugeText', 'CLKComplicationTemplateGraphicCornerStackText', 'CLKComplicationTemplateGraphicCornerTextImage', 'CLKComplicationTemplateGraphicExtraLargeCircular', 'CLKComplicationTemplateGraphicExtraLargeCi
rcularClosedGaugeImage', 'CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText', 'CLKComplicationTemplateGraphicExtraLargeCircularImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText', 'CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText', 'CLKComplicationTemplateGraphicExtraLargeCircularStackImage', 'CLKComplicationTemplateGraphicExtraLargeCircularStackText', 'CLKComplicationTempl
ateGraphicRectangularFullImage', 'CLKComplicationTemplateGraphicRectangularLargeImage', 'CLKComplicationTemplateGraphicRectangularStandardBody', 'CLKComplicationTemplateGraphicRectangularTextGauge', 'CLKComplicationTemplateModularLargeColumns', 'CLKComplicationTemplateModularLargeStandardBody', 'CLKComplicationTemplateModularLargeTable', 'CLKComplicationTemplateModularLargeTallBody', 'CLKComplicationTemplateModularSmallColumnsText', 'CLKComplicationTemplateModularSmallRingImage', 'CLKComplicatio
nTemplateModularSmallRingText', 'CLKComplicationTemplateModularSmallSimpleImage', 'CLKComplicationTemplateModularSmallSimpleText', 'CLKComplicationTemplateModularSmallStackImage', 'CLKComplicationTemplateModularSmallStackText', 'CLKComplicationTemplateUtilitarianLargeFlat', 'CLKComplicationTemplateUtilitarianSmallFlat', 'CLKComplicationTemplateUtilitarianSmallRingImage', 'CLKComplicationTemplateUtilitarianSmallRingText', 'CLKComplicationTemplateUtilitarianSmallSquare', 'CLKComplicationTimelineEn
try', 'CLKDateTextProvider', 'CLKFullColorImageProvider', 'CLKGaugeProvider', 'CLKImageProvider', 'CLKRelativeDateTextProvider', 'CLKSimpleGaugeProvider', 'CLKSimpleTextProvider', 'CLKTextProvider', 'CLKTimeIntervalGaugeProvider', 'CLKTimeIntervalTextProvider', 'CLKTimeTextProvider', 'CLKWatchFaceLibrary', 'CLLocation', 'CLLocationManager', 'CLPlacemark', 'CLRegion', 'CLSActivity', 'CLSActivityItem', 'CLSBinaryItem', 'CLSContext', 'CLSDataStore', 'CLSObject', 'CLSProgressReportingCapability', 'C
LSQuantityItem', 'CLSScoreItem', 'CLVisit', 'CMAccelerometerData', 'CMAltimeter', 'CMAltitudeData', 'CMAttitude', 'CMDeviceMotion', 'CMDyskineticSymptomResult', 'CMFallDetectionEvent', 'CMFallDetectionManager', 'CMGyroData', 'CMHeadphoneMotionManager', 'CMLogItem', 'CMMagnetometerData', 'CMMotionActivity', 'CMMotionActivityManager', 'CMMotionManager', 'CMMovementDisorderManager', 'CMPedometer', 'CMPedometerData', 'CMPedometerEvent', 'CMRecordedAccelerometerData', 'CMRecordedRotationRateData', 'C
MRotationRateData', 'CMSensorDataList', 'CMSensorRecorder', 'CMStepCounter', 'CMTremorResult', 'CNChangeHistoryAddContactEvent', 'CNChangeHistoryAddGroupEvent', 'CNChangeHistoryAddMemberToGroupEvent', 'CNChangeHistoryAddSubgroupToGroupEvent', 'CNChangeHistoryDeleteContactEvent', 'CNChangeHistoryDeleteGroupEvent', 'CNChangeHistoryDropEverythingEvent', 'CNChangeHistoryEvent', 'CNChangeHistoryFetchRequest', 'CNChangeHistoryRemoveMemberFromGroupEvent', 'CNChangeHistoryRemoveSubgroupFromGroupEvent', 
'CNChangeHistoryUpdateContactEvent', 'CNChangeHistoryUpdateGroupEvent', 'CNContact', 'CNContactFetchRequest', 'CNContactFormatter', 'CNContactPickerViewController', 'CNContactProperty', 'CNContactRelation', 'CNContactStore', 'CNContactVCardSerialization', 'CNContactViewController', 'CNContactsUserDefaults', 'CNContainer', 'CNFetchRequest', 'CNFetchResult', 'CNGroup', 'CNInstantMessageAddress', 'CNLabeledValue', 'CNMutableContact', 'CNMutableGroup', 'CNMutablePostalAddress', 'CNPhoneNumber', 'CNP
ostalAddress', 'CNPostalAddressFormatter', 'CNSaveRequest', 'CNSocialProfile', 'CPActionSheetTemplate', 'CPAlertAction', 'CPAlertTemplate', 'CPBarButton', 'CPButton', 'CPContact', 'CPContactCallButton', 'CPContactDirectionsButton', 'CPContactMessageButton', 'CPContactTemplate', 'CPDashboardButton', 'CPDashboardController', 'CPGridButton', 'CPGridTemplate', 'CPImageSet', 'CPInformationItem', 'CPInformationRatingItem', 'CPInformationTemplate', 'CPInterfaceController', 'CPListImageRowItem', 'CPList
Item', 'CPListSection', 'CPListTemplate', 'CPManeuver', 'CPMapButton', 'CPMapTemplate', 'CPMessageComposeBarButton', 'CPMessageListItem', 'CPMessageListItemLeadingConfiguration', 'CPMessageListItemTrailingConfiguration', 'CPNavigationAlert', 'CPNavigationSession', 'CPNowPlayingAddToLibraryButton', 'CPNowPlayingButton', 'CPNowPlayingImageButton', 'CPNowPlayingMoreButton', 'CPNowPlayingPlaybackRateButton', 'CPNowPlayingRepeatButton', 'CPNowPlayingShuffleButton', 'CPNowPlayingTemplate', 'CPPointOfI
nterest', 'CPPointOfInterestTemplate', 'CPRouteChoice', 'CPSearchTemplate', 'CPSessionConfiguration', 'CPTabBarTemplate', 'CPTemplate', 'CPTemplateApplicationDashboardScene', 'CPTemplateApplicationScene', 'CPTextButton', 'CPTravelEstimates', 'CPTrip', 'CPTripPreviewTextConfiguration', 'CPVoiceControlState', 'CPVoiceControlTemplate', 'CPWindow', 'CSCustomAttributeKey', 'CSIndexExtensionRequestHandler', 'CSLocalizedString', 'CSPerson', 'CSSearchQuery', 'CSSearchableIndex', 'CSSearchableItem', 'CSS
earchableItemAttributeSet', 'CTCall', 'CTCallCenter', 'CTCarrier', 'CTCellularData', 'CTCellularPlanProvisioning', 'CTCellularPlanProvisioningRequest', 'CTSubscriber', 'CTSubscriberInfo', 'CTTelephonyNetworkInfo', 'CXAction', 'CXAnswerCallAction', 'CXCall', 'CXCallAction', 'CXCallController', 'CXCallDirectoryExtensionContext', 'CXCallDirectoryManager', 'CXCallDirectoryProvider', 'CXCallObserver', 'CXCallUpdate', 'CXEndCallAction', 'CXHandle', 'CXPlayDTMFCallAction', 'CXProvider', 'CXProviderConf
iguration', 'CXSetGroupCallAction', 'CXSetHeldCallAction', 'CXSetMutedCallAction', 'CXStartCallAction', 'CXTransaction', 'DCAppAttestService', 'DCDevice', 'EAAccessory', 'EAAccessoryManager', 'EAGLContext', 'EAGLSharegroup', 'EASession', 'EAWiFiUnconfiguredAccessory', 'EAWiFiUnconfiguredAccessoryBrowser', 'EKAlarm', 'EKCalendar', 'EKCalendarChooser', 'EKCalendarItem', 'EKEvent', 'EKEventEditViewController', 'EKEventStore', 'EKEventViewController', 'EKObject', 'EKParticipant', 'EKRecurrenceDayOfW
eek', 'EKRecurrenceEnd', 'EKRecurrenceRule', 'EKReminder', 'EKSource', 'EKStructuredLocation', 'ENExposureConfiguration', 'ENExposureDaySummary', 'ENExposureDetectionSummary', 'ENExposureInfo', 'ENExposureSummaryItem', 'ENExposureWindow', 'ENManager', 'ENScanInstance', 'ENTemporaryExposureKey', 'EntityRotationGestureRecognizer', 'EntityScaleGestureRecognizer', 'EntityTranslationGestureRecognizer', 'FPUIActionExtensionContext', 'FPUIActionExtensionViewController', 'GCColor', 'GCController', 'GCCo
ntrollerAxisInput', 'GCControllerButtonInput', 'GCControllerDirectionPad', 'GCControllerElement', 'GCControllerTouchpad', 'GCDeviceBattery', 'GCDeviceCursor', 'GCDeviceHaptics', 'GCDeviceLight', 'GCDirectionalGamepad', 'GCDualShockGamepad', 'GCEventViewController', 'GCExtendedGamepad', 'GCExtendedGamepadSnapshot', 'GCGamepad', 'GCGamepadSnapshot', 'GCKeyboard', 'GCKeyboardInput', 'GCMicroGamepad', 'GCMicroGamepadSnapshot', 'GCMotion', 'GCMouse', 'GCMouseInput', 'GCPhysicalInputProfile', 'GCXboxG
amepad', 'GKARC4RandomSource', 'GKAccessPoint', 'GKAchievement', 'GKAchievementChallenge', 'GKAchievementDescription', 'GKAchievementViewController', 'GKAgent', 'GKAgent2D', 'GKAgent3D', 'GKBasePlayer', 'GKBehavior', 'GKBillowNoiseSource', 'GKChallenge', 'GKChallengeEventHandler', 'GKCheckerboardNoiseSource', 'GKCircleObstacle', 'GKCloudPlayer', 'GKCoherentNoiseSource', 'GKComponent', 'GKComponentSystem', 'GKCompositeBehavior', 'GKConstantNoiseSource', 'GKCylindersNoiseSource', 'GKDecisionNode',
 'GKDecisionTree', 'GKEntity', 'GKFriendRequestComposeViewController', 'GKGameCenterViewController', 'GKGameSession', 'GKGameSessionSharingViewController', 'GKGaussianDistribution', 'GKGoal', 'GKGraph', 'GKGraphNode', 'GKGraphNode2D', 'GKGraphNode3D', 'GKGridGraph', 'GKGridGraphNode', 'GKInvite', 'GKLeaderboard', 'GKLeaderboardEntry', 'GKLeaderboardScore', 'GKLeaderboardSet', 'GKLeaderboardViewController', 'GKLinearCongruentialRandomSource', 'GKLocalPlayer', 'GKMatch', 'GKMatchRequest', 'GKMatch
maker', 'GKMatchmakerViewController', 'GKMersenneTwisterRandomSource', 'GKMeshGraph', 'GKMinmaxStrategist', 'GKMonteCarloStrategist', 'GKNSPredicateRule', 'GKNoise', 'GKNoiseMap', 'GKNoiseSource', 'GKNotificationBanner', 'GKObstacle', 'GKObstacleGraph', 'GKOctree', 'GKOctreeNode', 'GKPath', 'GKPeerPickerController', 'GKPerlinNoiseSource', 'GKPlayer', 'GKPolygonObstacle', 'GKQuadtree', 'GKQuadtreeNode', 'GKRTree', 'GKRandomDistribution', 'GKRandomSource', 'GKRidgedNoiseSource', 'GKRule', 'GKRuleS
ystem', 'GKSCNNodeComponent', 'GKSKNodeComponent', 'GKSavedGame', 'GKScene', 'GKScore', 'GKScoreChallenge', 'GKSession', 'GKShuffledDistribution', 'GKSphereObstacle', 'GKSpheresNoiseSource', 'GKState', 'GKStateMachine', 'GKTurnBasedEventHandler', 'GKTurnBasedExchangeReply', 'GKTurnBasedMatch', 'GKTurnBasedMatchmakerViewController', 'GKTurnBasedParticipant', 'GKVoiceChat', 'GKVoiceChatService', 'GKVoronoiNoiseSource', 'GLKBaseEffect', 'GLKEffectProperty', 'GLKEffectPropertyFog', 'GLKEffectPropert
yLight', 'GLKEffectPropertyMaterial', 'GLKEffectPropertyTexture', 'GLKEffectPropertyTransform', 'GLKMesh', 'GLKMeshBuffer', 'GLKMeshBufferAllocator', 'GLKReflectionMapEffect', 'GLKSkyboxEffect', 'GLKSubmesh', 'GLKTextureInfo', 'GLKTextureLoader', 'GLKView', 'GLKViewController', 'HKActivityMoveModeObject', 'HKActivityRingView', 'HKActivitySummary', 'HKActivitySummaryQuery', 'HKActivitySummaryType', 'HKAnchoredObjectQuery', 'HKAudiogramSample', 'HKAudiogramSampleType', 'HKAudiogramSensitivityPoint
', 'HKBiologicalSexObject', 'HKBloodTypeObject', 'HKCDADocument', 'HKCDADocumentSample', 'HKCategorySample', 'HKCategoryType', 'HKCharacteristicType', 'HKClinicalRecord', 'HKClinicalType', 'HKCorrelation', 'HKCorrelationQuery', 'HKCorrelationType', 'HKCumulativeQuantitySample', 'HKCumulativeQuantitySeriesSample', 'HKDeletedObject', 'HKDevice', 'HKDiscreteQuantitySample', 'HKDocumentQuery', 'HKDocumentSample', 'HKDocumentType', 'HKElectrocardiogram', 'HKElectrocardiogramQuery', 'HKElectrocardiogr
amType', 'HKElectrocardiogramVoltageMeasurement', 'HKFHIRResource', 'HKFHIRVersion', 'HKFitzpatrickSkinTypeObject', 'HKHealthStore', 'HKHeartbeatSeriesBuilder', 'HKHeartbeatSeriesQuery', 'HKHeartbeatSeriesSample', 'HKLiveWorkoutBuilder', 'HKLiveWorkoutDataSource', 'HKObject', 'HKObjectType', 'HKObserverQuery', 'HKQuantity', 'HKQuantitySample', 'HKQuantitySeriesSampleBuilder', 'HKQuantitySeriesSampleQuery', 'HKQuantityType', 'HKQuery', 'HKQueryAnchor', 'HKSample', 'HKSampleQuery', 'HKSampleType',
 'HKSeriesBuilder', 'HKSeriesSample', 'HKSeriesType', 'HKSource', 'HKSourceQuery', 'HKSourceRevision', 'HKStatistics', 'HKStatisticsCollection', 'HKStatisticsCollectionQuery', 'HKStatisticsQuery', 'HKUnit', 'HKWheelchairUseObject', 'HKWorkout', 'HKWorkoutBuilder', 'HKWorkoutConfiguration', 'HKWorkoutEvent', 'HKWorkoutRoute', 'HKWorkoutRouteBuilder', 'HKWorkoutRouteQuery', 'HKWorkoutSession', 'HKWorkoutType', 'HMAccessControl', 'HMAccessory', 'HMAccessoryBrowser', 'HMAccessoryCategory', 'HMAccess
oryOwnershipToken', 'HMAccessoryProfile', 'HMAccessorySetupPayload', 'HMAction', 'HMActionSet', 'HMAddAccessoryRequest', 'HMCalendarEvent', 'HMCameraAudioControl', 'HMCameraControl', 'HMCameraProfile', 'HMCameraSettingsControl', 'HMCameraSnapshot', 'HMCameraSnapshotControl', 'HMCameraSource', 'HMCameraStream', 'HMCameraStreamControl', 'HMCameraView', 'HMCharacteristic', 'HMCharacteristicEvent', 'HMCharacteristicMetadata', 'HMCharacteristicThresholdRangeEvent', 'HMCharacteristicWriteAction', 'HMD
urationEvent', 'HMEvent', 'HMEventTrigger', 'HMHome', 'HMHomeAccessControl', 'HMHomeManager', 'HMLocationEvent', 'HMMutableCalendarEvent', 'HMMutableCharacteristicEvent', 'HMMutableCharacteristicThresholdRangeEvent', 'HMMutableDurationEvent', 'HMMutableLocationEvent', 'HMMutablePresenceEvent', 'HMMutableSignificantTimeEvent', 'HMNetworkConfigurationProfile', 'HMNumberRange', 'HMPresenceEvent', 'HMRoom', 'HMService', 'HMServiceGroup', 'HMSignificantTimeEvent', 'HMTimeEvent', 'HMTimerTrigger', 'HM
Trigger', 'HMUser', 'HMZone', 'ICCameraDevice', 'ICCameraFile', 'ICCameraFolder', 'ICCameraItem', 'ICDevice', 'ICDeviceBrowser', 'ICScannerBandData', 'ICScannerDevice', 'ICScannerFeature', 'ICScannerFeatureBoolean', 'ICScannerFeatureEnumeration', 'ICScannerFeatureRange', 'ICScannerFeatureTemplate', 'ICScannerFunctionalUnit', 'ICScannerFunctionalUnitDocumentFeeder', 'ICScannerFunctionalUnitFlatbed', 'ICScannerFunctionalUnitNegativeTransparency', 'ICScannerFunctionalUnitPositiveTransparency', 'ILC
allClassificationRequest', 'ILCallCommunication', 'ILClassificationRequest', 'ILClassificationResponse', 'ILClassificationUIExtensionContext', 'ILClassificationUIExtensionViewController', 'ILCommunication', 'ILMessageClassificationRequest', 'ILMessageCommunication', 'ILMessageFilterExtension', 'ILMessageFilterExtensionContext', 'ILMessageFilterQueryRequest', 'ILMessageFilterQueryResponse', 'ILNetworkResponse', 'INAccountTypeResolutionResult', 'INActivateCarSignalIntent', 'INActivateCarSignalInte
ntResponse', 'INAddMediaIntent', 'INAddMediaIntentResponse', 'INAddMediaMediaDestinationResolutionResult', 'INAddMediaMediaItemResolutionResult', 'INAddTasksIntent', 'INAddTasksIntentResponse', 'INAddTasksTargetTaskListResolutionResult', 'INAddTasksTemporalEventTriggerResolutionResult', 'INAirline', 'INAirport', 'INAirportGate', 'INAppendToNoteIntent', 'INAppendToNoteIntentResponse', 'INBalanceAmount', 'INBalanceTypeResolutionResult', 'INBillDetails', 'INBillPayee', 'INBillPayeeResolutionResult'
, 'INBillTypeResolutionResult', 'INBoatReservation', 'INBoatTrip', 'INBookRestaurantReservationIntent', 'INBookRestaurantReservationIntentResponse', 'INBooleanResolutionResult', 'INBusReservation', 'INBusTrip', 'INCallCapabilityResolutionResult', 'INCallDestinationTypeResolutionResult', 'INCallRecord', 'INCallRecordFilter', 'INCallRecordResolutionResult', 'INCallRecordTypeOptionsResolutionResult', 'INCallRecordTypeResolutionResult', 'INCancelRideIntent', 'INCancelRideIntentResponse', 'INCancelWo
rkoutIntent', 'INCancelWorkoutIntentResponse', 'INCar', 'INCarAirCirculationModeResolutionResult', 'INCarAudioSourceResolutionResult', 'INCarDefrosterResolutionResult', 'INCarHeadUnit', 'INCarSeatResolutionResult', 'INCarSignalOptionsResolutionResult', 'INCreateNoteIntent', 'INCreateNoteIntentResponse', 'INCreateTaskListIntent', 'INCreateTaskListIntentResponse', 'INCurrencyAmount', 'INCurrencyAmountResolutionResult', 'INDailyRoutineRelevanceProvider', 'INDateComponentsRange', 'INDateComponentsRa
ngeResolutionResult', 'INDateComponentsResolutionResult', 'INDateRelevanceProvider', 'INDateSearchTypeResolutionResult', 'INDefaultCardTemplate', 'INDeleteTasksIntent', 'INDeleteTasksIntentResponse', 'INDeleteTasksTaskListResolutionResult', 'INDeleteTasksTaskResolutionResult', 'INDoubleResolutionResult', 'INEndWorkoutIntent', 'INEndWorkoutIntentResponse', 'INEnergyResolutionResult', 'INEnumResolutionResult', 'INExtension', 'INFile', 'INFileResolutionResult', 'INFlight', 'INFlightReservation', 'I
NGetAvailableRestaurantReservationBookingDefaultsIntent', 'INGetAvailableRestaurantReservationBookingDefaultsIntentResponse', 'INGetAvailableRestaurantReservationBookingsIntent', 'INGetAvailableRestaurantReservationBookingsIntentResponse', 'INGetCarLockStatusIntent', 'INGetCarLockStatusIntentResponse', 'INGetCarPowerLevelStatusIntent', 'INGetCarPowerLevelStatusIntentResponse', 'INGetReservationDetailsIntent', 'INGetReservationDetailsIntentResponse', 'INGetRestaurantGuestIntent', 'INGetRestaurant
GuestIntentResponse', 'INGetRideStatusIntent', 'INGetRideStatusIntentResponse', 'INGetUserCurrentRestaurantReservationBookingsIntent', 'INGetUserCurrentRestaurantReservationBookingsIntentResponse', 'INGetVisualCodeIntent', 'INGetVisualCodeIntentResponse', 'INImage', 'INImageNoteContent', 'INIntegerResolutionResult', 'INIntent', 'INIntentResolutionResult', 'INIntentResponse', 'INInteraction', 'INLengthResolutionResult', 'INListCarsIntent', 'INListCarsIntentResponse', 'INListRideOptionsIntent', 'I
NListRideOptionsIntentResponse', 'INLocationRelevanceProvider', 'INLocationSearchTypeResolutionResult', 'INLodgingReservation', 'INMassResolutionResult', 'INMediaAffinityTypeResolutionResult', 'INMediaDestination', 'INMediaDestinationResolutionResult', 'INMediaItem', 'INMediaItemResolutionResult', 'INMediaSearch', 'INMediaUserContext', 'INMessage', 'INMessageAttributeOptionsResolutionResult', 'INMessageAttributeResolutionResult', 'INNote', 'INNoteContent', 'INNoteContentResolutionResult', 'INNot
eContentTypeResolutionResult', 'INNoteResolutionResult', 'INNotebookItemTypeResolutionResult', 'INObject', 'INObjectCollection', 'INObjectResolutionResult', 'INObjectSection', 'INOutgoingMessageTypeResolutionResult', 'INParameter', 'INPauseWorkoutIntent', 'INPauseWorkoutIntentResponse', 'INPayBillIntent', 'INPayBillIntentResponse', 'INPaymentAccount', 'INPaymentAccountResolutionResult', 'INPaymentAmount', 'INPaymentAmountResolutionResult', 'INPaymentMethod', 'INPaymentMethodResolutionResult', 'I
NPaymentRecord', 'INPaymentStatusResolutionResult', 'INPerson', 'INPersonHandle', 'INPersonResolutionResult', 'INPlacemarkResolutionResult', 'INPlayMediaIntent', 'INPlayMediaIntentResponse', 'INPlayMediaMediaItemResolutionResult', 'INPlayMediaPlaybackSpeedResolutionResult', 'INPlaybackQueueLocationResolutionResult', 'INPlaybackRepeatModeResolutionResult', 'INPreferences', 'INPriceRange', 'INRadioTypeResolutionResult', 'INRecurrenceRule', 'INRelativeReferenceResolutionResult', 'INRelativeSettingR
esolutionResult', 'INRelevanceProvider', 'INRelevantShortcut', 'INRelevantShortcutStore', 'INRentalCar', 'INRentalCarReservation', 'INRequestPaymentCurrencyAmountResolutionResult', 'INRequestPaymentIntent', 'INRequestPaymentIntentResponse', 'INRequestPaymentPayerResolutionResult', 'INRequestRideIntent', 'INRequestRideIntentResponse', 'INReservation', 'INReservationAction', 'INRestaurant', 'INRestaurantGuest', 'INRestaurantGuestDisplayPreferences', 'INRestaurantGuestResolutionResult', 'INRestaura
ntOffer', 'INRestaurantReservation', 'INRestaurantReservationBooking', 'INRestaurantReservationUserBooking', 'INRestaurantResolutionResult', 'INResumeWorkoutIntent', 'INResumeWorkoutIntentResponse', 'INRideCompletionStatus', 'INRideDriver', 'INRideFareLineItem', 'INRideOption', 'INRidePartySizeOption', 'INRideStatus', 'INRideVehicle', 'INSaveProfileInCarIntent', 'INSaveProfileInCarIntentResponse', 'INSearchCallHistoryIntent', 'INSearchCallHistoryIntentResponse', 'INSearchForAccountsIntent', 'INS
earchForAccountsIntentResponse', 'INSearchForBillsIntent', 'INSearchForBillsIntentResponse', 'INSearchForMediaIntent', 'INSearchForMediaIntentResponse', 'INSearchForMediaMediaItemResolutionResult', 'INSearchForMessagesIntent', 'INSearchForMessagesIntentResponse', 'INSearchForNotebookItemsIntent', 'INSearchForNotebookItemsIntentResponse', 'INSearchForPhotosIntent', 'INSearchForPhotosIntentResponse', 'INSeat', 'INSendMessageAttachment', 'INSendMessageIntent', 'INSendMessageIntentResponse', 'INSend
MessageRecipientResolutionResult', 'INSendPaymentCurrencyAmountResolutionResult', 'INSendPaymentIntent', 'INSendPaymentIntentResponse', 'INSendPaymentPayeeResolutionResult', 'INSendRideFeedbackIntent', 'INSendRideFeedbackIntentResponse', 'INSetAudioSourceInCarIntent', 'INSetAudioSourceInCarIntentResponse', 'INSetCarLockStatusIntent', 'INSetCarLockStatusIntentResponse', 'INSetClimateSettingsInCarIntent', 'INSetClimateSettingsInCarIntentResponse', 'INSetDefrosterSettingsInCarIntent', 'INSetDefrost
erSettingsInCarIntentResponse', 'INSetMessageAttributeIntent', 'INSetMessageAttributeIntentResponse', 'INSetProfileInCarIntent', 'INSetProfileInCarIntentResponse', 'INSetRadioStationIntent', 'INSetRadioStationIntentResponse', 'INSetSeatSettingsInCarIntent', 'INSetSeatSettingsInCarIntentResponse', 'INSetTaskAttributeIntent', 'INSetTaskAttributeIntentResponse', 'INSetTaskAttributeTemporalEventTriggerResolutionResult', 'INShortcut', 'INSnoozeTasksIntent', 'INSnoozeTasksIntentResponse', 'INSnoozeTas
ksTaskResolutionResult', 'INSpatialEventTrigger', 'INSpatialEventTriggerResolutionResult', 'INSpeakableString', 'INSpeakableStringResolutionResult', 'INSpeedResolutionResult', 'INStartAudioCallIntent', 'INStartAudioCallIntentResponse', 'INStartCallCallCapabilityResolutionResult', 'INStartCallCallRecordToCallBackResolutionResult', 'INStartCallContactResolutionResult', 'INStartCallIntent', 'INStartCallIntentResponse', 'INStartPhotoPlaybackIntent', 'INStartPhotoPlaybackIntentResponse', 'INStartVide
oCallIntent', 'INStartVideoCallIntentResponse', 'INStartWorkoutIntent', 'INStartWorkoutIntentResponse', 'INStringResolutionResult', 'INTask', 'INTaskList', 'INTaskListResolutionResult', 'INTaskPriorityResolutionResult', 'INTaskResolutionResult', 'INTaskStatusResolutionResult', 'INTemperatureResolutionResult', 'INTemporalEventTrigger', 'INTemporalEventTriggerResolutionResult', 'INTemporalEventTriggerTypeOptionsResolutionResult', 'INTermsAndConditions', 'INTextNoteContent', 'INTicketedEvent', 'INT
icketedEventReservation', 'INTimeIntervalResolutionResult', 'INTrainReservation', 'INTrainTrip', 'INTransferMoneyIntent', 'INTransferMoneyIntentResponse', 'INUIAddVoiceShortcutButton', 'INUIAddVoiceShortcutViewController', 'INUIEditVoiceShortcutViewController', 'INURLResolutionResult', 'INUpcomingMediaManager', 'INUpdateMediaAffinityIntent', 'INUpdateMediaAffinityIntentResponse', 'INUpdateMediaAffinityMediaItemResolutionResult', 'INUserContext', 'INVisualCodeTypeResolutionResult', 'INVocabulary'
, 'INVoiceShortcut', 'INVoiceShortcutCenter', 'INVolumeResolutionResult', 'INWorkoutGoalUnitTypeResolutionResult', 'INWorkoutLocationTypeResolutionResult', 'IOSurface', 'JSContext', 'JSManagedValue', 'JSValue', 'JSVirtualMachine', 'LAContext', 'LPLinkMetadata', 'LPLinkView', 'LPMetadataProvider', 'MCAdvertiserAssistant', 'MCBrowserViewController', 'MCNearbyServiceAdvertiser', 'MCNearbyServiceBrowser', 'MCPeerID', 'MCSession', 'MDLAnimatedMatrix4x4', 'MDLAnimatedQuaternion', 'MDLAnimatedQuaternio
nArray', 'MDLAnimatedScalar', 'MDLAnimatedScalarArray', 'MDLAnimatedValue', 'MDLAnimatedVector2', 'MDLAnimatedVector3', 'MDLAnimatedVector3Array', 'MDLAnimatedVector4', 'MDLAnimationBindComponent', 'MDLAreaLight', 'MDLAsset', 'MDLBundleAssetResolver', 'MDLCamera', 'MDLCheckerboardTexture', 'MDLColorSwatchTexture', 'MDLLight', 'MDLLightProbe', 'MDLMaterial', 'MDLMaterialProperty', 'MDLMaterialPropertyConnection', 'MDLMaterialPropertyGraph', 'MDLMaterialPropertyNode', 'MDLMatrix4x4Array', 'MDLMesh
', 'MDLMeshBufferData', 'MDLMeshBufferDataAllocator', 'MDLMeshBufferMap', 'MDLMeshBufferZoneDefault', 'MDLNoiseTexture', 'MDLNormalMapTexture', 'MDLObject', 'MDLObjectContainer', 'MDLPackedJointAnimation', 'MDLPathAssetResolver', 'MDLPhotometricLight', 'MDLPhysicallyPlausibleLight', 'MDLPhysicallyPlausibleScatteringFunction', 'MDLRelativeAssetResolver', 'MDLScatteringFunction', 'MDLSkeleton', 'MDLSkyCubeTexture', 'MDLStereoscopicCamera', 'MDLSubmesh', 'MDLSubmeshTopology', 'MDLTexture', 'MDLText
ureFilter', 'MDLTextureSampler', 'MDLTransform', 'MDLTransformMatrixOp', 'MDLTransformOrientOp', 'MDLTransformRotateOp', 'MDLTransformRotateXOp', 'MDLTransformRotateYOp', 'MDLTransformRotateZOp', 'MDLTransformScaleOp', 'MDLTransformStack', 'MDLTransformTranslateOp', 'MDLURLTexture', 'MDLVertexAttribute', 'MDLVertexAttributeData', 'MDLVertexBufferLayout', 'MDLVertexDescriptor', 'MDLVoxelArray', 'MFMailComposeViewController', 'MFMessageComposeViewController', 'MIDICIDeviceInfo', 'MIDICIDiscoveredN
ode', 'MIDICIDiscoveryManager', 'MIDICIProfile', 'MIDICIProfileState', 'MIDICIResponder', 'MIDICISession', 'MIDINetworkConnection', 'MIDINetworkHost', 'MIDINetworkSession', 'MKAnnotationView', 'MKCircle', 'MKCircleRenderer', 'MKCircleView', 'MKClusterAnnotation', 'MKCompassButton', 'MKDirections', 'MKDirectionsRequest', 'MKDirectionsResponse', 'MKDistanceFormatter', 'MKETAResponse', 'MKGeoJSONDecoder', 'MKGeoJSONFeature', 'MKGeodesicPolyline', 'MKGradientPolylineRenderer', 'MKLocalPointsOfIntere
stRequest', 'MKLocalSearch', 'MKLocalSearchCompleter', 'MKLocalSearchCompletion', 'MKLocalSearchRequest', 'MKLocalSearchResponse', 'MKMapCamera', 'MKMapCameraBoundary', 'MKMapCameraZoomRange', 'MKMapItem', 'MKMapSnapshot', 'MKMapSnapshotOptions', 'MKMapSnapshotter', 'MKMapView', 'MKMarkerAnnotationView', 'MKMultiPoint', 'MKMultiPolygon', 'MKMultiPolygonRenderer', 'MKMultiPolyline', 'MKMultiPolylineRenderer', 'MKOverlayPathRenderer', 'MKOverlayPathView', 'MKOverlayRenderer', 'MKOverlayView', 'MKP
inAnnotationView', 'MKPitchControl', 'MKPlacemark', 'MKPointAnnotation', 'MKPointOfInterestFilter', 'MKPolygon', 'MKPolygonRenderer', 'MKPolygonView', 'MKPolyline', 'MKPolylineRenderer', 'MKPolylineView', 'MKReverseGeocoder', 'MKRoute', 'MKRouteStep', 'MKScaleView', 'MKShape', 'MKTileOverlay', 'MKTileOverlayRenderer', 'MKUserLocation', 'MKUserLocationView', 'MKUserTrackingBarButtonItem', 'MKUserTrackingButton', 'MKZoomControl', 'MLArrayBatchProvider', 'MLCActivationDescriptor', 'MLCActivationLay
er', 'MLCArithmeticLayer', 'MLCBatchNormalizationLayer', 'MLCConcatenationLayer', 'MLCConvolutionDescriptor', 'MLCConvolutionLayer', 'MLCDevice', 'MLCDropoutLayer', 'MLCEmbeddingDescriptor', 'MLCEmbeddingLayer', 'MLCFullyConnectedLayer', 'MLCGramMatrixLayer', 'MLCGraph', 'MLCGroupNormalizationLayer', 'MLCInferenceGraph', 'MLCInstanceNormalizationLayer', 'MLCLSTMDescriptor', 'MLCLSTMLayer', 'MLCLayer', 'MLCLayerNormalizationLayer', 'MLCLossDescriptor', 'MLCLossLayer', 'MLCMatMulDescriptor', 'MLCM
atMulLayer', 'MLCMultiheadAttentionDescriptor', 'MLCMultiheadAttentionLayer', 'MLCPaddingLayer', 'MLCPoolingDescriptor', 'MLCPoolingLayer', 'MLCReductionLayer', 'MLCReshapeLayer', 'MLCSliceLayer', 'MLCSoftmaxLayer', 'MLCSplitLayer', 'MLCTensor', 'MLCTensorData', 'MLCTensorDescriptor', 'MLCTensorOptimizerDeviceData', 'MLCTensorParameter', 'MLCTrainingGraph', 'MLCTransposeLayer', 'MLCUpsampleLayer', 'MLCYOLOLossDescriptor', 'MLCYOLOLossLayer', 'MLDictionaryConstraint', 'MLDictionaryFeatureProvider
', 'MLFeatureDescription', 'MLFeatureValue', 'MLImageConstraint', 'MLImageSize', 'MLImageSizeConstraint', 'MLKey', 'MLMetricKey', 'MLModel', 'MLModelCollection', 'MLModelCollectionEntry', 'MLModelConfiguration', 'MLModelDescription', 'MLMultiArray', 'MLMultiArrayConstraint', 'MLMultiArrayShapeConstraint', 'MLNumericConstraint', 'MLParameterDescription', 'MLParameterKey', 'MLPredictionOptions', 'MLSequence', 'MLSequenceConstraint', 'MLTask', 'MLUpdateContext', 'MLUpdateProgressHandlers', 'MLUpdat
eTask', 'MPChangeLanguageOptionCommandEvent', 'MPChangePlaybackPositionCommand', 'MPChangePlaybackPositionCommandEvent', 'MPChangePlaybackRateCommand', 'MPChangePlaybackRateCommandEvent', 'MPChangeRepeatModeCommand', 'MPChangeRepeatModeCommandEvent', 'MPChangeShuffleModeCommand', 'MPChangeShuffleModeCommandEvent', 'MPContentItem', 'MPFeedbackCommand', 'MPFeedbackCommandEvent', 'MPMediaEntity', 'MPMediaItem', 'MPMediaItemArtwork', 'MPMediaItemCollection', 'MPMediaLibrary', 'MPMediaPickerControlle
r', 'MPMediaPlaylist', 'MPMediaPlaylistCreationMetadata', 'MPMediaPredicate', 'MPMediaPropertyPredicate', 'MPMediaQuery', 'MPMediaQuerySection', 'MPMovieAccessLog', 'MPMovieAccessLogEvent', 'MPMovieErrorLog', 'MPMovieErrorLogEvent', 'MPMoviePlayerController', 'MPMoviePlayerViewController', 'MPMusicPlayerApplicationController', 'MPMusicPlayerController', 'MPMusicPlayerControllerMutableQueue', 'MPMusicPlayerControllerQueue', 'MPMusicPlayerMediaItemQueueDescriptor', 'MPMusicPlayerPlayParameters', '
MPMusicPlayerPlayParametersQueueDescriptor', 'MPMusicPlayerQueueDescriptor', 'MPMusicPlayerStoreQueueDescriptor', 'MPNowPlayingInfoCenter', 'MPNowPlayingInfoLanguageOption', 'MPNowPlayingInfoLanguageOptionGroup', 'MPNowPlayingSession', 'MPPlayableContentManager', 'MPPlayableContentManagerContext', 'MPRatingCommand', 'MPRatingCommandEvent', 'MPRemoteCommand', 'MPRemoteCommandCenter', 'MPRemoteCommandEvent', 'MPSGraph', 'MPSGraphConvolution2DOpDescriptor', 'MPSGraphDepthwiseConvolution2DOpDescript
or', 'MPSGraphDevice', 'MPSGraphExecutionDescriptor', 'MPSGraphOperation', 'MPSGraphPooling2DOpDescriptor', 'MPSGraphShapedType', 'MPSGraphTensor', 'MPSGraphTensorData', 'MPSGraphVariableOp', 'MPSeekCommandEvent', 'MPSkipIntervalCommand', 'MPSkipIntervalCommandEvent', 'MPTimedMetadata', 'MPVolumeView', 'MSConversation', 'MSMessage', 'MSMessageLayout', 'MSMessageLiveLayout', 'MSMessageTemplateLayout', 'MSMessagesAppViewController', 'MSServiceAccount', 'MSSession', 'MSSetupSession', 'MSSticker', '
MSStickerBrowserView', 'MSStickerBrowserViewController', 'MSStickerView', 'MTKMesh', 'MTKMeshBuffer', 'MTKMeshBufferAllocator', 'MTKSubmesh', 'MTKTextureLoader', 'MTKView', 'MTLAccelerationStructureBoundingBoxGeometryDescriptor', 'MTLAccelerationStructureDescriptor', 'MTLAccelerationStructureGeometryDescriptor', 'MTLAccelerationStructureTriangleGeometryDescriptor', 'MTLArgument', 'MTLArgumentDescriptor', 'MTLArrayType', 'MTLAttribute', 'MTLAttributeDescriptor', 'MTLAttributeDescriptorArray', 'MT
LBinaryArchiveDescriptor', 'MTLBlitPassDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptor', 'MTLBlitPassSampleBufferAttachmentDescriptorArray', 'MTLBufferLayoutDescriptor', 'MTLBufferLayoutDescriptorArray', 'MTLCaptureDescriptor', 'MTLCaptureManager', 'MTLCommandBufferDescriptor', 'MTLCompileOptions', 'MTLComputePassDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptor', 'MTLComputePassSampleBufferAttachmentDescriptorArray', 'MTLComputePipelineDescriptor', 'MTLComputePipelineReflec
tion', 'MTLCounterSampleBufferDescriptor', 'MTLDepthStencilDescriptor', 'MTLFunctionConstant', 'MTLFunctionConstantValues', 'MTLFunctionDescriptor', 'MTLHeapDescriptor', 'MTLIndirectCommandBufferDescriptor', 'MTLInstanceAccelerationStructureDescriptor', 'MTLIntersectionFunctionDescriptor', 'MTLIntersectionFunctionTableDescriptor', 'MTLLinkedFunctions', 'MTLPipelineBufferDescriptor', 'MTLPipelineBufferDescriptorArray', 'MTLPointerType', 'MTLPrimitiveAccelerationStructureDescriptor', 'MTLRasteriza
tionRateLayerArray', 'MTLRasterizationRateLayerDescriptor', 'MTLRasterizationRateMapDescriptor', 'MTLRasterizationRateSampleArray', 'MTLRenderPassAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptor', 'MTLRenderPassColorAttachmentDescriptorArray', 'MTLRenderPassDepthAttachmentDescriptor', 'MTLRenderPassDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptor', 'MTLRenderPassSampleBufferAttachmentDescriptorArray', 'MTLRenderPassStencilAttachmentDescriptor', 'MTLRenderPipelineColorAtt
achmentDescriptor', 'MTLRenderPipelineColorAttachmentDescriptorArray', 'MTLRenderPipelineDescriptor', 'MTLRenderPipelineReflection', 'MTLResourceStatePassDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptor', 'MTLResourceStatePassSampleBufferAttachmentDescriptorArray', 'MTLSamplerDescriptor', 'MTLSharedEventHandle', 'MTLSharedEventListener', 'MTLSharedTextureHandle', 'MTLStageInputOutputDescriptor', 'MTLStencilDescriptor', 'MTLStructMember', 'MTLStructType', 'MTLTextureDescriptor',
 'MTLTextureReferenceType', 'MTLTileRenderPipelineColorAttachmentDescriptor', 'MTLTileRenderPipelineColorAttachmentDescriptorArray', 'MTLTileRenderPipelineDescriptor', 'MTLType', 'MTLVertexAttribute', 'MTLVertexAttributeDescriptor', 'MTLVertexAttributeDescriptorArray', 'MTLVertexBufferLayoutDescriptor', 'MTLVertexBufferLayoutDescriptorArray', 'MTLVertexDescriptor', 'MTLVisibleFunctionTableDescriptor', 'MXAnimationMetric', 'MXAppExitMetric', 'MXAppLaunchMetric', 'MXAppResponsivenessMetric', 'MXAp
pRunTimeMetric', 'MXAverage', 'MXBackgroundExitData', 'MXCPUExceptionDiagnostic', 'MXCPUMetric', 'MXCallStackTree', 'MXCellularConditionMetric', 'MXCrashDiagnostic', 'MXDiagnostic', 'MXDiagnosticPayload', 'MXDiskIOMetric', 'MXDiskWriteExceptionDiagnostic', 'MXDisplayMetric', 'MXForegroundExitData', 'MXGPUMetric', 'MXHangDiagnostic', 'MXHistogram', 'MXHistogramBucket', 'MXLocationActivityMetric', 'MXMemoryMetric', 'MXMetaData', 'MXMetric', 'MXMetricManager', 'MXMetricPayload', 'MXNetworkTransferM
etric', 'MXSignpostIntervalData', 'MXSignpostMetric', 'MXUnitAveragePixelLuminance', 'MXUnitSignalBars', 'MyClass', 'NCWidgetController', 'NEAppProxyFlow', 'NEAppProxyProvider', 'NEAppProxyProviderManager', 'NEAppProxyTCPFlow', 'NEAppProxyUDPFlow', 'NEAppPushManager', 'NEAppPushProvider', 'NEAppRule', 'NEDNSOverHTTPSSettings', 'NEDNSOverTLSSettings', 'NEDNSProxyManager', 'NEDNSProxyProvider', 'NEDNSProxyProviderProtocol', 'NEDNSSettings', 'NEDNSSettingsManager', 'NEEvaluateConnectionRule', 'NEFi
lterBrowserFlow', 'NEFilterControlProvider', 'NEFilterControlVerdict', 'NEFilterDataProvider', 'NEFilterDataVerdict', 'NEFilterFlow', 'NEFilterManager', 'NEFilterNewFlowVerdict', 'NEFilterPacketContext', 'NEFilterPacketProvider', 'NEFilterProvider', 'NEFilterProviderConfiguration', 'NEFilterRemediationVerdict', 'NEFilterReport', 'NEFilterRule', 'NEFilterSettings', 'NEFilterSocketFlow', 'NEFilterVerdict', 'NEFlowMetaData', 'NEHotspotConfiguration', 'NEHotspotConfigurationManager', 'NEHotspotEAPSe
ttings', 'NEHotspotHS20Settings', 'NEHotspotHelper', 'NEHotspotHelperCommand', 'NEHotspotHelperResponse', 'NEHotspotNetwork', 'NEIPv4Route', 'NEIPv4Settings', 'NEIPv6Route', 'NEIPv6Settings', 'NENetworkRule', 'NEOnDemandRule', 'NEOnDemandRuleConnect', 'NEOnDemandRuleDisconnect', 'NEOnDemandRuleEvaluateConnection', 'NEOnDemandRuleIgnore', 'NEPacket', 'NEPacketTunnelFlow', 'NEPacketTunnelNetworkSettings', 'NEPacketTunnelProvider', 'NEProvider', 'NEProxyServer', 'NEProxySettings', 'NETransparentPro
xyManager', 'NETransparentProxyNetworkSettings', 'NETransparentProxyProvider', 'NETunnelNetworkSettings', 'NETunnelProvider', 'NETunnelProviderManager', 'NETunnelProviderProtocol', 'NETunnelProviderSession', 'NEVPNConnection', 'NEVPNIKEv2SecurityAssociationParameters', 'NEVPNManager', 'NEVPNProtocol', 'NEVPNProtocolIKEv2', 'NEVPNProtocolIPSec', 'NFCISO15693CustomCommandConfiguration', 'NFCISO15693ReadMultipleBlocksConfiguration', 'NFCISO15693ReaderSession', 'NFCISO7816APDU', 'NFCNDEFMessage', 'N
FCNDEFPayload', 'NFCNDEFReaderSession', 'NFCReaderSession', 'NFCTagCommandConfiguration', 'NFCTagReaderSession', 'NFCVASCommandConfiguration', 'NFCVASReaderSession', 'NFCVASResponse', 'NIConfiguration', 'NIDiscoveryToken', 'NINearbyObject', 'NINearbyPeerConfiguration', 'NISession', 'NKAssetDownload', 'NKIssue', 'NKLibrary', 'NLEmbedding', 'NLGazetteer', 'NLLanguageRecognizer', 'NLModel', 'NLModelConfiguration', 'NLTagger', 'NLTokenizer', 'NSArray', 'NSAssertionHandler', 'NSAsynchronousFetchReque
st', 'NSAsynchronousFetchResult', 'NSAtomicStore', 'NSAtomicStoreCacheNode', 'NSAttributeDescription', 'NSAttributedString', 'NSAutoreleasePool', 'NSBatchDeleteRequest', 'NSBatchDeleteResult', 'NSBatchInsertRequest', 'NSBatchInsertResult', 'NSBatchUpdateRequest', 'NSBatchUpdateResult', 'NSBlockOperation', 'NSBundle', 'NSBundleResourceRequest', 'NSByteCountFormatter', 'NSCache', 'NSCachedURLResponse', 'NSCalendar', 'NSCharacterSet', 'NSCoder', 'NSCollectionLayoutAnchor', 'NSCollectionLayoutBounda
rySupplementaryItem', 'NSCollectionLayoutDecorationItem', 'NSCollectionLayoutDimension', 'NSCollectionLayoutEdgeSpacing', 'NSCollectionLayoutGroup', 'NSCollectionLayoutGroupCustomItem', 'NSCollectionLayoutItem', 'NSCollectionLayoutSection', 'NSCollectionLayoutSize', 'NSCollectionLayoutSpacing', 'NSCollectionLayoutSupplementaryItem', 'NSComparisonPredicate', 'NSCompoundPredicate', 'NSCondition', 'NSConditionLock', 'NSConstantString', 'NSConstraintConflict', 'NSCoreDataCoreSpotlightDelegate', 'NSC
ountedSet', 'NSData', 'NSDataAsset', 'NSDataDetector', 'NSDate', 'NSDateComponents', 'NSDateComponentsFormatter', 'NSDateFormatter', 'NSDateInterval', 'NSDateIntervalFormatter', 'NSDecimalNumber', 'NSDecimalNumberHandler', 'NSDerivedAttributeDescription', 'NSDictionary', 'NSDiffableDataSourceSectionSnapshot', 'NSDiffableDataSourceSectionTransaction', 'NSDiffableDataSourceSnapshot', 'NSDiffableDataSourceTransaction', 'NSDimension', 'NSDirectoryEnumerator', 'NSEnergyFormatter', 'NSEntityDescriptio
n', 'NSEntityMapping', 'NSEntityMigrationPolicy', 'NSEnumerator', 'NSError', 'NSEvent', 'NSException', 'NSExpression', 'NSExpressionDescription', 'NSExtensionContext', 'NSExtensionItem', 'NSFetchIndexDescription', 'NSFetchIndexElementDescription', 'NSFetchRequest', 'NSFetchRequestExpression', 'NSFetchedPropertyDescription', 'NSFetchedResultsController', 'NSFileAccessIntent', 'NSFileCoordinator', 'NSFileHandle', 'NSFileManager', 'NSFileProviderDomain', 'NSFileProviderExtension', 'NSFileProviderMa
nager', 'NSFileProviderService', 'NSFileSecurity', 'NSFileVersion', 'NSFileWrapper', 'NSFormatter', 'NSHTTPCookie', 'NSHTTPCookieStorage', 'NSHTTPURLResponse', 'NSHashTable', 'NSISO8601DateFormatter', 'NSIncrementalStore', 'NSIncrementalStoreNode', 'NSIndexPath', 'NSIndexSet', 'NSInputStream', 'NSInvocation', 'NSInvocationOperation', 'NSItemProvider', 'NSJSONSerialization', 'NSKeyedArchiver', 'NSKeyedUnarchiver', 'NSLayoutAnchor', 'NSLayoutConstraint', 'NSLayoutDimension', 'NSLayoutManager', 'NS
LayoutXAxisAnchor', 'NSLayoutYAxisAnchor', 'NSLengthFormatter', 'NSLinguisticTagger', 'NSListFormatter', 'NSLocale', 'NSLock', 'NSMachPort', 'NSManagedObject', 'NSManagedObjectContext', 'NSManagedObjectID', 'NSManagedObjectModel', 'NSMapTable', 'NSMappingModel', 'NSMassFormatter', 'NSMeasurement', 'NSMeasurementFormatter', 'NSMenuToolbarItem', 'NSMergeConflict', 'NSMergePolicy', 'NSMessagePort', 'NSMetadataItem', 'NSMetadataQuery', 'NSMetadataQueryAttributeValueTuple', 'NSMetadataQueryResultGrou
p', 'NSMethodSignature', 'NSMigrationManager', 'NSMutableArray', 'NSMutableAttributedString', 'NSMutableCharacterSet', 'NSMutableData', 'NSMutableDictionary', 'NSMutableIndexSet', 'NSMutableOrderedSet', 'NSMutableParagraphStyle', 'NSMutableSet', 'NSMutableString', 'NSMutableURLRequest', 'NSNetService', 'NSNetServiceBrowser', 'NSNotification', 'NSNotificationCenter', 'NSNotificationQueue', 'NSNull', 'NSNumber', 'NSNumberFormatter', 'NSObject', 'NSOperation', 'NSOperationQueue', 'NSOrderedCollecti
onChange', 'NSOrderedCollectionDifference', 'NSOrderedSet', 'NSOrthography', 'NSOutputStream', 'NSParagraphStyle', 'NSPersistentCloudKitContainer', 'NSPersistentCloudKitContainerEvent', 'NSPersistentCloudKitContainerEventRequest', 'NSPersistentCloudKitContainerEventResult', 'NSPersistentCloudKitContainerOptions', 'NSPersistentContainer', 'NSPersistentHistoryChange', 'NSPersistentHistoryChangeRequest', 'NSPersistentHistoryResult', 'NSPersistentHistoryToken', 'NSPersistentHistoryTransaction', 'NSP
ersistentStore', 'NSPersistentStoreAsynchronousResult', 'NSPersistentStoreCoordinator', 'NSPersistentStoreDescription', 'NSPersistentStoreRequest', 'NSPersistentStoreResult', 'NSPersonNameComponents', 'NSPersonNameComponentsFormatter', 'NSPipe', 'NSPointerArray', 'NSPointerFunctions', 'NSPort', 'NSPredicate', 'NSProcessInfo', 'NSProgress', 'NSPropertyDescription', 'NSPropertyListSerialization', 'NSPropertyMapping', 'NSProxy', 'NSPurgeableData', 'NSQueryGenerationToken', 'NSRecursiveLock', 'NSReg
ularExpression', 'NSRelationshipDescription', 'NSRelativeDateTimeFormatter', 'NSRunLoop', 'NSSaveChangesRequest', 'NSScanner', 'NSSecureUnarchiveFromDataTransformer', 'NSSet', 'NSShadow', 'NSSharingServicePickerToolbarItem', 'NSSharingServicePickerTouchBarItem', 'NSSimpleCString', 'NSSocketPort', 'NSSortDescriptor', 'NSStream', 'NSString', 'NSStringDrawingContext', 'NSTextAttachment', 'NSTextCheckingResult', 'NSTextContainer', 'NSTextStorage', 'NSTextTab', 'NSThread', 'NSTimeZone', 'NSTimer', 'N
SToolbarItem', 'NSURL', 'NSURLAuthenticationChallenge', 'NSURLCache', 'NSURLComponents', 'NSURLConnection', 'NSURLCredential', 'NSURLCredentialStorage', 'NSURLProtectionSpace', 'NSURLProtocol', 'NSURLQueryItem', 'NSURLRequest', 'NSURLResponse', 'NSURLSession', 'NSURLSessionConfiguration', 'NSURLSessionDataTask', 'NSURLSessionDownloadTask', 'NSURLSessionStreamTask', 'NSURLSessionTask', 'NSURLSessionTaskMetrics', 'NSURLSessionTaskTransactionMetrics', 'NSURLSessionUploadTask', 'NSURLSessionWebSocke
tMessage', 'NSURLSessionWebSocketTask', 'NSUUID', 'NSUbiquitousKeyValueStore', 'NSUndoManager', 'NSUnit', 'NSUnitAcceleration', 'NSUnitAngle', 'NSUnitArea', 'NSUnitConcentrationMass', 'NSUnitConverter', 'NSUnitConverterLinear', 'NSUnitDispersion', 'NSUnitDuration', 'NSUnitElectricCharge', 'NSUnitElectricCurrent', 'NSUnitElectricPotentialDifference', 'NSUnitElectricResistance', 'NSUnitEnergy', 'NSUnitFrequency', 'NSUnitFuelEfficiency', 'NSUnitIlluminance', 'NSUnitInformationStorage', 'NSUnitLengt
h', 'NSUnitMass', 'NSUnitPower', 'NSUnitPressure', 'NSUnitSpeed', 'NSUnitTemperature', 'NSUnitVolume', 'NSUserActivity', 'NSUserDefaults', 'NSValue', 'NSValueTransformer', 'NSXMLParser', 'NSXPCCoder', 'NSXPCConnection', 'NSXPCInterface', 'NSXPCListener', 'NSXPCListenerEndpoint', 'NWBonjourServiceEndpoint', 'NWEndpoint', 'NWHostEndpoint', 'NWPath', 'NWTCPConnection', 'NWTLSParameters', 'NWUDPSession', 'OSLogEntry', 'OSLogEntryActivity', 'OSLogEntryBoundary', 'OSLogEntryLog', 'OSLogEntrySignpost',
 'OSLogEnumerator', 'OSLogMessageComponent', 'OSLogPosition', 'OSLogStore', 'PDFAction', 'PDFActionGoTo', 'PDFActionNamed', 'PDFActionRemoteGoTo', 'PDFActionResetForm', 'PDFActionURL', 'PDFAnnotation', 'PDFAppearanceCharacteristics', 'PDFBorder', 'PDFDestination', 'PDFDocument', 'PDFOutline', 'PDFPage', 'PDFSelection', 'PDFThumbnailView', 'PDFView', 'PHAdjustmentData', 'PHAsset', 'PHAssetChangeRequest', 'PHAssetCollection', 'PHAssetCollectionChangeRequest', 'PHAssetCreationRequest', 'PHAssetReso
urce', 'PHAssetResourceCreationOptions', 'PHAssetResourceManager', 'PHAssetResourceRequestOptions', 'PHCachingImageManager', 'PHChange', 'PHChangeRequest', 'PHCloudIdentifier', 'PHCollection', 'PHCollectionList', 'PHCollectionListChangeRequest', 'PHContentEditingInput', 'PHContentEditingInputRequestOptions', 'PHContentEditingOutput', 'PHEditingExtensionContext', 'PHFetchOptions', 'PHFetchResult', 'PHFetchResultChangeDetails', 'PHImageManager', 'PHImageRequestOptions', 'PHLivePhoto', 'PHLivePhoto
EditingContext', 'PHLivePhotoRequestOptions', 'PHLivePhotoView', 'PHObject', 'PHObjectChangeDetails', 'PHObjectPlaceholder', 'PHPhotoLibrary', 'PHPickerConfiguration', 'PHPickerFilter', 'PHPickerResult', 'PHPickerViewController', 'PHProject', 'PHProjectChangeRequest', 'PHVideoRequestOptions', 'PKAddCarKeyPassConfiguration', 'PKAddPassButton', 'PKAddPassesViewController', 'PKAddPaymentPassRequest', 'PKAddPaymentPassRequestConfiguration', 'PKAddPaymentPassViewController', 'PKAddSecureElementPassCo
nfiguration', 'PKAddSecureElementPassViewController', 'PKAddShareablePassConfiguration', 'PKBarcodeEventConfigurationRequest', 'PKBarcodeEventMetadataRequest', 'PKBarcodeEventMetadataResponse', 'PKBarcodeEventSignatureRequest', 'PKBarcodeEventSignatureResponse', 'PKCanvasView', 'PKContact', 'PKDisbursementAuthorizationController', 'PKDisbursementRequest', 'PKDisbursementVoucher', 'PKDrawing', 'PKEraserTool', 'PKFloatRange', 'PKInk', 'PKInkingTool', 'PKIssuerProvisioningExtensionHandler', 'PKIssu
erProvisioningExtensionPassEntry', 'PKIssuerProvisioningExtensionPaymentPassEntry', 'PKIssuerProvisioningExtensionStatus', 'PKLabeledValue', 'PKLassoTool', 'PKObject', 'PKPass', 'PKPassLibrary', 'PKPayment', 'PKPaymentAuthorizationController', 'PKPaymentAuthorizationResult', 'PKPaymentAuthorizationViewController', 'PKPaymentButton', 'PKPaymentInformationEventExtension', 'PKPaymentMerchantSession', 'PKPaymentMethod', 'PKPaymentPass', 'PKPaymentRequest', 'PKPaymentRequestMerchantSessionUpdate', 'P
KPaymentRequestPaymentMethodUpdate', 'PKPaymentRequestShippingContactUpdate', 'PKPaymentRequestShippingMethodUpdate', 'PKPaymentRequestUpdate', 'PKPaymentSummaryItem', 'PKPaymentToken', 'PKPushCredentials', 'PKPushPayload', 'PKPushRegistry', 'PKSecureElementPass', 'PKShareablePassMetadata', 'PKShippingMethod', 'PKStroke', 'PKStrokePath', 'PKStrokePoint', 'PKSuicaPassProperties', 'PKTool', 'PKToolPicker', 'PKTransitPassProperties', 'QLFileThumbnailRequest', 'QLPreviewController', 'QLThumbnailGene
rationRequest', 'QLThumbnailGenerator', 'QLThumbnailProvider', 'QLThumbnailReply', 'QLThumbnailRepresentation', 'RPBroadcastActivityController', 'RPBroadcastActivityViewController', 'RPBroadcastConfiguration', 'RPBroadcastController', 'RPBroadcastHandler', 'RPBroadcastMP4ClipHandler', 'RPBroadcastSampleHandler', 'RPPreviewViewController', 'RPScreenRecorder', 'RPSystemBroadcastPickerView', 'SCNAccelerationConstraint', 'SCNAction', 'SCNAnimation', 'SCNAnimationEvent', 'SCNAnimationPlayer', 'SCNAud
ioPlayer', 'SCNAudioSource', 'SCNAvoidOccluderConstraint', 'SCNBillboardConstraint', 'SCNBox', 'SCNCamera', 'SCNCameraController', 'SCNCapsule', 'SCNCone', 'SCNConstraint', 'SCNCylinder', 'SCNDistanceConstraint', 'SCNFloor', 'SCNGeometry', 'SCNGeometryElement', 'SCNGeometrySource', 'SCNGeometryTessellator', 'SCNHitTestResult', 'SCNIKConstraint', 'SCNLevelOfDetail', 'SCNLight', 'SCNLookAtConstraint', 'SCNMaterial', 'SCNMaterialProperty', 'SCNMorpher', 'SCNNode', 'SCNParticlePropertyController', '
SCNParticleSystem', 'SCNPhysicsBallSocketJoint', 'SCNPhysicsBehavior', 'SCNPhysicsBody', 'SCNPhysicsConeTwistJoint', 'SCNPhysicsContact', 'SCNPhysicsField', 'SCNPhysicsHingeJoint', 'SCNPhysicsShape', 'SCNPhysicsSliderJoint', 'SCNPhysicsVehicle', 'SCNPhysicsVehicleWheel', 'SCNPhysicsWorld', 'SCNPlane', 'SCNProgram', 'SCNPyramid', 'SCNReferenceNode', 'SCNRenderer', 'SCNReplicatorConstraint', 'SCNScene', 'SCNSceneSource', 'SCNShape', 'SCNSkinner', 'SCNSliderConstraint', 'SCNSphere', 'SCNTechnique',
 'SCNText', 'SCNTimingFunction', 'SCNTorus', 'SCNTransaction', 'SCNTransformConstraint', 'SCNTube', 'SCNView', 'SFAcousticFeature', 'SFAuthenticationSession', 'SFContentBlockerManager', 'SFContentBlockerState', 'SFSafariViewController', 'SFSafariViewControllerConfiguration', 'SFSpeechAudioBufferRecognitionRequest', 'SFSpeechRecognitionRequest', 'SFSpeechRecognitionResult', 'SFSpeechRecognitionTask', 'SFSpeechRecognizer', 'SFSpeechURLRecognitionRequest', 'SFTranscription', 'SFTranscriptionSegment
', 'SFVoiceAnalytics', 'SK3DNode', 'SKAction', 'SKAdNetwork', 'SKArcadeService', 'SKAttribute', 'SKAttributeValue', 'SKAudioNode', 'SKCameraNode', 'SKCloudServiceController', 'SKCloudServiceSetupViewController', 'SKConstraint', 'SKCropNode', 'SKDownload', 'SKEffectNode', 'SKEmitterNode', 'SKFieldNode', 'SKKeyframeSequence', 'SKLabelNode', 'SKLightNode', 'SKMutablePayment', 'SKMutableTexture', 'SKNode', 'SKOverlay', 'SKOverlayAppClipConfiguration', 'SKOverlayAppConfiguration', 'SKOverlayConfigura
tion', 'SKOverlayTransitionContext', 'SKPayment', 'SKPaymentDiscount', 'SKPaymentQueue', 'SKPaymentTransaction', 'SKPhysicsBody', 'SKPhysicsContact', 'SKPhysicsJoint', 'SKPhysicsJointFixed', 'SKPhysicsJointLimit', 'SKPhysicsJointPin', 'SKPhysicsJointSliding', 'SKPhysicsJointSpring', 'SKPhysicsWorld', 'SKProduct', 'SKProductDiscount', 'SKProductStorePromotionController', 'SKProductSubscriptionPeriod', 'SKProductsRequest', 'SKProductsResponse', 'SKRange', 'SKReachConstraints', 'SKReceiptRefreshReq
uest', 'SKReferenceNode', 'SKRegion', 'SKRenderer', 'SKRequest', 'SKScene', 'SKShader', 'SKShapeNode', 'SKSpriteNode', 'SKStoreProductViewController', 'SKStoreReviewController', 'SKStorefront', 'SKTexture', 'SKTextureAtlas', 'SKTileDefinition', 'SKTileGroup', 'SKTileGroupRule', 'SKTileMapNode', 'SKTileSet', 'SKTransformNode', 'SKTransition', 'SKUniform', 'SKVideoNode', 'SKView', 'SKWarpGeometry', 'SKWarpGeometryGrid', 'SLComposeServiceViewController', 'SLComposeSheetConfigurationItem', 'SLCompos
eViewController', 'SLRequest', 'SNAudioFileAnalyzer', 'SNAudioStreamAnalyzer', 'SNClassification', 'SNClassificationResult', 'SNClassifySoundRequest', 'SRAmbientLightSample', 'SRApplicationUsage', 'SRDeletionRecord', 'SRDevice', 'SRDeviceUsageReport', 'SRFetchRequest', 'SRFetchResult', 'SRKeyboardMetrics', 'SRKeyboardProbabilityMetric', 'SRMessagesUsageReport', 'SRNotificationUsage', 'SRPhoneUsageReport', 'SRSensorReader', 'SRVisit', 'SRWebUsage', 'SRWristDetection', 'SSReadingList', 'STScreenTi
meConfiguration', 'STScreenTimeConfigurationObserver', 'STWebHistory', 'STWebpageController', 'TKBERTLVRecord', 'TKCompactTLVRecord', 'TKSimpleTLVRecord', 'TKSmartCard', 'TKSmartCardATR', 'TKSmartCardATRInterfaceGroup', 'TKSmartCardPINFormat', 'TKSmartCardSlot', 'TKSmartCardSlotManager', 'TKSmartCardToken', 'TKSmartCardTokenDriver', 'TKSmartCardTokenSession', 'TKSmartCardUserInteraction', 'TKSmartCardUserInteractionForPINOperation', 'TKSmartCardUserInteractionForSecurePINChange', 'TKSmartCardUse
rInteractionForSecurePINVerification', 'TKTLVRecord', 'TKToken', 'TKTokenAuthOperation', 'TKTokenConfiguration', 'TKTokenDriver', 'TKTokenDriverConfiguration', 'TKTokenKeyAlgorithm', 'TKTokenKeyExchangeParameters', 'TKTokenKeychainCertificate', 'TKTokenKeychainContents', 'TKTokenKeychainItem', 'TKTokenKeychainKey', 'TKTokenPasswordAuthOperation', 'TKTokenSession', 'TKTokenSmartCardPINAuthOperation', 'TKTokenWatcher', 'TWRequest', 'TWTweetComposeViewController', 'UIAcceleration', 'UIAccelerometer
', 'UIAccessibilityCustomAction', 'UIAccessibilityCustomRotor', 'UIAccessibilityCustomRotorItemResult', 'UIAccessibilityCustomRotorSearchPredicate', 'UIAccessibilityElement', 'UIAccessibilityLocationDescriptor', 'UIAction', 'UIActionSheet', 'UIActivity', 'UIActivityIndicatorView', 'UIActivityItemProvider', 'UIActivityItemsConfiguration', 'UIActivityViewController', 'UIAlertAction', 'UIAlertController', 'UIAlertView', 'UIApplication', 'UIApplicationShortcutIcon', 'UIApplicationShortcutItem', 'UIA
ttachmentBehavior', 'UIBackgroundConfiguration', 'UIBarAppearance', 'UIBarButtonItem', 'UIBarButtonItemAppearance', 'UIBarButtonItemGroup', 'UIBarButtonItemStateAppearance', 'UIBarItem', 'UIBezierPath', 'UIBlurEffect', 'UIButton', 'UICellAccessory', 'UICellAccessoryCheckmark', 'UICellAccessoryCustomView', 'UICellAccessoryDelete', 'UICellAccessoryDisclosureIndicator', 'UICellAccessoryInsert', 'UICellAccessoryLabel', 'UICellAccessoryMultiselect', 'UICellAccessoryOutlineDisclosure', 'UICellAccessor
yReorder', 'UICellConfigurationState', 'UICloudSharingController', 'UICollectionLayoutListConfiguration', 'UICollectionReusableView', 'UICollectionView', 'UICollectionViewCell', 'UICollectionViewCellRegistration', 'UICollectionViewCompositionalLayout', 'UICollectionViewCompositionalLayoutConfiguration', 'UICollectionViewController', 'UICollectionViewDiffableDataSource', 'UICollectionViewDiffableDataSourceReorderingHandlers', 'UICollectionViewDiffableDataSourceSectionSnapshotHandlers', 'UICollect
ionViewDropPlaceholder', 'UICollectionViewDropProposal', 'UICollectionViewFlowLayout', 'UICollectionViewFlowLayoutInvalidationContext', 'UICollectionViewFocusUpdateContext', 'UICollectionViewLayout', 'UICollectionViewLayoutAttributes', 'UICollectionViewLayoutInvalidationContext', 'UICollectionViewListCell', 'UICollectionViewPlaceholder', 'UICollectionViewSupplementaryRegistration', 'UICollectionViewTransitionLayout', 'UICollectionViewUpdateItem', 'UICollisionBehavior', 'UIColor', 'UIColorPickerV
iewController', 'UIColorWell', 'UICommand', 'UICommandAlternate', 'UIContextMenuConfiguration', 'UIContextMenuInteraction', 'UIContextualAction', 'UIControl', 'UICubicTimingParameters', 'UIDatePicker', 'UIDeferredMenuElement', 'UIDevice', 'UIDictationPhrase', 'UIDocument', 'UIDocumentBrowserAction', 'UIDocumentBrowserTransitionController', 'UIDocumentBrowserViewController', 'UIDocumentInteractionController', 'UIDocumentMenuViewController', 'UIDocumentPickerExtensionViewController', 'UIDocumentPi
ckerViewController', 'UIDragInteraction', 'UIDragItem', 'UIDragPreview', 'UIDragPreviewParameters', 'UIDragPreviewTarget', 'UIDropInteraction', 'UIDropProposal', 'UIDynamicAnimator', 'UIDynamicBehavior', 'UIDynamicItemBehavior', 'UIDynamicItemGroup', 'UIEvent', 'UIFeedbackGenerator', 'UIFieldBehavior', 'UIFocusAnimationCoordinator', 'UIFocusDebugger', 'UIFocusGuide', 'UIFocusMovementHint', 'UIFocusSystem', 'UIFocusUpdateContext', 'UIFont', 'UIFontDescriptor', 'UIFontMetrics', 'UIFontPickerViewCo
ntroller', 'UIFontPickerViewControllerConfiguration', 'UIGestureRecognizer', 'UIGraphicsImageRenderer', 'UIGraphicsImageRendererContext', 'UIGraphicsImageRendererFormat', 'UIGraphicsPDFRenderer', 'UIGraphicsPDFRendererContext', 'UIGraphicsPDFRendererFormat', 'UIGraphicsRenderer', 'UIGraphicsRendererContext', 'UIGraphicsRendererFormat', 'UIGravityBehavior', 'UIHoverGestureRecognizer', 'UIImage', 'UIImageAsset', 'UIImageConfiguration', 'UIImagePickerController', 'UIImageSymbolConfiguration', 'UIIm
ageView', 'UIImpactFeedbackGenerator', 'UIIndirectScribbleInteraction', 'UIInputView', 'UIInputViewController', 'UIInterpolatingMotionEffect', 'UIKey', 'UIKeyCommand', 'UILabel', 'UILargeContentViewerInteraction', 'UILayoutGuide', 'UILexicon', 'UILexiconEntry', 'UIListContentConfiguration', 'UIListContentImageProperties', 'UIListContentTextProperties', 'UIListContentView', 'UILocalNotification', 'UILocalizedIndexedCollation', 'UILongPressGestureRecognizer', 'UIManagedDocument', 'UIMarkupTextPrin
tFormatter', 'UIMenu', 'UIMenuController', 'UIMenuElement', 'UIMenuItem', 'UIMenuSystem', 'UIMotionEffect', 'UIMotionEffectGroup', 'UIMutableApplicationShortcutItem', 'UIMutableUserNotificationAction', 'UIMutableUserNotificationCategory', 'UINavigationBar', 'UINavigationBarAppearance', 'UINavigationController', 'UINavigationItem', 'UINib', 'UINotificationFeedbackGenerator', 'UIOpenURLContext', 'UIPageControl', 'UIPageViewController', 'UIPanGestureRecognizer', 'UIPasteConfiguration', 'UIPasteboar
d', 'UIPencilInteraction', 'UIPercentDrivenInteractiveTransition', 'UIPickerView', 'UIPinchGestureRecognizer', 'UIPointerEffect', 'UIPointerHighlightEffect', 'UIPointerHoverEffect', 'UIPointerInteraction', 'UIPointerLiftEffect', 'UIPointerLockState', 'UIPointerRegion', 'UIPointerRegionRequest', 'UIPointerShape', 'UIPointerStyle', 'UIPopoverBackgroundView', 'UIPopoverController', 'UIPopoverPresentationController', 'UIPresentationController', 'UIPress', 'UIPressesEvent', 'UIPreviewAction', 'UIPrev
iewActionGroup', 'UIPreviewInteraction', 'UIPreviewParameters', 'UIPreviewTarget', 'UIPrintFormatter', 'UIPrintInfo', 'UIPrintInteractionController', 'UIPrintPageRenderer', 'UIPrintPaper', 'UIPrinter', 'UIPrinterPickerController', 'UIProgressView', 'UIPushBehavior', 'UIReferenceLibraryViewController', 'UIRefreshControl', 'UIRegion', 'UIResponder', 'UIRotationGestureRecognizer', 'UIScene', 'UISceneActivationConditions', 'UISceneActivationRequestOptions', 'UISceneConfiguration', 'UISceneConnection
Options', 'UISceneDestructionRequestOptions', 'UISceneOpenExternalURLOptions', 'UISceneOpenURLOptions', 'UISceneSession', 'UISceneSizeRestrictions', 'UIScreen', 'UIScreenEdgePanGestureRecognizer', 'UIScreenMode', 'UIScreenshotService', 'UIScribbleInteraction', 'UIScrollView', 'UISearchBar', 'UISearchContainerViewController', 'UISearchController', 'UISearchDisplayController', 'UISearchSuggestionItem', 'UISearchTextField', 'UISearchToken', 'UISegmentedControl', 'UISelectionFeedbackGenerator', 'UIS
impleTextPrintFormatter', 'UISlider', 'UISnapBehavior', 'UISplitViewController', 'UISpringLoadedInteraction', 'UISpringTimingParameters', 'UIStackView', 'UIStatusBarManager', 'UIStepper', 'UIStoryboard', 'UIStoryboardPopoverSegue', 'UIStoryboardSegue', 'UIStoryboardUnwindSegueSource', 'UISwipeActionsConfiguration', 'UISwipeGestureRecognizer', 'UISwitch', 'UITabBar', 'UITabBarAppearance', 'UITabBarController', 'UITabBarItem', 'UITabBarItemAppearance', 'UITabBarItemStateAppearance', 'UITableView',
 'UITableViewCell', 'UITableViewController', 'UITableViewDiffableDataSource', 'UITableViewDropPlaceholder', 'UITableViewDropProposal', 'UITableViewFocusUpdateContext', 'UITableViewHeaderFooterView', 'UITableViewPlaceholder', 'UITableViewRowAction', 'UITapGestureRecognizer', 'UITargetedDragPreview', 'UITargetedPreview', 'UITextChecker', 'UITextDragPreviewRenderer', 'UITextDropProposal', 'UITextField', 'UITextFormattingCoordinator', 'UITextInputAssistantItem', 'UITextInputMode', 'UITextInputPasswo
rdRules', 'UITextInputStringTokenizer', 'UITextInteraction', 'UITextPlaceholder', 'UITextPosition', 'UITextRange', 'UITextSelectionRect', 'UITextView', 'UITitlebar', 'UIToolbar', 'UIToolbarAppearance', 'UITouch', 'UITraitCollection', 'UIUserNotificationAction', 'UIUserNotificationCategory', 'UIUserNotificationSettings', 'UIVibrancyEffect', 'UIVideoEditorController', 'UIView', 'UIViewConfigurationState', 'UIViewController', 'UIViewPrintFormatter', 'UIViewPropertyAnimator', 'UIVisualEffect', 'UIVi
sualEffectView', 'UIWebView', 'UIWindow', 'UIWindowScene', 'UIWindowSceneDestructionRequestOptions', 'UNCalendarNotificationTrigger', 'UNLocationNotificationTrigger', 'UNMutableNotificationContent', 'UNNotification', 'UNNotificationAction', 'UNNotificationAttachment', 'UNNotificationCategory', 'UNNotificationContent', 'UNNotificationRequest', 'UNNotificationResponse', 'UNNotificationServiceExtension', 'UNNotificationSettings', 'UNNotificationSound', 'UNNotificationTrigger', 'UNPushNotificationTr
igger', 'UNTextInputNotificationAction', 'UNTextInputNotificationResponse', 'UNTimeIntervalNotificationTrigger', 'UNUserNotificationCenter', 'UTType', 'VNBarcodeObservation', 'VNCircle', 'VNClassificationObservation', 'VNClassifyImageRequest', 'VNContour', 'VNContoursObservation', 'VNCoreMLFeatureValueObservation', 'VNCoreMLModel', 'VNCoreMLRequest', 'VNDetectBarcodesRequest', 'VNDetectContoursRequest', 'VNDetectFaceCaptureQualityRequest', 'VNDetectFaceLandmarksRequest', 'VNDetectFaceRectanglesR
equest', 'VNDetectHorizonRequest', 'VNDetectHumanBodyPoseRequest', 'VNDetectHumanHandPoseRequest', 'VNDetectHumanRectanglesRequest', 'VNDetectRectanglesRequest', 'VNDetectTextRectanglesRequest', 'VNDetectTrajectoriesRequest', 'VNDetectedObjectObservation', 'VNDetectedPoint', 'VNDocumentCameraScan', 'VNDocumentCameraViewController', 'VNFaceLandmarkRegion', 'VNFaceLandmarkRegion2D', 'VNFaceLandmarks', 'VNFaceLandmarks2D', 'VNFaceObservation', 'VNFeaturePrintObservation', 'VNGenerateAttentionBasedS
aliencyImageRequest', 'VNGenerateImageFeaturePrintRequest', 'VNGenerateObjectnessBasedSaliencyImageRequest', 'VNGenerateOpticalFlowRequest', 'VNGeometryUtils', 'VNHomographicImageRegistrationRequest', 'VNHorizonObservation', 'VNHumanBodyPoseObservation', 'VNHumanHandPoseObservation', 'VNImageAlignmentObservation', 'VNImageBasedRequest', 'VNImageHomographicAlignmentObservation', 'VNImageRegistrationRequest', 'VNImageRequestHandler', 'VNImageTranslationAlignmentObservation', 'VNObservation', 'VNPi
xelBufferObservation', 'VNPoint', 'VNRecognizeAnimalsRequest', 'VNRecognizeTextRequest', 'VNRecognizedObjectObservation', 'VNRecognizedPoint', 'VNRecognizedPointsObservation', 'VNRecognizedText', 'VNRecognizedTextObservation', 'VNRectangleObservation', 'VNRequest', 'VNSaliencyImageObservation', 'VNSequenceRequestHandler', 'VNStatefulRequest', 'VNTargetedImageRequest', 'VNTextObservation', 'VNTrackObjectRequest', 'VNTrackRectangleRequest', 'VNTrackingRequest', 'VNTrajectoryObservation', 'VNTransl
ationalImageRegistrationRequest', 'VNVector', 'VNVideoProcessor', 'VNVideoProcessorCadence', 'VNVideoProcessorFrameRateCadence', 'VNVideoProcessorRequestProcessingOptions', 'VNVideoProcessorTimeIntervalCadence', 'VSAccountApplicationProvider', 'VSAccountManager', 'VSAccountManagerResult', 'VSAccountMetadata', 'VSAccountMetadataRequest', 'VSAccountProviderResponse', 'VSSubscription', 'VSSubscriptionRegistrationCenter', 'WCSession', 'WCSessionFile', 'WCSessionFileTransfer', 'WCSessionUserInfoTrans
fer', 'WKBackForwardList', 'WKBackForwardListItem', 'WKContentRuleList', 'WKContentRuleListStore', 'WKContentWorld', 'WKContextMenuElementInfo', 'WKFindConfiguration', 'WKFindResult', 'WKFrameInfo', 'WKHTTPCookieStore', 'WKNavigation', 'WKNavigationAction', 'WKNavigationResponse', 'WKOpenPanelParameters', 'WKPDFConfiguration', 'WKPreferences', 'WKPreviewElementInfo', 'WKProcessPool', 'WKScriptMessage', 'WKSecurityOrigin', 'WKSnapshotConfiguration', 'WKUserContentController', 'WKUserScript', 'WKW
ebView', 'WKWebViewConfiguration', 'WKWebpagePreferences', 'WKWebsiteDataRecord', 'WKWebsiteDataStore', 'WKWindowFeatures', '__EntityAccessibilityWrapper'}
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_cocoa_builtins.py:15:COCOA_PROTOCOLS = {'ABNewPersonViewControllerDelegate', 'ABPeoplePickerNavigationControllerDelegate', 'ABPersonViewControllerDelegate', 'ABUnknownPersonViewControllerDelegate', 'ADActionViewControllerChildInterface', 'ADActionViewControllerInterface', 'ADBannerViewDelegate', 'ADInterstitialAdDelegate', 'AEAssessmentSessionDelegate', 'ARAnchorCopying', 'ARCoachingOverlayViewDelegate', 'ARSCNViewDelegate', 'ARSKViewDe
legate', 'ARSessionDelegate', 'ARSessionObserver', 'ARSessionProviding', 'ARTrackable', 'ASAccountAuthenticationModificationControllerDelegate', 'ASAccountAuthenticationModificationControllerPresentationContextProviding', 'ASAuthorizationControllerDelegate', 'ASAuthorizationControllerPresentationContextProviding', 'ASAuthorizationCredential', 'ASAuthorizationProvider', 'ASAuthorizationProviderExtensionAuthorizationRequestHandler', 'ASWebAuthenticationPresentationContextProviding', 'ASWebAuthenti
cationSessionRequestDelegate', 'ASWebAuthenticationSessionWebBrowserSessionHandling', 'AUAudioUnitFactory', 'AVAssetDownloadDelegate', 'AVAssetResourceLoaderDelegate', 'AVAssetWriterDelegate', 'AVAsynchronousKeyValueLoading', 'AVCaptureAudioDataOutputSampleBufferDelegate', 'AVCaptureDataOutputSynchronizerDelegate', 'AVCaptureDepthDataOutputDelegate', 'AVCaptureFileOutputDelegate', 'AVCaptureFileOutputRecordingDelegate', 'AVCaptureMetadataOutputObjectsDelegate', 'AVCapturePhotoCaptureDelegate', '
AVCapturePhotoFileDataRepresentationCustomizer', 'AVCaptureVideoDataOutputSampleBufferDelegate', 'AVContentKeyRecipient', 'AVContentKeySessionDelegate', 'AVFragmentMinding', 'AVPictureInPictureControllerDelegate', 'AVPlayerItemLegibleOutputPushDelegate', 'AVPlayerItemMetadataCollectorPushDelegate', 'AVPlayerItemMetadataOutputPushDelegate', 'AVPlayerItemOutputPullDelegate', 'AVPlayerItemOutputPushDelegate', 'AVPlayerViewControllerDelegate', 'AVQueuedSampleBufferRendering', 'AVRoutePickerViewDeleg
ate', 'AVVideoCompositing', 'AVVideoCompositionInstruction', 'AVVideoCompositionValidationHandling', 'AXCustomContentProvider', 'CAAction', 'CAAnimationDelegate', 'CALayerDelegate', 'CAMediaTiming', 'CAMetalDrawable', 'CBCentralManagerDelegate', 'CBPeripheralDelegate', 'CBPeripheralManagerDelegate', 'CHHapticAdvancedPatternPlayer', 'CHHapticDeviceCapability', 'CHHapticParameterAttributes', 'CHHapticPatternPlayer', 'CIAccordionFoldTransition', 'CIAffineClamp', 'CIAffineTile', 'CIAreaAverage', 'CI
AreaHistogram', 'CIAreaMaximum', 'CIAreaMaximumAlpha', 'CIAreaMinMax', 'CIAreaMinMaxRed', 'CIAreaMinimum', 'CIAreaMinimumAlpha', 'CIAreaReductionFilter', 'CIAttributedTextImageGenerator', 'CIAztecCodeGenerator', 'CIBarcodeGenerator', 'CIBarsSwipeTransition', 'CIBicubicScaleTransform', 'CIBlendWithMask', 'CIBloom', 'CIBokehBlur', 'CIBoxBlur', 'CIBumpDistortion', 'CIBumpDistortionLinear', 'CICMYKHalftone', 'CICheckerboardGenerator', 'CICircleSplashDistortion', 'CICircularScreen', 'CICircularWrap',
 'CICode128BarcodeGenerator', 'CIColorAbsoluteDifference', 'CIColorClamp', 'CIColorControls', 'CIColorCrossPolynomial', 'CIColorCube', 'CIColorCubeWithColorSpace', 'CIColorCubesMixedWithMask', 'CIColorCurves', 'CIColorInvert', 'CIColorMap', 'CIColorMatrix', 'CIColorMonochrome', 'CIColorPolynomial', 'CIColorPosterize', 'CIColorThreshold', 'CIColorThresholdOtsu', 'CIColumnAverage', 'CIComicEffect', 'CICompositeOperation', 'CIConvolution', 'CICopyMachineTransition', 'CICoreMLModel', 'CICrystallize'
, 'CIDepthOfField', 'CIDepthToDisparity', 'CIDiscBlur', 'CIDisintegrateWithMaskTransition', 'CIDisparityToDepth', 'CIDisplacementDistortion', 'CIDissolveTransition', 'CIDither', 'CIDocumentEnhancer', 'CIDotScreen', 'CIDroste', 'CIEdgePreserveUpsample', 'CIEdgeWork', 'CIEdges', 'CIEightfoldReflectedTile', 'CIExposureAdjust', 'CIFalseColor', 'CIFilter', 'CIFilterConstructor', 'CIFlashTransition', 'CIFourCoordinateGeometryFilter', 'CIFourfoldReflectedTile', 'CIFourfoldRotatedTile', 'CIFourfoldTrans
latedTile', 'CIGaborGradients', 'CIGammaAdjust', 'CIGaussianBlur', 'CIGaussianGradient', 'CIGlassDistortion', 'CIGlassLozenge', 'CIGlideReflectedTile', 'CIGloom', 'CIHatchedScreen', 'CIHeightFieldFromMask', 'CIHexagonalPixellate', 'CIHighlightShadowAdjust', 'CIHistogramDisplay', 'CIHoleDistortion', 'CIHueAdjust', 'CIHueSaturationValueGradient', 'CIImageProcessorInput', 'CIImageProcessorOutput', 'CIKMeans', 'CIKaleidoscope', 'CIKeystoneCorrectionCombined', 'CIKeystoneCorrectionHorizontal', 'CIKey
stoneCorrectionVertical', 'CILabDeltaE', 'CILanczosScaleTransform', 'CILenticularHaloGenerator', 'CILightTunnel', 'CILineOverlay', 'CILineScreen', 'CILinearGradient', 'CILinearToSRGBToneCurve', 'CIMaskToAlpha', 'CIMaskedVariableBlur', 'CIMaximumComponent', 'CIMedian', 'CIMeshGenerator', 'CIMinimumComponent', 'CIMix', 'CIModTransition', 'CIMorphologyGradient', 'CIMorphologyMaximum', 'CIMorphologyMinimum', 'CIMorphologyRectangleMaximum', 'CIMorphologyRectangleMinimum', 'CIMotionBlur', 'CINinePartS
tretched', 'CINinePartTiled', 'CINoiseReduction', 'CIOpTile', 'CIPDF417BarcodeGenerator', 'CIPageCurlTransition', 'CIPageCurlWithShadowTransition', 'CIPaletteCentroid', 'CIPalettize', 'CIParallelogramTile', 'CIPerspectiveCorrection', 'CIPerspectiveRotate', 'CIPerspectiveTile', 'CIPerspectiveTransform', 'CIPerspectiveTransformWithExtent', 'CIPhotoEffect', 'CIPinchDistortion', 'CIPixellate', 'CIPlugInRegistration', 'CIPointillize', 'CIQRCodeGenerator', 'CIRadialGradient', 'CIRandomGenerator', 'CIR
ippleTransition', 'CIRoundedRectangleGenerator', 'CIRowAverage', 'CISRGBToneCurveToLinear', 'CISaliencyMap', 'CISepiaTone', 'CIShadedMaterial', 'CISharpenLuminance', 'CISixfoldReflectedTile', 'CISixfoldRotatedTile', 'CISmoothLinearGradient', 'CISpotColor', 'CISpotLight', 'CIStarShineGenerator', 'CIStraighten', 'CIStretchCrop', 'CIStripesGenerator', 'CISunbeamsGenerator', 'CISwipeTransition', 'CITemperatureAndTint', 'CITextImageGenerator', 'CIThermal', 'CIToneCurve', 'CITorusLensDistortion', 'CIT
ransitionFilter', 'CITriangleKaleidoscope', 'CITriangleTile', 'CITwelvefoldReflectedTile', 'CITwirlDistortion', 'CIUnsharpMask', 'CIVibrance', 'CIVignette', 'CIVignetteEffect', 'CIVortexDistortion', 'CIWhitePointAdjust', 'CIXRay', 'CIZoomBlur', 'CKRecordKeyValueSetting', 'CKRecordValue', 'CLKComplicationDataSource', 'CLLocationManagerDelegate', 'CLSContextProvider', 'CLSDataStoreDelegate', 'CMFallDetectionDelegate', 'CMHeadphoneMotionManagerDelegate', 'CNChangeHistoryEventVisitor', 'CNContactPic
kerDelegate', 'CNContactViewControllerDelegate', 'CNKeyDescriptor', 'CPApplicationDelegate', 'CPBarButtonProviding', 'CPInterfaceControllerDelegate', 'CPListTemplateDelegate', 'CPListTemplateItem', 'CPMapTemplateDelegate', 'CPNowPlayingTemplateObserver', 'CPPointOfInterestTemplateDelegate', 'CPSearchTemplateDelegate', 'CPSelectableListItem', 'CPSessionConfigurationDelegate', 'CPTabBarTemplateDelegate', 'CPTemplateApplicationDashboardSceneDelegate', 'CPTemplateApplicationSceneDelegate', 'CSSearch
ableIndexDelegate', 'CTSubscriberDelegate', 'CTTelephonyNetworkInfoDelegate', 'CXCallDirectoryExtensionContextDelegate', 'CXCallObserverDelegate', 'CXProviderDelegate', 'EAAccessoryDelegate', 'EAGLDrawable', 'EAWiFiUnconfiguredAccessoryBrowserDelegate', 'EKCalendarChooserDelegate', 'EKEventEditViewDelegate', 'EKEventViewDelegate', 'GCDevice', 'GKAchievementViewControllerDelegate', 'GKAgentDelegate', 'GKChallengeEventHandlerDelegate', 'GKChallengeListener', 'GKFriendRequestComposeViewControllerDe
legate', 'GKGameCenterControllerDelegate', 'GKGameModel', 'GKGameModelPlayer', 'GKGameModelUpdate', 'GKGameSessionEventListener', 'GKGameSessionSharingViewControllerDelegate', 'GKInviteEventListener', 'GKLeaderboardViewControllerDelegate', 'GKLocalPlayerListener', 'GKMatchDelegate', 'GKMatchmakerViewControllerDelegate', 'GKPeerPickerControllerDelegate', 'GKRandom', 'GKSavedGameListener', 'GKSceneRootNodeType', 'GKSessionDelegate', 'GKStrategist', 'GKTurnBasedEventListener', 'GKTurnBasedMatchmake
rViewControllerDelegate', 'GKVoiceChatClient', 'GLKNamedEffect', 'GLKViewControllerDelegate', 'GLKViewDelegate', 'HKLiveWorkoutBuilderDelegate', 'HKWorkoutSessionDelegate', 'HMAccessoryBrowserDelegate', 'HMAccessoryDelegate', 'HMCameraSnapshotControlDelegate', 'HMCameraStreamControlDelegate', 'HMHomeDelegate', 'HMHomeManagerDelegate', 'HMNetworkConfigurationProfileDelegate', 'ICCameraDeviceDelegate', 'ICCameraDeviceDownloadDelegate', 'ICDeviceBrowserDelegate', 'ICDeviceDelegate', 'ICScannerDevic
eDelegate', 'ILMessageFilterQueryHandling', 'INActivateCarSignalIntentHandling', 'INAddMediaIntentHandling', 'INAddTasksIntentHandling', 'INAppendToNoteIntentHandling', 'INBookRestaurantReservationIntentHandling', 'INCallsDomainHandling', 'INCancelRideIntentHandling', 'INCancelWorkoutIntentHandling', 'INCarCommandsDomainHandling', 'INCarPlayDomainHandling', 'INCreateNoteIntentHandling', 'INCreateTaskListIntentHandling', 'INDeleteTasksIntentHandling', 'INEndWorkoutIntentHandling', 'INGetAvailable
RestaurantReservationBookingDefaultsIntentHandling', 'INGetAvailableRestaurantReservationBookingsIntentHandling', 'INGetCarLockStatusIntentHandling', 'INGetCarPowerLevelStatusIntentHandling', 'INGetCarPowerLevelStatusIntentResponseObserver', 'INGetRestaurantGuestIntentHandling', 'INGetRideStatusIntentHandling', 'INGetRideStatusIntentResponseObserver', 'INGetUserCurrentRestaurantReservationBookingsIntentHandling', 'INGetVisualCodeIntentHandling', 'INIntentHandlerProviding', 'INListCarsIntentHandl
ing', 'INListRideOptionsIntentHandling', 'INMessagesDomainHandling', 'INNotebookDomainHandling', 'INPauseWorkoutIntentHandling', 'INPayBillIntentHandling', 'INPaymentsDomainHandling', 'INPhotosDomainHandling', 'INPlayMediaIntentHandling', 'INRadioDomainHandling', 'INRequestPaymentIntentHandling', 'INRequestRideIntentHandling', 'INResumeWorkoutIntentHandling', 'INRidesharingDomainHandling', 'INSaveProfileInCarIntentHandling', 'INSearchCallHistoryIntentHandling', 'INSearchForAccountsIntentHandling
', 'INSearchForBillsIntentHandling', 'INSearchForMediaIntentHandling', 'INSearchForMessagesIntentHandling', 'INSearchForNotebookItemsIntentHandling', 'INSearchForPhotosIntentHandling', 'INSendMessageIntentHandling', 'INSendPaymentIntentHandling', 'INSendRideFeedbackIntentHandling', 'INSetAudioSourceInCarIntentHandling', 'INSetCarLockStatusIntentHandling', 'INSetClimateSettingsInCarIntentHandling', 'INSetDefrosterSettingsInCarIntentHandling', 'INSetMessageAttributeIntentHandling', 'INSetProfileIn
CarIntentHandling', 'INSetRadioStationIntentHandling', 'INSetSeatSettingsInCarIntentHandling', 'INSetTaskAttributeIntentHandling', 'INSnoozeTasksIntentHandling', 'INSpeakable', 'INStartAudioCallIntentHandling', 'INStartCallIntentHandling', 'INStartPhotoPlaybackIntentHandling', 'INStartVideoCallIntentHandling', 'INStartWorkoutIntentHandling', 'INTransferMoneyIntentHandling', 'INUIAddVoiceShortcutButtonDelegate', 'INUIAddVoiceShortcutViewControllerDelegate', 'INUIEditVoiceShortcutViewControllerDel
egate', 'INUIHostedViewControlling', 'INUIHostedViewSiriProviding', 'INUpdateMediaAffinityIntentHandling', 'INVisualCodeDomainHandling', 'INWorkoutsDomainHandling', 'JSExport', 'MCAdvertiserAssistantDelegate', 'MCBrowserViewControllerDelegate', 'MCNearbyServiceAdvertiserDelegate', 'MCNearbyServiceBrowserDelegate', 'MCSessionDelegate', 'MDLAssetResolver', 'MDLComponent', 'MDLJointAnimation', 'MDLLightProbeIrradianceDataSource', 'MDLMeshBuffer', 'MDLMeshBufferAllocator', 'MDLMeshBufferZone', 'MDLN
amed', 'MDLObjectContainerComponent', 'MDLTransformComponent', 'MDLTransformOp', 'MFMailComposeViewControllerDelegate', 'MFMessageComposeViewControllerDelegate', 'MIDICIProfileResponderDelegate', 'MKAnnotation', 'MKGeoJSONObject', 'MKLocalSearchCompleterDelegate', 'MKMapViewDelegate', 'MKOverlay', 'MKReverseGeocoderDelegate', 'MLBatchProvider', 'MLCustomLayer', 'MLCustomModel', 'MLFeatureProvider', 'MLWritable', 'MPMediaPickerControllerDelegate', 'MPMediaPlayback', 'MPNowPlayingSessionDelegate',
 'MPPlayableContentDataSource', 'MPPlayableContentDelegate', 'MPSystemMusicPlayerController', 'MSAuthenticationPresentationContext', 'MSMessagesAppTranscriptPresentation', 'MSStickerBrowserViewDataSource', 'MTKViewDelegate', 'MTLAccelerationStructure', 'MTLAccelerationStructureCommandEncoder', 'MTLArgumentEncoder', 'MTLBinaryArchive', 'MTLBlitCommandEncoder', 'MTLBuffer', 'MTLCaptureScope', 'MTLCommandBuffer', 'MTLCommandBufferEncoderInfo', 'MTLCommandEncoder', 'MTLCommandQueue', 'MTLComputeComm
andEncoder', 'MTLComputePipelineState', 'MTLCounter', 'MTLCounterSampleBuffer', 'MTLCounterSet', 'MTLDepthStencilState', 'MTLDevice', 'MTLDrawable', 'MTLDynamicLibrary', 'MTLEvent', 'MTLFence', 'MTLFunction', 'MTLFunctionHandle', 'MTLFunctionLog', 'MTLFunctionLogDebugLocation', 'MTLHeap', 'MTLIndirectCommandBuffer', 'MTLIndirectComputeCommand', 'MTLIndirectComputeCommandEncoder', 'MTLIndirectRenderCommand', 'MTLIndirectRenderCommandEncoder', 'MTLIntersectionFunctionTable', 'MTLLibrary', 'MTLLogC
ontainer', 'MTLParallelRenderCommandEncoder', 'MTLRasterizationRateMap', 'MTLRenderCommandEncoder', 'MTLRenderPipelineState', 'MTLResource', 'MTLResourceStateCommandEncoder', 'MTLSamplerState', 'MTLSharedEvent', 'MTLTexture', 'MTLVisibleFunctionTable', 'MXMetricManagerSubscriber', 'MyClassJavaScriptMethods', 'NCWidgetProviding', 'NEAppPushDelegate', 'NFCFeliCaTag', 'NFCISO15693Tag', 'NFCISO7816Tag', 'NFCMiFareTag', 'NFCNDEFReaderSessionDelegate', 'NFCNDEFTag', 'NFCReaderSession', 'NFCReaderSessi
onDelegate', 'NFCTag', 'NFCTagReaderSessionDelegate', 'NFCVASReaderSessionDelegate', 'NISessionDelegate', 'NSCacheDelegate', 'NSCoding', 'NSCollectionLayoutContainer', 'NSCollectionLayoutEnvironment', 'NSCollectionLayoutVisibleItem', 'NSCopying', 'NSDecimalNumberBehaviors', 'NSDiscardableContent', 'NSExtensionRequestHandling', 'NSFastEnumeration', 'NSFetchRequestResult', 'NSFetchedResultsControllerDelegate', 'NSFetchedResultsSectionInfo', 'NSFileManagerDelegate', 'NSFilePresenter', 'NSFileProvid
erChangeObserver', 'NSFileProviderEnumerationObserver', 'NSFileProviderEnumerator', 'NSFileProviderItem', 'NSFileProviderServiceSource', 'NSItemProviderReading', 'NSItemProviderWriting', 'NSKeyedArchiverDelegate', 'NSKeyedUnarchiverDelegate', 'NSLayoutManagerDelegate', 'NSLocking', 'NSMachPortDelegate', 'NSMetadataQueryDelegate', 'NSMutableCopying', 'NSNetServiceBrowserDelegate', 'NSNetServiceDelegate', 'NSPortDelegate', 'NSProgressReporting', 'NSSecureCoding', 'NSStreamDelegate', 'NSTextAttachm
entContainer', 'NSTextLayoutOrientationProvider', 'NSTextStorageDelegate', 'NSURLAuthenticationChallengeSender', 'NSURLConnectionDataDelegate', 'NSURLConnectionDelegate', 'NSURLConnectionDownloadDelegate', 'NSURLProtocolClient', 'NSURLSessionDataDelegate', 'NSURLSessionDelegate', 'NSURLSessionDownloadDelegate', 'NSURLSessionStreamDelegate', 'NSURLSessionTaskDelegate', 'NSURLSessionWebSocketDelegate', 'NSUserActivityDelegate', 'NSXMLParserDelegate', 'NSXPCListenerDelegate', 'NSXPCProxyCreating', 
'NWTCPConnectionAuthenticationDelegate', 'OSLogEntryFromProcess', 'OSLogEntryWithPayload', 'PDFDocumentDelegate', 'PDFViewDelegate', 'PHContentEditingController', 'PHLivePhotoFrame', 'PHLivePhotoViewDelegate', 'PHPhotoLibraryAvailabilityObserver', 'PHPhotoLibraryChangeObserver', 'PHPickerViewControllerDelegate', 'PKAddPassesViewControllerDelegate', 'PKAddPaymentPassViewControllerDelegate', 'PKAddSecureElementPassViewControllerDelegate', 'PKCanvasViewDelegate', 'PKDisbursementAuthorizationControl
lerDelegate', 'PKIssuerProvisioningExtensionAuthorizationProviding', 'PKPaymentAuthorizationControllerDelegate', 'PKPaymentAuthorizationViewControllerDelegate', 'PKPaymentInformationRequestHandling', 'PKPushRegistryDelegate', 'PKToolPickerObserver', 'PreviewDisplaying', 'QLPreviewControllerDataSource', 'QLPreviewControllerDelegate', 'QLPreviewItem', 'QLPreviewingController', 'RPBroadcastActivityControllerDelegate', 'RPBroadcastActivityViewControllerDelegate', 'RPBroadcastControllerDelegate', 'RP
PreviewViewControllerDelegate', 'RPScreenRecorderDelegate', 'SCNActionable', 'SCNAnimatable', 'SCNAnimation', 'SCNAvoidOccluderConstraintDelegate', 'SCNBoundingVolume', 'SCNBufferStream', 'SCNCameraControlConfiguration', 'SCNCameraControllerDelegate', 'SCNNodeRendererDelegate', 'SCNPhysicsContactDelegate', 'SCNProgramDelegate', 'SCNSceneExportDelegate', 'SCNSceneRenderer', 'SCNSceneRendererDelegate', 'SCNShadable', 'SCNTechniqueSupport', 'SFSafariViewControllerDelegate', 'SFSpeechRecognitionTask
Delegate', 'SFSpeechRecognizerDelegate', 'SKCloudServiceSetupViewControllerDelegate', 'SKOverlayDelegate', 'SKPaymentQueueDelegate', 'SKPaymentTransactionObserver', 'SKPhysicsContactDelegate', 'SKProductsRequestDelegate', 'SKRequestDelegate', 'SKSceneDelegate', 'SKStoreProductViewControllerDelegate', 'SKViewDelegate', 'SKWarpable', 'SNRequest', 'SNResult', 'SNResultsObserving', 'SRSensorReaderDelegate', 'TKSmartCardTokenDriverDelegate', 'TKSmartCardUserInteractionDelegate', 'TKTokenDelegate', 'T
KTokenDriverDelegate', 'TKTokenSessionDelegate', 'UIAccelerometerDelegate', 'UIAccessibilityContainerDataTable', 'UIAccessibilityContainerDataTableCell', 'UIAccessibilityContentSizeCategoryImageAdjusting', 'UIAccessibilityIdentification', 'UIAccessibilityReadingContent', 'UIActionSheetDelegate', 'UIActivityItemSource', 'UIActivityItemsConfigurationReading', 'UIAdaptivePresentationControllerDelegate', 'UIAlertViewDelegate', 'UIAppearance', 'UIAppearanceContainer', 'UIApplicationDelegate', 'UIBarP
ositioning', 'UIBarPositioningDelegate', 'UICloudSharingControllerDelegate', 'UICollectionViewDataSource', 'UICollectionViewDataSourcePrefetching', 'UICollectionViewDelegate', 'UICollectionViewDelegateFlowLayout', 'UICollectionViewDragDelegate', 'UICollectionViewDropCoordinator', 'UICollectionViewDropDelegate', 'UICollectionViewDropItem', 'UICollectionViewDropPlaceholderContext', 'UICollisionBehaviorDelegate', 'UIColorPickerViewControllerDelegate', 'UIConfigurationState', 'UIContentConfiguration
', 'UIContentContainer', 'UIContentSizeCategoryAdjusting', 'UIContentView', 'UIContextMenuInteractionAnimating', 'UIContextMenuInteractionCommitAnimating', 'UIContextMenuInteractionDelegate', 'UICoordinateSpace', 'UIDataSourceModelAssociation', 'UIDataSourceTranslating', 'UIDocumentBrowserViewControllerDelegate', 'UIDocumentInteractionControllerDelegate', 'UIDocumentMenuDelegate', 'UIDocumentPickerDelegate', 'UIDragAnimating', 'UIDragDropSession', 'UIDragInteractionDelegate', 'UIDragSession', 'U
IDropInteractionDelegate', 'UIDropSession', 'UIDynamicAnimatorDelegate', 'UIDynamicItem', 'UIFocusAnimationContext', 'UIFocusDebuggerOutput', 'UIFocusEnvironment', 'UIFocusItem', 'UIFocusItemContainer', 'UIFocusItemScrollableContainer', 'UIFontPickerViewControllerDelegate', 'UIGestureRecognizerDelegate', 'UIGuidedAccessRestrictionDelegate', 'UIImageConfiguration', 'UIImagePickerControllerDelegate', 'UIIndirectScribbleInteractionDelegate', 'UIInputViewAudioFeedback', 'UIInteraction', 'UIItemProvi
derPresentationSizeProviding', 'UIKeyInput', 'UILargeContentViewerInteractionDelegate', 'UILargeContentViewerItem', 'UILayoutSupport', 'UIMenuBuilder', 'UINavigationBarDelegate', 'UINavigationControllerDelegate', 'UIObjectRestoration', 'UIPageViewControllerDataSource', 'UIPageViewControllerDelegate', 'UIPasteConfigurationSupporting', 'UIPencilInteractionDelegate', 'UIPickerViewAccessibilityDelegate', 'UIPickerViewDataSource', 'UIPickerViewDelegate', 'UIPointerInteractionAnimating', 'UIPointerInt
eractionDelegate', 'UIPopoverBackgroundViewMethods', 'UIPopoverControllerDelegate', 'UIPopoverPresentationControllerDelegate', 'UIPreviewActionItem', 'UIPreviewInteractionDelegate', 'UIPrintInteractionControllerDelegate', 'UIPrinterPickerControllerDelegate', 'UIResponderStandardEditActions', 'UISceneDelegate', 'UIScreenshotServiceDelegate', 'UIScribbleInteractionDelegate', 'UIScrollViewAccessibilityDelegate', 'UIScrollViewDelegate', 'UISearchBarDelegate', 'UISearchControllerDelegate', 'UISearchD
isplayDelegate', 'UISearchResultsUpdating', 'UISearchSuggestion', 'UISearchTextFieldDelegate', 'UISearchTextFieldPasteItem', 'UISplitViewControllerDelegate', 'UISpringLoadedInteractionBehavior', 'UISpringLoadedInteractionContext', 'UISpringLoadedInteractionEffect', 'UISpringLoadedInteractionSupporting', 'UIStateRestoring', 'UITabBarControllerDelegate', 'UITabBarDelegate', 'UITableViewDataSource', 'UITableViewDataSourcePrefetching', 'UITableViewDelegate', 'UITableViewDragDelegate', 'UITableViewDr
opCoordinator', 'UITableViewDropDelegate', 'UITableViewDropItem', 'UITableViewDropPlaceholderContext', 'UITextDocumentProxy', 'UITextDragDelegate', 'UITextDragRequest', 'UITextDraggable', 'UITextDropDelegate', 'UITextDropRequest', 'UITextDroppable', 'UITextFieldDelegate', 'UITextFormattingCoordinatorDelegate', 'UITextInput', 'UITextInputDelegate', 'UITextInputTokenizer', 'UITextInputTraits', 'UITextInteractionDelegate', 'UITextPasteConfigurationSupporting', 'UITextPasteDelegate', 'UITextPasteIte
m', 'UITextSelecting', 'UITextViewDelegate', 'UITimingCurveProvider', 'UIToolbarDelegate', 'UITraitEnvironment', 'UIUserActivityRestoring', 'UIVideoEditorControllerDelegate', 'UIViewAnimating', 'UIViewControllerAnimatedTransitioning', 'UIViewControllerContextTransitioning', 'UIViewControllerInteractiveTransitioning', 'UIViewControllerPreviewing', 'UIViewControllerPreviewingDelegate', 'UIViewControllerRestoration', 'UIViewControllerTransitionCoordinator', 'UIViewControllerTransitionCoordinatorCon
text', 'UIViewControllerTransitioningDelegate', 'UIViewImplicitlyAnimating', 'UIWebViewDelegate', 'UIWindowSceneDelegate', 'UNNotificationContentExtension', 'UNUserNotificationCenterDelegate', 'VNDocumentCameraViewControllerDelegate', 'VNFaceObservationAccepting', 'VNRequestProgressProviding', 'VNRequestRevisionProviding', 'VSAccountManagerDelegate', 'WCSessionDelegate', 'WKHTTPCookieStoreObserver', 'WKNavigationDelegate', 'WKPreviewActionItem', 'WKScriptMessageHandler', 'WKScriptMessageHandlerW
ithReply', 'WKUIDelegate', 'WKURLSchemeHandler', 'WKURLSchemeTask'}
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_googlesql_builtins.py:578:    'CONSTRAINT',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:1445:        'sqlite_constraint',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:4682:        'showeanguardbars',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_lasso_builtins.py:5278:        'showeanguardbars',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_mql_builtins.py:654:    'MB_ICONASTERISK',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:624:    'constraint',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:625:    'constraint_catalog',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:626:    'constraint_name',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_mysql_builtins.py:627:    'constraint_schema',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_postgres_builtins.py:86:    'CONSTRAINT',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_postgres_builtins.py:87:    'CONSTRAINTS',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_scheme_builtins.py:814:    "make-guardian",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_scilab_builtins.py:2626:    'optimbase_hasconstraints',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_sql_builtins.py:26:    'CONNECTION', 'CONNECTION_NAME', 'CONSTRAINT', 'CONSTRAINTS',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_sql_builtins.py:27:    'CONSTRAINT_CATALOG', 'CONSTRAINT_NAME', 'CONSTRAINT_SCHEMA',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_stata_builtins.py:52:    "constra", "constrai", "constrain", "constraint", "continue",
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_tsql_builtins.py:86:    'constraint',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_tsql_builtins.py:287:    'constraints',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_tsql_builtins.py:566:    'constraint',
tradingbot-backend\.venv\Lib\site-packages\pygments\lexers\_tsql_builtins.py:567:    'constraints',
tradingbot-backend\.venv\Lib\site-packages\pygments\styles\paraiso_dark.py:9:    (https://github.com/chriskempson/base16-builder).
tradingbot-backend\.venv\Lib\site-packages\pygments\styles\paraiso_light.py:9:    (https://github.com/chriskempson/base16-builder).
tradingbot-backend\.venv\Lib\site-packages\requests\sessions.py:687:        # Guard against that specific failure case.
tradingbot-backend\.venv\Lib\site-packages\rich\traceback.py:573:                if frame_summary.f_locals.get("_rich_traceback_guard", False):
tradingbot-backend\.venv\Lib\site-packages\rich\traceback.py:884:        _rich_traceback_guard = True
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:769:    "eight-spoked_asterisk": "✳",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:962:    "guard": "💂",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:963:    "guard_dark_skin_tone": "💂🏿",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:964:    "guard_light_skin_tone": "💂🏻",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:965:    "guard_medium-dark_skin_tone": "💂🏾",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:966:    "guard_medium-light_skin_tone": "💂🏼",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:967:    "guard_medium_skin_tone": "💂🏽",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:1301:    "man_guard": "💂\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:1302:    "man_guard_dark_skin_tone": "💂🏿\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:1303:    "man_guard_light_skin_tone": "💂🏻\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:1304:    "man_guard_medium-dark_skin_tone": "💂🏾\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:1305:    "man_guard_medium-light_skin_tone": "💂🏼\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:1306:    "man_guard_medium_skin_tone": "💂🏽\u200d♂️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:2537:    "woman_guard": "💂\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:2538:    "woman_guard_dark_skin_tone": "💂🏿\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:2539:    "woman_guard_light_skin_tone": "💂🏻\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:2540:    "woman_guard_medium-dark_skin_tone": "💂🏾\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:2541:    "woman_guard_medium-light_skin_tone": "💂🏼\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:2542:    "woman_guard_medium_skin_tone": "💂🏽\u200d♀️",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:2769:    "keycap_asterisk": "*⃣",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:2958:    "eight_spoked_asterisk": "✳",
tradingbot-backend\.venv\Lib\site-packages\rich\_emoji_codes.py:3276:    "guardsman": "💂",
tradingbot-backend\.venv\Lib\site-packages\rich\_ratio.py:15:    """Divide total space to satisfy size, ratio, and minimum_size, constraints.
tradingbot-backend\.venv\Lib\site-packages\rich\_ratio.py:18:    impossible to satisfy all the constraints. For instance, if there are two edges
tradingbot-backend\.venv\Lib\site-packages\setuptools\extension.py:135:    # The lack of a default value and risk of `AttributeError` is purposeful
tradingbot-backend\.venv\Lib\site-packages\setuptools\tests\test_editable_install.py:1119:    def test_safeguarded_from_errors(self, tmp_path, venv):
tradingbot-backend\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:327:        using_custom_command_guard = mock.Mock()
tradingbot-backend\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:335:                using_custom_command_guard()
tradingbot-backend\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:355:        using_custom_command_guard.assert_called()
tradingbot-backend\.venv\Lib\site-packages\setuptools\tests\test_sdist.py:507:        # Must touch the file or risk removal
tradingbot-backend\.venv\Lib\site-packages\setuptools\tests\integration\test_pip_install_sdist.py:67:    "pyyaml": ("Cython<3.0",),  # constraint to avoid errors
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\cmd.py:228:    # value meets certain type and value constraints.  If not, we try to
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:10:from distutils.tests.compat.py39 import EnvironmentVarGuard
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:241:        with EnvironmentVarGuard() as env:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:271:            EnvironmentVarGuard() as env,
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:342:            EnvironmentVarGuard() as env,
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\compilers\C\tests\test_unix.py:371:        with EnvironmentVarGuard() as env:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:74:        with os_helper.EnvironmentVarGuard() as env:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:91:        with os_helper.EnvironmentVarGuard() as env:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\tests\test_spawn.py:106:        with os_helper.EnvironmentVarGuard() as env:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\tests\compat\py39.py:11:        EnvironmentVarGuard as EnvironmentVarGuard,
tradingbot-backend\.venv\Lib\site-packages\setuptools\_distutils\tests\compat\py39.py:30:        EnvironmentVarGuard as EnvironmentVarGuard,
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:86:    'TypeGuard',
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1508:        def __new__(cls, name, *constraints, bound=None,
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1513:                typevar = typing.TypeVar(name, *constraints, bound=bound,
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1517:                typevar = typing.TypeVar(name, *constraints, bound=bound,
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1850:if hasattr(typing, 'TypeGuard'):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1851:    TypeGuard = typing.TypeGuard
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1855:    def TypeGuard(self, parameters):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1857:        type guard function.  ``TypeGuard`` only accepts a single type argument.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1860:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1864:        conditional expression here is sometimes referred to as a "type guard".
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1867:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1870:        Using  ``-> TypeGuard`` tells the static type checker that for a given
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1875:        is the type inside ``TypeGuard``.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1880:                # "isinstance" type guard
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1893:        writing type-safe type guards is left to the user.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1895:        ``TypeGuard`` also works with type variables.  For more information, see
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1896:        PEP 647 (User-Defined Type Guards).
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1902:    class _TypeGuardForm(_ExtensionsSpecialForm, _root=True):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1908:    TypeGuard = _TypeGuardForm(
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1909:        'TypeGuard',
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1911:        type guard function.  ``TypeGuard`` only accepts a single type argument.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1914:        ``TypeGuard`` aims to benefit *type narrowing* -- a technique used by static
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1918:        conditional expression here is sometimes referred to as a "type guard".
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1921:        as a type guard.  Such a function should use ``TypeGuard[...]`` as its
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1924:        Using  ``-> TypeGuard`` tells the static type checker that for a given
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1929:        is the type inside ``TypeGuard``.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1934:                # "isinstance" type guard
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1947:        writing type-safe type guards is left to the user.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1949:        ``TypeGuard`` also works with type variables.  For more information, see
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1950:        PEP 647 (User-Defined Type Guards).
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1968:        conditional expression here is sometimes referred to as a "type guard".
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1971:        as a type guard.  Such a function should use ``TypeIs[...]`` as its
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:1979:        is the intersection of the type inside ``TypeGuard`` and the argument's
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2016:        conditional expression here is sometimes referred to as a "type guard".
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2019:        as a type guard.  Such a function should use ``TypeIs[...]`` as its
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typing_extensions.py:2027:        is the intersection of the type inside ``TypeGuard`` and the argument's
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\backports\tarfile\__init__.py:1469:            # as the error handler, but we better not take the risk. For
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\inflect\__init__.py:81:from typeguard import typechecked
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\inflect\__init__.py:2030:# ^-- Workaround for typeguard AST manipulation:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\inflect\__init__.py:2031:#     https://github.com/agronholm/typeguard/issues/353#issuecomment-1556306554
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\inflect\__init__.py:2481:        typeguard.TypeCheckError:...is not an instance of inflect.Word
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\packaging\licenses\_spdx.py:688:    'asterisk-exception': {'id': 'Asterisk-exception', 'deprecated': False},
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\packaging\licenses\_spdx.py:689:    'asterisk-linking-protocols-exception': {'id': 'Asterisk-linking-protocols-exception', 'deprecated': False},
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:533:    elif origin_type.__constraints__:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:534:        for constraint in origin_type.__constraints__:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:535:            annotation = Type[constraint] if subclass_check else constraint
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:543:            formatted_constraints = ", ".join(
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:544:                get_type_name(constraint) for constraint in origin_type.__constraints__
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:547:                f"does not match any of the constraints " f"({formatted_constraints})"
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:604:def check_typeguard(
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:911:    origin_type_checkers[typing.TypeGuard] = check_typeguard
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:925:    origin_type_checkers[typing_extensions.TypeGuard] = check_typeguard
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:970:    All entry points from the ``typeguard.checker_lookup`` group are loaded, and the
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:971:    returned lookup functions are added to :data:`typeguard.checker_lookup_functions`.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:974:        ``TYPEGUARD_DISABLE_PLUGIN_AUTOLOAD`` environment variable is present.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_checkers.py:977:    for ep in entry_points(group="typeguard.checker_lookup"):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_config.py:65:     You can change Typeguard's behavior with these settings.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_config.py:92:         If set to ``True``, the code of modules or functions instrumented by typeguard
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_decorators.py:16:from ._transformer import TypeguardTransformer
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_decorators.py:24:    def typeguard_ignore(f: _F) -> _F:
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_decorators.py:29:    from typing import no_type_check as typeguard_ignore  # noqa: F401
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_decorators.py:73:    instrumentor = TypeguardTransformer(target_path, f.__code__.co_firstlineno)
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_exceptions.py:13:    """Emitted by typeguard's type checkers when a type mismatch is detected."""
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_exceptions.py:28:    Raised by typeguard's type checkers when a type mismatch is detected.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_functions.py:75:    :data:`typeguard.config`. This means that usage within libraries is safe from being
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:17:from ._transformer import TypeguardTransformer
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:35:    OPTIMIZATION = "typeguard" + "".join(version("typeguard").split(".")[:3])
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:37:    OPTIMIZATION = "typeguard"
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:54:class TypeguardLoader(SourceFileLoader):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:75:        tree = TypeguardTransformer().visit(tree)
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:101:class TypeguardFinder(MetaPathFinder):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:104:    :func:`@typechecked <typeguard.typechecked>` if :meth:`should_instrument` returns
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:125:                spec.loader = TypeguardLoader(spec.loader.name, spec.loader.path)
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:150:    A handle that can be used to uninstall the Typeguard import hook.
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_importhook.py:178:    cls: type[TypeguardFinder] = TypeguardFinder,
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_memo.py:5:from typeguard._config import TypeCheckConfiguration, global_config
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:7:from typeguard._config import CollectionCheckStrategy, ForwardRefPolicy, global_config
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:8:from typeguard._exceptions import InstrumentationWarning
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:9:from typeguard._importhook import install_import_hook
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:10:from typeguard._utils import qualified_name, resolve_reference
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:28:    group = parser.getgroup("typeguard")
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:30:        "--typeguard-packages",
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:33:        "type checking, or :all: to instrument all modules loaded after typeguard",
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:38:        "--typeguard-debug-instrumentation",
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:45:        "--typeguard-typecheck-fail-callback",
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:48:            "a module:varname (e.g. typeguard:warn_on_error) reference to a function "
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:56:        "--typeguard-forward-ref-policy",
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:67:        "--typeguard-collection-check-strategy",
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:80:    if packages_option := config.getoption("typeguard_packages"):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:82:    elif packages_ini := config.getini("typeguard-packages"):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:94:                    f"typeguard cannot check these packages because they are already "
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:102:    debug_option = getoption("typeguard-debug-instrumentation")
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:106:    fail_callback_option = getoption("typeguard-typecheck-fail-callback")
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:117:    forward_ref_policy_option = getoption("typeguard-forward-ref-policy")
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_pytest_plugin.py:122:    collection_check_strategy_option = getoption("typeguard-collection-check-strategy")
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:96:    "typeguard.typeguard_ignore",
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:345:    def __init__(self, transformer: TypeguardTransformer):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:499:class TypeguardTransformer(NodeTransformer):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:656:                if self._memo.name_matches(decorator, "typeguard.typechecked"):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:689:        # contains either @no_type_check or @typeguard_ignore
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:708:                    elif self._memo.name_matches(decorator, "typeguard.typechecked"):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:806:                    "typeguard._functions", "check_argument_types"
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:829:                    "typeguard._functions", "check_return_type"
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:903:                        [self._get_import("typeguard._config", "global_config")],
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:912:                    self._get_import("typeguard", "TypeCheckMemo"),
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:958:            func_name = self._get_import("typeguard._functions", "check_return_type")
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:991:            func_name = self._get_import("typeguard._functions", "check_yield_type")
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:1009:            func_name = self._get_import("typeguard._functions", "check_send_type")
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:1045:                        "typeguard._functions", "check_variable_assignment"
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:1109:                        "typeguard._functions", "check_variable_assignment"
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:1124:                        "typeguard._functions", "check_multi_variable_assignment"
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:1157:                "typeguard._functions", "check_variable_assignment"
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_transformer.py:1199:                self._get_import("typeguard._functions", "check_variable_assignment"),
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_utils.py:19:            memo.globals, memo.locals, type_params=(), recursive_guard=frozenset()
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_utils.py:27:            memo.globals, memo.locals, recursive_guard=frozenset()
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\_utils.py:158:    while frame and frame.f_globals.get("__name__", "").startswith("typeguard."):
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\__init__.py:13:from ._decorators import typeguard_ignore as typeguard_ignore
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\__init__.py:22:from ._importhook import TypeguardFinder as TypeguardFinder
tradingbot-backend\.venv\Lib\site-packages\setuptools\_vendor\typeguard\__init__.py:47:if "TYPEGUARD_DISABLE_PLUGIN_AUTOLOAD" not in os.environ:
tradingbot-backend\.venv\Lib\site-packages\urllib3\util\retry.py:73:        Set to ``None`` to remove this constraint and fall back on other
tradingbot-backend\.venv\Lib\site-packages\urllib3\util\ssl_.py:327:        # there is a risk associated with it being on wire,
tradingbot-backend\.venv\Lib\site-packages\urllib3\util\ssl_.py:351:    # matter due to safe-guards SSLContext has to prevent an SSLContext with
tradingbot-backend\.venv\Lib\site-packages\uvicorn\protocols\websockets\wsproto_impl.py:211:        # todo: we may want to guard the size of self.bytes and self.text
tradingbot-backend\.venv\Lib\site-packages\virtualenv\create\via_global_ref\builtin\ref.py:4:the constraints: e.g. can the file system symlink, can the files be read, executed, etc.
tradingbot-backend\.venv\Lib\site-packages\websockets\legacy\protocol.py:513:        Canceling :meth:`recv` is safe. There's no risk of losing the next
tradingbot-backend\.venv\Lib\site-packages\websockets\sync\connection.py:696:                # There's no risk to overwrite another error because
tradingbot-backend\.venv\Lib\site-packages\_pytest\pathlib.py:49:# EBADF - guard against macOS `stat` throwing EBADF
tradingbot-backend\.venv\Lib\site-packages\_pytest\python.py:134:        "side effects(use at your own risk)",
tradingbot-backend\.venv\Lib\site-packages\_pytest\assertion\rewrite.py:73:        # flag to guard against trying to rewrite a pyc file while we are already writing another pyc file,
tradingbot-backend\.venv\Lib\site-packages\_pytest\config\__init__.py:351:        # abuse typeguard from importlib to avoid massive method type union thats lacking a alias
tradingbot-backend\.venv\Lib\site-packages\_pytest\_py\path.py:1319:                # risk of seeing their temporary dir disappear.  For now
tradingbot-backend\archived\scraper\bitfinex_html_parser.py:210:                # Kontrollera om obligatorisk
tradingbot-backend\archived\scraper\comment_api_extractor.py:115:                    # Kontrollera om obligatorisk
tradingbot-backend\archived\scraper\doc_api_extractor.py:193:                                "required": True,  # Anta att alla parametrar i exempel är obligatoriska
tradingbot-backend\archived\scraper\html_api_extractor.py:237:                # Kontrollera om obligatorisk
tradingbot-backend\archived\scraper\organize_docs.py:259:                # Kontrollera om obligatorisk
tradingbot-backend\config\settings.py:84:    RISK_PERCENTAGE: float = 2.0
tradingbot-backend\config\settings.py:86:    # Risk- och handelsregler
tradingbot-backend\config\settings.py:212:    PROB_SIZE_MAX_RISK_PCT: float = 1.0
tradingbot-backend\models\api_models.py:228:    """Modell för en historisk position."""
tradingbot-backend\models\api_models.py:607:    """Generisk modell för API-svar."""
tradingbot-backend\rest\active_orders.py:36:            # Safeguard: om API‑nycklar saknas, returnera tom lista i stället för att krascha UI
tradingbot-backend\rest\debug_routes.py:144:@router.get("/api/v2/debug/risk_guards")
tradingbot-backend\rest\debug_routes.py:145:async def dump_risk_guards() -> dict[str, Any]:
tradingbot-backend\rest\debug_routes.py:146:    """Dump risk guards status."""
tradingbot-backend\rest\debug_routes.py:148:        from services.risk_guards import risk_guards
tradingbot-backend\rest\debug_routes.py:150:        status = risk_guards.get_guards_status()
tradingbot-backend\rest\debug_routes.py:153:        logger.error(f"Fel vid risk guards dump: {e}")
tradingbot-backend\rest\order_history.py:4:Denna modul hanterar historiska orderdata från Bitfinex API.
tradingbot-backend\rest\order_history.py:31:    """Modell för en historisk order."""
tradingbot-backend\rest\order_history.py:204:        # Kandidater för numeriska amount/balance är de första två float-konverterbara
tradingbot-backend\rest\order_history.py:432:            logger.info(f"✅ REST API: Hämtade {len(orders_data)} historiska ordrar")
tradingbot-backend\rest\order_history.py:485:            logger.info(f"✅ REST API: Hämtade {len(trades_data)} historiska trades")
tradingbot-backend\rest\positions.py:89:            # Safeguard: saknade nycklar → tom lista istället för 500
tradingbot-backend\rest\positions.py:139:                # Nonce-fel hanteras centralt i ExchangeClient; behåll endast generisk hantering nedan
tradingbot-backend\rest\positions_history.py:4:Denna modul hanterar historiska positioner från Bitfinex API.
tradingbot-backend\rest\positions_history.py:22:    """Modell för en historisk position."""
tradingbot-backend\rest\positions_history.py:121:                logger.info(f"✅ REST API: Hämtade {len(positions_data)} historiska positioner")
tradingbot-backend\rest\routes.py:45:from services.risk_manager import RiskManager
tradingbot-backend\rest\routes.py:47:from services.risk_policy_engine import RiskPolicyEngine
tradingbot-backend\rest\routes.py:132:    """Generiskt svar för orderoperationer (wrapper)."""
tradingbot-backend\rest\routes.py:181:    risk_percent_cap: float | None = None  # override PROB_SIZE_MAX_RISK_PCT
tradingbot-backend\rest\routes.py:201:        # 2) positionsstorlek (återanvänd /risk/position-size i miniform)
tradingbot-backend\rest\routes.py:202:        cap = float(req.risk_percent_cap or s.PROB_SIZE_MAX_RISK_PCT)
tradingbot-backend\rest\routes.py:206:            PositionSizeRequest(symbol=req.symbol, risk_percent=cap, side=side),
tradingbot-backend\rest\routes.py:279:    risk_percent_cap: float | None = None
tradingbot-backend\rest\routes.py:305:        # Tidig guardrail: respektera riskregler innan vi gör preview
tradingbot-backend\rest\routes.py:307:            risk = RiskManager()
tradingbot-backend\rest\routes.py:308:            ok, reason = risk.pre_trade_checks(symbol=req.symbol)
tradingbot-backend\rest\routes.py:316:                            "type": "risk_blocked",
tradingbot-backend\rest\routes.py:333:                            "result": f"risk_blocked:{reason}",
tradingbot-backend\rest\routes.py:340:                return {"ok": False, "error": f"risk_blocked:{reason}"}
tradingbot-backend\rest\routes.py:351:                risk_percent_cap=req.risk_percent_cap,
tradingbot-backend\rest\routes.py:359:        # Guardrails: margin tradable > 0
tradingbot-backend\rest\routes.py:559:        # Riskkontroller före order (skippa i pytest-miljö för enhetstester)
tradingbot-backend\rest\routes.py:563:            # Använd RiskPolicyEngine (som inkluderar TradeConstraintsService)
tradingbot-backend\rest\routes.py:564:            policy = RiskPolicyEngine()
tradingbot-backend\rest\routes.py:565:            # Extrahera amount och price för riskvakter
tradingbot-backend\rest\routes.py:570:                logger.warning(f"Order blockeras av riskkontroll: {decision.reason}")
tradingbot-backend\rest\routes.py:571:                return OrderResponse(success=False, error=f"risk_blocked:{decision.reason}")
tradingbot-backend\rest\routes.py:573:            risk = RiskManager()
tradingbot-backend\rest\routes.py:627:                        RiskManager().record_error()
tradingbot-backend\rest\routes.py:719:                RiskManager().record_error()
tradingbot-backend\rest\routes.py:737:            risk.record_trade(symbol=order.symbol)
tradingbot-backend\rest\routes.py:790:                RiskManager().record_error()
tradingbot-backend\rest\routes.py:1059:            # mappa interna felkoder till generiska HTTP‑felmeddelanden
tradingbot-backend\rest\routes.py:1662:# Position sizing endpoint (enkel riskprocent-variant)
tradingbot-backend\rest\routes.py:1665:    risk_percent: float = 1.0  # procent av total USD balans
tradingbot-backend\rest\routes.py:1673:@router.post("/risk/position-size")
tradingbot-backend\rest\routes.py:1799:        quote_to_use = max(req.risk_percent, 0.0) / 100.0 * total_quote
tradingbot-backend\rest\routes.py:2571:    size_max_risk_pct: float | None = None
tradingbot-backend\rest\routes.py:2604:            "size_max_risk_pct": float(getattr(s, "PROB_SIZE_MAX_RISK_PCT", 0.0) or 0.0),
tradingbot-backend\rest\routes.py:2647:        if req.size_max_risk_pct is not None:
tradingbot-backend\rest\routes.py:2648:            _os.environ["PROB_SIZE_MAX_RISK_PCT"] = str(float(req.size_max_risk_pct))
tradingbot-backend\rest\routes.py:2866:        risk = RiskManager()
tradingbot-backend\rest\routes.py:2867:        ok, reason = risk.pre_trade_checks(symbol=req.symbol)
tradingbot-backend\rest\routes.py:2869:            return OrderResponse(success=False, error=f"risk_blocked:{reason}")
tradingbot-backend\rest\routes.py:2999:# Risk windows GET + pause/resume
tradingbot-backend\rest\routes.py:3000:@router.get("/risk/windows")
tradingbot-backend\rest\routes.py:3016:@router.post("/risk/pause")
tradingbot-backend\rest\routes.py:3028:@router.post("/risk/resume")
tradingbot-backend\rest\routes.py:3141:# Risk endpoints
tradingbot-backend\rest\routes.py:3146:@router.get("/risk/status")
tradingbot-backend\rest\routes.py:3147:async def get_risk_status(_: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:3148:    rm = RiskManager()
tradingbot-backend\rest\routes.py:3207:@router.post("/risk/max-trades")
tradingbot-backend\rest\routes.py:3217:        rm = RiskManager(s)
tradingbot-backend\rest\routes.py:3228:@router.post("/risk/max-trades-symbol")
tradingbot-backend\rest\routes.py:3234:        rm = RiskManager(s)
tradingbot-backend\rest\routes.py:3241:@router.get("/risk/trade-counter")
tradingbot-backend\rest\routes.py:3244:        rm = RiskManager()
tradingbot-backend\rest\routes.py:3259:@router.get("/risk/circuit")
tradingbot-backend\rest\routes.py:3262:        rm = RiskManager()
tradingbot-backend\rest\routes.py:3269:@router.post("/risk/circuit/reset")
tradingbot-backend\rest\routes.py:3272:        rm = RiskManager()
tradingbot-backend\rest\routes.py:3279:@router.post("/risk/circuit/config")
tradingbot-backend\rest\routes.py:3282:        rm = RiskManager()
tradingbot-backend\rest\routes.py:3294:# Risk Guards endpoints
tradingbot-backend\rest\routes.py:3295:class RiskGuardResetRequest(BaseModel):
tradingbot-backend\rest\routes.py:3296:    guard_name: str
tradingbot-backend\rest\routes.py:3299:@router.get("/risk/guards/status")
tradingbot-backend\rest\routes.py:3300:async def get_risk_guards_status(_: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:3301:    """Hämta status för alla riskvakter."""
tradingbot-backend\rest\routes.py:3303:        from services.risk_guards import risk_guards
tradingbot-backend\rest\routes.py:3305:        status = risk_guards.get_guards_status()
tradingbot-backend\rest\routes.py:3308:        logger.exception(f"Fel vid hämtning av risk guards status: {e}")
tradingbot-backend\rest\routes.py:3312:@router.post("/risk/guards/reset")
tradingbot-backend\rest\routes.py:3313:async def reset_risk_guard(req: RiskGuardResetRequest, _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:3314:    """Återställ en specifik riskvakt."""
tradingbot-backend\rest\routes.py:3316:        from services.risk_guards import risk_guards
tradingbot-backend\rest\routes.py:3318:        success = risk_guards.reset_guard(req.guard_name)
tradingbot-backend\rest\routes.py:3320:            return {"success": True, "message": f"Riskvakt {req.guard_name} återställd"}
tradingbot-backend\rest\routes.py:3324:                detail=f"Kunde inte återställa riskvakt {req.guard_name}",
tradingbot-backend\rest\routes.py:3327:        logger.exception(f"Fel vid återställning av riskvakt: {e}")
tradingbot-backend\rest\routes.py:3331:class RiskGuardConfigRequest(BaseModel):
tradingbot-backend\rest\routes.py:3332:    guard_name: str
tradingbot-backend\rest\routes.py:3336:@router.post("/risk/guards/config")
tradingbot-backend\rest\routes.py:3337:async def update_risk_guard_config(req: RiskGuardConfigRequest, _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:3338:    """Uppdatera konfiguration för en riskvakt."""
tradingbot-backend\rest\routes.py:3340:        from services.risk_guards import risk_guards
tradingbot-backend\rest\routes.py:3342:        success = risk_guards.update_guard_config(req.guard_name, req.config)
tradingbot-backend\rest\routes.py:3346:                "message": f"Riskvakt {req.guard_name} konfiguration uppdaterad",
tradingbot-backend\rest\routes.py:3351:                detail=f"Kunde inte uppdatera riskvakt {req.guard_name}",
tradingbot-backend\rest\routes.py:3354:        logger.exception(f"Fel vid uppdatering av riskvakt konfiguration: {e}")
tradingbot-backend\rest\routes.py:4355:@router.post("/risk/windows")
tradingbot-backend\rest\routes.py:4372:        rm = RiskManager(s)
tradingbot-backend\rest\routes.py:4917:# --- Unified Risk Service endpoints ---
tradingbot-backend\rest\routes.py:4918:@router.get("/risk/unified/status")
tradingbot-backend\rest\routes.py:4919:async def get_unified_risk_status(_: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4920:    """Hämta komplett risk-status från UnifiedRiskService."""
tradingbot-backend\rest\routes.py:4922:        from services.unified_risk_service import unified_risk_service
tradingbot-backend\rest\routes.py:4924:        status = unified_risk_service.get_risk_status()
tradingbot-backend\rest\routes.py:4927:        logger.exception(f"Fel vid hämtning av unified risk status: {e}")
tradingbot-backend\rest\routes.py:4931:@router.post("/risk/unified/evaluate")
tradingbot-backend\rest\routes.py:4932:async def evaluate_risk(request: dict[str, Any], _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4933:    """Utför risk-evaluering för en trade."""
tradingbot-backend\rest\routes.py:4938:        from services.unified_risk_service import unified_risk_service
tradingbot-backend\rest\routes.py:4940:        decision = unified_risk_service.evaluate_risk(symbol, amount, price)
tradingbot-backend\rest\routes.py:4948:        logger.exception(f"Fel vid risk-evaluering: {e}")
tradingbot-backend\rest\routes.py:4952:@router.post("/risk/unified/reset-guard")
tradingbot-backend\rest\routes.py:4953:async def reset_risk_guard(request: dict[str, Any], _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4954:    """Återställ en specifik riskvakt."""
tradingbot-backend\rest\routes.py:4955:    guard_name = request.get("guard_name")
tradingbot-backend\rest\routes.py:4957:    if not guard_name:
tradingbot-backend\rest\routes.py:4958:        raise HTTPException(status_code=400, detail="guard_name parameter is required")
tradingbot-backend\rest\routes.py:4960:        from services.unified_risk_service import unified_risk_service
tradingbot-backend\rest\routes.py:4962:        success = unified_risk_service.reset_guard(guard_name)
tradingbot-backend\rest\routes.py:4965:            "message": f"Riskvakt {guard_name} {'återställd' if success else 'kunde inte återställas'}",
tradingbot-backend\rest\routes.py:4968:        logger.exception(f"Fel vid återställning av riskvakt: {e}")
tradingbot-backend\rest\routes.py:4972:@router.post("/risk/unified/reset-circuit-breaker")
tradingbot-backend\rest\routes.py:4976:        from services.unified_risk_service import unified_risk_service
tradingbot-backend\rest\routes.py:4978:        success = unified_risk_service.reset_circuit_breaker()
tradingbot-backend\rest\routes.py:4988:@router.post("/risk/unified/update-guard")
tradingbot-backend\rest\routes.py:4989:async def update_risk_guard(request: dict[str, Any], _: bool = Depends(require_auth)):
tradingbot-backend\rest\routes.py:4990:    """Uppdatera konfiguration för en riskvakt."""
tradingbot-backend\rest\routes.py:4991:    guard_name = request.get("guard_name")
tradingbot-backend\rest\routes.py:4994:    if not guard_name:
tradingbot-backend\rest\routes.py:4995:        raise HTTPException(status_code=400, detail="guard_name parameter is required")
tradingbot-backend\rest\routes.py:4997:        from services.unified_risk_service import unified_risk_service
tradingbot-backend\rest\routes.py:4999:        success = unified_risk_service.update_guard_config(guard_name, config)
tradingbot-backend\rest\routes.py:5002:            "message": f"Riskvakt {guard_name} {'uppdaterad' if success else 'kunde inte uppdateras'}",
tradingbot-backend\rest\routes.py:5005:        logger.exception(f"Fel vid uppdatering av riskvakt: {e}")
tradingbot-backend\rest\routes.py:5223:    """Hämta all historisk data i en enhetlig struktur."""
tradingbot-backend\rest\wallet.py:69:            # Safeguard: saknade nycklar → tom lista istället för 500
tradingbot-backend\scripts\log_hanging_files.py:31:    "services/risk_guards.py",
tradingbot-backend\scripts\log_hanging_files.py:161:    # Test 1: Risk Guards Service
tradingbot-backend\scripts\log_hanging_files.py:163:        logger.info("🔍 Testar RiskGuardsService...")
tradingbot-backend\scripts\log_hanging_files.py:164:        from services.risk_guards import risk_guards
tradingbot-backend\scripts\log_hanging_files.py:167:        equity = risk_guards._get_current_equity()
tradingbot-backend\scripts\log_hanging_files.py:170:        logger.info(f"✅ RiskGuards equity: ${equity:.2f} ({duration:.1f}ms)")
tradingbot-backend\scripts\log_hanging_files.py:173:            logger.warning(f"⚠️ RiskGuards equity-hämtning tog {duration:.1f}ms (långsam)")
tradingbot-backend\scripts\log_hanging_files.py:176:        logger.error(f"❌ RiskGuards test misslyckades: {e}")
tradingbot-backend\scripts\start_debug.py:65:    print("  - GET /api/v2/debug/risk_guards - Risk guards status")
tradingbot-backend\scripts\test_hanging_fixes.py:52:async def test_risk_guards_equity_timeout():
tradingbot-backend\scripts\test_hanging_fixes.py:53:    """Testa att risk guards equity-hämtning inte hänger."""
tradingbot-backend\scripts\test_hanging_fixes.py:54:    logger.info("🧪 Testar risk guards equity timeout fix...")
tradingbot-backend\scripts\test_hanging_fixes.py:57:        from services.risk_guards import risk_guards
tradingbot-backend\scripts\test_hanging_fixes.py:62:        equity = risk_guards._get_current_equity()
tradingbot-backend\scripts\test_hanging_fixes.py:66:        logger.info(f"✅ Risk guards equity: ${equity:.2f} ({duration:.1f}ms)")
tradingbot-backend\scripts\test_hanging_fixes.py:72:        logger.error(f"❌ Risk guards equity test misslyckades: {e}")
tradingbot-backend\scripts\test_hanging_fixes.py:142:        ("Risk Guards Equity Timeout", test_risk_guards_equity_timeout),
tradingbot-backend\scripts\test_isolation.py:88:async def test_risk_guards():
tradingbot-backend\scripts\test_isolation.py:89:    """Testa risk guards status."""
tradingbot-backend\scripts\test_isolation.py:90:    logger.info("🧪 Testar risk guards...")
tradingbot-backend\scripts\test_isolation.py:93:        from services.risk_guards import risk_guards
tradingbot-backend\scripts\test_isolation.py:95:        status = risk_guards.get_guards_status()
tradingbot-backend\scripts\test_isolation.py:97:        logger.info(f"✅ Risk guards status: {len(status.get('guards', {}))} guards")
tradingbot-backend\scripts\test_isolation.py:103:        logger.error(f"❌ Risk guards test misslyckades: {e}")
tradingbot-backend\scripts\test_isolation.py:147:        ("Risk Guards", test_risk_guards),
tradingbot-backend\services\backtest.py:2:Backtest Service - enkel sandbox-backtest mot historiska candles via Bitfinex REST.
tradingbot-backend\services\cost_aware_backtest.py:232:        # Risk-adjusted returns
tradingbot-backend\services\cost_aware_backtest.py:388:        # Hämta historisk data
tradingbot-backend\services\history_service.py:2:History Service - Read-only historisk data för TradingBot.
tradingbot-backend\services\history_service.py:35:    """Historisk data för en symbol eller tidsperiod."""
tradingbot-backend\services\history_service.py:47:    Enhetlig service för all historisk data i systemet.
tradingbot-backend\services\history_service.py:59:        # Services för historisk data
tradingbot-backend\services\history_service.py:231:        """Hämta all historisk data i en enhetlig struktur."""
tradingbot-backend\services\metrics.py:28:    # generiska counters med labels: name -> { label_key -> count }
tradingbot-backend\services\refresh_manager.py:27:    CRITICAL = 1  # 30s - Risk guards, circuit breakers
tradingbot-backend\services\refresh_manager.py:60:    risk_status: dict[str, Any] | None = None
tradingbot-backend\services\refresh_manager.py:77:            RefreshPriority.CRITICAL: 30,  # Risk guards, circuit breakers
tradingbot-backend\services\refresh_manager.py:123:        elif data_type == "risk_status":
tradingbot-backend\services\refresh_manager.py:124:            self.shared_data.risk_status = data
tradingbot-backend\services\risk_guards.py:2:Risk Guards Service - Globala riskvakter för tradingboten.
tradingbot-backend\services\risk_guards.py:8:- Dashboard-visning av riskvakter
tradingbot-backend\services\risk_guards.py:23:class RiskGuardsService:
tradingbot-backend\services\risk_guards.py:24:    """Service för globala riskvakter och kill-switch funktionalitet."""
tradingbot-backend\services\risk_guards.py:28:        self.guards_file = "config/risk_guards.json"
tradingbot-backend\services\risk_guards.py:31:        # Ladda eller skapa default guards
tradingbot-backend\services\risk_guards.py:32:        self.guards = self._load_guards()
tradingbot-backend\services\risk_guards.py:34:        logger.info("🛡️ RiskGuardsService initialiserad")
tradingbot-backend\services\risk_guards.py:36:    def _load_guards(self) -> dict[str, Any]:
tradingbot-backend\services\risk_guards.py:37:        """Ladda riskvakter från fil eller skapa defaults."""
tradingbot-backend\services\risk_guards.py:39:            if os.path.exists(self.guards_file):
tradingbot-backend\services\risk_guards.py:40:                with open(self.guards_file, encoding="utf-8") as f:
tradingbot-backend\services\risk_guards.py:41:                    guards = json.load(f)
tradingbot-backend\services\risk_guards.py:42:                logger.info(f"📋 Laddade riskvakter från {self.guards_file}")
tradingbot-backend\services\risk_guards.py:43:                return guards
tradingbot-backend\services\risk_guards.py:45:            logger.warning(f"⚠️ Kunde inte ladda riskvakter: {e}")
tradingbot-backend\services\risk_guards.py:47:        # Default guards
tradingbot-backend\services\risk_guards.py:48:        default_guards = {
tradingbot-backend\services\risk_guards.py:72:            "volatility_guards": {
tradingbot-backend\services\risk_guards.py:79:        self._save_guards(default_guards)
tradingbot-backend\services\risk_guards.py:80:        return default_guards
tradingbot-backend\services\risk_guards.py:82:    def _save_guards(self, guards: dict[str, Any]) -> None:
tradingbot-backend\services\risk_guards.py:83:        """Spara riskvakter till fil."""
tradingbot-backend\services\risk_guards.py:85:            os.makedirs(os.path.dirname(self.guards_file), exist_ok=True)
tradingbot-backend\services\risk_guards.py:86:            with open(self.guards_file, "w", encoding="utf-8") as f:
tradingbot-backend\services\risk_guards.py:87:                json.dump(guards, f, indent=2, default=str)
tradingbot-backend\services\risk_guards.py:89:            logger.error(f"❌ Kunde inte spara riskvakter: {e}")
tradingbot-backend\services\risk_guards.py:107:        guard = self.guards.get("max_daily_loss", {})
tradingbot-backend\services\risk_guards.py:108:        daily_start_date = guard.get("daily_start_date")
tradingbot-backend\services\risk_guards.py:112:            guard["daily_start_date"] = today.isoformat()
tradingbot-backend\services\risk_guards.py:113:            if not guard.get("daily_start_equity"):
tradingbot-backend\services\risk_guards.py:114:                guard["daily_start_equity"] = self._get_current_equity()
tradingbot-backend\services\risk_guards.py:117:            self.guards["max_daily_loss"] = guard
tradingbot-backend\services\risk_guards.py:118:            self._save_guards(self.guards)
tradingbot-backend\services\risk_guards.py:128:        guard = self.guards["max_daily_loss"]
tradingbot-backend\services\risk_guards.py:130:        if not guard["enabled"]:
tradingbot-backend\services\risk_guards.py:136:        if guard["triggered"] and guard["triggered_at"]:
tradingbot-backend\services\risk_guards.py:138:                triggered_time = datetime.fromisoformat(guard["triggered_at"])
tradingbot-backend\services\risk_guards.py:139:                cooldown_end = triggered_time + timedelta(hours=guard["cooldown_hours"])
tradingbot-backend\services\risk_guards.py:151:        start_equity = guard.get("daily_start_equity")
tradingbot-backend\services\risk_guards.py:156:            if daily_loss_pct >= guard["percentage"]:
tradingbot-backend\services\risk_guards.py:157:                if not guard["triggered"]:
tradingbot-backend\services\risk_guards.py:158:                    guard["triggered"] = True
tradingbot-backend\services\risk_guards.py:159:                    guard["triggered_at"] = datetime.now().isoformat()
tradingbot-backend\services\risk_guards.py:160:                    self._save_guards(self.guards)
tradingbot-backend\services\risk_guards.py:174:        guard = self.guards["kill_switch"]
tradingbot-backend\services\risk_guards.py:176:        if not guard["enabled"]:
tradingbot-backend\services\risk_guards.py:180:        if guard["triggered"] and guard["triggered_at"]:
tradingbot-backend\services\risk_guards.py:182:                triggered_time = datetime.fromisoformat(guard["triggered_at"])
tradingbot-backend\services\risk_guards.py:183:                cooldown_end = triggered_time + timedelta(hours=guard["cooldown_hours"])
tradingbot-backend\services\risk_guards.py:195:        start_equity = self.guards["max_daily_loss"].get("daily_start_equity")
tradingbot-backend\services\risk_guards.py:200:            if drawdown_pct >= guard["max_drawdown_percentage"]:
tradingbot-backend\services\risk_guards.py:201:                if not guard["triggered"]:
tradingbot-backend\services\risk_guards.py:202:                    guard["triggered"] = True
tradingbot-backend\services\risk_guards.py:203:                    guard["triggered_at"] = datetime.now().isoformat()
tradingbot-backend\services\risk_guards.py:204:                    guard["reason"] = f"Max drawdown överskriden: {drawdown_pct:.2f}%"
tradingbot-backend\services\risk_guards.py:205:                    self._save_guards(self.guards)
tradingbot-backend\services\risk_guards.py:206:                    logger.error(f"🚨 Kill-switch triggad: {guard['reason']}")
tradingbot-backend\services\risk_guards.py:208:                return True, guard["reason"]
tradingbot-backend\services\risk_guards.py:226:        guard = self.guards["exposure_limits"]
tradingbot-backend\services\risk_guards.py:228:        if not guard["enabled"]:
tradingbot-backend\services\risk_guards.py:253:        if position_pct > guard["max_position_size_percentage"]:
tradingbot-backend\services\risk_guards.py:254:            return True, (f"Position size för stor: {position_pct:.2f}% > {guard['max_position_size_percentage']}%")
tradingbot-backend\services\risk_guards.py:258:    def check_all_guards(
tradingbot-backend\services\risk_guards.py:262:        Kontrollera alla riskvakter.
tradingbot-backend\services\risk_guards.py:290:    def reset_guard(self, guard_name: str) -> bool:
tradingbot-backend\services\risk_guards.py:292:        Återställ en specifik riskvakt.
tradingbot-backend\services\risk_guards.py:295:            guard_name: Namn på riskvakten att återställa
tradingbot-backend\services\risk_guards.py:301:            if guard_name in self.guards:
tradingbot-backend\services\risk_guards.py:302:                guard = self.guards[guard_name]
tradingbot-backend\services\risk_guards.py:303:                guard["triggered"] = False
tradingbot-backend\services\risk_guards.py:304:                guard["triggered_at"] = None
tradingbot-backend\services\risk_guards.py:305:                guard["reason"] = None
tradingbot-backend\services\risk_guards.py:306:                self._save_guards(self.guards)
tradingbot-backend\services\risk_guards.py:307:                logger.info(f"🔄 Riskvakt återställd: {guard_name}")
tradingbot-backend\services\risk_guards.py:311:            logger.error(f"❌ Kunde inte återställa riskvakt {guard_name}: {e}")
tradingbot-backend\services\risk_guards.py:314:    def get_guards_status(self) -> dict[str, Any]:
tradingbot-backend\services\risk_guards.py:316:        Hämta status för alla riskvakter.
tradingbot-backend\services\risk_guards.py:319:            Dict med status för alla guards
tradingbot-backend\services\risk_guards.py:326:            start_equity = self.guards["max_daily_loss"].get("daily_start_equity")
tradingbot-backend\services\risk_guards.py:337:                "guards": self.guards.copy(),
tradingbot-backend\services\risk_guards.py:343:            logger.error(f"❌ Kunde inte hämta guards status: {e}")
tradingbot-backend\services\risk_guards.py:346:    def update_guard_config(self, guard_name: str, config: dict[str, Any]) -> bool:
tradingbot-backend\services\risk_guards.py:348:        Uppdatera konfiguration för en riskvakt.
tradingbot-backend\services\risk_guards.py:351:            guard_name: Namn på riskvakten
tradingbot-backend\services\risk_guards.py:358:            if guard_name in self.guards:
tradingbot-backend\services\risk_guards.py:359:                self.guards[guard_name].update(config)
tradingbot-backend\services\risk_guards.py:360:                self._save_guards(self.guards)
tradingbot-backend\services\risk_guards.py:361:                logger.info(f"⚙️ Riskvakt konfiguration uppdaterad: {guard_name}")
tradingbot-backend\services\risk_guards.py:365:            logger.error(f"❌ Kunde inte uppdatera riskvakt {guard_name}: {e}")
tradingbot-backend\services\risk_guards.py:370:risk_guards = RiskGuardsService()
tradingbot-backend\services\risk_manager.py:2:Risk Manager - samlar riskkontroller: tidsfönster, daglig trade-limit, cooldown.
tradingbot-backend\services\risk_manager.py:13:from services.risk_guards import risk_guards
tradingbot-backend\services\risk_manager.py:14:from services.risk_policy_engine import RiskPolicyEngine
tradingbot-backend\services\risk_manager.py:24:class RiskManager:
tradingbot-backend\services\risk_manager.py:27:        self.policy = RiskPolicyEngine(self.settings)
tradingbot-backend\services\risk_manager.py:29:        self.trading_window = self.policy.constraints.trading_window
tradingbot-backend\services\risk_manager.py:30:        self.trade_counter = self.policy.constraints.trade_counter
tradingbot-backend\services\risk_manager.py:35:    def pre_trade_checks(
tradingbot-backend\services\risk_manager.py:38:        # Kontrollera globala riskvakter först
tradingbot-backend\services\risk_manager.py:39:        blocked, reason = risk_guards.check_all_guards(symbol, amount, price)
tradingbot-backend\services\risk_manager.py:41:            return False, f"risk_guard_blocked:{reason}"
tradingbot-backend\services\risk_policy_engine.py:2:Risk Policy Engine - central policy-källa som samlar RiskGuards och TradeConstraints.
tradingbot-backend\services\risk_policy_engine.py:11:from services.risk_guards import risk_guards
tradingbot-backend\services\risk_policy_engine.py:12:from services.trade_constraints import TradeConstraintsService
tradingbot-backend\services\risk_policy_engine.py:22:class RiskPolicyEngine:
tradingbot-backend\services\risk_policy_engine.py:25:        self.constraints = TradeConstraintsService(self.settings)
tradingbot-backend\services\risk_policy_engine.py:34:        # 1) Globala RiskGuards
tradingbot-backend\services\risk_policy_engine.py:35:        blocked, reason = risk_guards.check_all_guards(symbol, amount, price)
tradingbot-backend\services\risk_policy_engine.py:37:            return PolicyDecision(False, f"risk_guard_blocked:{reason}")
tradingbot-backend\services\risk_policy_engine.py:39:        # 2) Trade constraints (time window + caps + cooldown)
tradingbot-backend\services\risk_policy_engine.py:40:        res = self.constraints.check(symbol=symbol)
tradingbot-backend\services\risk_policy_engine.py:47:        self.constraints.record_trade(symbol=symbol)
tradingbot-backend\services\risk_policy_engine.py:50:        s = self.constraints.status()
tradingbot-backend\services\risk_policy_engine.py:51:        s["guards"] = risk_guards.get_guards_status()
tradingbot-backend\services\trade_constraints.py:2:Trade Constraints Service - centraliserar tidsfönster, dagliga limits och cooldown.
tradingbot-backend\services\trade_constraints.py:17:class ConstraintResult:
tradingbot-backend\services\trade_constraints.py:23:class TradeConstraintsService:
tradingbot-backend\services\trade_constraints.py:29:    def check(self, *, symbol: str | None = None) -> ConstraintResult:
tradingbot-backend\services\trade_constraints.py:33:                inc_labeled("trade_constraints_blocked_total", {"reason": "trading_paused"})
tradingbot-backend\services\trade_constraints.py:36:            return ConstraintResult(False, "trading_paused")
tradingbot-backend\services\trade_constraints.py:40:                    "trade_constraints_blocked_total",
tradingbot-backend\services\trade_constraints.py:45:            return ConstraintResult(False, "outside_trading_window")
tradingbot-backend\services\trade_constraints.py:56:                            "trade_constraints_blocked_total",
tradingbot-backend\services\trade_constraints.py:61:                    return ConstraintResult(False, "symbol_daily_trade_limit_reached")
tradingbot-backend\services\trade_constraints.py:71:                        "trade_constraints_blocked_total",
tradingbot-backend\services\trade_constraints.py:76:                return ConstraintResult(False, "daily_trade_limit_reached", stats)
tradingbot-backend\services\trade_constraints.py:80:                        "trade_constraints_blocked_total",
tradingbot-backend\services\trade_constraints.py:85:                return ConstraintResult(False, "trade_cooldown_active", stats)
tradingbot-backend\services\trade_constraints.py:87:                inc_labeled("trade_constraints_blocked_total", {"reason": "trade_blocked"})
tradingbot-backend\services\trade_constraints.py:90:            return ConstraintResult(False, "trade_blocked", stats)
tradingbot-backend\services\trade_constraints.py:93:            inc("trade_constraints_allowed_total")
tradingbot-backend\services\trade_constraints.py:96:        return ConstraintResult(True)
tradingbot-backend\services\trading_integration.py:20:from services.risk_manager import RiskManager
tradingbot-backend\services\trading_integration.py:38:        self.risk_limits = {
tradingbot-backend\services\trading_integration.py:193:            # Kontrollera riskhantering
tradingbot-backend\services\trading_integration.py:194:            risk_assessment = self._assess_risk(symbol, result)
tradingbot-backend\services\trading_integration.py:195:            result.update(risk_assessment)
tradingbot-backend\services\trading_integration.py:209:    def _assess_risk(self, symbol: str, strategy_result: dict[str, Any]) -> dict[str, Any]:
tradingbot-backend\services\trading_integration.py:211:        Utvärderar risk för en tradingmöjlighet.
tradingbot-backend\services\trading_integration.py:218:            Dict med riskbedömning
tradingbot-backend\services\trading_integration.py:235:            # Riskbedömning
tradingbot-backend\services\trading_integration.py:236:            risk_assessment = {
tradingbot-backend\services\trading_integration.py:237:                "risk_level": "LOW",
tradingbot-backend\services\trading_integration.py:239:                "max_position_size": self.risk_limits["max_position_size"],
tradingbot-backend\services\trading_integration.py:240:                "reason": "Ingen risk detekterad",
tradingbot-backend\services\trading_integration.py:246:                if open_positions >= self.risk_limits["max_open_positions"]:
tradingbot-backend\services\trading_integration.py:247:                    risk_assessment["can_trade"] = False
tradingbot-backend\services\trading_integration.py:248:                    risk_assessment["risk_level"] = "HIGH"
tradingbot-backend\services\trading_integration.py:249:                    risk_assessment["reason"] = f"För många öppna positioner ({open_positions})"
tradingbot-backend\services\trading_integration.py:252:                elif leverage > self.risk_limits["max_leverage"]:
tradingbot-backend\services\trading_integration.py:253:                    risk_assessment["can_trade"] = False
tradingbot-backend\services\trading_integration.py:254:                    risk_assessment["risk_level"] = "HIGH"
tradingbot-backend\services\trading_integration.py:255:                    risk_assessment["reason"] = f"För hög hävstång ({leverage}x)"
tradingbot-backend\services\trading_integration.py:259:                    risk_assessment["can_trade"] = False
tradingbot-backend\services\trading_integration.py:260:                    risk_assessment["risk_level"] = "HIGH"
tradingbot-backend\services\trading_integration.py:261:                    risk_assessment["reason"] = f"För låg margin-nivå ({margin_level})"
tradingbot-backend\services\trading_integration.py:266:                        risk_assessment["can_trade"] = False
tradingbot-backend\services\trading_integration.py:267:                        risk_assessment["risk_level"] = "MEDIUM"
tradingbot-backend\services\trading_integration.py:268:                        risk_assessment["reason"] = f"Har redan en {signal} position"
tradingbot-backend\services\trading_integration.py:270:            return risk_assessment
tradingbot-backend\services\trading_integration.py:273:            logger.error(f"❌ Fel vid riskbedömning för {symbol}: {e}")
tradingbot-backend\services\trading_integration.py:275:                "risk_level": "UNKNOWN",
tradingbot-backend\services\trading_integration.py:277:                "reason": f"Fel vid riskbedömning: {e}",
tradingbot-backend\services\trading_integration.py:294:            risk_level = signal_data.get("risk_level", "UNKNOWN")
tradingbot-backend\services\trading_integration.py:305:            # Centrala riskkontroller (TradingWindow, dagliga limits, cooldown, CB)
tradingbot-backend\services\trading_integration.py:307:                risk = RiskManager()
tradingbot-backend\services\trading_integration.py:308:                ok, reason = risk.pre_trade_checks()
tradingbot-backend\services\trading_integration.py:310:                    logger.warning(f"🚫 RiskManager block: {reason}")
tradingbot-backend\services\trading_integration.py:313:                        "message": f"risk_blocked:{reason}",
tradingbot-backend\services\trading_integration.py:317:                logger.warning(f"RiskManager-kontroll misslyckades: {e}")
tradingbot-backend\services\trading_integration.py:328:            # Beräkna ordervolym baserat på riskhantering
tradingbot-backend\services\trading_integration.py:348:                    RiskManager().record_error()
tradingbot-backend\services\trading_integration.py:360:                RiskManager().record_trade()
tradingbot-backend\services\trading_integration.py:383:        Beräknar lämplig positionsstorlek baserat på riskhantering.
tradingbot-backend\services\trading_integration.py:393:            # Hämta max positionsstorlek från riskhantering
tradingbot-backend\services\trading_integration.py:394:            max_size = signal_data.get("max_position_size", self.risk_limits["max_position_size"])
tradingbot-backend\services\trading_integration.py:499:            # Utför riskbedömning
tradingbot-backend\services\trading_integration.py:500:            risk_assessment = self._assess_risk(symbol, result)
tradingbot-backend\services\trading_integration.py:501:            result.update(risk_assessment)
tradingbot-backend\services\unified_risk_service.py:2:Unified Risk Service - Enhetlig riskhantering för alla paneler.
tradingbot-backend\services\unified_risk_service.py:5:- RiskManager (tidsfönster, daglig trade-limit, cooldown)
tradingbot-backend\services\unified_risk_service.py:6:- RiskGuardsService (max daily loss, kill-switch, exposure limits)
tradingbot-backend\services\unified_risk_service.py:7:- RiskPolicyEngine (policy evaluation)
tradingbot-backend\services\unified_risk_service.py:11:- Duplicerad risk-logik mellan paneler
tradingbot-backend\services\unified_risk_service.py:12:- Inkonsistenta risk-kontroller
tradingbot-backend\services\unified_risk_service.py:13:- Svår att debugga risk-problem
tradingbot-backend\services\unified_risk_service.py:14:- Olika refresh-intervall för risk-data
tradingbot-backend\services\unified_risk_service.py:27:from services.trade_constraints import TradeConstraintsService
tradingbot-backend\services\unified_risk_service.py:33:class RiskDecision:
tradingbot-backend\services\unified_risk_service.py:34:    """Resultat från risk-evaluering."""
tradingbot-backend\services\unified_risk_service.py:52:class UnifiedRiskService:
tradingbot-backend\services\unified_risk_service.py:54:    Enhetlig service för all riskhantering i systemet.
tradingbot-backend\services\unified_risk_service.py:68:        self.trade_constraints = TradeConstraintsService(self.settings)
tradingbot-backend\services\unified_risk_service.py:71:        # Risk guards konfiguration
tradingbot-backend\services\unified_risk_service.py:72:        self.guards_file = "config/risk_guards.json"
tradingbot-backend\services\unified_risk_service.py:73:        self.guards = self._load_guards()
tradingbot-backend\services\unified_risk_service.py:75:        logger.info("🛡️ UnifiedRiskService initialiserad - enhetlig riskhantering")
tradingbot-backend\services\unified_risk_service.py:77:    def _load_guards(self) -> dict[str, Any]:
tradingbot-backend\services\unified_risk_service.py:78:        """Ladda riskvakter från fil eller skapa defaults."""
tradingbot-backend\services\unified_risk_service.py:80:            if os.path.exists(self.guards_file):
tradingbot-backend\services\unified_risk_service.py:81:                with open(self.guards_file) as f:
tradingbot-backend\services\unified_risk_service.py:82:                    guards = json.load(f)
tradingbot-backend\services\unified_risk_service.py:83:                logger.info(f"📋 Riskvakter laddade från {self.guards_file}")
tradingbot-backend\services\unified_risk_service.py:84:                return guards
tradingbot-backend\services\unified_risk_service.py:86:                # Skapa default guards
tradingbot-backend\services\unified_risk_service.py:87:                default_guards = {
tradingbot-backend\services\unified_risk_service.py:105:                self._save_guards(default_guards)
tradingbot-backend\services\unified_risk_service.py:106:                logger.info(f"📋 Default riskvakter skapade i {self.guards_file}")
tradingbot-backend\services\unified_risk_service.py:107:                return default_guards
tradingbot-backend\services\unified_risk_service.py:109:            logger.error(f"❌ Fel vid laddning av riskvakter: {e}")
tradingbot-backend\services\unified_risk_service.py:112:    def _save_guards(self, guards: dict[str, Any]) -> None:
tradingbot-backend\services\unified_risk_service.py:113:        """Spara riskvakter till fil."""
tradingbot-backend\services\unified_risk_service.py:115:            os.makedirs(os.path.dirname(self.guards_file), exist_ok=True)
tradingbot-backend\services\unified_risk_service.py:116:            with open(self.guards_file, 'w') as f:
tradingbot-backend\services\unified_risk_service.py:117:                json.dump(guards, f, indent=2, default=str)
tradingbot-backend\services\unified_risk_service.py:119:            logger.error(f"❌ Fel vid sparande av riskvakter: {e}")
tradingbot-backend\services\unified_risk_service.py:121:    def evaluate_risk(
tradingbot-backend\services\unified_risk_service.py:123:    ) -> RiskDecision:
tradingbot-backend\services\unified_risk_service.py:125:        Utför komplett risk-evaluering för en trade.
tradingbot-backend\services\unified_risk_service.py:133:            RiskDecision med resultat
tradingbot-backend\services\unified_risk_service.py:138:                return RiskDecision(
tradingbot-backend\services\unified_risk_service.py:151:                return RiskDecision(False, f"max_daily_loss:{reason}")
tradingbot-backend\services\unified_risk_service.py:156:                return RiskDecision(False, f"kill_switch:{reason}")
tradingbot-backend\services\unified_risk_service.py:162:                    return RiskDecision(False, f"exposure_limits:{reason}")
tradingbot-backend\services\unified_risk_service.py:164:            # 5. Kontrollera trade constraints (trading windows, cooldowns, limits)
tradingbot-backend\services\unified_risk_service.py:165:            constraint_result = self.trade_constraints.check(symbol=symbol)
tradingbot-backend\services\unified_risk_service.py:166:            if not constraint_result.allowed:
tradingbot-backend\services\unified_risk_service.py:167:                return RiskDecision(False, f"trade_constraints:{constraint_result.reason}", constraint_result.details)
tradingbot-backend\services\unified_risk_service.py:169:            return RiskDecision(True)
tradingbot-backend\services\unified_risk_service.py:172:            logger.error(f"❌ Fel vid risk-evaluering: {e}")
tradingbot-backend\services\unified_risk_service.py:173:            return RiskDecision(False, f"evaluation_error:{e!s}")
tradingbot-backend\services\unified_risk_service.py:178:            self.trade_constraints.record_trade(symbol=symbol)
tradingbot-backend\services\unified_risk_service.py:221:            guard = self.guards.get("max_daily_loss", {})
tradingbot-backend\services\unified_risk_service.py:222:            if not guard.get("enabled", False):
tradingbot-backend\services\unified_risk_service.py:225:            if guard.get("triggered", False):
tradingbot-backend\services\unified_risk_service.py:226:                return True, f"Max daily loss redan triggad: {guard.get('reason', 'Okänd anledning')}"
tradingbot-backend\services\unified_risk_service.py:230:            max_loss = guard.get("max_loss_usd", 1000.0)
tradingbot-backend\services\unified_risk_service.py:234:                guard["triggered"] = True
tradingbot-backend\services\unified_risk_service.py:235:                guard["triggered_at"] = datetime.now().isoformat()
tradingbot-backend\services\unified_risk_service.py:236:                guard["reason"] = f"Daglig förlust {daily_pnl:.2f} USD överstiger limit {max_loss:.2f} USD"
tradingbot-backend\services\unified_risk_service.py:237:                self._save_guards(self.guards)
tradingbot-backend\services\unified_risk_service.py:239:                logger.warning(f"🚨 Max daily loss triggad: {guard['reason']}")
tradingbot-backend\services\unified_risk_service.py:240:                return True, guard["reason"]
tradingbot-backend\services\unified_risk_service.py:251:            guard = self.guards.get("kill_switch", {})
tradingbot-backend\services\unified_risk_service.py:252:            if not guard.get("enabled", False):
tradingbot-backend\services\unified_risk_service.py:255:            if guard.get("triggered", False):
tradingbot-backend\services\unified_risk_service.py:256:                return True, f"Kill-switch aktiv: {guard.get('reason', 'Okänd anledning')}"
tradingbot-backend\services\unified_risk_service.py:267:            guard = self.guards.get("exposure_limits", {})
tradingbot-backend\services\unified_risk_service.py:268:            if not guard.get("enabled", False):
tradingbot-backend\services\unified_risk_service.py:271:            if guard.get("triggered", False):
tradingbot-backend\services\unified_risk_service.py:272:                return True, f"Exposure limits redan triggade: {guard.get('reason', 'Okänd anledning')}"
tradingbot-backend\services\unified_risk_service.py:283:            max_position_percentage = guard.get("max_position_size_percentage", 10.0)
tradingbot-backend\services\unified_risk_service.py:287:                guard["triggered"] = True
tradingbot-backend\services\unified_risk_service.py:288:                guard["triggered_at"] = datetime.now().isoformat()
tradingbot-backend\services\unified_risk_service.py:289:                guard["reason"] = reason
tradingbot-backend\services\unified_risk_service.py:290:                self._save_guards(self.guards)
tradingbot-backend\services\unified_risk_service.py:323:    def reset_guard(self, guard_name: str) -> bool:
tradingbot-backend\services\unified_risk_service.py:324:        """Återställ en specifik riskvakt."""
tradingbot-backend\services\unified_risk_service.py:326:            if guard_name in self.guards:
tradingbot-backend\services\unified_risk_service.py:327:                guard = self.guards[guard_name]
tradingbot-backend\services\unified_risk_service.py:328:                guard["triggered"] = False
tradingbot-backend\services\unified_risk_service.py:329:                guard["triggered_at"] = None
tradingbot-backend\services\unified_risk_service.py:330:                guard["reason"] = None
tradingbot-backend\services\unified_risk_service.py:331:                self._save_guards(self.guards)
tradingbot-backend\services\unified_risk_service.py:332:                logger.info(f"🔄 Riskvakt återställd: {guard_name}")
tradingbot-backend\services\unified_risk_service.py:336:            logger.error(f"❌ Kunde inte återställa riskvakt {guard_name}: {e}")
tradingbot-backend\services\unified_risk_service.py:350:    def get_risk_status(self) -> dict[str, Any]:
tradingbot-backend\services\unified_risk_service.py:351:        """Hämta komplett risk-status."""
tradingbot-backend\services\unified_risk_service.py:353:            # Hämta trade constraints status
tradingbot-backend\services\unified_risk_service.py:354:            constraints_status = self.trade_constraints.status()
tradingbot-backend\services\unified_risk_service.py:364:            # Hämta guards status
tradingbot-backend\services\unified_risk_service.py:365:            guards_status = {}
tradingbot-backend\services\unified_risk_service.py:366:            for guard_name, guard_data in self.guards.items():
tradingbot-backend\services\unified_risk_service.py:367:                guards_status[guard_name] = {
tradingbot-backend\services\unified_risk_service.py:368:                    "enabled": guard_data.get("enabled", False),
tradingbot-backend\services\unified_risk_service.py:369:                    "triggered": guard_data.get("triggered", False),
tradingbot-backend\services\unified_risk_service.py:370:                    "triggered_at": guard_data.get("triggered_at"),
tradingbot-backend\services\unified_risk_service.py:371:                    "reason": guard_data.get("reason"),
tradingbot-backend\services\unified_risk_service.py:376:                "trade_constraints": constraints_status,
tradingbot-backend\services\unified_risk_service.py:378:                "guards": guards_status,
tradingbot-backend\services\unified_risk_service.py:383:            logger.error(f"❌ Fel vid hämtning av risk-status: {e}")
tradingbot-backend\services\unified_risk_service.py:390:    def update_guard_config(self, guard_name: str, config: dict[str, Any]) -> bool:
tradingbot-backend\services\unified_risk_service.py:391:        """Uppdatera konfiguration för en riskvakt."""
tradingbot-backend\services\unified_risk_service.py:393:            if guard_name in self.guards:
tradingbot-backend\services\unified_risk_service.py:394:                self.guards[guard_name].update(config)
tradingbot-backend\services\unified_risk_service.py:395:                self._save_guards(self.guards)
tradingbot-backend\services\unified_risk_service.py:396:                logger.info(f"📝 Riskvakt konfiguration uppdaterad: {guard_name}")
tradingbot-backend\services\unified_risk_service.py:400:            logger.error(f"❌ Fel vid uppdatering av riskvakt konfiguration: {e}")
tradingbot-backend\services\unified_risk_service.py:405:unified_risk_service = UnifiedRiskService()
tradingbot-backend\tests\test_prob_api_extended.py:11:    # mocka size till > 0 så att trade kommer vidare till riskkontroll
tradingbot-backend\tests\test_prob_api_extended.py:27:    # trade kan blockeras av risk; verifiera ok flagga eller error nyckel
tradingbot-backend\tests\test_prob_config_api.py:23:        "size_max_risk_pct",
tradingbot-backend\tests\test_prob_config_api.py:37:            "size_max_risk_pct": 1.5,
tradingbot-backend\tests\test_prob_config_api.py:44:    assert float(updated.get("size_max_risk_pct", 0)) == 1.5
tradingbot-backend\tests\test_risk_guards.py:2:Tester för RiskGuardsService.
tradingbot-backend\tests\test_risk_guards.py:13:from services.risk_guards import RiskGuardsService
tradingbot-backend\tests\test_risk_guards.py:16:class TestRiskGuardsService:
tradingbot-backend\tests\test_risk_guards.py:17:    """Tester för RiskGuardsService."""
tradingbot-backend\tests\test_risk_guards.py:23:        self.guards_file = os.path.join(self.temp_dir, "test_risk_guards.json")
tradingbot-backend\tests\test_risk_guards.py:26:        with patch("services.risk_guards.Settings") as mock_settings:
tradingbot-backend\tests\test_risk_guards.py:28:            self.service = RiskGuardsService()
tradingbot-backend\tests\test_risk_guards.py:29:            self.service.guards_file = self.guards_file
tradingbot-backend\tests\test_risk_guards.py:34:        if os.path.exists(self.guards_file):
tradingbot-backend\tests\test_risk_guards.py:35:            os.remove(self.guards_file)
tradingbot-backend\tests\test_risk_guards.py:39:    def test_load_guards_creates_defaults(self):
tradingbot-backend\tests\test_risk_guards.py:40:        """Test att default guards skapas när fil inte finns."""
tradingbot-backend\tests\test_risk_guards.py:42:        if os.path.exists(self.guards_file):
tradingbot-backend\tests\test_risk_guards.py:43:            os.remove(self.guards_file)
tradingbot-backend\tests\test_risk_guards.py:45:        # Ladda guards
tradingbot-backend\tests\test_risk_guards.py:46:        guards = self.service._load_guards()
tradingbot-backend\tests\test_risk_guards.py:48:        # Verifiera att default guards skapades
tradingbot-backend\tests\test_risk_guards.py:49:        assert "max_daily_loss" in guards
tradingbot-backend\tests\test_risk_guards.py:50:        assert "kill_switch" in guards
tradingbot-backend\tests\test_risk_guards.py:51:        assert "exposure_limits" in guards
tradingbot-backend\tests\test_risk_guards.py:52:        assert "volatility_guards" in guards
tradingbot-backend\tests\test_risk_guards.py:55:        assert guards["max_daily_loss"]["enabled"] is True
tradingbot-backend\tests\test_risk_guards.py:56:        assert guards["max_daily_loss"]["percentage"] == 5.0
tradingbot-backend\tests\test_risk_guards.py:57:        assert guards["kill_switch"]["enabled"] is True
tradingbot-backend\tests\test_risk_guards.py:58:        assert guards["kill_switch"]["max_drawdown_percentage"] == 10.0
tradingbot-backend\tests\test_risk_guards.py:60:    def test_save_and_load_guards(self):
tradingbot-backend\tests\test_risk_guards.py:61:        """Test att guards kan sparas och laddas."""
tradingbot-backend\tests\test_risk_guards.py:62:        test_guards = {
tradingbot-backend\tests\test_risk_guards.py:79:        # Spara test guards
tradingbot-backend\tests\test_risk_guards.py:80:        self.service._save_guards(test_guards)
tradingbot-backend\tests\test_risk_guards.py:83:        assert os.path.exists(self.guards_file)
tradingbot-backend\tests\test_risk_guards.py:86:        loaded_guards = self.service._load_guards()
tradingbot-backend\tests\test_risk_guards.py:87:        assert loaded_guards["max_daily_loss"]["percentage"] == 3.0
tradingbot-backend\tests\test_risk_guards.py:88:        assert loaded_guards["kill_switch"]["enabled"] is False
tradingbot-backend\tests\test_risk_guards.py:90:    @patch("services.risk_guards.RiskGuardsService._get_current_equity")
tradingbot-backend\tests\test_risk_guards.py:96:        self.service.guards["max_daily_loss"]["daily_start_equity"] = 10000.0
tradingbot-backend\tests\test_risk_guards.py:97:        self.service.guards["max_daily_loss"]["enabled"] = True
tradingbot-backend\tests\test_risk_guards.py:98:        self.service.guards["max_daily_loss"]["percentage"] = 5.0
tradingbot-backend\tests\test_risk_guards.py:105:    @patch("services.risk_guards.RiskGuardsService._get_current_equity")
tradingbot-backend\tests\test_risk_guards.py:111:        self.service.guards["max_daily_loss"]["daily_start_equity"] = 10000.0
tradingbot-backend\tests\test_risk_guards.py:112:        self.service.guards["max_daily_loss"]["enabled"] = True
tradingbot-backend\tests\test_risk_guards.py:113:        self.service.guards["max_daily_loss"]["percentage"] = 5.0
tradingbot-backend\tests\test_risk_guards.py:119:        assert self.service.guards["max_daily_loss"]["triggered"] is True
tradingbot-backend\tests\test_risk_guards.py:121:    @patch("services.risk_guards.RiskGuardsService._get_current_equity")
tradingbot-backend\tests\test_risk_guards.py:127:        self.service.guards["max_daily_loss"]["triggered"] = True
tradingbot-backend\tests\test_risk_guards.py:128:        self.service.guards["max_daily_loss"]["triggered_at"] = datetime.now().isoformat()
tradingbot-backend\tests\test_risk_guards.py:129:        self.service.guards["max_daily_loss"]["cooldown_hours"] = 24
tradingbot-backend\tests\test_risk_guards.py:136:    @patch("services.risk_guards.RiskGuardsService._get_current_equity")
tradingbot-backend\tests\test_risk_guards.py:142:        self.service.guards["max_daily_loss"]["daily_start_equity"] = 10000.0
tradingbot-backend\tests\test_risk_guards.py:143:        self.service.guards["kill_switch"]["enabled"] = True
tradingbot-backend\tests\test_risk_guards.py:144:        self.service.guards["kill_switch"]["max_drawdown_percentage"] = 10.0
tradingbot-backend\tests\test_risk_guards.py:150:        assert self.service.guards["kill_switch"]["triggered"] is True
tradingbot-backend\tests\test_risk_guards.py:154:        self.service.guards["exposure_limits"]["enabled"] = True
tradingbot-backend\tests\test_risk_guards.py:155:        self.service.guards["exposure_limits"]["max_position_size_percentage"] = 20.0
tradingbot-backend\tests\test_risk_guards.py:167:    def test_check_all_guards(self):
tradingbot-backend\tests\test_risk_guards.py:168:        """Test alla guards tillsammans."""
tradingbot-backend\tests\test_risk_guards.py:174:            # Test - alla guards passerar
tradingbot-backend\tests\test_risk_guards.py:175:            blocked, reason = self.service.check_all_guards("tBTCUSD", 0.1, 50000)
tradingbot-backend\tests\test_risk_guards.py:179:    def test_reset_guard(self):
tradingbot-backend\tests\test_risk_guards.py:180:        """Test återställning av guard."""
tradingbot-backend\tests\test_risk_guards.py:182:        self.service.guards["max_daily_loss"]["triggered"] = True
tradingbot-backend\tests\test_risk_guards.py:183:        self.service.guards["max_daily_loss"]["triggered_at"] = datetime.now().isoformat()
tradingbot-backend\tests\test_risk_guards.py:184:        self.service.guards["max_daily_loss"]["reason"] = "Test reason"
tradingbot-backend\tests\test_risk_guards.py:187:        success = self.service.reset_guard("max_daily_loss")
tradingbot-backend\tests\test_risk_guards.py:189:        assert self.service.guards["max_daily_loss"]["triggered"] is False
tradingbot-backend\tests\test_risk_guards.py:190:        assert self.service.guards["max_daily_loss"]["triggered_at"] is None
tradingbot-backend\tests\test_risk_guards.py:191:        assert self.service.guards["max_daily_loss"]["reason"] is None
tradingbot-backend\tests\test_risk_guards.py:193:    def test_update_guard_config(self):
tradingbot-backend\tests\test_risk_guards.py:194:        """Test uppdatering av guard konfiguration."""
tradingbot-backend\tests\test_risk_guards.py:197:        success = self.service.update_guard_config("max_daily_loss", new_config)
tradingbot-backend\tests\test_risk_guards.py:200:        assert self.service.guards["max_daily_loss"]["percentage"] == 7.5
tradingbot-backend\tests\test_risk_guards.py:201:        assert self.service.guards["max_daily_loss"]["cooldown_hours"] == 36
tradingbot-backend\tests\test_risk_guards.py:203:    @patch("services.risk_guards.RiskGuardsService._get_current_equity")
tradingbot-backend\tests\test_risk_guards.py:204:    def test_get_guards_status(self, mock_equity):
tradingbot-backend\tests\test_risk_guards.py:205:        """Test hämtning av guards status."""
tradingbot-backend\tests\test_risk_guards.py:209:        self.service.guards["max_daily_loss"]["daily_start_equity"] = 10000.0
tradingbot-backend\tests\test_risk_guards.py:212:        status = self.service.get_guards_status()
tradingbot-backend\tests\test_risk_guards.py:217:        assert "guards" in status
tradingbot-backend\tests\test_risk_manager.py:1:from services.risk_manager import RiskManager
tradingbot-backend\tests\test_risk_manager.py:4:def test_risk_manager_paused_blocks(monkeypatch):
tradingbot-backend\tests\test_risk_manager.py:5:    rm = RiskManager()
tradingbot-backend\tests\test_risk_manager.py:7:    ok, reason = rm.pre_trade_checks()
tradingbot-backend\tests\test_risk_manager.py:11:def test_risk_manager_window_blocks(monkeypatch):
tradingbot-backend\tests\test_risk_manager.py:12:    rm = RiskManager()
tradingbot-backend\tests\test_risk_manager.py:15:    ok, reason = rm.pre_trade_checks()
tradingbot-backend\tests\test_risk_manager.py:66:    rm = RiskManager(s)
tradingbot-backend\tests\test_risk_manager.py:104:    rm = RiskManager(s)
tradingbot-backend\tests\test_risk_manager_symbol_limit.py:1:from services.risk_manager import RiskManager
tradingbot-backend\tests\test_risk_manager_symbol_limit.py:5:    rm = RiskManager()
tradingbot-backend\tests\test_risk_manager_symbol_limit.py:17:    ok, reason = rm.pre_trade_checks(symbol="tBTCUSD")
tradingbot-backend\tests\test_risk_manager_symbol_limit.py:22:    ok, reason = rm.pre_trade_checks(symbol="tBTCUSD")
tradingbot-backend\tests\test_risk_policy_engine_unit.py:3:from services.risk_policy_engine import RiskPolicyEngine
tradingbot-backend\tests\test_risk_policy_engine_unit.py:14:async def test_risk_policy_blocks_on_guards(monkeypatch):
tradingbot-backend\tests\test_risk_policy_engine_unit.py:15:    import services.risk_policy_engine as rpe
tradingbot-backend\tests\test_risk_policy_engine_unit.py:18:        rpe.risk_guards,
tradingbot-backend\tests\test_risk_policy_engine_unit.py:19:        "check_all_guards",
tradingbot-backend\tests\test_risk_policy_engine_unit.py:23:    eng = RiskPolicyEngine()
tradingbot-backend\tests\test_risk_policy_engine_unit.py:26:    assert res.reason.startswith("risk_guard_blocked:")
tradingbot-backend\tests\test_risk_policy_engine_unit.py:29:def test_risk_policy_blocks_on_constraints(monkeypatch):
tradingbot-backend\tests\test_risk_policy_engine_unit.py:30:    eng = RiskPolicyEngine()
tradingbot-backend\tests\test_risk_policy_engine_unit.py:31:    monkeypatch.setattr(eng.constraints, "check", lambda **kwargs: _StubRes(False, "trading_paused"))
tradingbot-backend\tests\test_risk_policy_engine_unit.py:38:def test_risk_policy_allows_when_ok(monkeypatch):
tradingbot-backend\tests\test_risk_policy_engine_unit.py:39:    eng = RiskPolicyEngine()
tradingbot-backend\tests\test_risk_policy_engine_unit.py:40:    monkeypatch.setattr(eng.constraints, "check", lambda **kwargs: _StubRes(True))
tradingbot-backend\tests\test_risk_policy_engine_unit.py:41:    # ensure guards do not block
tradingbot-backend\tests\test_risk_policy_engine_unit.py:42:    import services.risk_policy_engine as rpe
tradingbot-backend\tests\test_risk_policy_engine_unit.py:44:    monkeypatch.setattr(rpe.risk_guards, "check_all_guards", lambda *args, **kwargs: (False, None))
tradingbot-backend\tests\test_risk_policy_engine_unit.py:50:def test_risk_policy_record_trade_delegates(monkeypatch):
tradingbot-backend\tests\test_risk_policy_engine_unit.py:51:    eng = RiskPolicyEngine()
tradingbot-backend\tests\test_risk_policy_engine_unit.py:57:    monkeypatch.setattr(eng.constraints, "record_trade", _rec)
tradingbot-backend\tests\test_trade_constraints_service_unit.py:4:from services.trade_constraints import TradeConstraintsService, ConstraintResult
tradingbot-backend\tests\test_trade_constraints_service_unit.py:7:def test_trade_constraints_blocks_when_window_paused(monkeypatch):
tradingbot-backend\tests\test_trade_constraints_service_unit.py:8:    svc = TradeConstraintsService(Settings())
tradingbot-backend\tests\test_trade_constraints_service_unit.py:16:def test_trade_constraints_blocks_on_symbol_daily_limit(monkeypatch):
tradingbot-backend\tests\test_trade_constraints_service_unit.py:17:    svc = TradeConstraintsService(Settings())
tradingbot-backend\tests\test_trade_constraints_service_unit.py:28:def test_trade_constraints_passes_and_records(monkeypatch):
tradingbot-backend\tests\test_trade_constraints_service_unit.py:29:    svc = TradeConstraintsService(Settings())
tradingbot-backend\tests\test_trade_constraints_service_unit.py:47:def test_trade_constraints_limits(monkeypatch):
tradingbot-backend\tests\test_trade_constraints_service_unit.py:48:    svc = TradeConstraintsService(Settings())
tradingbot-backend\utils\advanced_rate_limiter.py:244:        """Concurrency-guard som begränsar samtidiga REST-anrop per endpoint-typ."""
tradingbot-backend\utils\json_optimizer.py:165:            # Konvertera numeriska strängar till numbers
tradingbot-backend\utils\nonce_manager.py:14:    # ligger över ev. historiska ms‑baserade nonces på servern


