name: CI

on:
  push:
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tradingbot-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint (syntax/errors only)
        run: |
          python - << 'PY'
          import py_compile, pathlib, sys
          paths = [p for p in pathlib.Path('.').rglob('*.py') if 'venv' not in p.parts and '.venv' not in p.parts]
          failed = []
          for p in paths:
              try:
                  py_compile.compile(str(p), doraise=True)
              except Exception as e:
                  failed.append((p, e))
          if failed:
              for p, e in failed:
                  print(f"CompileError: {p}: {e}")
              sys.exit(1)
          print('OK')
          PY

      - name: Run tests
        env:
          AUTH_REQUIRED: 'False'
        run: pytest -q
name: CI

on:
  push:
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    defaults:
      run:
        working-directory: tradingbot-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('tradingbot-backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 black isort

      - name: Import sort check (isort)
        run: isort . --profile black --check-only

      - name: Lint (flake8)
        run: flake8 . --max-line-length=120 --extend-ignore=E203, W503, E501, E402, F401, F541, F841

      - name: Format check (black)
        run: black --check .

      - name: Run tests
        env:
          AUTH_REQUIRED: "False"
        run: pytest -q

  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"
